#
# Copyright (c) 2012-2024 Snowflake Computing Inc. All rights reserved.
#

# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Snowpark/proto/ast.proto
"""Generated protocol buffer code."""
from google.protobuf import (
    descriptor as _descriptor,
    descriptor_pool as _descriptor_pool,
    symbol_database as _symbol_database,
)

# flake8: noqa
from google.protobuf.internal import builder as _builder

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n\x18Snowpark/proto/ast.proto\x12\x03\x61st"4\n\x11List_SpColumnExpr\x12\x1f\n\x04list\x18\x01 \x03(\x0b\x32\x11.ast.SpColumnExpr"\x1b\n\x0bList_String\x12\x0c\n\x04list\x18\x01 \x03(\t"A\n\x14Map_String_SpVariant\x12)\n\x04list\x18\x01 \x03(\x0b\x32\x1b.ast.Tuple_String_SpVariant";\n\x11Map_String_String\x12&\n\x04list\x18\x01 \x03(\x0b\x32\x18.ast.Tuple_String_String"S\n\x19Tuple_SpVariant_SpVariant\x12\x1a\n\x02_1\x18\x01 \x01(\x0b\x32\x0e.ast.SpVariant\x12\x1a\n\x02_2\x18\x02 \x01(\x0b\x32\x0e.ast.SpVariant"a\n Tuple_SpVariant_SpVariant_Double\x12\x1a\n\x02_1\x18\x01 \x01(\x0b\x32\x0e.ast.SpVariant\x12!\n\x02_2\x18\x02 \x01(\x0b\x32\x15.ast.SpVariant_Double"F\n\x19Tuple_String_SpColumnExpr\x12\n\n\x02_1\x18\x01 \x01(\t\x12\x1d\n\x02_2\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr"@\n\x16Tuple_String_SpVariant\x12\n\n\x02_1\x18\x01 \x01(\t\x12\x1a\n\x02_2\x18\x02 \x01(\x0b\x32\x0e.ast.SpVariant"-\n\x13Tuple_String_String\x12\n\n\x02_1\x18\x01 \x01(\t\x12\n\n\x02_2\x18\x02 \x01(\t"\xa4\x01\n\x08Language\x12.\n\x0fpython_language\x18\x01 \x01(\x0b\x32\x13.ast.PythonLanguageH\x00\x12,\n\x0escala_language\x18\x02 \x01(\x0b\x32\x12.ast.ScalaLanguageH\x00\x12*\n\rjava_language\x18\x03 \x01(\x0b\x32\x11.ast.JavaLanguageH\x00\x42\x0e\n\x0csealed_value"/\n\x0ePythonLanguage\x12\x1d\n\x07version\x18\x01 \x01(\x0b\x32\x0c.ast.Version".\n\rScalaLanguage\x12\x1d\n\x07version\x18\x01 \x01(\x0b\x32\x0c.ast.Version"-\n\x0cJavaLanguage\x12\x1d\n\x07version\x18\x01 \x01(\x0b\x32\x0c.ast.Version"E\n\x07Version\x12\r\n\x05major\x18\x01 \x01(\x03\x12\r\n\x05minor\x18\x02 \x01(\x03\x12\r\n\x05patch\x18\x03 \x01(\x03\x12\r\n\x05label\x18\x04 \x01(\t"q\n\x0bPdIndexExpr\x12\x17\n\x03ord\x18\x01 \x01(\x0b\x32\x08.ast.OrdH\x00\x12 \n\x08\x66lex_ord\x18\x02 \x01(\x0b\x32\x0c.ast.FlexOrdH\x00\x12\x17\n\x03key\x18\x03 \x01(\x0b\x32\x08.ast.KeyH\x00\x42\x0e\n\x0csealed_value"\x1b\n\x03Ord\x12\x14\n\x01v\x18\x01 \x01(\x0b\x32\t.ast.Expr"\x1f\n\x07\x46lexOrd\x12\x14\n\x01v\x18\x01 \x01(\x0b\x32\t.ast.Expr"\x1b\n\x03Key\x12\x14\n\x01v\x18\x01 \x01(\x0b\x32\t.ast.Expr"\xb9\x02\n\x12PdProjectIndexExpr\x12"\n\tord_range\x18\x01 \x01(\x0b\x32\r.ast.OrdRangeH\x00\x12+\n\x0e\x66lex_ord_range\x18\x02 \x01(\x0b\x32\x11.ast.FlexOrdRangeH\x00\x12"\n\tkey_range\x18\x03 \x01(\x0b\x32\r.ast.KeyRangeH\x00\x12 \n\x08ord_list\x18\x04 \x01(\x0b\x32\x0c.ast.OrdListH\x00\x12)\n\rflex_ord_list\x18\x05 \x01(\x0b\x32\x10.ast.FlexOrdListH\x00\x12 \n\x08key_list\x18\x06 \x01(\x0b\x32\x0c.ast.KeyListH\x00\x12/\n\x10\x62ool_filter_list\x18\x07 \x01(\x0b\x32\x13.ast.BoolFilterListH\x00\x42\x0e\n\x0csealed_value"V\n\x08OrdRange\x12\x18\n\x05start\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04stop\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04step\x18\x03 \x01(\x0b\x32\t.ast.Expr"Z\n\x0c\x46lexOrdRange\x12\x18\n\x05start\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04stop\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04step\x18\x03 \x01(\x0b\x32\t.ast.Expr"=\n\x08KeyRange\x12\x18\n\x05start\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04stop\x18\x02 \x01(\x0b\x32\t.ast.Expr""\n\x07OrdList\x12\x17\n\x04ords\x18\x01 \x01(\x0b\x32\t.ast.Expr"&\n\x0b\x46lexOrdList\x12\x17\n\x04ords\x18\x01 \x01(\x0b\x32\t.ast.Expr""\n\x07KeyList\x12\x17\n\x04keys\x18\x01 \x01(\x0b\x32\t.ast.Expr"+\n\x0e\x42oolFilterList\x12\x19\n\x06\x66ilter\x18\x01 \x01(\x0b\x32\t.ast.Expr"}\n\rSpFlattenMode\x12 \n\x16sp_flatten_mode_object\x18\x01 \x01(\x08H\x00\x12\x1f\n\x15sp_flatten_mode_array\x18\x02 \x01(\x08H\x00\x12\x1e\n\x14sp_flatten_mode_both\x18\x03 \x01(\x08H\x00\x42\t\n\x07variant"6\n\x0eSpGroupingSets\x12$\n\x04sets\x18\x01 \x03(\x0b\x32\x16.ast.List_SpColumnExpr"\x9f\x01\n\nSpSaveMode\x12\x1d\n\x13sp_save_mode_append\x18\x01 \x01(\x08H\x00\x12&\n\x1csp_save_mode_error_if_exists\x18\x02 \x01(\x08H\x00\x12\x1d\n\x13sp_save_mode_ignore\x18\x03 \x01(\x08H\x00\x12 \n\x16sp_save_mode_overwrite\x18\x04 \x01(\x08H\x00\x42\t\n\x07variant"\xa6\x02\n\nSpJoinType\x12\x1d\n\x13sp_join_type__inner\x18\x01 \x01(\x08H\x00\x12"\n\x18sp_join_type__left_outer\x18\x02 \x01(\x08H\x00\x12#\n\x19sp_join_type__right_outer\x18\x03 \x01(\x08H\x00\x12"\n\x18sp_join_type__full_outer\x18\x04 \x01(\x08H\x00\x12\x1d\n\x13sp_join_type__cross\x18\x05 \x01(\x08H\x00\x12!\n\x17sp_join_type__left_semi\x18\x06 \x01(\x08H\x00\x12!\n\x17sp_join_type__left_anti\x18\x07 \x01(\x08H\x00\x12\x1c\n\x12sp_join_type__self\x18\x08 \x01(\x08H\x00\x42\t\n\x07variant"\xcd\x03\n\x10SpWindowSpecExpr\x12\x1e\n\x14sp_window_spec_empty\x18\x01 \x01(\x08H\x00\x12;\n\x17sp_window_spec_order_by\x18\x02 \x01(\x0b\x32\x18.ast.SpWindowSpecOrderByH\x00\x12\x43\n\x1bsp_window_spec_partition_by\x18\x03 \x01(\x0b\x32\x1c.ast.SpWindowSpecPartitionByH\x00\x12\x45\n\x1csp_window_spec_range_between\x18\x04 \x01(\x0b\x32\x1d.ast.SpWindowSpecRangeBetweenH\x00\x12\x43\n\x1bsp_window_spec_rows_between\x18\x05 \x01(\x0b\x32\x1c.ast.SpWindowSpecRowsBetweenH\x00\x12$\n\x1asp_window_spec_current_row\x18\x06 \x01(\x08H\x00\x12,\n"sp_window_spec_unbounded_following\x18\x07 \x01(\x08H\x00\x12,\n"sp_window_spec_unbounded_preceding\x18\x08 \x01(\x08H\x00\x42\t\n\x07variant"Z\n\x13SpWindowSpecOrderBy\x12"\n\x03wnd\x18\x01 \x01(\x0b\x32\x15.ast.SpWindowSpecExpr\x12\x1f\n\x04\x63ols\x18\x02 \x03(\x0b\x32\x11.ast.SpColumnExpr"^\n\x17SpWindowSpecPartitionBy\x12"\n\x03wnd\x18\x01 \x01(\x0b\x32\x15.ast.SpWindowSpecExpr\x12\x1f\n\x04\x63ols\x18\x02 \x03(\x0b\x32\x11.ast.SpColumnExpr"Z\n\x18SpWindowSpecRangeBetween\x12"\n\x03wnd\x18\x01 \x01(\x0b\x32\x15.ast.SpWindowSpecExpr\x12\r\n\x05start\x18\x02 \x01(\x03\x12\x0b\n\x03\x65nd\x18\x03 \x01(\x03"Y\n\x17SpWindowSpecRowsBetween\x12"\n\x03wnd\x18\x01 \x01(\x0b\x32\x15.ast.SpWindowSpecExpr\x12\r\n\x05start\x18\x02 \x01(\x03\x12\x0b\n\x03\x65nd\x18\x03 \x01(\x03"\x98\x05\n\nSpDataType\x12)\n\rsp_array_type\x18\x01 \x01(\x0b\x32\x10.ast.SpArrayTypeH\x00\x12\x18\n\x0esp_binary_type\x18\x02 \x01(\x08H\x00\x12\x19\n\x0fsp_boolean_type\x18\x03 \x01(\x08H\x00\x12\x16\n\x0csp_byte_type\x18\x04 \x01(\x08H\x00\x12\x37\n\x14sp_column_identifier\x18\x05 \x01(\x0b\x32\x17.ast.SpColumnIdentifierH\x00\x12\x16\n\x0csp_date_type\x18\x06 \x01(\x08H\x00\x12-\n\x0fsp_decimal_type\x18\x07 \x01(\x0b\x32\x12.ast.SpDecimalTypeH\x00\x12\x18\n\x0esp_double_type\x18\x08 \x01(\x08H\x00\x12\x17\n\rsp_float_type\x18\t \x01(\x08H\x00\x12\x1b\n\x11sp_geography_type\x18\n \x01(\x08H\x00\x12\x19\n\x0fsp_integer_type\x18\x0b \x01(\x08H\x00\x12\x16\n\x0csp_long_type\x18\x0c \x01(\x08H\x00\x12%\n\x0bsp_map_type\x18\r \x01(\x0b\x32\x0e.ast.SpMapTypeH\x00\x12\x17\n\rsp_short_type\x18\x0e \x01(\x08H\x00\x12\x18\n\x0esp_string_type\x18\x0f \x01(\x08H\x00\x12-\n\x0fsp_struct_field\x18\x10 \x01(\x0b\x32\x12.ast.SpStructFieldH\x00\x12+\n\x0esp_struct_type\x18\x11 \x01(\x0b\x32\x11.ast.SpStructTypeH\x00\x12\x16\n\x0csp_time_type\x18\x12 \x01(\x08H\x00\x12\x1b\n\x11sp_timestamp_type\x18\x13 \x01(\x08H\x00\x12\x19\n\x0fsp_variant_type\x18\x14 \x01(\x08H\x00\x42\t\n\x07variant"*\n\x0bSpArrayType\x12\x1b\n\x02ty\x18\x01 \x01(\x0b\x32\x0f.ast.SpDataType""\n\x12SpColumnIdentifier\x12\x0c\n\x04name\x18\x01 \x01(\t"1\n\rSpDecimalType\x12\x11\n\tprecision\x18\x01 \x01(\x03\x12\r\n\x05scale\x18\x02 \x01(\x03"O\n\tSpMapType\x12\x1f\n\x06key_ty\x18\x01 \x01(\x0b\x32\x0f.ast.SpDataType\x12!\n\x08value_ty\x18\x02 \x01(\x0b\x32\x0f.ast.SpDataType"y\n\rSpStructField\x12\x32\n\x11\x63olumn_identifier\x18\x01 \x01(\x0b\x32\x17.ast.SpColumnIdentifier\x12"\n\tdata_type\x18\x02 \x01(\x0b\x32\x0f.ast.SpDataType\x12\x10\n\x08nullable\x18\x03 \x01(\x08"2\n\x0cSpStructType\x12"\n\x06\x66ields\x18\x01 \x03(\x0b\x32\x12.ast.SpStructField"\xc2\x05\n\tSpVariant\x12\x33\n\x12sp_variant__object\x18\x01 \x01(\x0b\x32\x15.ast.SpVariant_ObjectH\x00\x12/\n\x10sp_variant__list\x18\x02 \x01(\x0b\x32\x13.ast.SpVariant_ListH\x00\x12\x39\n\x15sp_variant__timestamp\x18\x03 \x01(\x0b\x32\x18.ast.SpVariant_TimestampH\x00\x12/\n\x10sp_variant__date\x18\x04 \x01(\x0b\x32\x13.ast.SpVariant_DateH\x00\x12/\n\x10sp_variant__time\x18\x05 \x01(\x0b\x32\x13.ast.SpVariant_TimeH\x00\x12\x31\n\x11sp_variant__bytes\x18\x06 \x01(\x0b\x32\x14.ast.SpVariant_BytesH\x00\x12\x33\n\x12sp_variant__string\x18\x07 \x01(\x0b\x32\x15.ast.SpVariant_StringH\x00\x12/\n\x10sp_variant__bool\x18\x08 \x01(\x0b\x32\x13.ast.SpVariant_BoolH\x00\x12\x34\n\x13sp_variant__big_int\x18\t \x01(\x0b\x32\x15.ast.SpVariant_BigIntH\x00\x12<\n\x17sp_variant__big_decimal\x18\n \x01(\x0b\x32\x19.ast.SpVariant_BigDecimalH\x00\x12-\n\x0fsp_variant__int\x18\x0b \x01(\x0b\x32\x12.ast.SpVariant_IntH\x00\x12\x31\n\x11sp_variant__float\x18\x0c \x01(\x0b\x32\x14.ast.SpVariant_FloatH\x00\x12\x33\n\x12sp_variant__double\x18\r \x01(\x0b\x32\x15.ast.SpVariant_DoubleH\x00\x42\x0e\n\x0csealed_value"7\n\x10SpVariant_Object\x12#\n\x01v\x18\x01 \x03(\x0b\x32\x18.ast.Tuple_String_String"3\n\x0eSpVariant_List\x12!\n\x01v\x18\x01 \x03(\x0b\x32\x16.ast.Map_String_String" \n\x13SpVariant_Timestamp\x12\t\n\x01v\x18\x01 \x01(\x04"\x1b\n\x0eSpVariant_Date\x12\t\n\x01v\x18\x01 \x01(\x04"\x1b\n\x0eSpVariant_Time\x12\t\n\x01v\x18\x01 \x01(\x04"\x1c\n\x0fSpVariant_Bytes\x12\t\n\x01v\x18\x01 \x01(\x0c"\x1d\n\x10SpVariant_String\x12\t\n\x01v\x18\x01 \x01(\t"\x1b\n\x0eSpVariant_Bool\x12\t\n\x01v\x18\x01 \x01(\x08"\x1d\n\x10SpVariant_BigInt\x12\t\n\x01v\x18\x01 \x01(\x0c"!\n\x14SpVariant_BigDecimal\x12\t\n\x01v\x18\x01 \x01(\x0c"\x1a\n\rSpVariant_Int\x12\t\n\x01v\x18\x01 \x01(\x03"\x1c\n\x0fSpVariant_Float\x12\t\n\x01v\x18\x01 \x01(\x04"\x1d\n\x10SpVariant_Double\x12\t\n\x01v\x18\x01 \x01(\x04"#\n\x05SpRow\x12\x1a\n\x02vs\x18\x01 \x03(\x0b\x32\x0e.ast.SpVariant"k\n\x0bSrcPosition\x12\x0c\n\x04\x66ile\x18\x01 \x01(\t\x12\x12\n\nstart_line\x18\x02 \x01(\x03\x12\x14\n\x0cstart_column\x18\x03 \x01(\x03\x12\x10\n\x08\x65nd_line\x18\x04 \x01(\x03\x12\x12\n\nend_column\x18\x05 \x01(\x03"\x1a\n\x05VarId\x12\x11\n\tbitfield1\x18\x01 \x01(\x04"p\n\x07Request\x12$\n\x0e\x63lient_version\x18\x01 \x01(\x0b\x32\x0c.ast.Version\x12&\n\x0f\x63lient_language\x18\x02 \x01(\x0b\x32\r.ast.Language\x12\x17\n\x04\x62ody\x18\x03 \x03(\x0b\x32\t.ast.Stmt"%\n\x08Response\x12\x19\n\x04\x62ody\x18\x01 \x03(\x0b\x32\x0b.ast.Result"\xf6\x03\n\x05\x43onst\x12-\n\x0f\x62ig_decimal_val\x18\x01 \x01(\x0b\x32\x12.ast.BigDecimalValH\x00\x12%\n\x0b\x62ig_int_val\x18\x02 \x01(\x0b\x32\x0e.ast.BigIntValH\x00\x12$\n\nbinary_val\x18\x03 \x01(\x0b\x32\x0e.ast.BinaryValH\x00\x12 \n\x08\x62ool_val\x18\x04 \x01(\x0b\x32\x0c.ast.BoolValH\x00\x12 \n\x08\x64\x61te_val\x18\x05 \x01(\x0b\x32\x0c.ast.DateValH\x00\x12&\n\x0b\x66loat64_val\x18\x06 \x01(\x0b\x32\x0f.ast.Float64ValH\x00\x12\x1c\n\x06\x66n_val\x18\x07 \x01(\x0b\x32\n.ast.FnValH\x00\x12"\n\tint32_val\x18\x08 \x01(\x0b\x32\r.ast.Int32ValH\x00\x12"\n\tint64_val\x18\t \x01(\x0b\x32\r.ast.Int64ValH\x00\x12 \n\x08none_val\x18\n \x01(\x0b\x32\x0c.ast.NoneValH\x00\x12 \n\x08null_val\x18\x0b \x01(\x0b\x32\x0c.ast.NullValH\x00\x12$\n\nstring_val\x18\x0c \x01(\x0b\x32\x0e.ast.StringValH\x00\x12*\n\rtimestamp_val\x18\r \x01(\x0b\x32\x11.ast.TimestampValH\x00\x42\t\n\x07variant"5\n\tBinaryVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\x0c"3\n\x07\x42oolVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\x08"4\n\x08Int32Val\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\x03"4\n\x08Int64Val\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\x03"6\n\nFloat64Val\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\x01"5\n\tBigIntVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\x0c"U\n\rBigDecimalVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x0eunscaled_value\x18\x02 \x01(\x0c\x12\r\n\x05scale\x18\x03 \x01(\x03"5\n\tStringVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\t"8\n\x0cTimestampVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\x03"3\n\x07\x44\x61teVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\x03"(\n\x07NoneVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition"(\n\x07NullVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition"O\n\x05\x46nVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0e\n\x06params\x18\x02 \x03(\t\x12\x17\n\x04\x62ody\x18\x03 \x01(\x0b\x32\t.ast.Expr"y\n\x06IfExpr\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x17\n\x04\x63ond\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1a\n\x07if_true\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x1b\n\x08if_false\x18\x04 \x01(\x0b\x32\t.ast.Expr">\n\x07SomeVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x14\n\x01v\x18\x02 \x01(\x0b\x32\t.ast.Expr"@\n\x08TupleVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x15\n\x02vs\x18\x02 \x03(\x0b\x32\t.ast.Expr"?\n\x07ListVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x15\n\x02vs\x18\x02 \x03(\x0b\x32\t.ast.Expr"F\n\tSeqMapVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1a\n\x03kvs\x18\x02 \x03(\x0b\x32\r.ast.TupleVal"\xda\x02\n\rBuiltInFnExpr\x12(\n\x0ftrait_string_fn\x18\x01 \x01(\x0b\x32\r.ast.StringFnH\x00\x12*\n\rstring_concat\x18\x02 \x01(\x0b\x32\x11.ast.StringConcatH\x00\x12/\n\x10string_ends_with\x18\x03 \x01(\x0b\x32\x13.ast.StringEndsWithH\x00\x12$\n\nstring_len\x18\x04 \x01(\x0b\x32\x0e.ast.StringLenH\x00\x12\x33\n\x12string_starts_with\x18\x05 \x01(\x0b\x32\x15.ast.StringStartsWithH\x00\x12-\n\x0fstring_to_lower\x18\x06 \x01(\x0b\x32\x12.ast.StringToLowerH\x00\x12-\n\x0fstring_to_upper\x18\x07 \x01(\x0b\x32\x12.ast.StringToUpperH\x00\x42\t\n\x07variant"Z\n\tApplyExpr\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x15\n\x02\x66n\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04\x61rgs\x18\x03 \x03(\x0b\x32\t.ast.Expr"P\n\x04PyFn\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0b\n\x03pkg\x18\x02 \x01(\t\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x0e\n\x06params\x18\x04 \x03(\t"K\n\x0cSnowflakeUdf\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0e\n\x06params\x18\x03 \x03(\t"M\n\x0eSnowflakeSproc\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0e\n\x06params\x18\x03 \x03(\t"-\n\x07UnaryOp\x12\x17\n\x03not\x18\x01 \x01(\x0b\x32\x08.ast.NotH\x00\x42\t\n\x07variant"\xb6\x02\n\x05\x42inOp\x12\x17\n\x03\x61\x64\x64\x18\x01 \x01(\x0b\x32\x08.ast.AddH\x00\x12\x17\n\x03\x61nd\x18\x02 \x01(\x0b\x32\x08.ast.AndH\x00\x12\x17\n\x03\x64iv\x18\x03 \x01(\x0b\x32\x08.ast.DivH\x00\x12\x15\n\x02\x65q\x18\x04 \x01(\x0b\x32\x07.ast.EqH\x00\x12\x17\n\x03geq\x18\x05 \x01(\x0b\x32\x08.ast.GeqH\x00\x12\x15\n\x02gt\x18\x06 \x01(\x0b\x32\x07.ast.GtH\x00\x12\x17\n\x03leq\x18\x07 \x01(\x0b\x32\x08.ast.LeqH\x00\x12\x15\n\x02lt\x18\x08 \x01(\x0b\x32\x07.ast.LtH\x00\x12\x17\n\x03mul\x18\t \x01(\x0b\x32\x08.ast.MulH\x00\x12\x17\n\x03neq\x18\n \x01(\x0b\x32\x08.ast.NeqH\x00\x12\x15\n\x02or\x18\x0b \x01(\x0b\x32\x07.ast.OrH\x00\x12\x17\n\x03sub\x18\x0c \x01(\x0b\x32\x08.ast.SubH\x00\x42\t\n\x07variant"@\n\x03Not\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1a\n\x07operand\x18\x02 \x01(\x0b\x32\t.ast.Expr"T\n\x03\x41nd\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03lhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x03 \x01(\x0b\x32\t.ast.Expr"S\n\x02Or\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03lhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x03 \x01(\x0b\x32\t.ast.Expr"S\n\x02\x45q\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03lhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x03 \x01(\x0b\x32\t.ast.Expr"T\n\x03Neq\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03lhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x03 \x01(\x0b\x32\t.ast.Expr"S\n\x02Lt\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03lhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x03 \x01(\x0b\x32\t.ast.Expr"T\n\x03Leq\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03lhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x03 \x01(\x0b\x32\t.ast.Expr"S\n\x02Gt\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03lhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x03 \x01(\x0b\x32\t.ast.Expr"T\n\x03Geq\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03lhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x03 \x01(\x0b\x32\t.ast.Expr"T\n\x03\x41\x64\x64\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03lhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x03 \x01(\x0b\x32\t.ast.Expr"T\n\x03Sub\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03lhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x03 \x01(\x0b\x32\t.ast.Expr"T\n\x03Mul\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03lhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x03 \x01(\x0b\x32\t.ast.Expr"T\n\x03\x44iv\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03lhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x03 \x01(\x0b\x32\t.ast.Expr"u\n\x08RangeVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x18\n\x05start\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04stop\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04step\x18\x04 \x01(\x0b\x32\t.ast.Expr"\xff\x01\n\x08StringFn\x12/\n\x10string_ends_with\x18\x01 \x01(\x0b\x32\x13.ast.StringEndsWithH\x00\x12$\n\nstring_len\x18\x02 \x01(\x0b\x32\x0e.ast.StringLenH\x00\x12\x33\n\x12string_starts_with\x18\x03 \x01(\x0b\x32\x15.ast.StringStartsWithH\x00\x12-\n\x0fstring_to_lower\x18\x04 \x01(\x0b\x32\x12.ast.StringToLowerH\x00\x12-\n\x0fstring_to_upper\x18\x05 \x01(\x0b\x32\x12.ast.StringToUpperH\x00\x42\t\n\x07variant"B\n\tStringLen\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03str\x18\x02 \x01(\x0b\x32\t.ast.Expr"F\n\rStringToUpper\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03str\x18\x02 \x01(\x0b\x32\t.ast.Expr"F\n\rStringToLower\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03str\x18\x02 \x01(\x0b\x32\t.ast.Expr"d\n\x10StringStartsWith\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03str\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x19\n\x06prefix\x18\x03 \x01(\x0b\x32\t.ast.Expr"b\n\x0eStringEndsWith\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03str\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x19\n\x06suffix\x18\x03 \x01(\x0b\x32\t.ast.Expr">\n\x0cStringConcat\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0f\n\x07strings\x18\x02 \x03(\t"\xc2N\n\x04\x45xpr\x12"\n\x0ctrait_bin_op\x18\x01 \x01(\x0b\x32\n.ast.BinOpH\x00\x12\x34\n\x16trait_built_in_fn_expr\x18\x02 \x01(\x0b\x32\x12.ast.BuiltInFnExprH\x00\x12!\n\x0btrait_const\x18\x03 \x01(\x0b\x32\n.ast.ConstH\x00\x12\x31\n\x14trait_sp_column_expr\x18\x04 \x01(\x0b\x32\x11.ast.SpColumnExprH\x00\x12H\n trait_sp_copyable_dataframe_expr\x18\x05 \x01(\x0b\x32\x1c.ast.SpCopyableDataframeExprH\x00\x12\x37\n\x17trait_sp_dataframe_expr\x18\x06 \x01(\x0b\x32\x14.ast.SpDataframeExprH\x00\x12J\n!trait_sp_dataframe_reader_options\x18\x07 \x01(\x0b\x32\x1d.ast.SpDataframeReaderOptionsH\x00\x12H\n trait_sp_dataframe_reader_schema\x18\x08 \x01(\x0b\x32\x1c.ast.SpDataframeReaderSchemaH\x00\x12;\n\x19trait_sp_dataframe_writer\x18\t \x01(\x0b\x32\x16.ast.SpDataframeWriterH\x00\x12J\n!trait_sp_dataframe_writer_options\x18\n \x01(\x0b\x32\x1d.ast.SpDataframeWriterOptionsH\x00\x12M\n#trait_sp_dataframe_writer_save_mode\x18\x0b \x01(\x0b\x32\x1e.ast.SpDataframeWriterSaveModeH\x00\x12[\n*trait_sp_relational_grouped_dataframe_expr\x18\x0c \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExprH\x00\x12(\n\x0ftrait_string_fn\x18\r \x01(\x0b\x32\r.ast.StringFnH\x00\x12&\n\x0etrait_unary_op\x18\x0e \x01(\x0b\x32\x0c.ast.UnaryOpH\x00\x12\x17\n\x03\x61\x64\x64\x18\x0f \x01(\x0b\x32\x08.ast.AddH\x00\x12\x17\n\x03\x61nd\x18\x10 \x01(\x0b\x32\x08.ast.AndH\x00\x12$\n\napply_expr\x18\x11 \x01(\x0b\x32\x0e.ast.ApplyExprH\x00\x12-\n\x0f\x62ig_decimal_val\x18\x12 \x01(\x0b\x32\x12.ast.BigDecimalValH\x00\x12%\n\x0b\x62ig_int_val\x18\x13 \x01(\x0b\x32\x0e.ast.BigIntValH\x00\x12$\n\nbinary_val\x18\x14 \x01(\x0b\x32\x0e.ast.BinaryValH\x00\x12 \n\x08\x62ool_val\x18\x15 \x01(\x0b\x32\x0c.ast.BoolValH\x00\x12"\n\tcast_expr\x18\x16 \x01(\x0b\x32\r.ast.CastExprH\x00\x12 \n\x08\x64\x61te_val\x18\x17 \x01(\x0b\x32\x0c.ast.DateValH\x00\x12\x17\n\x03\x64iv\x18\x18 \x01(\x0b\x32\x08.ast.DivH\x00\x12\x15\n\x02\x65q\x18\x19 \x01(\x0b\x32\x07.ast.EqH\x00\x12&\n\x0b\x66loat64_val\x18\x1a \x01(\x0b\x32\x0f.ast.Float64ValH\x00\x12\x1c\n\x06\x66n_val\x18\x1b \x01(\x0b\x32\n.ast.FnValH\x00\x12\x17\n\x03geq\x18\x1c \x01(\x0b\x32\x08.ast.GeqH\x00\x12\x15\n\x02gt\x18\x1d \x01(\x0b\x32\x07.ast.GtH\x00\x12\x1e\n\x07if_expr\x18\x1e \x01(\x0b\x32\x0b.ast.IfExprH\x00\x12"\n\tint32_val\x18\x1f \x01(\x0b\x32\r.ast.Int32ValH\x00\x12"\n\tint64_val\x18  \x01(\x0b\x32\r.ast.Int64ValH\x00\x12\x17\n\x03leq\x18! \x01(\x0b\x32\x08.ast.LeqH\x00\x12 \n\x08list_val\x18" \x01(\x0b\x32\x0c.ast.ListValH\x00\x12\x15\n\x02lt\x18# \x01(\x0b\x32\x07.ast.LtH\x00\x12\x17\n\x03mul\x18$ \x01(\x0b\x32\x08.ast.MulH\x00\x12\x17\n\x03neq\x18% \x01(\x0b\x32\x08.ast.NeqH\x00\x12 \n\x08none_val\x18& \x01(\x0b\x32\x0c.ast.NoneValH\x00\x12\x17\n\x03not\x18\' \x01(\x0b\x32\x08.ast.NotH\x00\x12 \n\x08null_val\x18( \x01(\x0b\x32\x0c.ast.NullValH\x00\x12\x15\n\x02or\x18) \x01(\x0b\x32\x07.ast.OrH\x00\x12(\n\x0cpd_dataframe\x18* \x01(\x0b\x32\x10.ast.PdDataframeH\x00\x12\x38\n\x15pd_dataframe_get_item\x18+ \x01(\x0b\x32\x17.ast.PdDataframeGetItemH\x00\x12\x39\n\x16pd_dataframe_i_loc_get\x18, \x01(\x0b\x32\x17.ast.PdDataframeILocGetH\x00\x12\x39\n\x16pd_dataframe_i_loc_set\x18- \x01(\x0b\x32\x17.ast.PdDataframeILocSetH\x00\x12\x36\n\x14pd_dataframe_loc_get\x18. \x01(\x0b\x32\x16.ast.PdDataframeLocGetH\x00\x12\x36\n\x14pd_dataframe_loc_set\x18/ \x01(\x0b\x32\x16.ast.PdDataframeLocSetH\x00\x12\x38\n\x15pd_dataframe_set_item\x18\x30 \x01(\x0b\x32\x17.ast.PdDataframeSetItemH\x00\x12#\n\npd_drop_na\x18\x31 \x01(\x0b\x32\r.ast.PdDropNaH\x00\x12\x1e\n\x07pd_repr\x18\x32 \x01(\x0b\x32\x0b.ast.PdReprH\x00\x12"\n\tpd_series\x18\x33 \x01(\x0b\x32\r.ast.PdSeriesH\x00\x12\x1a\n\x05py_fn\x18\x34 \x01(\x0b\x32\t.ast.PyFnH\x00\x12"\n\trange_val\x18\x35 \x01(\x0b\x32\r.ast.RangeValH\x00\x12\x17\n\x03ref\x18\x36 \x01(\x0b\x32\x08.ast.RefH\x00\x12%\n\x0bseq_map_val\x18\x37 \x01(\x0b\x32\x0e.ast.SeqMapValH\x00\x12.\n\x0fsnowflake_sproc\x18\x38 \x01(\x0b\x32\x13.ast.SnowflakeSprocH\x00\x12*\n\rsnowflake_udf\x18\x39 \x01(\x0b\x32\x11.ast.SnowflakeUdfH\x00\x12 \n\x08some_val\x18: \x01(\x0b\x32\x0c.ast.SomeValH\x00\x12"\n\tsp_column\x18; \x01(\x0b\x32\r.ast.SpColumnH\x00\x12-\n\x0fsp_column_alias\x18< \x01(\x0b\x32\x12.ast.SpColumnAliasH\x00\x12)\n\rsp_column_and\x18= \x01(\x0b\x32\x10.ast.SpColumnAndH\x00\x12\x36\n\x14sp_column_apply__int\x18> \x01(\x0b\x32\x16.ast.SpColumnApply_IntH\x00\x12<\n\x17sp_column_apply__string\x18? \x01(\x0b\x32\x19.ast.SpColumnApply_StringH\x00\x12)\n\rsp_column_asc\x18@ \x01(\x0b\x32\x10.ast.SpColumnAscH\x00\x12\x31\n\x11sp_column_between\x18\x41 \x01(\x0b\x32\x14.ast.SpColumnBetweenH\x00\x12\x30\n\x11sp_column_bit_and\x18\x42 \x01(\x0b\x32\x13.ast.SpColumnBitAndH\x00\x12.\n\x10sp_column_bit_or\x18\x43 \x01(\x0b\x32\x12.ast.SpColumnBitOrH\x00\x12\x30\n\x11sp_column_bit_xor\x18\x44 \x01(\x0b\x32\x13.ast.SpColumnBitXorH\x00\x12+\n\x0esp_column_cast\x18\x45 \x01(\x0b\x32\x11.ast.SpColumnCastH\x00\x12\x31\n\x11sp_column_collate\x18\x46 \x01(\x0b\x32\x14.ast.SpColumnCollateH\x00\x12+\n\x0esp_column_desc\x18G \x01(\x0b\x32\x11.ast.SpColumnDescH\x00\x12/\n\x10sp_column_divide\x18H \x01(\x0b\x32\x13.ast.SpColumnDivideH\x00\x12\x34\n\x13sp_column_equal_nan\x18I \x01(\x0b\x32\x15.ast.SpColumnEqualNanH\x00\x12\x36\n\x14sp_column_equal_null\x18J \x01(\x0b\x32\x16.ast.SpColumnEqualNullH\x00\x12\x32\n\x12sp_column_equal_to\x18K \x01(\x0b\x32\x14.ast.SpColumnEqualToH\x00\x12)\n\rsp_column_geq\x18L \x01(\x0b\x32\x10.ast.SpColumnGeqH\x00\x12\'\n\x0csp_column_gt\x18M \x01(\x0b\x32\x0f.ast.SpColumnGtH\x00\x12<\n\x17sp_column_in__dataframe\x18N \x01(\x0b\x32\x19.ast.SpColumnIn_DataframeH\x00\x12\x30\n\x11sp_column_in__seq\x18O \x01(\x0b\x32\x13.ast.SpColumnIn_SeqH\x00\x12\x37\n\x15sp_column_is_not_null\x18P \x01(\x0b\x32\x16.ast.SpColumnIsNotNullH\x00\x12\x30\n\x11sp_column_is_null\x18Q \x01(\x0b\x32\x13.ast.SpColumnIsNullH\x00\x12)\n\rsp_column_leq\x18R \x01(\x0b\x32\x10.ast.SpColumnLeqH\x00\x12+\n\x0esp_column_like\x18S \x01(\x0b\x32\x11.ast.SpColumnLikeH\x00\x12\'\n\x0csp_column_lt\x18T \x01(\x0b\x32\x0f.ast.SpColumnLtH\x00\x12-\n\x0fsp_column_minus\x18U \x01(\x0b\x32\x12.ast.SpColumnMinusH\x00\x12)\n\rsp_column_mod\x18V \x01(\x0b\x32\x10.ast.SpColumnModH\x00\x12\x33\n\x12sp_column_multiply\x18W \x01(\x0b\x32\x15.ast.SpColumnMultiplyH\x00\x12+\n\x0esp_column_name\x18X \x01(\x0b\x32\x11.ast.SpColumnNameH\x00\x12\x34\n\x13sp_column_not_equal\x18Y \x01(\x0b\x32\x15.ast.SpColumnNotEqualH\x00\x12\'\n\x0csp_column_or\x18Z \x01(\x0b\x32\x0f.ast.SpColumnOrH\x00\x12+\n\x0esp_column_over\x18[ \x01(\x0b\x32\x11.ast.SpColumnOverH\x00\x12+\n\x0esp_column_plus\x18\\ \x01(\x0b\x32\x11.ast.SpColumnPlusH\x00\x12)\n\rsp_column_ref\x18] \x01(\x0b\x32\x10.ast.SpColumnRefH\x00\x12/\n\x10sp_column_regexp\x18^ \x01(\x0b\x32\x13.ast.SpColumnRegexpH\x00\x12:\n\x16sp_column_regexp_count\x18_ \x01(\x0b\x32\x18.ast.SpColumnRegexpCountH\x00\x12\x32\n\x12sp_column_sql_expr\x18` \x01(\x0b\x32\x14.ast.SpColumnSqlExprH\x00\x12:\n\x16sp_column_within_group\x18\x61 \x01(\x0b\x32\x18.ast.SpColumnWithinGroupH\x00\x12\'\n\x0csp_copy_into\x18\x62 \x01(\x0b\x32\x0f.ast.SpCopyIntoH\x00\x12\x35\n\x13sp_create_dataframe\x18\x63 \x01(\x0b\x32\x16.ast.SpCreateDataframeH\x00\x12/\n\x10sp_dataframe_agg\x18\x64 \x01(\x0b\x32\x13.ast.SpDataframeAggH\x00\x12\x33\n\x12sp_dataframe_apply\x18\x65 \x01(\x0b\x32\x15.ast.SpDataframeApplyH\x00\x12/\n\x10sp_dataframe_col\x18\x66 \x01(\x0b\x32\x13.ast.SpDataframeColH\x00\x12<\n\x17sp_dataframe_cross_join\x18g \x01(\x0b\x32\x19.ast.SpDataframeCrossJoinH\x00\x12\x31\n\x11sp_dataframe_cube\x18h \x01(\x0b\x32\x14.ast.SpDataframeCubeH\x00\x12\x39\n\x15sp_dataframe_distinct\x18i \x01(\x0b\x32\x18.ast.SpDataframeDistinctH\x00\x12\x46\n\x1csp_dataframe_drop_duplicates\x18j \x01(\x0b\x32\x1e.ast.SpDataframeDropDuplicatesH\x00\x12\x42\n\x1asp_dataframe_drop__columns\x18k \x01(\x0b\x32\x1c.ast.SpDataframeDrop_ColumnsH\x00\x12\x42\n\x1asp_dataframe_drop__strings\x18l \x01(\x0b\x32\x1c.ast.SpDataframeDrop_StringsH\x00\x12\x35\n\x13sp_dataframe_except\x18m \x01(\x0b\x32\x16.ast.SpDataframeExceptH\x00\x12\x35\n\x13sp_dataframe_filter\x18n \x01(\x0b\x32\x16.ast.SpDataframeFilterH\x00\x12\x46\n\x1csp_dataframe_flatten__column\x18o \x01(\x0b\x32\x1e.ast.SpDataframeFlatten_ColumnH\x00\x12z\n8sp_dataframe_flatten__column__string__bool__bool__string\x18p \x01(\x0b\x32\x36.ast.SpDataframeFlatten_Column_String_Bool_Bool_StringH\x00\x12\x38\n\x15sp_dataframe_group_by\x18q \x01(\x0b\x32\x17.ast.SpDataframeGroupByH\x00\x12R\n#sp_dataframe_group_by_grouping_sets\x18r \x01(\x0b\x32#.ast.SpDataframeGroupByGroupingSetsH\x00\x12I\n\x1esp_dataframe_group_by__columns\x18s \x01(\x0b\x32\x1f.ast.SpDataframeGroupBy_ColumnsH\x00\x12I\n\x1esp_dataframe_group_by__strings\x18t \x01(\x0b\x32\x1f.ast.SpDataframeGroupBy_StringsH\x00\x12;\n\x16sp_dataframe_intersect\x18u \x01(\x0b\x32\x19.ast.SpDataframeIntersectH\x00\x12\\\n(sp_dataframe_join__dataframe__join_exprs\x18v \x01(\x0b\x32(.ast.SpDataframeJoin_Dataframe_JoinExprsH\x00\x12\x62\n+sp_dataframe_join__dataframe__using_columns\x18w \x01(\x0b\x32+.ast.SpDataframeJoin_Dataframe_UsingColumnsH\x00\x12Z\n\'sp_dataframe_join__table_function__list\x18x \x01(\x0b\x32\'.ast.SpDataframeJoin_TableFunction_ListH\x00\x12X\n&sp_dataframe_join__table_function__map\x18y \x01(\x0b\x32&.ast.SpDataframeJoin_TableFunction_MapH\x00\x12\x33\n\x12sp_dataframe_limit\x18z \x01(\x0b\x32\x15.ast.SpDataframeLimitH\x00\x12\x36\n\x14sp_dataframe_na_drop\x18{ \x01(\x0b\x32\x16.ast.SpDataframeNaDropH\x00\x12\x36\n\x14sp_dataframe_na_fill\x18| \x01(\x0b\x32\x16.ast.SpDataframeNaFillH\x00\x12<\n\x17sp_dataframe_na_replace\x18} \x01(\x0b\x32\x19.ast.SpDataframeNaReplaceH\x00\x12@\n\x19sp_dataframe_natural_join\x18~ \x01(\x0b\x32\x1b.ast.SpDataframeNaturalJoinH\x00\x12\x42\n\x1asp_dataframe_pivot__column\x18\x7f \x01(\x0b\x32\x1c.ast.SpDataframePivot_ColumnH\x00\x12\x43\n\x1asp_dataframe_pivot__string\x18\x80\x01 \x01(\x0b\x32\x1c.ast.SpDataframePivot_StringH\x00\x12\x30\n\x10sp_dataframe_ref\x18\x81\x01 \x01(\x0b\x32\x13.ast.SpDataframeRefH\x00\x12\x36\n\x13sp_dataframe_rename\x18\x82\x01 \x01(\x0b\x32\x16.ast.SpDataframeRenameH\x00\x12G\n\x1csp_dataframe_rollup__columns\x18\x83\x01 \x01(\x0b\x32\x1e.ast.SpDataframeRollup_ColumnsH\x00\x12G\n\x1csp_dataframe_rollup__strings\x18\x84\x01 \x01(\x0b\x32\x1e.ast.SpDataframeRollup_StringsH\x00\x12\x45\n\x1bsp_dataframe_sample__double\x18\x85\x01 \x01(\x0b\x32\x1d.ast.SpDataframeSample_DoubleH\x00\x12\x41\n\x19sp_dataframe_sample__long\x18\x86\x01 \x01(\x0b\x32\x1b.ast.SpDataframeSample_LongH\x00\x12G\n\x1csp_dataframe_select__columns\x18\x87\x01 \x01(\x0b\x32\x1e.ast.SpDataframeSelect_ColumnsH\x00\x12G\n\x1csp_dataframe_select__strings\x18\x88\x01 \x01(\x0b\x32\x1e.ast.SpDataframeSelect_StringsH\x00\x12\x32\n\x11sp_dataframe_show\x18\x89\x01 \x01(\x0b\x32\x14.ast.SpDataframeShowH\x00\x12\x32\n\x11sp_dataframe_sort\x18\x8a\x01 \x01(\x0b\x32\x14.ast.SpDataframeSortH\x00\x12\x46\n\x1csp_dataframe_stats_cross_tab\x18\x8b\x01 \x01(\x0b\x32\x1d.ast.SpDataframeStatsCrossTabH\x00\x12\x46\n\x1csp_dataframe_stats_sample_by\x18\x8c\x01 \x01(\x0b\x32\x1d.ast.SpDataframeStatsSampleByH\x00\x12\x33\n\x12sp_dataframe_to_df\x18\x8d\x01 \x01(\x0b\x32\x14.ast.SpDataframeToDfH\x00\x12\x34\n\x12sp_dataframe_union\x18\x8e\x01 \x01(\x0b\x32\x15.ast.SpDataframeUnionH\x00\x12;\n\x16sp_dataframe_union_all\x18\x8f\x01 \x01(\x0b\x32\x18.ast.SpDataframeUnionAllH\x00\x12I\n\x1esp_dataframe_union_all_by_name\x18\x90\x01 \x01(\x0b\x32\x1e.ast.SpDataframeUnionAllByNameH\x00\x12\x42\n\x1asp_dataframe_union_by_name\x18\x91\x01 \x01(\x0b\x32\x1b.ast.SpDataframeUnionByNameH\x00\x12\x34\n\x12sp_dataframe_where\x18\x92\x01 \x01(\x0b\x32\x15.ast.SpDataframeWhereH\x00\x12?\n\x18sp_dataframe_with_column\x18\x93\x01 \x01(\x0b\x32\x1a.ast.SpDataframeWithColumnH\x00\x12\x41\n\x19sp_dataframe_with_columns\x18\x94\x01 \x01(\x0b\x32\x1b.ast.SpDataframeWithColumnsH\x00\x12\x34\n\x12sp_flatten__column\x18\x95\x01 \x01(\x0b\x32\x15.ast.SpFlatten_ColumnH\x00\x12h\n.sp_flatten__column__string__bool__bool__string\x18\x96\x01 \x01(\x0b\x32-.ast.SpFlatten_Column_String_Bool_Bool_StringH\x00\x12)\n\x0csp_generator\x18\x97\x01 \x01(\x0b\x32\x10.ast.SpGeneratorH\x00\x12!\n\x08sp_range\x18\x98\x01 \x01(\x0b\x32\x0c.ast.SpRangeH\x00\x12(\n\x0csp_read_avro\x18\x99\x01 \x01(\x0b\x32\x0f.ast.SpReadAvroH\x00\x12&\n\x0bsp_read_csv\x18\x9a\x01 \x01(\x0b\x32\x0e.ast.SpReadCsvH\x00\x12(\n\x0csp_read_json\x18\x9b\x01 \x01(\x0b\x32\x0f.ast.SpReadJsonH\x00\x12&\n\x0bsp_read_orc\x18\x9c\x01 \x01(\x0b\x32\x0e.ast.SpReadOrcH\x00\x12.\n\x0fsp_read_parquet\x18\x9d\x01 \x01(\x0b\x32\x12.ast.SpReadParquetH\x00\x12*\n\rsp_read_table\x18\x9e\x01 \x01(\x0b\x32\x10.ast.SpReadTableH\x00\x12&\n\x0bsp_read_xml\x18\x9f\x01 \x01(\x0b\x32\x0e.ast.SpReadXmlH\x00\x12\x65\n,sp_relational_grouped_dataframe_agg__columns\x18\xa0\x01 \x01(\x0b\x32,.ast.SpRelationalGroupedDataframeAgg_ColumnsH\x00\x12]\n(sp_relational_grouped_dataframe_agg__map\x18\xa1\x01 \x01(\x0b\x32(.ast.SpRelationalGroupedDataframeAgg_MapH\x00\x12_\n)sp_relational_grouped_dataframe_any_value\x18\xa2\x01 \x01(\x0b\x32).ast.SpRelationalGroupedDataframeAnyValueH\x00\x12T\n#sp_relational_grouped_dataframe_avg\x18\xa3\x01 \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeAvgH\x00\x12\\\n\'sp_relational_grouped_dataframe_builtin\x18\xa4\x01 \x01(\x0b\x32(.ast.SpRelationalGroupedDataframeBuiltinH\x00\x12X\n%sp_relational_grouped_dataframe_count\x18\xa5\x01 \x01(\x0b\x32&.ast.SpRelationalGroupedDataframeCountH\x00\x12T\n#sp_relational_grouped_dataframe_max\x18\xa6\x01 \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeMaxH\x00\x12V\n$sp_relational_grouped_dataframe_mean\x18\xa7\x01 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeMeanH\x00\x12Z\n&sp_relational_grouped_dataframe_median\x18\xa8\x01 \x01(\x0b\x32\'.ast.SpRelationalGroupedDataframeMedianH\x00\x12T\n#sp_relational_grouped_dataframe_min\x18\xa9\x01 \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeMinH\x00\x12T\n#sp_relational_grouped_dataframe_sum\x18\xaa\x01 \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeSumH\x00\x12\x1d\n\x06sp_sql\x18\xab\x01 \x01(\x0b\x32\n.ast.SpSqlH\x00\x12\x36\n\x13sp_stored_procedure\x18\xac\x01 \x01(\x0b\x32\x16.ast.SpStoredProcedureH\x00\x12!\n\x08sp_table\x18\xad\x01 \x01(\x0b\x32\x0c.ast.SpTableH\x00\x12\x32\n\x11sp_table_function\x18\xae\x01 \x01(\x0b\x32\x14.ast.SpTableFunctionH\x00\x12(\n\x0csp_write_csv\x18\xaf\x01 \x01(\x0b\x32\x0f.ast.SpWriteCsvH\x00\x12*\n\rsp_write_json\x18\xb0\x01 \x01(\x0b\x32\x10.ast.SpWriteJsonH\x00\x12\x30\n\x10sp_write_parquet\x18\xb1\x01 \x01(\x0b\x32\x13.ast.SpWriteParquetH\x00\x12,\n\x0esp_write_table\x18\xb2\x01 \x01(\x0b\x32\x11.ast.SpWriteTableH\x00\x12+\n\rstring_concat\x18\xb3\x01 \x01(\x0b\x32\x11.ast.StringConcatH\x00\x12\x30\n\x10string_ends_with\x18\xb4\x01 \x01(\x0b\x32\x13.ast.StringEndsWithH\x00\x12%\n\nstring_len\x18\xb5\x01 \x01(\x0b\x32\x0e.ast.StringLenH\x00\x12\x34\n\x12string_starts_with\x18\xb6\x01 \x01(\x0b\x32\x15.ast.StringStartsWithH\x00\x12.\n\x0fstring_to_lower\x18\xb7\x01 \x01(\x0b\x32\x12.ast.StringToLowerH\x00\x12.\n\x0fstring_to_upper\x18\xb8\x01 \x01(\x0b\x32\x12.ast.StringToUpperH\x00\x12%\n\nstring_val\x18\xb9\x01 \x01(\x0b\x32\x0e.ast.StringValH\x00\x12\x18\n\x03sub\x18\xba\x01 \x01(\x0b\x32\x08.ast.SubH\x00\x12+\n\rtimestamp_val\x18\xbb\x01 \x01(\x0b\x32\x11.ast.TimestampValH\x00\x12#\n\ttuple_val\x18\xbc\x01 \x01(\x0b\x32\r.ast.TupleValH\x00\x42\t\n\x07variant"@\n\x03Ref\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1a\n\x06var_id\x18\x02 \x01(\x0b\x32\n.ast.VarId"W\n\x08\x43\x61stExpr\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03typ\x18\x02 \x01(\x0b\x32\t.ast.Type\x12\x14\n\x01v\x18\x03 \x01(\x0b\x32\t.ast.Expr"\x95\x01\n\x0bPdDataframe\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x17\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x18\n\x05index\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x1a\n\x07\x63olumns\x18\x04 \x01(\x0b\x32\t.ast.Expr\x12\x18\n\x05\x64type\x18\x05 \x01(\x0b\x32\t.ast.Type"\x8e\x01\n\x08PdDropNa\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x14\n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x08.ast.Ref\x12\x19\n\x06thresh\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04\x61xis\x18\x04 \x01(\x0b\x32\t.ast.Expr\x12\x19\n\x06subset\x18\x05 \x01(\x0b\x32\t.ast.Expr"e\n\x12PdDataframeGetItem\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x14\n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x08.ast.Ref\x12\x1a\n\x07key_arg\x18\x03 \x01(\x0b\x32\t.ast.Expr"{\n\x12PdDataframeSetItem\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x14\n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x08.ast.Ref\x12\x1a\n\x07key_arg\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x14\n\x01v\x18\x04 \x01(\x0b\x32\t.ast.Expr"}\n\x11PdDataframeLocGet\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x14\n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x08.ast.Ref\x12\x17\n\x04rows\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x1a\n\x07\x63olumns\x18\x04 \x01(\x0b\x32\t.ast.Expr"\x93\x01\n\x11PdDataframeLocSet\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x14\n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x08.ast.Ref\x12\x14\n\x01v\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04rows\x18\x04 \x01(\x0b\x32\t.ast.Expr\x12\x1a\n\x07\x63olumns\x18\x05 \x01(\x0b\x32\t.ast.Expr"~\n\x12PdDataframeILocGet\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x14\n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x08.ast.Ref\x12\x17\n\x04rows\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x1a\n\x07\x63olumns\x18\x04 \x01(\x0b\x32\t.ast.Expr"\x94\x01\n\x12PdDataframeILocSet\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x14\n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x08.ast.Ref\x12\x14\n\x01v\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04rows\x18\x04 \x01(\x0b\x32\t.ast.Expr\x12\x1a\n\x07\x63olumns\x18\x05 \x01(\x0b\x32\t.ast.Expr"r\n\x06PdRepr\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\r\n\x05\x61sync\x18\x02 \x01(\x08\x12\x13\n\x01v\x18\x03 \x01(\x0b\x32\x08.ast.Ref\x12\x10\n\x08max_rows\x18\x04 \x01(\x03\x12\x13\n\x0bmax_columns\x18\x05 \x01(\x03"u\n\x0cPdReprResult\x12\x10\n\x08num_rows\x18\x01 \x01(\x03\x12\x13\n\x0bnum_columns\x18\x02 \x01(\x03\x12\x15\n\rnum_head_rows\x18\x03 \x01(\x03\x12\x18\n\x10num_head_columns\x18\x04 \x01(\x03\x12\r\n\x05value\x18\x05 \x01(\x0c"\x8f\x01\n\x08PdSeries\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x17\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x18\n\x05index\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04name\x18\x04 \x01(\x0b\x32\t.ast.Expr\x12\x18\n\x05\x64type\x18\x05 \x01(\x0b\x32\t.ast.Type"\x9e\x01\n\x06Result\x12!\n\x0btrait_error\x18\x01 \x01(\x0b\x32\n.ast.ErrorH\x00\x12\x1e\n\x07\x65val_ok\x18\x02 \x01(\x0b\x32\x0b.ast.EvalOkH\x00\x12\x46\n\x1csession_reset_required_error\x18\x03 \x01(\x0b\x32\x1e.ast.SessionResetRequiredErrorH\x00\x42\t\n\x07variant"\xcb\x04\n\nEvalResult\x12!\n\x0btrait_const\x18\x01 \x01(\x0b\x32\n.ast.ConstH\x00\x12-\n\x0f\x62ig_decimal_val\x18\x02 \x01(\x0b\x32\x12.ast.BigDecimalValH\x00\x12%\n\x0b\x62ig_int_val\x18\x03 \x01(\x0b\x32\x0e.ast.BigIntValH\x00\x12$\n\nbinary_val\x18\x04 \x01(\x0b\x32\x0e.ast.BinaryValH\x00\x12 \n\x08\x62ool_val\x18\x05 \x01(\x0b\x32\x0c.ast.BoolValH\x00\x12 \n\x08\x64\x61te_val\x18\x06 \x01(\x0b\x32\x0c.ast.DateValH\x00\x12&\n\x0b\x66loat64_val\x18\x07 \x01(\x0b\x32\x0f.ast.Float64ValH\x00\x12\x1c\n\x06\x66n_val\x18\x08 \x01(\x0b\x32\n.ast.FnValH\x00\x12"\n\tint32_val\x18\t \x01(\x0b\x32\r.ast.Int32ValH\x00\x12"\n\tint64_val\x18\n \x01(\x0b\x32\r.ast.Int64ValH\x00\x12 \n\x08none_val\x18\x0b \x01(\x0b\x32\x0c.ast.NoneValH\x00\x12 \n\x08null_val\x18\x0c \x01(\x0b\x32\x0c.ast.NullValH\x00\x12+\n\x0epd_repr_result\x18\r \x01(\x0b\x32\x11.ast.PdReprResultH\x00\x12$\n\nstring_val\x18\x0e \x01(\x0b\x32\x0e.ast.StringValH\x00\x12*\n\rtimestamp_val\x18\x0f \x01(\x0b\x32\x11.ast.TimestampValH\x00\x42\t\n\x07variant"P\n\x06\x45valOk\x12\x0b\n\x03uid\x18\x01 \x01(\x03\x12\x1a\n\x06var_id\x18\x02 \x01(\x0b\x32\n.ast.VarId\x12\x1d\n\x04\x64\x61ta\x18\x03 \x01(\x0b\x32\x0f.ast.EvalResult"Z\n\x05\x45rror\x12\x46\n\x1csession_reset_required_error\x18\x01 \x01(\x0b\x32\x1e.ast.SessionResetRequiredErrorH\x00\x42\t\n\x07variant"D\n\x19SessionResetRequiredError\x12\x0b\n\x03uid\x18\x01 \x01(\x03\x12\x1a\n\x06var_id\x18\x02 \x01(\x0b\x32\n.ast.VarId"\xf2\x0f\n\x0cSpColumnExpr\x12"\n\tsp_column\x18\x01 \x01(\x0b\x32\r.ast.SpColumnH\x00\x12-\n\x0fsp_column_alias\x18\x02 \x01(\x0b\x32\x12.ast.SpColumnAliasH\x00\x12)\n\rsp_column_and\x18\x03 \x01(\x0b\x32\x10.ast.SpColumnAndH\x00\x12\x36\n\x14sp_column_apply__int\x18\x04 \x01(\x0b\x32\x16.ast.SpColumnApply_IntH\x00\x12<\n\x17sp_column_apply__string\x18\x05 \x01(\x0b\x32\x19.ast.SpColumnApply_StringH\x00\x12)\n\rsp_column_asc\x18\x06 \x01(\x0b\x32\x10.ast.SpColumnAscH\x00\x12\x31\n\x11sp_column_between\x18\x07 \x01(\x0b\x32\x14.ast.SpColumnBetweenH\x00\x12\x30\n\x11sp_column_bit_and\x18\x08 \x01(\x0b\x32\x13.ast.SpColumnBitAndH\x00\x12.\n\x10sp_column_bit_or\x18\t \x01(\x0b\x32\x12.ast.SpColumnBitOrH\x00\x12\x30\n\x11sp_column_bit_xor\x18\n \x01(\x0b\x32\x13.ast.SpColumnBitXorH\x00\x12+\n\x0esp_column_cast\x18\x0b \x01(\x0b\x32\x11.ast.SpColumnCastH\x00\x12\x31\n\x11sp_column_collate\x18\x0c \x01(\x0b\x32\x14.ast.SpColumnCollateH\x00\x12+\n\x0esp_column_desc\x18\r \x01(\x0b\x32\x11.ast.SpColumnDescH\x00\x12/\n\x10sp_column_divide\x18\x0e \x01(\x0b\x32\x13.ast.SpColumnDivideH\x00\x12\x34\n\x13sp_column_equal_nan\x18\x0f \x01(\x0b\x32\x15.ast.SpColumnEqualNanH\x00\x12\x36\n\x14sp_column_equal_null\x18\x10 \x01(\x0b\x32\x16.ast.SpColumnEqualNullH\x00\x12\x32\n\x12sp_column_equal_to\x18\x11 \x01(\x0b\x32\x14.ast.SpColumnEqualToH\x00\x12)\n\rsp_column_geq\x18\x12 \x01(\x0b\x32\x10.ast.SpColumnGeqH\x00\x12\'\n\x0csp_column_gt\x18\x13 \x01(\x0b\x32\x0f.ast.SpColumnGtH\x00\x12<\n\x17sp_column_in__dataframe\x18\x14 \x01(\x0b\x32\x19.ast.SpColumnIn_DataframeH\x00\x12\x30\n\x11sp_column_in__seq\x18\x15 \x01(\x0b\x32\x13.ast.SpColumnIn_SeqH\x00\x12\x37\n\x15sp_column_is_not_null\x18\x16 \x01(\x0b\x32\x16.ast.SpColumnIsNotNullH\x00\x12\x30\n\x11sp_column_is_null\x18\x17 \x01(\x0b\x32\x13.ast.SpColumnIsNullH\x00\x12)\n\rsp_column_leq\x18\x18 \x01(\x0b\x32\x10.ast.SpColumnLeqH\x00\x12+\n\x0esp_column_like\x18\x19 \x01(\x0b\x32\x11.ast.SpColumnLikeH\x00\x12\'\n\x0csp_column_lt\x18\x1a \x01(\x0b\x32\x0f.ast.SpColumnLtH\x00\x12-\n\x0fsp_column_minus\x18\x1b \x01(\x0b\x32\x12.ast.SpColumnMinusH\x00\x12)\n\rsp_column_mod\x18\x1c \x01(\x0b\x32\x10.ast.SpColumnModH\x00\x12\x33\n\x12sp_column_multiply\x18\x1d \x01(\x0b\x32\x15.ast.SpColumnMultiplyH\x00\x12+\n\x0esp_column_name\x18\x1e \x01(\x0b\x32\x11.ast.SpColumnNameH\x00\x12\x34\n\x13sp_column_not_equal\x18\x1f \x01(\x0b\x32\x15.ast.SpColumnNotEqualH\x00\x12\'\n\x0csp_column_or\x18  \x01(\x0b\x32\x0f.ast.SpColumnOrH\x00\x12+\n\x0esp_column_over\x18! \x01(\x0b\x32\x11.ast.SpColumnOverH\x00\x12+\n\x0esp_column_plus\x18" \x01(\x0b\x32\x11.ast.SpColumnPlusH\x00\x12)\n\rsp_column_ref\x18# \x01(\x0b\x32\x10.ast.SpColumnRefH\x00\x12/\n\x10sp_column_regexp\x18$ \x01(\x0b\x32\x13.ast.SpColumnRegexpH\x00\x12:\n\x16sp_column_regexp_count\x18% \x01(\x0b\x32\x18.ast.SpColumnRegexpCountH\x00\x12\x32\n\x12sp_column_sql_expr\x18& \x01(\x0b\x32\x14.ast.SpColumnSqlExprH\x00\x12:\n\x16sp_column_within_group\x18\' \x01(\x0b\x32\x18.ast.SpColumnWithinGroupH\x00\x12\x33\n\x12sp_dataframe_apply\x18( \x01(\x0b\x32\x15.ast.SpDataframeApplyH\x00\x12/\n\x10sp_dataframe_col\x18) \x01(\x0b\x32\x13.ast.SpDataframeColH\x00\x42\t\n\x07variant"8\n\x0bSpColumnRef\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\n\n\x02id\x18\x02 \x01(\t"7\n\x08SpColumn\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0c\n\x04name\x18\x02 \x01(\t"=\n\x0fSpColumnSqlExpr\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0b\n\x03sql\x18\x02 \x01(\t"s\n\rSpColumnAlias\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03\x63ol\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x15\n\rvariant_is_as\x18\x04 \x01(\x08"_\n\x11SpColumnApply_Int\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03\x63ol\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x0b\n\x03idx\x18\x03 \x01(\x03"d\n\x14SpColumnApply_String\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03\x63ol\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\r\n\x05\x66ield\x18\x03 \x01(\t"a\n\x0bSpColumnAsc\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03\x63ol\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x13\n\x0bnulls_first\x18\x03 \x01(\x08"\xa0\x01\n\x0fSpColumnBetween\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03\x63ol\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12&\n\x0blower_bound\x18\x03 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12&\n\x0bupper_bound\x18\x04 \x01(\x0b\x32\x11.ast.SpColumnExpr"j\n\x0cSpColumnCast\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03\x63ol\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x1b\n\x02to\x18\x03 \x01(\x0b\x32\x0f.ast.SpDataType"f\n\x0fSpColumnCollate\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03\x63ol\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x14\n\x0c\x63ollate_spec\x18\x03 \x01(\t"b\n\x0cSpColumnDesc\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03\x63ol\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x13\n\x0bnulls_first\x18\x03 \x01(\x08"Q\n\x10SpColumnEqualNan\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03\x63ol\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr"r\n\x11SpColumnEqualNull\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03lhs\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x1e\n\x03rhs\x18\x03 \x01(\x0b\x32\x11.ast.SpColumnExpr"w\n\x14SpColumnIn_Dataframe\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03\x63ol\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12 \n\x02\x64\x66\x18\x03 \x01(\x0b\x32\x14.ast.SpDataframeExpr"j\n\x0eSpColumnIn_Seq\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03\x63ol\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x19\n\x06values\x18\x03 \x03(\x0b\x32\t.ast.Expr"R\n\x11SpColumnIsNotNull\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03\x63ol\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr"O\n\x0eSpColumnIsNull\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03\x63ol\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr"\\\n\x0cSpColumnName\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03\x63ol\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\r\n\x05\x61lias\x18\x03 \x01(\t"y\n\x0cSpColumnOver\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03\x63ol\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12*\n\x0bwindow_spec\x18\x03 \x01(\x0b\x32\x15.ast.SpWindowSpecExpr"k\n\x0eSpColumnRegexp\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03\x63ol\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x1a\n\x07pattern\x18\x03 \x01(\x0b\x32\t.ast.Expr"p\n\x13SpColumnRegexpCount\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03\x63ol\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x1a\n\x07pattern\x18\x03 \x01(\x0b\x32\t.ast.Expr"\x87\x01\n\x13SpColumnWithinGroup\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03\x63ol\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x1f\n\x04\x63ols\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr\x12\x10\n\x08variadic\x18\x04 \x01(\x08"l\n\x0bSpColumnAnd\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03lhs\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x1e\n\x03rhs\x18\x03 \x01(\x0b\x32\x11.ast.SpColumnExpr"o\n\x0eSpColumnBitAnd\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03lhs\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x1e\n\x03rhs\x18\x03 \x01(\x0b\x32\x11.ast.SpColumnExpr"n\n\rSpColumnBitOr\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03lhs\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x1e\n\x03rhs\x18\x03 \x01(\x0b\x32\x11.ast.SpColumnExpr"o\n\x0eSpColumnBitXor\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03lhs\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x1e\n\x03rhs\x18\x03 \x01(\x0b\x32\x11.ast.SpColumnExpr"o\n\x0eSpColumnDivide\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03lhs\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x1e\n\x03rhs\x18\x03 \x01(\x0b\x32\x11.ast.SpColumnExpr"p\n\x0fSpColumnEqualTo\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03lhs\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x1e\n\x03rhs\x18\x03 \x01(\x0b\x32\x11.ast.SpColumnExpr"l\n\x0bSpColumnGeq\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03lhs\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x1e\n\x03rhs\x18\x03 \x01(\x0b\x32\x11.ast.SpColumnExpr"k\n\nSpColumnGt\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03lhs\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x1e\n\x03rhs\x18\x03 \x01(\x0b\x32\x11.ast.SpColumnExpr"l\n\x0bSpColumnLeq\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03lhs\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x1e\n\x03rhs\x18\x03 \x01(\x0b\x32\x11.ast.SpColumnExpr"q\n\x0cSpColumnLike\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03\x63ol\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12"\n\x07pattern\x18\x03 \x01(\x0b\x32\x11.ast.SpColumnExpr"k\n\nSpColumnLt\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03lhs\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x1e\n\x03rhs\x18\x03 \x01(\x0b\x32\x11.ast.SpColumnExpr"n\n\rSpColumnMinus\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03lhs\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x1e\n\x03rhs\x18\x03 \x01(\x0b\x32\x11.ast.SpColumnExpr"l\n\x0bSpColumnMod\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03lhs\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x1e\n\x03rhs\x18\x03 \x01(\x0b\x32\x11.ast.SpColumnExpr"q\n\x10SpColumnMultiply\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03lhs\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x1e\n\x03rhs\x18\x03 \x01(\x0b\x32\x11.ast.SpColumnExpr"q\n\x10SpColumnNotEqual\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03lhs\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x1e\n\x03rhs\x18\x03 \x01(\x0b\x32\x11.ast.SpColumnExpr"k\n\nSpColumnOr\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03lhs\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x1e\n\x03rhs\x18\x03 \x01(\x0b\x32\x11.ast.SpColumnExpr"m\n\x0cSpColumnPlus\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x03lhs\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x1e\n\x03rhs\x18\x03 \x01(\x0b\x32\x11.ast.SpColumnExpr"\xa7\x1c\n\x0fSpDataframeExpr\x12H\n trait_sp_copyable_dataframe_expr\x18\x01 \x01(\x0b\x32\x1c.ast.SpCopyableDataframeExprH\x00\x12J\n!trait_sp_dataframe_reader_options\x18\x02 \x01(\x0b\x32\x1d.ast.SpDataframeReaderOptionsH\x00\x12H\n trait_sp_dataframe_reader_schema\x18\x03 \x01(\x0b\x32\x1c.ast.SpDataframeReaderSchemaH\x00\x12\'\n\x0csp_copy_into\x18\x04 \x01(\x0b\x32\x0f.ast.SpCopyIntoH\x00\x12\x35\n\x13sp_create_dataframe\x18\x05 \x01(\x0b\x32\x16.ast.SpCreateDataframeH\x00\x12/\n\x10sp_dataframe_agg\x18\x06 \x01(\x0b\x32\x13.ast.SpDataframeAggH\x00\x12<\n\x17sp_dataframe_cross_join\x18\x07 \x01(\x0b\x32\x19.ast.SpDataframeCrossJoinH\x00\x12\x31\n\x11sp_dataframe_cube\x18\x08 \x01(\x0b\x32\x14.ast.SpDataframeCubeH\x00\x12\x39\n\x15sp_dataframe_distinct\x18\t \x01(\x0b\x32\x18.ast.SpDataframeDistinctH\x00\x12\x46\n\x1csp_dataframe_drop_duplicates\x18\n \x01(\x0b\x32\x1e.ast.SpDataframeDropDuplicatesH\x00\x12\x42\n\x1asp_dataframe_drop__columns\x18\x0b \x01(\x0b\x32\x1c.ast.SpDataframeDrop_ColumnsH\x00\x12\x42\n\x1asp_dataframe_drop__strings\x18\x0c \x01(\x0b\x32\x1c.ast.SpDataframeDrop_StringsH\x00\x12\x35\n\x13sp_dataframe_except\x18\r \x01(\x0b\x32\x16.ast.SpDataframeExceptH\x00\x12\x35\n\x13sp_dataframe_filter\x18\x0e \x01(\x0b\x32\x16.ast.SpDataframeFilterH\x00\x12\x46\n\x1csp_dataframe_flatten__column\x18\x0f \x01(\x0b\x32\x1e.ast.SpDataframeFlatten_ColumnH\x00\x12z\n8sp_dataframe_flatten__column__string__bool__bool__string\x18\x10 \x01(\x0b\x32\x36.ast.SpDataframeFlatten_Column_String_Bool_Bool_StringH\x00\x12;\n\x16sp_dataframe_intersect\x18\x11 \x01(\x0b\x32\x19.ast.SpDataframeIntersectH\x00\x12\\\n(sp_dataframe_join__dataframe__join_exprs\x18\x12 \x01(\x0b\x32(.ast.SpDataframeJoin_Dataframe_JoinExprsH\x00\x12\x62\n+sp_dataframe_join__dataframe__using_columns\x18\x13 \x01(\x0b\x32+.ast.SpDataframeJoin_Dataframe_UsingColumnsH\x00\x12Z\n\'sp_dataframe_join__table_function__list\x18\x14 \x01(\x0b\x32\'.ast.SpDataframeJoin_TableFunction_ListH\x00\x12X\n&sp_dataframe_join__table_function__map\x18\x15 \x01(\x0b\x32&.ast.SpDataframeJoin_TableFunction_MapH\x00\x12\x33\n\x12sp_dataframe_limit\x18\x16 \x01(\x0b\x32\x15.ast.SpDataframeLimitH\x00\x12\x36\n\x14sp_dataframe_na_drop\x18\x17 \x01(\x0b\x32\x16.ast.SpDataframeNaDropH\x00\x12\x36\n\x14sp_dataframe_na_fill\x18\x18 \x01(\x0b\x32\x16.ast.SpDataframeNaFillH\x00\x12<\n\x17sp_dataframe_na_replace\x18\x19 \x01(\x0b\x32\x19.ast.SpDataframeNaReplaceH\x00\x12@\n\x19sp_dataframe_natural_join\x18\x1a \x01(\x0b\x32\x1b.ast.SpDataframeNaturalJoinH\x00\x12/\n\x10sp_dataframe_ref\x18\x1b \x01(\x0b\x32\x13.ast.SpDataframeRefH\x00\x12\x35\n\x13sp_dataframe_rename\x18\x1c \x01(\x0b\x32\x16.ast.SpDataframeRenameH\x00\x12\x44\n\x1bsp_dataframe_sample__double\x18\x1d \x01(\x0b\x32\x1d.ast.SpDataframeSample_DoubleH\x00\x12@\n\x19sp_dataframe_sample__long\x18\x1e \x01(\x0b\x32\x1b.ast.SpDataframeSample_LongH\x00\x12\x46\n\x1csp_dataframe_select__columns\x18\x1f \x01(\x0b\x32\x1e.ast.SpDataframeSelect_ColumnsH\x00\x12\x46\n\x1csp_dataframe_select__strings\x18  \x01(\x0b\x32\x1e.ast.SpDataframeSelect_StringsH\x00\x12\x31\n\x11sp_dataframe_show\x18! \x01(\x0b\x32\x14.ast.SpDataframeShowH\x00\x12\x31\n\x11sp_dataframe_sort\x18" \x01(\x0b\x32\x14.ast.SpDataframeSortH\x00\x12\x45\n\x1csp_dataframe_stats_cross_tab\x18# \x01(\x0b\x32\x1d.ast.SpDataframeStatsCrossTabH\x00\x12\x45\n\x1csp_dataframe_stats_sample_by\x18$ \x01(\x0b\x32\x1d.ast.SpDataframeStatsSampleByH\x00\x12\x32\n\x12sp_dataframe_to_df\x18% \x01(\x0b\x32\x14.ast.SpDataframeToDfH\x00\x12\x33\n\x12sp_dataframe_union\x18& \x01(\x0b\x32\x15.ast.SpDataframeUnionH\x00\x12:\n\x16sp_dataframe_union_all\x18\' \x01(\x0b\x32\x18.ast.SpDataframeUnionAllH\x00\x12H\n\x1esp_dataframe_union_all_by_name\x18( \x01(\x0b\x32\x1e.ast.SpDataframeUnionAllByNameH\x00\x12\x41\n\x1asp_dataframe_union_by_name\x18) \x01(\x0b\x32\x1b.ast.SpDataframeUnionByNameH\x00\x12\x33\n\x12sp_dataframe_where\x18* \x01(\x0b\x32\x15.ast.SpDataframeWhereH\x00\x12>\n\x18sp_dataframe_with_column\x18+ \x01(\x0b\x32\x1a.ast.SpDataframeWithColumnH\x00\x12@\n\x19sp_dataframe_with_columns\x18, \x01(\x0b\x32\x1b.ast.SpDataframeWithColumnsH\x00\x12\x33\n\x12sp_flatten__column\x18- \x01(\x0b\x32\x15.ast.SpFlatten_ColumnH\x00\x12g\n.sp_flatten__column__string__bool__bool__string\x18. \x01(\x0b\x32-.ast.SpFlatten_Column_String_Bool_Bool_StringH\x00\x12(\n\x0csp_generator\x18/ \x01(\x0b\x32\x10.ast.SpGeneratorH\x00\x12 \n\x08sp_range\x18\x30 \x01(\x0b\x32\x0c.ast.SpRangeH\x00\x12\'\n\x0csp_read_avro\x18\x31 \x01(\x0b\x32\x0f.ast.SpReadAvroH\x00\x12%\n\x0bsp_read_csv\x18\x32 \x01(\x0b\x32\x0e.ast.SpReadCsvH\x00\x12\'\n\x0csp_read_json\x18\x33 \x01(\x0b\x32\x0f.ast.SpReadJsonH\x00\x12%\n\x0bsp_read_orc\x18\x34 \x01(\x0b\x32\x0e.ast.SpReadOrcH\x00\x12-\n\x0fsp_read_parquet\x18\x35 \x01(\x0b\x32\x12.ast.SpReadParquetH\x00\x12)\n\rsp_read_table\x18\x36 \x01(\x0b\x32\x10.ast.SpReadTableH\x00\x12%\n\x0bsp_read_xml\x18\x37 \x01(\x0b\x32\x0e.ast.SpReadXmlH\x00\x12\x1c\n\x06sp_sql\x18\x38 \x01(\x0b\x32\n.ast.SpSqlH\x00\x12\x35\n\x13sp_stored_procedure\x18\x39 \x01(\x0b\x32\x16.ast.SpStoredProcedureH\x00\x12 \n\x08sp_table\x18: \x01(\x0b\x32\x0c.ast.SpTableH\x00\x12\x31\n\x11sp_table_function\x18; \x01(\x0b\x32\x14.ast.SpTableFunctionH\x00\x42\t\n\x07variant"G\n\x0eSpDataframeRef\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x02id\x18\x02 \x01(\x0b\x32\n.ast.VarId"H\n\x0fSpDataframeShow\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x02id\x18\x02 \x01(\x0b\x32\n.ast.VarId"\x81\x01\n\x11SpCreateDataframe\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x18\n\x04\x64\x61ta\x18\x02 \x03(\x0b\x32\n.ast.SpRow\x12!\n\x06schema\x18\x03 \x01(\x0b\x32\x11.ast.SpStructType\x12\x10\n\x08variadic\x18\x04 \x01(\x08"\xbd\x01\n(SpFlatten_Column_String_Bool_Bool_String\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x05input\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x0c\n\x04path\x18\x03 \x01(\t\x12\r\n\x05outer\x18\x04 \x01(\x08\x12\x11\n\trecursive\x18\x05 \x01(\x08\x12 \n\x04mode\x18\x06 \x01(\x0b\x32\x12.ast.SpFlattenMode"S\n\x10SpFlatten_Column\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x05input\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr"u\n\x0bSpGenerator\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x11\n\trow_count\x18\x02 \x01(\x03\x12"\n\x07\x63olumns\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr\x12\x10\n\x08variadic\x18\x04 \x01(\x08"R\n\x07SpRange\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\r\n\x05start\x18\x02 \x01(\x03\x12\x0b\n\x03\x65nd\x18\x03 \x01(\x03\x12\x0c\n\x04step\x18\x04 \x01(\x03"5\n\x05SpSql\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\r\n\x05query\x18\x02 \x01(\t"s\n\x11SpStoredProcedure\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0f\n\x07sp_name\x18\x02 \x01(\t\x12\x1c\n\x04\x61rgs\x18\x03 \x03(\x0b\x32\x0e.ast.SpVariant\x12\x10\n\x08variadic\x18\x04 \x01(\x08"Y\n\x07SpTable\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x10\n\x08\x64\x61tabase\x18\x02 \x01(\t\x12\x0e\n\x06schema\x18\x03 \x01(\t\x12\r\n\x05table\x18\x04 \x01(\t"|\n\x0fSpTableFunction\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\n\n\x02\x66n\x18\x02 \x01(\t\x12,\n\x04\x61rgs\x18\x03 \x03(\x0b\x32\x1e.ast.Tuple_String_SpColumnExpr\x12\x10\n\x08variadic\x18\x04 \x01(\x08"w\n\x0fSpDataframeToDf\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x11\n\tcol_names\x18\x03 \x01(\t\x12\x10\n\x08variadic\x18\x04 \x01(\x08"\x81\x01\n\x11SpDataframeNaDrop\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x15min_non_nulls_per_row\x18\x03 \x01(\x03\x12\x0c\n\x04\x63ols\x18\x04 \x03(\t"\x84\x01\n\x11SpDataframeNaFill\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12.\n\tvalue_map\x18\x03 \x03(\x0b\x32\x1b.ast.Tuple_String_SpVariant"\x9e\x01\n\x14SpDataframeNaReplace\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x10\n\x08\x63ol_name\x18\x03 \x01(\t\x12\x33\n\x0breplacement\x18\x04 \x03(\x0b\x32\x1e.ast.Tuple_SpVariant_SpVariant"\x85\x01\n\x0eSpDataframeAgg\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12 \n\x05\x65xprs\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr\x12\x10\n\x08variadic\x18\x04 \x01(\x08"e\n\x10SpDataframeApply\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x10\n\x08\x63ol_name\x18\x03 \x01(\t"c\n\x0eSpDataframeCol\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x10\n\x08\x63ol_name\x18\x03 \x01(\t"{\n\x14SpDataframeCrossJoin\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12!\n\x03lhs\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12!\n\x03rhs\x18\x03 \x01(\x0b\x32\x14.ast.SpDataframeExpr"\x85\x01\n\x0fSpDataframeCube\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1f\n\x04\x63ols\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr\x12\x10\n\x08variadic\x18\x04 \x01(\x08"V\n\x13SpDataframeDistinct\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr"\x8d\x01\n\x17SpDataframeDrop_Columns\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1f\n\x04\x63ols\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr\x12\x10\n\x08variadic\x18\x04 \x01(\x08"z\n\x17SpDataframeDrop_Strings\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x0c\n\x04\x63ols\x18\x03 \x03(\t\x12\x10\n\x08variadic\x18\x04 \x01(\x08"j\n\x19SpDataframeDropDuplicates\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x0c\n\x04\x63ols\x18\x03 \x03(\t"y\n\x11SpDataframeExcept\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12#\n\x05other\x18\x03 \x01(\x0b\x32\x14.ast.SpDataframeExpr"z\n\x11SpDataframeFilter\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12$\n\tcondition\x18\x03 \x01(\x0b\x32\x11.ast.SpColumnExpr"\xe8\x01\n1SpDataframeFlatten_Column_String_Bool_Bool_String\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12 \n\x05input\x18\x03 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x0c\n\x04path\x18\x04 \x01(\t\x12\r\n\x05outer\x18\x05 \x01(\x08\x12\x11\n\trecursive\x18\x06 \x01(\x08\x12 \n\x04mode\x18\x07 \x01(\x0b\x32\x12.ast.SpFlattenMode"~\n\x19SpDataframeFlatten_Column\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12 \n\x05input\x18\x03 \x01(\x0b\x32\x11.ast.SpColumnExpr"\x90\x01\n\x1aSpDataframeGroupBy_Columns\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1f\n\x04\x63ols\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr\x12\x10\n\x08variadic\x18\x04 \x01(\x08"}\n\x1aSpDataframeGroupBy_Strings\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x0c\n\x04\x63ols\x18\x03 \x03(\t\x12\x10\n\x08variadic\x18\x04 \x01(\x08"U\n\x12SpDataframeGroupBy\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr"|\n\x14SpDataframeIntersect\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12#\n\x05other\x18\x03 \x01(\x0b\x32\x14.ast.SpDataframeExpr"\x8e\x02\n!SpDataframeJoin_TableFunction_Map\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12"\n\x04\x66unc\x18\x03 \x01(\x0b\x32\x14.ast.SpTableFunction\x12,\n\x04\x61rgs\x18\x04 \x03(\x0b\x32\x1e.ast.Tuple_String_SpColumnExpr\x12,\n\x0cpartition_by\x18\x05 \x01(\x0b\x32\x16.ast.List_SpColumnExpr\x12(\n\x08order_by\x18\x06 \x01(\x0b\x32\x16.ast.List_SpColumnExpr"\x94\x02\n"SpDataframeJoin_TableFunction_List\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12"\n\x04\x66unc\x18\x03 \x01(\x0b\x32\x14.ast.SpTableFunction\x12\x1f\n\x04\x61rgs\x18\x04 \x03(\x0b\x32\x11.ast.SpColumnExpr\x12,\n\x0cpartition_by\x18\x05 \x01(\x0b\x32\x16.ast.List_SpColumnExpr\x12(\n\x08order_by\x18\x06 \x01(\x0b\x32\x16.ast.List_SpColumnExpr\x12\x10\n\x08variadic\x18\x07 \x01(\x08"\xd8\x01\n#SpDataframeJoin_Dataframe_JoinExprs\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12!\n\x03lhs\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12!\n\x03rhs\x18\x03 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12(\n\njoin_exprs\x18\x04 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12"\n\tjoin_type\x18\x05 \x01(\x0b\x32\x0f.ast.SpJoinType"\xec\x01\n&SpDataframeJoin_Dataframe_UsingColumns\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12!\n\x03lhs\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12!\n\x03rhs\x18\x03 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\'\n\rusing_columns\x18\x04 \x01(\x0b\x32\x10.ast.List_String\x12"\n\tjoin_type\x18\x05 \x01(\x0b\x32\x0f.ast.SpJoinType\x12\x10\n\x08variadic\x18\x06 \x01(\x08"^\n\x10SpDataframeLimit\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\t\n\x01n\x18\x03 \x01(\x03"\xa1\x01\n\x16SpDataframeNaturalJoin\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12!\n\x03lhs\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12!\n\x03rhs\x18\x03 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12"\n\tjoin_type\x18\x04 \x01(\x0b\x32\x0f.ast.SpJoinType"\xa3\x01\n\x17SpDataframePivot_Column\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\'\n\x0cpivot_column\x18\x03 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x1e\n\x06values\x18\x04 \x03(\x0b\x32\x0e.ast.SpVariant"\x90\x01\n\x17SpDataframePivot_String\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x14\n\x0cpivot_column\x18\x03 \x01(\t\x12\x1e\n\x06values\x18\x04 \x03(\x0b\x32\x0e.ast.SpVariant"\x86\x01\n\x11SpDataframeRename\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x10\n\x08new_name\x18\x03 \x01(\t\x12\x1e\n\x03\x63ol\x18\x04 \x01(\x0b\x32\x11.ast.SpColumnExpr"\x8f\x01\n\x19SpDataframeRollup_Columns\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1f\n\x04\x63ols\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr\x12\x10\n\x08variadic\x18\x04 \x01(\x08"|\n\x19SpDataframeRollup_Strings\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x0c\n\x04\x63ols\x18\x03 \x03(\t\x12\x10\n\x08variadic\x18\x04 \x01(\x08"y\n\x18SpDataframeSample_Double\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1c\n\x14probability_fraction\x18\x03 \x01(\x04"f\n\x16SpDataframeSample_Long\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x0b\n\x03num\x18\x03 \x01(\x03"\x8f\x01\n\x19SpDataframeSelect_Columns\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1f\n\x04\x63ols\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr\x12\x10\n\x08variadic\x18\x04 \x01(\x08"|\n\x19SpDataframeSelect_Strings\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x0c\n\x04\x63ols\x18\x03 \x03(\t\x12\x10\n\x08variadic\x18\x04 \x01(\x08"\x85\x01\n\x0fSpDataframeSort\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1f\n\x04\x63ols\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr\x12\x10\n\x08variadic\x18\x04 \x01(\x08"w\n\x10SpDataframeUnion\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12!\n\x03lhs\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12!\n\x03rhs\x18\x03 \x01(\x0b\x32\x14.ast.SpDataframeExpr"z\n\x13SpDataframeUnionAll\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12!\n\x03lhs\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12!\n\x03rhs\x18\x03 \x01(\x0b\x32\x14.ast.SpDataframeExpr"\x80\x01\n\x19SpDataframeUnionAllByName\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12!\n\x03lhs\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12!\n\x03rhs\x18\x03 \x01(\x0b\x32\x14.ast.SpDataframeExpr"}\n\x16SpDataframeUnionByName\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12!\n\x03lhs\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12!\n\x03rhs\x18\x03 \x01(\x0b\x32\x14.ast.SpDataframeExpr"y\n\x10SpDataframeWhere\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12$\n\tcondition\x18\x03 \x01(\x0b\x32\x11.ast.SpColumnExpr"\x8a\x01\n\x15SpDataframeWithColumn\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x10\n\x08\x63ol_name\x18\x03 \x01(\t\x12\x1e\n\x03\x63ol\x18\x04 \x01(\x0b\x32\x11.ast.SpColumnExpr"\x8f\x01\n\x16SpDataframeWithColumns\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x11\n\tcol_names\x18\x03 \x03(\t\x12!\n\x06values\x18\x04 \x03(\x0b\x32\x11.ast.SpColumnExpr"\x9f\x01\n\x1eSpDataframeGroupByGroupingSets\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12*\n\rgrouping_sets\x18\x03 \x03(\x0b\x32\x13.ast.SpGroupingSets\x12\x10\n\x08variadic\x18\x04 \x01(\x08"\x84\x04\n\x17SpCopyableDataframeExpr\x12J\n!trait_sp_dataframe_reader_options\x18\x01 \x01(\x0b\x32\x1d.ast.SpDataframeReaderOptionsH\x00\x12H\n trait_sp_dataframe_reader_schema\x18\x02 \x01(\x0b\x32\x1c.ast.SpDataframeReaderSchemaH\x00\x12\'\n\x0csp_copy_into\x18\x03 \x01(\x0b\x32\x0f.ast.SpCopyIntoH\x00\x12\'\n\x0csp_read_avro\x18\x04 \x01(\x0b\x32\x0f.ast.SpReadAvroH\x00\x12%\n\x0bsp_read_csv\x18\x05 \x01(\x0b\x32\x0e.ast.SpReadCsvH\x00\x12\'\n\x0csp_read_json\x18\x06 \x01(\x0b\x32\x0f.ast.SpReadJsonH\x00\x12%\n\x0bsp_read_orc\x18\x07 \x01(\x0b\x32\x0e.ast.SpReadOrcH\x00\x12-\n\x0fsp_read_parquet\x18\x08 \x01(\x0b\x32\x12.ast.SpReadParquetH\x00\x12)\n\rsp_read_table\x18\t \x01(\x0b\x32\x10.ast.SpReadTableH\x00\x12%\n\x0bsp_read_xml\x18\n \x01(\x0b\x32\x0e.ast.SpReadXmlH\x00\x42\t\n\x07variant"6\n\x18SpDataframeReaderOptions\x12\x0f\n\x05\x64ummy\x18\x01 \x01(\x08H\x00\x42\t\n\x07variant"5\n\x17SpDataframeReaderSchema\x12\x0f\n\x05\x64ummy\x18\x01 \x01(\x08H\x00\x42\t\n\x07variant"9\n\nSpReadAvro\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0c\n\x04path\x18\x02 \x01(\t"8\n\tSpReadCsv\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0c\n\x04path\x18\x02 \x01(\t"9\n\nSpReadJson\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0c\n\x04path\x18\x02 \x01(\t"8\n\tSpReadOrc\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0c\n\x04path\x18\x02 \x01(\t"<\n\rSpReadParquet\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0c\n\x04path\x18\x02 \x01(\t":\n\x0bSpReadTable\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0c\n\x04name\x18\x02 \x01(\t"8\n\tSpReadXml\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0c\n\x04path\x18\x02 \x01(\t"\xcb\x01\n\nSpCopyInto\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x12\n\ntable_name\x18\x02 \x01(\t\x12-\n\x13target_column_names\x18\x03 \x01(\x0b\x32\x10.ast.List_String\x12/\n\x0ftransformations\x18\x04 \x01(\x0b\x32\x16.ast.List_SpColumnExpr\x12*\n\x07options\x18\x05 \x01(\x0b\x32\x19.ast.Map_String_SpVariant"\xeb\x02\n\x11SpDataframeWriter\x12J\n!trait_sp_dataframe_writer_options\x18\x01 \x01(\x0b\x32\x1d.ast.SpDataframeWriterOptionsH\x00\x12M\n#trait_sp_dataframe_writer_save_mode\x18\x02 \x01(\x0b\x32\x1e.ast.SpDataframeWriterSaveModeH\x00\x12\'\n\x0csp_write_csv\x18\x03 \x01(\x0b\x32\x0f.ast.SpWriteCsvH\x00\x12)\n\rsp_write_json\x18\x04 \x01(\x0b\x32\x10.ast.SpWriteJsonH\x00\x12/\n\x10sp_write_parquet\x18\x05 \x01(\x0b\x32\x13.ast.SpWriteParquetH\x00\x12+\n\x0esp_write_table\x18\x06 \x01(\x0b\x32\x11.ast.SpWriteTableH\x00\x42\t\n\x07variant"7\n\x19SpDataframeWriterSaveMode\x12\x0f\n\x05\x64ummy\x18\x01 \x01(\x08H\x00\x42\t\n\x07variant"6\n\x18SpDataframeWriterOptions\x12\x0f\n\x05\x64ummy\x18\x01 \x01(\x08H\x00\x42\t\n\x07variant"[\n\nSpWriteCsv\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x0c\n\x04path\x18\x03 \x01(\t"\\\n\x0bSpWriteJson\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x0c\n\x04path\x18\x03 \x01(\t"_\n\x0eSpWriteParquet\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x0c\n\x04path\x18\x03 \x01(\t"\x95\x01\n\x0cSpWriteTable\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x35\n\x13\x64\x61tabase_and_schema\x18\x03 \x01(\x0b\x32\x18.ast.Tuple_String_String\x12\r\n\x05table\x18\x04 \x01(\t"B\n\x1eSpDataframeStatsApproxQuantile\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr"8\n\x14SpDataframeStatsCorr\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr"7\n\x13SpDataframeStatsCov\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr"w\n\x18SpDataframeStatsCrossTab\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x0c\n\x04\x63ol1\x18\x03 \x01(\t\x12\x0c\n\x04\x63ol2\x18\x04 \x01(\t"\xb5\x01\n\x18SpDataframeStatsSampleBy\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1e\n\x03\x63ol\x18\x03 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x38\n\tfractions\x18\x04 \x03(\x0b\x32%.ast.Tuple_SpVariant_SpVariant_Double"\xc9\x0c\n SpRelationalGroupedDataframeExpr\x12\x38\n\x15sp_dataframe_group_by\x18\x01 \x01(\x0b\x32\x17.ast.SpDataframeGroupByH\x00\x12R\n#sp_dataframe_group_by_grouping_sets\x18\x02 \x01(\x0b\x32#.ast.SpDataframeGroupByGroupingSetsH\x00\x12I\n\x1esp_dataframe_group_by__columns\x18\x03 \x01(\x0b\x32\x1f.ast.SpDataframeGroupBy_ColumnsH\x00\x12I\n\x1esp_dataframe_group_by__strings\x18\x04 \x01(\x0b\x32\x1f.ast.SpDataframeGroupBy_StringsH\x00\x12\x42\n\x1asp_dataframe_pivot__column\x18\x05 \x01(\x0b\x32\x1c.ast.SpDataframePivot_ColumnH\x00\x12\x42\n\x1asp_dataframe_pivot__string\x18\x06 \x01(\x0b\x32\x1c.ast.SpDataframePivot_StringH\x00\x12\x46\n\x1csp_dataframe_rollup__columns\x18\x07 \x01(\x0b\x32\x1e.ast.SpDataframeRollup_ColumnsH\x00\x12\x46\n\x1csp_dataframe_rollup__strings\x18\x08 \x01(\x0b\x32\x1e.ast.SpDataframeRollup_StringsH\x00\x12\x64\n,sp_relational_grouped_dataframe_agg__columns\x18\t \x01(\x0b\x32,.ast.SpRelationalGroupedDataframeAgg_ColumnsH\x00\x12\\\n(sp_relational_grouped_dataframe_agg__map\x18\n \x01(\x0b\x32(.ast.SpRelationalGroupedDataframeAgg_MapH\x00\x12^\n)sp_relational_grouped_dataframe_any_value\x18\x0b \x01(\x0b\x32).ast.SpRelationalGroupedDataframeAnyValueH\x00\x12S\n#sp_relational_grouped_dataframe_avg\x18\x0c \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeAvgH\x00\x12[\n\'sp_relational_grouped_dataframe_builtin\x18\r \x01(\x0b\x32(.ast.SpRelationalGroupedDataframeBuiltinH\x00\x12W\n%sp_relational_grouped_dataframe_count\x18\x0e \x01(\x0b\x32&.ast.SpRelationalGroupedDataframeCountH\x00\x12S\n#sp_relational_grouped_dataframe_max\x18\x0f \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeMaxH\x00\x12U\n$sp_relational_grouped_dataframe_mean\x18\x10 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeMeanH\x00\x12Y\n&sp_relational_grouped_dataframe_median\x18\x11 \x01(\x0b\x32\'.ast.SpRelationalGroupedDataframeMedianH\x00\x12S\n#sp_relational_grouped_dataframe_min\x18\x12 \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeMinH\x00\x12S\n#sp_relational_grouped_dataframe_sum\x18\x13 \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeSumH\x00\x42\t\n\x07variant"\xc1\x01\n#SpRelationalGroupedDataframeAgg_Map\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x31\n\x02\x64\x66\x18\x02 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExpr\x12 \n\x05\x65xprs\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr\x12\x14\n\x0c\x65xprs_is_map\x18\x04 \x01(\x08\x12\x10\n\x08variadic\x18\x05 \x01(\x08"\xaf\x01\n\'SpRelationalGroupedDataframeAgg_Columns\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x31\n\x02\x64\x66\x18\x02 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExpr\x12 \n\x05\x65xprs\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr\x12\x10\n\x08variadic\x18\x04 \x01(\x08"\x99\x01\n$SpRelationalGroupedDataframeAnyValue\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x31\n\x02\x64\x66\x18\x02 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExpr\x12\x1f\n\x04\x63ols\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr"\x94\x01\n\x1fSpRelationalGroupedDataframeAvg\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x31\n\x02\x64\x66\x18\x02 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExpr\x12\x1f\n\x04\x63ols\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr"\xaa\x01\n#SpRelationalGroupedDataframeBuiltin\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x31\n\x02\x64\x66\x18\x02 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExpr\x12\x10\n\x08\x61gg_name\x18\x03 \x01(\t\x12\x1f\n\x04\x63ols\x18\x04 \x03(\x0b\x32\x11.ast.SpColumnExpr"u\n!SpRelationalGroupedDataframeCount\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x31\n\x02\x64\x66\x18\x02 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExpr"\x94\x01\n\x1fSpRelationalGroupedDataframeMax\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x31\n\x02\x64\x66\x18\x02 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExpr\x12\x1f\n\x04\x63ols\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr"\x95\x01\n SpRelationalGroupedDataframeMean\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x31\n\x02\x64\x66\x18\x02 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExpr\x12\x1f\n\x04\x63ols\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr"\x97\x01\n"SpRelationalGroupedDataframeMedian\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x31\n\x02\x64\x66\x18\x02 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExpr\x12\x1f\n\x04\x63ols\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr"\x94\x01\n\x1fSpRelationalGroupedDataframeMin\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x31\n\x02\x64\x66\x18\x02 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExpr\x12\x1f\n\x04\x63ols\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr"\x94\x01\n\x1fSpRelationalGroupedDataframeSum\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x31\n\x02\x64\x66\x18\x02 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExpr\x12\x1f\n\x04\x63ols\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr":\n\x0fSpDataframeType\x12\x0f\n\x07\x63olumns\x18\x01 \x03(\t\x12\x16\n\x03tys\x18\x02 \x03(\x0b\x32\t.ast.Type"F\n\x16SpGroupedDataframeType\x12\x15\n\router_columns\x18\x01 \x03(\t\x12\x15\n\rinner_columns\x18\x02 \x03(\t"\x0e\n\x0cSpWindowType"\'\n\rSpColExprType\x12\x16\n\x03typ\x18\x01 \x01(\x0b\x32\t.ast.Type"\xeeN\n\x0eHasSrcPosition\x12"\n\x0ctrait_bin_op\x18\x01 \x01(\x0b\x32\n.ast.BinOpH\x00\x12\x34\n\x16trait_built_in_fn_expr\x18\x02 \x01(\x0b\x32\x12.ast.BuiltInFnExprH\x00\x12!\n\x0btrait_const\x18\x03 \x01(\x0b\x32\n.ast.ConstH\x00\x12\x1f\n\ntrait_expr\x18\x04 \x01(\x0b\x32\t.ast.ExprH\x00\x12\x31\n\x14trait_sp_column_expr\x18\x05 \x01(\x0b\x32\x11.ast.SpColumnExprH\x00\x12H\n trait_sp_copyable_dataframe_expr\x18\x06 \x01(\x0b\x32\x1c.ast.SpCopyableDataframeExprH\x00\x12\x37\n\x17trait_sp_dataframe_expr\x18\x07 \x01(\x0b\x32\x14.ast.SpDataframeExprH\x00\x12J\n!trait_sp_dataframe_reader_options\x18\x08 \x01(\x0b\x32\x1d.ast.SpDataframeReaderOptionsH\x00\x12H\n trait_sp_dataframe_reader_schema\x18\t \x01(\x0b\x32\x1c.ast.SpDataframeReaderSchemaH\x00\x12;\n\x19trait_sp_dataframe_writer\x18\n \x01(\x0b\x32\x16.ast.SpDataframeWriterH\x00\x12J\n!trait_sp_dataframe_writer_options\x18\x0b \x01(\x0b\x32\x1d.ast.SpDataframeWriterOptionsH\x00\x12M\n#trait_sp_dataframe_writer_save_mode\x18\x0c \x01(\x0b\x32\x1e.ast.SpDataframeWriterSaveModeH\x00\x12[\n*trait_sp_relational_grouped_dataframe_expr\x18\r \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExprH\x00\x12(\n\x0ftrait_string_fn\x18\x0e \x01(\x0b\x32\r.ast.StringFnH\x00\x12&\n\x0etrait_unary_op\x18\x0f \x01(\x0b\x32\x0c.ast.UnaryOpH\x00\x12\x17\n\x03\x61\x64\x64\x18\x10 \x01(\x0b\x32\x08.ast.AddH\x00\x12\x17\n\x03\x61nd\x18\x11 \x01(\x0b\x32\x08.ast.AndH\x00\x12$\n\napply_expr\x18\x12 \x01(\x0b\x32\x0e.ast.ApplyExprH\x00\x12-\n\x0f\x62ig_decimal_val\x18\x13 \x01(\x0b\x32\x12.ast.BigDecimalValH\x00\x12%\n\x0b\x62ig_int_val\x18\x14 \x01(\x0b\x32\x0e.ast.BigIntValH\x00\x12$\n\nbinary_val\x18\x15 \x01(\x0b\x32\x0e.ast.BinaryValH\x00\x12 \n\x08\x62ool_val\x18\x16 \x01(\x0b\x32\x0c.ast.BoolValH\x00\x12"\n\tcast_expr\x18\x17 \x01(\x0b\x32\r.ast.CastExprH\x00\x12 \n\x08\x64\x61te_val\x18\x18 \x01(\x0b\x32\x0c.ast.DateValH\x00\x12\x17\n\x03\x64iv\x18\x19 \x01(\x0b\x32\x08.ast.DivH\x00\x12\x15\n\x02\x65q\x18\x1a \x01(\x0b\x32\x07.ast.EqH\x00\x12&\n\x0b\x66loat64_val\x18\x1b \x01(\x0b\x32\x0f.ast.Float64ValH\x00\x12\x1c\n\x06\x66n_val\x18\x1c \x01(\x0b\x32\n.ast.FnValH\x00\x12\x17\n\x03geq\x18\x1d \x01(\x0b\x32\x08.ast.GeqH\x00\x12\x15\n\x02gt\x18\x1e \x01(\x0b\x32\x07.ast.GtH\x00\x12\x1e\n\x07if_expr\x18\x1f \x01(\x0b\x32\x0b.ast.IfExprH\x00\x12"\n\tint32_val\x18  \x01(\x0b\x32\r.ast.Int32ValH\x00\x12"\n\tint64_val\x18! \x01(\x0b\x32\r.ast.Int64ValH\x00\x12\x17\n\x03leq\x18" \x01(\x0b\x32\x08.ast.LeqH\x00\x12 \n\x08list_val\x18# \x01(\x0b\x32\x0c.ast.ListValH\x00\x12\x15\n\x02lt\x18$ \x01(\x0b\x32\x07.ast.LtH\x00\x12\x17\n\x03mul\x18% \x01(\x0b\x32\x08.ast.MulH\x00\x12\x17\n\x03neq\x18& \x01(\x0b\x32\x08.ast.NeqH\x00\x12 \n\x08none_val\x18\' \x01(\x0b\x32\x0c.ast.NoneValH\x00\x12\x17\n\x03not\x18( \x01(\x0b\x32\x08.ast.NotH\x00\x12 \n\x08null_val\x18) \x01(\x0b\x32\x0c.ast.NullValH\x00\x12\x15\n\x02or\x18* \x01(\x0b\x32\x07.ast.OrH\x00\x12(\n\x0cpd_dataframe\x18+ \x01(\x0b\x32\x10.ast.PdDataframeH\x00\x12\x38\n\x15pd_dataframe_get_item\x18, \x01(\x0b\x32\x17.ast.PdDataframeGetItemH\x00\x12\x39\n\x16pd_dataframe_i_loc_get\x18- \x01(\x0b\x32\x17.ast.PdDataframeILocGetH\x00\x12\x39\n\x16pd_dataframe_i_loc_set\x18. \x01(\x0b\x32\x17.ast.PdDataframeILocSetH\x00\x12\x36\n\x14pd_dataframe_loc_get\x18/ \x01(\x0b\x32\x16.ast.PdDataframeLocGetH\x00\x12\x36\n\x14pd_dataframe_loc_set\x18\x30 \x01(\x0b\x32\x16.ast.PdDataframeLocSetH\x00\x12\x38\n\x15pd_dataframe_set_item\x18\x31 \x01(\x0b\x32\x17.ast.PdDataframeSetItemH\x00\x12#\n\npd_drop_na\x18\x32 \x01(\x0b\x32\r.ast.PdDropNaH\x00\x12\x1e\n\x07pd_repr\x18\x33 \x01(\x0b\x32\x0b.ast.PdReprH\x00\x12"\n\tpd_series\x18\x34 \x01(\x0b\x32\r.ast.PdSeriesH\x00\x12\x1a\n\x05py_fn\x18\x35 \x01(\x0b\x32\t.ast.PyFnH\x00\x12"\n\trange_val\x18\x36 \x01(\x0b\x32\r.ast.RangeValH\x00\x12\x17\n\x03ref\x18\x37 \x01(\x0b\x32\x08.ast.RefH\x00\x12%\n\x0bseq_map_val\x18\x38 \x01(\x0b\x32\x0e.ast.SeqMapValH\x00\x12.\n\x0fsnowflake_sproc\x18\x39 \x01(\x0b\x32\x13.ast.SnowflakeSprocH\x00\x12*\n\rsnowflake_udf\x18: \x01(\x0b\x32\x11.ast.SnowflakeUdfH\x00\x12 \n\x08some_val\x18; \x01(\x0b\x32\x0c.ast.SomeValH\x00\x12"\n\tsp_column\x18< \x01(\x0b\x32\r.ast.SpColumnH\x00\x12-\n\x0fsp_column_alias\x18= \x01(\x0b\x32\x12.ast.SpColumnAliasH\x00\x12)\n\rsp_column_and\x18> \x01(\x0b\x32\x10.ast.SpColumnAndH\x00\x12\x36\n\x14sp_column_apply__int\x18? \x01(\x0b\x32\x16.ast.SpColumnApply_IntH\x00\x12<\n\x17sp_column_apply__string\x18@ \x01(\x0b\x32\x19.ast.SpColumnApply_StringH\x00\x12)\n\rsp_column_asc\x18\x41 \x01(\x0b\x32\x10.ast.SpColumnAscH\x00\x12\x31\n\x11sp_column_between\x18\x42 \x01(\x0b\x32\x14.ast.SpColumnBetweenH\x00\x12\x30\n\x11sp_column_bit_and\x18\x43 \x01(\x0b\x32\x13.ast.SpColumnBitAndH\x00\x12.\n\x10sp_column_bit_or\x18\x44 \x01(\x0b\x32\x12.ast.SpColumnBitOrH\x00\x12\x30\n\x11sp_column_bit_xor\x18\x45 \x01(\x0b\x32\x13.ast.SpColumnBitXorH\x00\x12+\n\x0esp_column_cast\x18\x46 \x01(\x0b\x32\x11.ast.SpColumnCastH\x00\x12\x31\n\x11sp_column_collate\x18G \x01(\x0b\x32\x14.ast.SpColumnCollateH\x00\x12+\n\x0esp_column_desc\x18H \x01(\x0b\x32\x11.ast.SpColumnDescH\x00\x12/\n\x10sp_column_divide\x18I \x01(\x0b\x32\x13.ast.SpColumnDivideH\x00\x12\x34\n\x13sp_column_equal_nan\x18J \x01(\x0b\x32\x15.ast.SpColumnEqualNanH\x00\x12\x36\n\x14sp_column_equal_null\x18K \x01(\x0b\x32\x16.ast.SpColumnEqualNullH\x00\x12\x32\n\x12sp_column_equal_to\x18L \x01(\x0b\x32\x14.ast.SpColumnEqualToH\x00\x12)\n\rsp_column_geq\x18M \x01(\x0b\x32\x10.ast.SpColumnGeqH\x00\x12\'\n\x0csp_column_gt\x18N \x01(\x0b\x32\x0f.ast.SpColumnGtH\x00\x12<\n\x17sp_column_in__dataframe\x18O \x01(\x0b\x32\x19.ast.SpColumnIn_DataframeH\x00\x12\x30\n\x11sp_column_in__seq\x18P \x01(\x0b\x32\x13.ast.SpColumnIn_SeqH\x00\x12\x37\n\x15sp_column_is_not_null\x18Q \x01(\x0b\x32\x16.ast.SpColumnIsNotNullH\x00\x12\x30\n\x11sp_column_is_null\x18R \x01(\x0b\x32\x13.ast.SpColumnIsNullH\x00\x12)\n\rsp_column_leq\x18S \x01(\x0b\x32\x10.ast.SpColumnLeqH\x00\x12+\n\x0esp_column_like\x18T \x01(\x0b\x32\x11.ast.SpColumnLikeH\x00\x12\'\n\x0csp_column_lt\x18U \x01(\x0b\x32\x0f.ast.SpColumnLtH\x00\x12-\n\x0fsp_column_minus\x18V \x01(\x0b\x32\x12.ast.SpColumnMinusH\x00\x12)\n\rsp_column_mod\x18W \x01(\x0b\x32\x10.ast.SpColumnModH\x00\x12\x33\n\x12sp_column_multiply\x18X \x01(\x0b\x32\x15.ast.SpColumnMultiplyH\x00\x12+\n\x0esp_column_name\x18Y \x01(\x0b\x32\x11.ast.SpColumnNameH\x00\x12\x34\n\x13sp_column_not_equal\x18Z \x01(\x0b\x32\x15.ast.SpColumnNotEqualH\x00\x12\'\n\x0csp_column_or\x18[ \x01(\x0b\x32\x0f.ast.SpColumnOrH\x00\x12+\n\x0esp_column_over\x18\\ \x01(\x0b\x32\x11.ast.SpColumnOverH\x00\x12+\n\x0esp_column_plus\x18] \x01(\x0b\x32\x11.ast.SpColumnPlusH\x00\x12)\n\rsp_column_ref\x18^ \x01(\x0b\x32\x10.ast.SpColumnRefH\x00\x12/\n\x10sp_column_regexp\x18_ \x01(\x0b\x32\x13.ast.SpColumnRegexpH\x00\x12:\n\x16sp_column_regexp_count\x18` \x01(\x0b\x32\x18.ast.SpColumnRegexpCountH\x00\x12\x32\n\x12sp_column_sql_expr\x18\x61 \x01(\x0b\x32\x14.ast.SpColumnSqlExprH\x00\x12:\n\x16sp_column_within_group\x18\x62 \x01(\x0b\x32\x18.ast.SpColumnWithinGroupH\x00\x12\'\n\x0csp_copy_into\x18\x63 \x01(\x0b\x32\x0f.ast.SpCopyIntoH\x00\x12\x35\n\x13sp_create_dataframe\x18\x64 \x01(\x0b\x32\x16.ast.SpCreateDataframeH\x00\x12/\n\x10sp_dataframe_agg\x18\x65 \x01(\x0b\x32\x13.ast.SpDataframeAggH\x00\x12\x33\n\x12sp_dataframe_apply\x18\x66 \x01(\x0b\x32\x15.ast.SpDataframeApplyH\x00\x12/\n\x10sp_dataframe_col\x18g \x01(\x0b\x32\x13.ast.SpDataframeColH\x00\x12<\n\x17sp_dataframe_cross_join\x18h \x01(\x0b\x32\x19.ast.SpDataframeCrossJoinH\x00\x12\x31\n\x11sp_dataframe_cube\x18i \x01(\x0b\x32\x14.ast.SpDataframeCubeH\x00\x12\x39\n\x15sp_dataframe_distinct\x18j \x01(\x0b\x32\x18.ast.SpDataframeDistinctH\x00\x12\x46\n\x1csp_dataframe_drop_duplicates\x18k \x01(\x0b\x32\x1e.ast.SpDataframeDropDuplicatesH\x00\x12\x42\n\x1asp_dataframe_drop__columns\x18l \x01(\x0b\x32\x1c.ast.SpDataframeDrop_ColumnsH\x00\x12\x42\n\x1asp_dataframe_drop__strings\x18m \x01(\x0b\x32\x1c.ast.SpDataframeDrop_StringsH\x00\x12\x35\n\x13sp_dataframe_except\x18n \x01(\x0b\x32\x16.ast.SpDataframeExceptH\x00\x12\x35\n\x13sp_dataframe_filter\x18o \x01(\x0b\x32\x16.ast.SpDataframeFilterH\x00\x12\x46\n\x1csp_dataframe_flatten__column\x18p \x01(\x0b\x32\x1e.ast.SpDataframeFlatten_ColumnH\x00\x12z\n8sp_dataframe_flatten__column__string__bool__bool__string\x18q \x01(\x0b\x32\x36.ast.SpDataframeFlatten_Column_String_Bool_Bool_StringH\x00\x12\x38\n\x15sp_dataframe_group_by\x18r \x01(\x0b\x32\x17.ast.SpDataframeGroupByH\x00\x12R\n#sp_dataframe_group_by_grouping_sets\x18s \x01(\x0b\x32#.ast.SpDataframeGroupByGroupingSetsH\x00\x12I\n\x1esp_dataframe_group_by__columns\x18t \x01(\x0b\x32\x1f.ast.SpDataframeGroupBy_ColumnsH\x00\x12I\n\x1esp_dataframe_group_by__strings\x18u \x01(\x0b\x32\x1f.ast.SpDataframeGroupBy_StringsH\x00\x12;\n\x16sp_dataframe_intersect\x18v \x01(\x0b\x32\x19.ast.SpDataframeIntersectH\x00\x12\\\n(sp_dataframe_join__dataframe__join_exprs\x18w \x01(\x0b\x32(.ast.SpDataframeJoin_Dataframe_JoinExprsH\x00\x12\x62\n+sp_dataframe_join__dataframe__using_columns\x18x \x01(\x0b\x32+.ast.SpDataframeJoin_Dataframe_UsingColumnsH\x00\x12Z\n\'sp_dataframe_join__table_function__list\x18y \x01(\x0b\x32\'.ast.SpDataframeJoin_TableFunction_ListH\x00\x12X\n&sp_dataframe_join__table_function__map\x18z \x01(\x0b\x32&.ast.SpDataframeJoin_TableFunction_MapH\x00\x12\x33\n\x12sp_dataframe_limit\x18{ \x01(\x0b\x32\x15.ast.SpDataframeLimitH\x00\x12\x36\n\x14sp_dataframe_na_drop\x18| \x01(\x0b\x32\x16.ast.SpDataframeNaDropH\x00\x12\x36\n\x14sp_dataframe_na_fill\x18} \x01(\x0b\x32\x16.ast.SpDataframeNaFillH\x00\x12<\n\x17sp_dataframe_na_replace\x18~ \x01(\x0b\x32\x19.ast.SpDataframeNaReplaceH\x00\x12@\n\x19sp_dataframe_natural_join\x18\x7f \x01(\x0b\x32\x1b.ast.SpDataframeNaturalJoinH\x00\x12\x43\n\x1asp_dataframe_pivot__column\x18\x80\x01 \x01(\x0b\x32\x1c.ast.SpDataframePivot_ColumnH\x00\x12\x43\n\x1asp_dataframe_pivot__string\x18\x81\x01 \x01(\x0b\x32\x1c.ast.SpDataframePivot_StringH\x00\x12\x30\n\x10sp_dataframe_ref\x18\x82\x01 \x01(\x0b\x32\x13.ast.SpDataframeRefH\x00\x12\x36\n\x13sp_dataframe_rename\x18\x83\x01 \x01(\x0b\x32\x16.ast.SpDataframeRenameH\x00\x12G\n\x1csp_dataframe_rollup__columns\x18\x84\x01 \x01(\x0b\x32\x1e.ast.SpDataframeRollup_ColumnsH\x00\x12G\n\x1csp_dataframe_rollup__strings\x18\x85\x01 \x01(\x0b\x32\x1e.ast.SpDataframeRollup_StringsH\x00\x12\x45\n\x1bsp_dataframe_sample__double\x18\x86\x01 \x01(\x0b\x32\x1d.ast.SpDataframeSample_DoubleH\x00\x12\x41\n\x19sp_dataframe_sample__long\x18\x87\x01 \x01(\x0b\x32\x1b.ast.SpDataframeSample_LongH\x00\x12G\n\x1csp_dataframe_select__columns\x18\x88\x01 \x01(\x0b\x32\x1e.ast.SpDataframeSelect_ColumnsH\x00\x12G\n\x1csp_dataframe_select__strings\x18\x89\x01 \x01(\x0b\x32\x1e.ast.SpDataframeSelect_StringsH\x00\x12\x32\n\x11sp_dataframe_show\x18\x8a\x01 \x01(\x0b\x32\x14.ast.SpDataframeShowH\x00\x12\x32\n\x11sp_dataframe_sort\x18\x8b\x01 \x01(\x0b\x32\x14.ast.SpDataframeSortH\x00\x12\x46\n\x1csp_dataframe_stats_cross_tab\x18\x8c\x01 \x01(\x0b\x32\x1d.ast.SpDataframeStatsCrossTabH\x00\x12\x46\n\x1csp_dataframe_stats_sample_by\x18\x8d\x01 \x01(\x0b\x32\x1d.ast.SpDataframeStatsSampleByH\x00\x12\x33\n\x12sp_dataframe_to_df\x18\x8e\x01 \x01(\x0b\x32\x14.ast.SpDataframeToDfH\x00\x12\x34\n\x12sp_dataframe_union\x18\x8f\x01 \x01(\x0b\x32\x15.ast.SpDataframeUnionH\x00\x12;\n\x16sp_dataframe_union_all\x18\x90\x01 \x01(\x0b\x32\x18.ast.SpDataframeUnionAllH\x00\x12I\n\x1esp_dataframe_union_all_by_name\x18\x91\x01 \x01(\x0b\x32\x1e.ast.SpDataframeUnionAllByNameH\x00\x12\x42\n\x1asp_dataframe_union_by_name\x18\x92\x01 \x01(\x0b\x32\x1b.ast.SpDataframeUnionByNameH\x00\x12\x34\n\x12sp_dataframe_where\x18\x93\x01 \x01(\x0b\x32\x15.ast.SpDataframeWhereH\x00\x12?\n\x18sp_dataframe_with_column\x18\x94\x01 \x01(\x0b\x32\x1a.ast.SpDataframeWithColumnH\x00\x12\x41\n\x19sp_dataframe_with_columns\x18\x95\x01 \x01(\x0b\x32\x1b.ast.SpDataframeWithColumnsH\x00\x12\x34\n\x12sp_flatten__column\x18\x96\x01 \x01(\x0b\x32\x15.ast.SpFlatten_ColumnH\x00\x12h\n.sp_flatten__column__string__bool__bool__string\x18\x97\x01 \x01(\x0b\x32-.ast.SpFlatten_Column_String_Bool_Bool_StringH\x00\x12)\n\x0csp_generator\x18\x98\x01 \x01(\x0b\x32\x10.ast.SpGeneratorH\x00\x12!\n\x08sp_range\x18\x99\x01 \x01(\x0b\x32\x0c.ast.SpRangeH\x00\x12(\n\x0csp_read_avro\x18\x9a\x01 \x01(\x0b\x32\x0f.ast.SpReadAvroH\x00\x12&\n\x0bsp_read_csv\x18\x9b\x01 \x01(\x0b\x32\x0e.ast.SpReadCsvH\x00\x12(\n\x0csp_read_json\x18\x9c\x01 \x01(\x0b\x32\x0f.ast.SpReadJsonH\x00\x12&\n\x0bsp_read_orc\x18\x9d\x01 \x01(\x0b\x32\x0e.ast.SpReadOrcH\x00\x12.\n\x0fsp_read_parquet\x18\x9e\x01 \x01(\x0b\x32\x12.ast.SpReadParquetH\x00\x12*\n\rsp_read_table\x18\x9f\x01 \x01(\x0b\x32\x10.ast.SpReadTableH\x00\x12&\n\x0bsp_read_xml\x18\xa0\x01 \x01(\x0b\x32\x0e.ast.SpReadXmlH\x00\x12\x65\n,sp_relational_grouped_dataframe_agg__columns\x18\xa1\x01 \x01(\x0b\x32,.ast.SpRelationalGroupedDataframeAgg_ColumnsH\x00\x12]\n(sp_relational_grouped_dataframe_agg__map\x18\xa2\x01 \x01(\x0b\x32(.ast.SpRelationalGroupedDataframeAgg_MapH\x00\x12_\n)sp_relational_grouped_dataframe_any_value\x18\xa3\x01 \x01(\x0b\x32).ast.SpRelationalGroupedDataframeAnyValueH\x00\x12T\n#sp_relational_grouped_dataframe_avg\x18\xa4\x01 \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeAvgH\x00\x12\\\n\'sp_relational_grouped_dataframe_builtin\x18\xa5\x01 \x01(\x0b\x32(.ast.SpRelationalGroupedDataframeBuiltinH\x00\x12X\n%sp_relational_grouped_dataframe_count\x18\xa6\x01 \x01(\x0b\x32&.ast.SpRelationalGroupedDataframeCountH\x00\x12T\n#sp_relational_grouped_dataframe_max\x18\xa7\x01 \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeMaxH\x00\x12V\n$sp_relational_grouped_dataframe_mean\x18\xa8\x01 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeMeanH\x00\x12Z\n&sp_relational_grouped_dataframe_median\x18\xa9\x01 \x01(\x0b\x32\'.ast.SpRelationalGroupedDataframeMedianH\x00\x12T\n#sp_relational_grouped_dataframe_min\x18\xaa\x01 \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeMinH\x00\x12T\n#sp_relational_grouped_dataframe_sum\x18\xab\x01 \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeSumH\x00\x12\x1d\n\x06sp_sql\x18\xac\x01 \x01(\x0b\x32\n.ast.SpSqlH\x00\x12\x36\n\x13sp_stored_procedure\x18\xad\x01 \x01(\x0b\x32\x16.ast.SpStoredProcedureH\x00\x12!\n\x08sp_table\x18\xae\x01 \x01(\x0b\x32\x0c.ast.SpTableH\x00\x12\x32\n\x11sp_table_function\x18\xaf\x01 \x01(\x0b\x32\x14.ast.SpTableFunctionH\x00\x12(\n\x0csp_write_csv\x18\xb0\x01 \x01(\x0b\x32\x0f.ast.SpWriteCsvH\x00\x12*\n\rsp_write_json\x18\xb1\x01 \x01(\x0b\x32\x10.ast.SpWriteJsonH\x00\x12\x30\n\x10sp_write_parquet\x18\xb2\x01 \x01(\x0b\x32\x13.ast.SpWriteParquetH\x00\x12,\n\x0esp_write_table\x18\xb3\x01 \x01(\x0b\x32\x11.ast.SpWriteTableH\x00\x12+\n\rstring_concat\x18\xb4\x01 \x01(\x0b\x32\x11.ast.StringConcatH\x00\x12\x30\n\x10string_ends_with\x18\xb5\x01 \x01(\x0b\x32\x13.ast.StringEndsWithH\x00\x12%\n\nstring_len\x18\xb6\x01 \x01(\x0b\x32\x0e.ast.StringLenH\x00\x12\x34\n\x12string_starts_with\x18\xb7\x01 \x01(\x0b\x32\x15.ast.StringStartsWithH\x00\x12.\n\x0fstring_to_lower\x18\xb8\x01 \x01(\x0b\x32\x12.ast.StringToLowerH\x00\x12.\n\x0fstring_to_upper\x18\xb9\x01 \x01(\x0b\x32\x12.ast.StringToUpperH\x00\x12%\n\nstring_val\x18\xba\x01 \x01(\x0b\x32\x0e.ast.StringValH\x00\x12\x18\n\x03sub\x18\xbb\x01 \x01(\x0b\x32\x08.ast.SubH\x00\x12+\n\rtimestamp_val\x18\xbc\x01 \x01(\x0b\x32\x11.ast.TimestampValH\x00\x12#\n\ttuple_val\x18\xbd\x01 \x01(\x0b\x32\r.ast.TupleValH\x00\x42\t\n\x07variant"K\n\x04Stmt\x12\x1d\n\x06\x61ssign\x18\x01 \x01(\x0b\x32\x0b.ast.AssignH\x00\x12\x19\n\x04\x65val\x18\x02 \x01(\x0b\x32\t.ast.EvalH\x00\x42\t\n\x07variant"Z\n\x06\x41ssign\x12\x0b\n\x03uid\x18\x01 \x01(\x03\x12\x1a\n\x06var_id\x18\x02 \x01(\x0b\x32\n.ast.VarId\x12\x17\n\x04\x65xpr\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x0e\n\x06symbol\x18\x04 \x01(\t"/\n\x04\x45val\x12\x0b\n\x03uid\x18\x01 \x01(\x03\x12\x1a\n\x06var_id\x18\x02 \x01(\x0b\x32\n.ast.VarId"\xc0\x07\n\x04Type\x12.\n\x12trait_numeric_type\x18\x01 \x01(\x0b\x32\x10.ast.NumericTypeH\x00\x12,\n\x11trait_scalar_type\x18\x02 \x01(\x0b\x32\x0f.ast.ScalarTypeH\x00\x12 \n\x08\x61ny_type\x18\x03 \x01(\x0b\x32\x0c.ast.AnyTypeH\x00\x12"\n\tbool_type\x18\x04 \x01(\x0b\x32\r.ast.BoolTypeH\x00\x12(\n\x0c\x66loat64_type\x18\x05 \x01(\x0b\x32\x10.ast.Float64TypeH\x00\x12\x1e\n\x07\x66n_type\x18\x06 \x01(\x0b\x32\x0b.ast.FnTypeH\x00\x12$\n\nint32_type\x18\x07 \x01(\x0b\x32\x0e.ast.Int32TypeH\x00\x12$\n\nint64_type\x18\x08 \x01(\x0b\x32\x0e.ast.Int64TypeH\x00\x12"\n\tlist_type\x18\t \x01(\x0b\x32\r.ast.ListTypeH\x00\x12 \n\x08map_type\x18\n \x01(\x0b\x32\x0c.ast.MapTypeH\x00\x12(\n\x0cnothing_type\x18\x0b \x01(\x0b\x32\x10.ast.NothingTypeH\x00\x12&\n\x0bnumber_type\x18\x0c \x01(\x0b\x32\x0f.ast.NumberTypeH\x00\x12&\n\x0boption_type\x18\r \x01(\x0b\x32\x0f.ast.OptionTypeH\x00\x12\'\n\x0cpd_repr_type\x18\x0e \x01(\x0b\x32\x0f.ast.PdReprTypeH\x00\x12.\n\x10sp_col_expr_type\x18\x0f \x01(\x0b\x32\x12.ast.SpColExprTypeH\x00\x12\x31\n\x11sp_dataframe_type\x18\x10 \x01(\x0b\x32\x14.ast.SpDataframeTypeH\x00\x12@\n\x19sp_grouped_dataframe_type\x18\x11 \x01(\x0b\x32\x1b.ast.SpGroupedDataframeTypeH\x00\x12+\n\x0esp_window_type\x18\x12 \x01(\x0b\x32\x11.ast.SpWindowTypeH\x00\x12&\n\x0bstring_type\x18\x13 \x01(\x0b\x32\x0f.ast.StringTypeH\x00\x12$\n\ntuple_type\x18\x14 \x01(\x0b\x32\x0e.ast.TupleTypeH\x00\x12\x1c\n\x06ty_var\x18\x15 \x01(\x0b\x32\n.ast.TyVarH\x00\x12"\n\tunit_type\x18\x16 \x01(\x0b\x32\r.ast.UnitTypeH\x00\x12(\n\x0cunknown_type\x18\x17 \x01(\x0b\x32\x10.ast.UnknownTypeH\x00\x42\t\n\x07variant"\r\n\x0bUnknownType"\t\n\x07\x41nyType"\xad\x02\n\nScalarType\x12.\n\x12trait_numeric_type\x18\x01 \x01(\x0b\x32\x10.ast.NumericTypeH\x00\x12"\n\tbool_type\x18\x02 \x01(\x0b\x32\r.ast.BoolTypeH\x00\x12(\n\x0c\x66loat64_type\x18\x03 \x01(\x0b\x32\x10.ast.Float64TypeH\x00\x12$\n\nint32_type\x18\x04 \x01(\x0b\x32\x0e.ast.Int32TypeH\x00\x12$\n\nint64_type\x18\x05 \x01(\x0b\x32\x0e.ast.Int64TypeH\x00\x12&\n\x0bnumber_type\x18\x06 \x01(\x0b\x32\x0f.ast.NumberTypeH\x00\x12"\n\tunit_type\x18\x07 \x01(\x0b\x32\r.ast.UnitTypeH\x00\x42\t\n\x07variant"\xb6\x01\n\x0bNumericType\x12(\n\x0c\x66loat64_type\x18\x01 \x01(\x0b\x32\x10.ast.Float64TypeH\x00\x12$\n\nint32_type\x18\x02 \x01(\x0b\x32\x0e.ast.Int32TypeH\x00\x12$\n\nint64_type\x18\x03 \x01(\x0b\x32\x0e.ast.Int64TypeH\x00\x12&\n\x0bnumber_type\x18\x04 \x01(\x0b\x32\x0f.ast.NumberTypeH\x00\x42\t\n\x07variant"\x0c\n\nNumberType"\r\n\x0bNothingType"\n\n\x08UnitType"\n\n\x08\x42oolType"\x0b\n\tInt32Type"\x0b\n\tInt64Type"\r\n\x0b\x46loat64Type"\x0c\n\nStringType"\x0c\n\nPdReprType";\n\x06\x46nType\x12\x19\n\x06params\x18\x01 \x03(\x0b\x32\t.ast.Type\x12\x16\n\x03ret\x18\x02 \x01(\x0b\x32\t.ast.Type"$\n\nOptionType\x12\x16\n\x03typ\x18\x01 \x01(\x0b\x32\t.ast.Type"#\n\tTupleType\x12\x16\n\x03tys\x18\x01 \x03(\x0b\x32\t.ast.Type""\n\x08ListType\x12\x16\n\x03typ\x18\x01 \x01(\x0b\x32\t.ast.Type"5\n\x07MapType\x12\x14\n\x01k\x18\x01 \x01(\x0b\x32\t.ast.Type\x12\x14\n\x01v\x18\x02 \x01(\x0b\x32\t.ast.Type"\x13\n\x05TyVar\x12\n\n\x02id\x18\x01 \x01(\tB\x1e\n\x1c\x63om.snowflake.snowpark.protob\x06proto3'
)

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, "Snowpark.proto.ast_pb2", globals())
if _descriptor._USE_C_DESCRIPTORS == False:

    DESCRIPTOR._options = None
    DESCRIPTOR._serialized_options = b"\n\034com.snowflake.snowpark.proto"
    _LIST_SPCOLUMNEXPR._serialized_start = 33
    _LIST_SPCOLUMNEXPR._serialized_end = 85
    _LIST_STRING._serialized_start = 87
    _LIST_STRING._serialized_end = 114
    _MAP_STRING_SPVARIANT._serialized_start = 116
    _MAP_STRING_SPVARIANT._serialized_end = 181
    _MAP_STRING_STRING._serialized_start = 183
    _MAP_STRING_STRING._serialized_end = 242
    _TUPLE_SPVARIANT_SPVARIANT._serialized_start = 244
    _TUPLE_SPVARIANT_SPVARIANT._serialized_end = 327
    _TUPLE_SPVARIANT_SPVARIANT_DOUBLE._serialized_start = 329
    _TUPLE_SPVARIANT_SPVARIANT_DOUBLE._serialized_end = 426
    _TUPLE_STRING_SPCOLUMNEXPR._serialized_start = 428
    _TUPLE_STRING_SPCOLUMNEXPR._serialized_end = 498
    _TUPLE_STRING_SPVARIANT._serialized_start = 500
    _TUPLE_STRING_SPVARIANT._serialized_end = 564
    _TUPLE_STRING_STRING._serialized_start = 566
    _TUPLE_STRING_STRING._serialized_end = 611
    _LANGUAGE._serialized_start = 614
    _LANGUAGE._serialized_end = 778
    _PYTHONLANGUAGE._serialized_start = 780
    _PYTHONLANGUAGE._serialized_end = 827
    _SCALALANGUAGE._serialized_start = 829
    _SCALALANGUAGE._serialized_end = 875
    _JAVALANGUAGE._serialized_start = 877
    _JAVALANGUAGE._serialized_end = 922
    _VERSION._serialized_start = 924
    _VERSION._serialized_end = 993
    _PDINDEXEXPR._serialized_start = 995
    _PDINDEXEXPR._serialized_end = 1108
    _ORD._serialized_start = 1110
    _ORD._serialized_end = 1137
    _FLEXORD._serialized_start = 1139
    _FLEXORD._serialized_end = 1170
    _KEY._serialized_start = 1172
    _KEY._serialized_end = 1199
    _PDPROJECTINDEXEXPR._serialized_start = 1202
    _PDPROJECTINDEXEXPR._serialized_end = 1515
    _ORDRANGE._serialized_start = 1517
    _ORDRANGE._serialized_end = 1603
    _FLEXORDRANGE._serialized_start = 1605
    _FLEXORDRANGE._serialized_end = 1695
    _KEYRANGE._serialized_start = 1697
    _KEYRANGE._serialized_end = 1758
    _ORDLIST._serialized_start = 1760
    _ORDLIST._serialized_end = 1794
    _FLEXORDLIST._serialized_start = 1796
    _FLEXORDLIST._serialized_end = 1834
    _KEYLIST._serialized_start = 1836
    _KEYLIST._serialized_end = 1870
    _BOOLFILTERLIST._serialized_start = 1872
    _BOOLFILTERLIST._serialized_end = 1915
    _SPFLATTENMODE._serialized_start = 1917
    _SPFLATTENMODE._serialized_end = 2042
    _SPGROUPINGSETS._serialized_start = 2044
    _SPGROUPINGSETS._serialized_end = 2098
    _SPSAVEMODE._serialized_start = 2101
    _SPSAVEMODE._serialized_end = 2260
    _SPJOINTYPE._serialized_start = 2263
    _SPJOINTYPE._serialized_end = 2557
    _SPWINDOWSPECEXPR._serialized_start = 2560
    _SPWINDOWSPECEXPR._serialized_end = 3021
    _SPWINDOWSPECORDERBY._serialized_start = 3023
    _SPWINDOWSPECORDERBY._serialized_end = 3113
    _SPWINDOWSPECPARTITIONBY._serialized_start = 3115
    _SPWINDOWSPECPARTITIONBY._serialized_end = 3209
    _SPWINDOWSPECRANGEBETWEEN._serialized_start = 3211
    _SPWINDOWSPECRANGEBETWEEN._serialized_end = 3301
    _SPWINDOWSPECROWSBETWEEN._serialized_start = 3303
    _SPWINDOWSPECROWSBETWEEN._serialized_end = 3392
    _SPDATATYPE._serialized_start = 3395
    _SPDATATYPE._serialized_end = 4059
    _SPARRAYTYPE._serialized_start = 4061
    _SPARRAYTYPE._serialized_end = 4103
    _SPCOLUMNIDENTIFIER._serialized_start = 4105
    _SPCOLUMNIDENTIFIER._serialized_end = 4139
    _SPDECIMALTYPE._serialized_start = 4141
    _SPDECIMALTYPE._serialized_end = 4190
    _SPMAPTYPE._serialized_start = 4192
    _SPMAPTYPE._serialized_end = 4271
    _SPSTRUCTFIELD._serialized_start = 4273
    _SPSTRUCTFIELD._serialized_end = 4394
    _SPSTRUCTTYPE._serialized_start = 4396
    _SPSTRUCTTYPE._serialized_end = 4446
    _SPVARIANT._serialized_start = 4449
    _SPVARIANT._serialized_end = 5155
    _SPVARIANT_OBJECT._serialized_start = 5157
    _SPVARIANT_OBJECT._serialized_end = 5212
    _SPVARIANT_LIST._serialized_start = 5214
    _SPVARIANT_LIST._serialized_end = 5265
    _SPVARIANT_TIMESTAMP._serialized_start = 5267
    _SPVARIANT_TIMESTAMP._serialized_end = 5299
    _SPVARIANT_DATE._serialized_start = 5301
    _SPVARIANT_DATE._serialized_end = 5328
    _SPVARIANT_TIME._serialized_start = 5330
    _SPVARIANT_TIME._serialized_end = 5357
    _SPVARIANT_BYTES._serialized_start = 5359
    _SPVARIANT_BYTES._serialized_end = 5387
    _SPVARIANT_STRING._serialized_start = 5389
    _SPVARIANT_STRING._serialized_end = 5418
    _SPVARIANT_BOOL._serialized_start = 5420
    _SPVARIANT_BOOL._serialized_end = 5447
    _SPVARIANT_BIGINT._serialized_start = 5449
    _SPVARIANT_BIGINT._serialized_end = 5478
    _SPVARIANT_BIGDECIMAL._serialized_start = 5480
    _SPVARIANT_BIGDECIMAL._serialized_end = 5513
    _SPVARIANT_INT._serialized_start = 5515
    _SPVARIANT_INT._serialized_end = 5541
    _SPVARIANT_FLOAT._serialized_start = 5543
    _SPVARIANT_FLOAT._serialized_end = 5571
    _SPVARIANT_DOUBLE._serialized_start = 5573
    _SPVARIANT_DOUBLE._serialized_end = 5602
    _SPROW._serialized_start = 5604
    _SPROW._serialized_end = 5639
    _SRCPOSITION._serialized_start = 5641
    _SRCPOSITION._serialized_end = 5748
    _VARID._serialized_start = 5750
    _VARID._serialized_end = 5776
    _REQUEST._serialized_start = 5778
    _REQUEST._serialized_end = 5890
    _RESPONSE._serialized_start = 5892
    _RESPONSE._serialized_end = 5929
    _CONST._serialized_start = 5932
    _CONST._serialized_end = 6434
    _BINARYVAL._serialized_start = 6436
    _BINARYVAL._serialized_end = 6489
    _BOOLVAL._serialized_start = 6491
    _BOOLVAL._serialized_end = 6542
    _INT32VAL._serialized_start = 6544
    _INT32VAL._serialized_end = 6596
    _INT64VAL._serialized_start = 6598
    _INT64VAL._serialized_end = 6650
    _FLOAT64VAL._serialized_start = 6652
    _FLOAT64VAL._serialized_end = 6706
    _BIGINTVAL._serialized_start = 6708
    _BIGINTVAL._serialized_end = 6761
    _BIGDECIMALVAL._serialized_start = 6763
    _BIGDECIMALVAL._serialized_end = 6848
    _STRINGVAL._serialized_start = 6850
    _STRINGVAL._serialized_end = 6903
    _TIMESTAMPVAL._serialized_start = 6905
    _TIMESTAMPVAL._serialized_end = 6961
    _DATEVAL._serialized_start = 6963
    _DATEVAL._serialized_end = 7014
    _NONEVAL._serialized_start = 7016
    _NONEVAL._serialized_end = 7056
    _NULLVAL._serialized_start = 7058
    _NULLVAL._serialized_end = 7098
    _FNVAL._serialized_start = 7100
    _FNVAL._serialized_end = 7179
    _IFEXPR._serialized_start = 7181
    _IFEXPR._serialized_end = 7302
    _SOMEVAL._serialized_start = 7304
    _SOMEVAL._serialized_end = 7366
    _TUPLEVAL._serialized_start = 7368
    _TUPLEVAL._serialized_end = 7432
    _LISTVAL._serialized_start = 7434
    _LISTVAL._serialized_end = 7497
    _SEQMAPVAL._serialized_start = 7499
    _SEQMAPVAL._serialized_end = 7569
    _BUILTINFNEXPR._serialized_start = 7572
    _BUILTINFNEXPR._serialized_end = 7918
    _APPLYEXPR._serialized_start = 7920
    _APPLYEXPR._serialized_end = 8010
    _PYFN._serialized_start = 8012
    _PYFN._serialized_end = 8092
    _SNOWFLAKEUDF._serialized_start = 8094
    _SNOWFLAKEUDF._serialized_end = 8169
    _SNOWFLAKESPROC._serialized_start = 8171
    _SNOWFLAKESPROC._serialized_end = 8248
    _UNARYOP._serialized_start = 8250
    _UNARYOP._serialized_end = 8295
    _BINOP._serialized_start = 8298
    _BINOP._serialized_end = 8608
    _NOT._serialized_start = 8610
    _NOT._serialized_end = 8674
    _AND._serialized_start = 8676
    _AND._serialized_end = 8760
    _OR._serialized_start = 8762
    _OR._serialized_end = 8845
    _EQ._serialized_start = 8847
    _EQ._serialized_end = 8930
    _NEQ._serialized_start = 8932
    _NEQ._serialized_end = 9016
    _LT._serialized_start = 9018
    _LT._serialized_end = 9101
    _LEQ._serialized_start = 9103
    _LEQ._serialized_end = 9187
    _GT._serialized_start = 9189
    _GT._serialized_end = 9272
    _GEQ._serialized_start = 9274
    _GEQ._serialized_end = 9358
    _ADD._serialized_start = 9360
    _ADD._serialized_end = 9444
    _SUB._serialized_start = 9446
    _SUB._serialized_end = 9530
    _MUL._serialized_start = 9532
    _MUL._serialized_end = 9616
    _DIV._serialized_start = 9618
    _DIV._serialized_end = 9702
    _RANGEVAL._serialized_start = 9704
    _RANGEVAL._serialized_end = 9821
    _STRINGFN._serialized_start = 9824
    _STRINGFN._serialized_end = 10079
    _STRINGLEN._serialized_start = 10081
    _STRINGLEN._serialized_end = 10147
    _STRINGTOUPPER._serialized_start = 10149
    _STRINGTOUPPER._serialized_end = 10219
    _STRINGTOLOWER._serialized_start = 10221
    _STRINGTOLOWER._serialized_end = 10291
    _STRINGSTARTSWITH._serialized_start = 10293
    _STRINGSTARTSWITH._serialized_end = 10393
    _STRINGENDSWITH._serialized_start = 10395
    _STRINGENDSWITH._serialized_end = 10493
    _STRINGCONCAT._serialized_start = 10495
    _STRINGCONCAT._serialized_end = 10557
    _EXPR._serialized_start = 10560
    _EXPR._serialized_end = 20610
    _REF._serialized_start = 20612
    _REF._serialized_end = 20676
    _CASTEXPR._serialized_start = 20678
    _CASTEXPR._serialized_end = 20765
    _PDDATAFRAME._serialized_start = 20768
    _PDDATAFRAME._serialized_end = 20917
    _PDDROPNA._serialized_start = 20920
    _PDDROPNA._serialized_end = 21062
    _PDDATAFRAMEGETITEM._serialized_start = 21064
    _PDDATAFRAMEGETITEM._serialized_end = 21165
    _PDDATAFRAMESETITEM._serialized_start = 21167
    _PDDATAFRAMESETITEM._serialized_end = 21290
    _PDDATAFRAMELOCGET._serialized_start = 21292
    _PDDATAFRAMELOCGET._serialized_end = 21417
    _PDDATAFRAMELOCSET._serialized_start = 21420
    _PDDATAFRAMELOCSET._serialized_end = 21567
    _PDDATAFRAMEILOCGET._serialized_start = 21569
    _PDDATAFRAMEILOCGET._serialized_end = 21695
    _PDDATAFRAMEILOCSET._serialized_start = 21698
    _PDDATAFRAMEILOCSET._serialized_end = 21846
    _PDREPR._serialized_start = 21848
    _PDREPR._serialized_end = 21962
    _PDREPRRESULT._serialized_start = 21964
    _PDREPRRESULT._serialized_end = 22081
    _PDSERIES._serialized_start = 22084
    _PDSERIES._serialized_end = 22227
    _RESULT._serialized_start = 22230
    _RESULT._serialized_end = 22388
    _EVALRESULT._serialized_start = 22391
    _EVALRESULT._serialized_end = 22978
    _EVALOK._serialized_start = 22980
    _EVALOK._serialized_end = 23060
    _ERROR._serialized_start = 23062
    _ERROR._serialized_end = 23152
    _SESSIONRESETREQUIREDERROR._serialized_start = 23154
    _SESSIONRESETREQUIREDERROR._serialized_end = 23222
    _SPCOLUMNEXPR._serialized_start = 23225
    _SPCOLUMNEXPR._serialized_end = 25259
    _SPCOLUMNREF._serialized_start = 25261
    _SPCOLUMNREF._serialized_end = 25317
    _SPCOLUMN._serialized_start = 25319
    _SPCOLUMN._serialized_end = 25374
    _SPCOLUMNSQLEXPR._serialized_start = 25376
    _SPCOLUMNSQLEXPR._serialized_end = 25437
    _SPCOLUMNALIAS._serialized_start = 25439
    _SPCOLUMNALIAS._serialized_end = 25554
    _SPCOLUMNAPPLY_INT._serialized_start = 25556
    _SPCOLUMNAPPLY_INT._serialized_end = 25651
    _SPCOLUMNAPPLY_STRING._serialized_start = 25653
    _SPCOLUMNAPPLY_STRING._serialized_end = 25753
    _SPCOLUMNASC._serialized_start = 25755
    _SPCOLUMNASC._serialized_end = 25852
    _SPCOLUMNBETWEEN._serialized_start = 25855
    _SPCOLUMNBETWEEN._serialized_end = 26015
    _SPCOLUMNCAST._serialized_start = 26017
    _SPCOLUMNCAST._serialized_end = 26123
    _SPCOLUMNCOLLATE._serialized_start = 26125
    _SPCOLUMNCOLLATE._serialized_end = 26227
    _SPCOLUMNDESC._serialized_start = 26229
    _SPCOLUMNDESC._serialized_end = 26327
    _SPCOLUMNEQUALNAN._serialized_start = 26329
    _SPCOLUMNEQUALNAN._serialized_end = 26410
    _SPCOLUMNEQUALNULL._serialized_start = 26412
    _SPCOLUMNEQUALNULL._serialized_end = 26526
    _SPCOLUMNIN_DATAFRAME._serialized_start = 26528
    _SPCOLUMNIN_DATAFRAME._serialized_end = 26647
    _SPCOLUMNIN_SEQ._serialized_start = 26649
    _SPCOLUMNIN_SEQ._serialized_end = 26755
    _SPCOLUMNISNOTNULL._serialized_start = 26757
    _SPCOLUMNISNOTNULL._serialized_end = 26839
    _SPCOLUMNISNULL._serialized_start = 26841
    _SPCOLUMNISNULL._serialized_end = 26920
    _SPCOLUMNNAME._serialized_start = 26922
    _SPCOLUMNNAME._serialized_end = 27014
    _SPCOLUMNOVER._serialized_start = 27016
    _SPCOLUMNOVER._serialized_end = 27137
    _SPCOLUMNREGEXP._serialized_start = 27139
    _SPCOLUMNREGEXP._serialized_end = 27246
    _SPCOLUMNREGEXPCOUNT._serialized_start = 27248
    _SPCOLUMNREGEXPCOUNT._serialized_end = 27360
    _SPCOLUMNWITHINGROUP._serialized_start = 27363
    _SPCOLUMNWITHINGROUP._serialized_end = 27498
    _SPCOLUMNAND._serialized_start = 27500
    _SPCOLUMNAND._serialized_end = 27608
    _SPCOLUMNBITAND._serialized_start = 27610
    _SPCOLUMNBITAND._serialized_end = 27721
    _SPCOLUMNBITOR._serialized_start = 27723
    _SPCOLUMNBITOR._serialized_end = 27833
    _SPCOLUMNBITXOR._serialized_start = 27835
    _SPCOLUMNBITXOR._serialized_end = 27946
    _SPCOLUMNDIVIDE._serialized_start = 27948
    _SPCOLUMNDIVIDE._serialized_end = 28059
    _SPCOLUMNEQUALTO._serialized_start = 28061
    _SPCOLUMNEQUALTO._serialized_end = 28173
    _SPCOLUMNGEQ._serialized_start = 28175
    _SPCOLUMNGEQ._serialized_end = 28283
    _SPCOLUMNGT._serialized_start = 28285
    _SPCOLUMNGT._serialized_end = 28392
    _SPCOLUMNLEQ._serialized_start = 28394
    _SPCOLUMNLEQ._serialized_end = 28502
    _SPCOLUMNLIKE._serialized_start = 28504
    _SPCOLUMNLIKE._serialized_end = 28617
    _SPCOLUMNLT._serialized_start = 28619
    _SPCOLUMNLT._serialized_end = 28726
    _SPCOLUMNMINUS._serialized_start = 28728
    _SPCOLUMNMINUS._serialized_end = 28838
    _SPCOLUMNMOD._serialized_start = 28840
    _SPCOLUMNMOD._serialized_end = 28948
    _SPCOLUMNMULTIPLY._serialized_start = 28950
    _SPCOLUMNMULTIPLY._serialized_end = 29063
    _SPCOLUMNNOTEQUAL._serialized_start = 29065
    _SPCOLUMNNOTEQUAL._serialized_end = 29178
    _SPCOLUMNOR._serialized_start = 29180
    _SPCOLUMNOR._serialized_end = 29287
    _SPCOLUMNPLUS._serialized_start = 29289
    _SPCOLUMNPLUS._serialized_end = 29398
    _SPDATAFRAMEEXPR._serialized_start = 29401
    _SPDATAFRAMEEXPR._serialized_end = 33024
    _SPDATAFRAMEREF._serialized_start = 33026
    _SPDATAFRAMEREF._serialized_end = 33097
    _SPDATAFRAMESHOW._serialized_start = 33099
    _SPDATAFRAMESHOW._serialized_end = 33171
    _SPCREATEDATAFRAME._serialized_start = 33174
    _SPCREATEDATAFRAME._serialized_end = 33303
    _SPFLATTEN_COLUMN_STRING_BOOL_BOOL_STRING._serialized_start = 33306
    _SPFLATTEN_COLUMN_STRING_BOOL_BOOL_STRING._serialized_end = 33495
    _SPFLATTEN_COLUMN._serialized_start = 33497
    _SPFLATTEN_COLUMN._serialized_end = 33580
    _SPGENERATOR._serialized_start = 33582
    _SPGENERATOR._serialized_end = 33699
    _SPRANGE._serialized_start = 33701
    _SPRANGE._serialized_end = 33783
    _SPSQL._serialized_start = 33785
    _SPSQL._serialized_end = 33838
    _SPSTOREDPROCEDURE._serialized_start = 33840
    _SPSTOREDPROCEDURE._serialized_end = 33955
    _SPTABLE._serialized_start = 33957
    _SPTABLE._serialized_end = 34046
    _SPTABLEFUNCTION._serialized_start = 34048
    _SPTABLEFUNCTION._serialized_end = 34172
    _SPDATAFRAMETODF._serialized_start = 34174
    _SPDATAFRAMETODF._serialized_end = 34293
    _SPDATAFRAMENADROP._serialized_start = 34296
    _SPDATAFRAMENADROP._serialized_end = 34425
    _SPDATAFRAMENAFILL._serialized_start = 34428
    _SPDATAFRAMENAFILL._serialized_end = 34560
    _SPDATAFRAMENAREPLACE._serialized_start = 34563
    _SPDATAFRAMENAREPLACE._serialized_end = 34721
    _SPDATAFRAMEAGG._serialized_start = 34724
    _SPDATAFRAMEAGG._serialized_end = 34857
    _SPDATAFRAMEAPPLY._serialized_start = 34859
    _SPDATAFRAMEAPPLY._serialized_end = 34960
    _SPDATAFRAMECOL._serialized_start = 34962
    _SPDATAFRAMECOL._serialized_end = 35061
    _SPDATAFRAMECROSSJOIN._serialized_start = 35063
    _SPDATAFRAMECROSSJOIN._serialized_end = 35186
    _SPDATAFRAMECUBE._serialized_start = 35189
    _SPDATAFRAMECUBE._serialized_end = 35322
    _SPDATAFRAMEDISTINCT._serialized_start = 35324
    _SPDATAFRAMEDISTINCT._serialized_end = 35410
    _SPDATAFRAMEDROP_COLUMNS._serialized_start = 35413
    _SPDATAFRAMEDROP_COLUMNS._serialized_end = 35554
    _SPDATAFRAMEDROP_STRINGS._serialized_start = 35556
    _SPDATAFRAMEDROP_STRINGS._serialized_end = 35678
    _SPDATAFRAMEDROPDUPLICATES._serialized_start = 35680
    _SPDATAFRAMEDROPDUPLICATES._serialized_end = 35786
    _SPDATAFRAMEEXCEPT._serialized_start = 35788
    _SPDATAFRAMEEXCEPT._serialized_end = 35909
    _SPDATAFRAMEFILTER._serialized_start = 35911
    _SPDATAFRAMEFILTER._serialized_end = 36033
    _SPDATAFRAMEFLATTEN_COLUMN_STRING_BOOL_BOOL_STRING._serialized_start = 36036
    _SPDATAFRAMEFLATTEN_COLUMN_STRING_BOOL_BOOL_STRING._serialized_end = 36268
    _SPDATAFRAMEFLATTEN_COLUMN._serialized_start = 36270
    _SPDATAFRAMEFLATTEN_COLUMN._serialized_end = 36396
    _SPDATAFRAMEGROUPBY_COLUMNS._serialized_start = 36399
    _SPDATAFRAMEGROUPBY_COLUMNS._serialized_end = 36543
    _SPDATAFRAMEGROUPBY_STRINGS._serialized_start = 36545
    _SPDATAFRAMEGROUPBY_STRINGS._serialized_end = 36670
    _SPDATAFRAMEGROUPBY._serialized_start = 36672
    _SPDATAFRAMEGROUPBY._serialized_end = 36757
    _SPDATAFRAMEINTERSECT._serialized_start = 36759
    _SPDATAFRAMEINTERSECT._serialized_end = 36883
    _SPDATAFRAMEJOIN_TABLEFUNCTION_MAP._serialized_start = 36886
    _SPDATAFRAMEJOIN_TABLEFUNCTION_MAP._serialized_end = 37156
    _SPDATAFRAMEJOIN_TABLEFUNCTION_LIST._serialized_start = 37159
    _SPDATAFRAMEJOIN_TABLEFUNCTION_LIST._serialized_end = 37435
    _SPDATAFRAMEJOIN_DATAFRAME_JOINEXPRS._serialized_start = 37438
    _SPDATAFRAMEJOIN_DATAFRAME_JOINEXPRS._serialized_end = 37654
    _SPDATAFRAMEJOIN_DATAFRAME_USINGCOLUMNS._serialized_start = 37657
    _SPDATAFRAMEJOIN_DATAFRAME_USINGCOLUMNS._serialized_end = 37893
    _SPDATAFRAMELIMIT._serialized_start = 37895
    _SPDATAFRAMELIMIT._serialized_end = 37989
    _SPDATAFRAMENATURALJOIN._serialized_start = 37992
    _SPDATAFRAMENATURALJOIN._serialized_end = 38153
    _SPDATAFRAMEPIVOT_COLUMN._serialized_start = 38156
    _SPDATAFRAMEPIVOT_COLUMN._serialized_end = 38319
    _SPDATAFRAMEPIVOT_STRING._serialized_start = 38322
    _SPDATAFRAMEPIVOT_STRING._serialized_end = 38466
    _SPDATAFRAMERENAME._serialized_start = 38469
    _SPDATAFRAMERENAME._serialized_end = 38603
    _SPDATAFRAMEROLLUP_COLUMNS._serialized_start = 38606
    _SPDATAFRAMEROLLUP_COLUMNS._serialized_end = 38749
    _SPDATAFRAMEROLLUP_STRINGS._serialized_start = 38751
    _SPDATAFRAMEROLLUP_STRINGS._serialized_end = 38875
    _SPDATAFRAMESAMPLE_DOUBLE._serialized_start = 38877
    _SPDATAFRAMESAMPLE_DOUBLE._serialized_end = 38998
    _SPDATAFRAMESAMPLE_LONG._serialized_start = 39000
    _SPDATAFRAMESAMPLE_LONG._serialized_end = 39102
    _SPDATAFRAMESELECT_COLUMNS._serialized_start = 39105
    _SPDATAFRAMESELECT_COLUMNS._serialized_end = 39248
    _SPDATAFRAMESELECT_STRINGS._serialized_start = 39250
    _SPDATAFRAMESELECT_STRINGS._serialized_end = 39374
    _SPDATAFRAMESORT._serialized_start = 39377
    _SPDATAFRAMESORT._serialized_end = 39510
    _SPDATAFRAMEUNION._serialized_start = 39512
    _SPDATAFRAMEUNION._serialized_end = 39631
    _SPDATAFRAMEUNIONALL._serialized_start = 39633
    _SPDATAFRAMEUNIONALL._serialized_end = 39755
    _SPDATAFRAMEUNIONALLBYNAME._serialized_start = 39758
    _SPDATAFRAMEUNIONALLBYNAME._serialized_end = 39886
    _SPDATAFRAMEUNIONBYNAME._serialized_start = 39888
    _SPDATAFRAMEUNIONBYNAME._serialized_end = 40013
    _SPDATAFRAMEWHERE._serialized_start = 40015
    _SPDATAFRAMEWHERE._serialized_end = 40136
    _SPDATAFRAMEWITHCOLUMN._serialized_start = 40139
    _SPDATAFRAMEWITHCOLUMN._serialized_end = 40277
    _SPDATAFRAMEWITHCOLUMNS._serialized_start = 40280
    _SPDATAFRAMEWITHCOLUMNS._serialized_end = 40423
    _SPDATAFRAMEGROUPBYGROUPINGSETS._serialized_start = 40426
    _SPDATAFRAMEGROUPBYGROUPINGSETS._serialized_end = 40585
    _SPCOPYABLEDATAFRAMEEXPR._serialized_start = 40588
    _SPCOPYABLEDATAFRAMEEXPR._serialized_end = 41104
    _SPDATAFRAMEREADEROPTIONS._serialized_start = 41106
    _SPDATAFRAMEREADEROPTIONS._serialized_end = 41160
    _SPDATAFRAMEREADERSCHEMA._serialized_start = 41162
    _SPDATAFRAMEREADERSCHEMA._serialized_end = 41215
    _SPREADAVRO._serialized_start = 41217
    _SPREADAVRO._serialized_end = 41274
    _SPREADCSV._serialized_start = 41276
    _SPREADCSV._serialized_end = 41332
    _SPREADJSON._serialized_start = 41334
    _SPREADJSON._serialized_end = 41391
    _SPREADORC._serialized_start = 41393
    _SPREADORC._serialized_end = 41449
    _SPREADPARQUET._serialized_start = 41451
    _SPREADPARQUET._serialized_end = 41511
    _SPREADTABLE._serialized_start = 41513
    _SPREADTABLE._serialized_end = 41571
    _SPREADXML._serialized_start = 41573
    _SPREADXML._serialized_end = 41629
    _SPCOPYINTO._serialized_start = 41632
    _SPCOPYINTO._serialized_end = 41835
    _SPDATAFRAMEWRITER._serialized_start = 41838
    _SPDATAFRAMEWRITER._serialized_end = 42201
    _SPDATAFRAMEWRITERSAVEMODE._serialized_start = 42203
    _SPDATAFRAMEWRITERSAVEMODE._serialized_end = 42258
    _SPDATAFRAMEWRITEROPTIONS._serialized_start = 42260
    _SPDATAFRAMEWRITEROPTIONS._serialized_end = 42314
    _SPWRITECSV._serialized_start = 42316
    _SPWRITECSV._serialized_end = 42407
    _SPWRITEJSON._serialized_start = 42409
    _SPWRITEJSON._serialized_end = 42501
    _SPWRITEPARQUET._serialized_start = 42503
    _SPWRITEPARQUET._serialized_end = 42598
    _SPWRITETABLE._serialized_start = 42601
    _SPWRITETABLE._serialized_end = 42750
    _SPDATAFRAMESTATSAPPROXQUANTILE._serialized_start = 42752
    _SPDATAFRAMESTATSAPPROXQUANTILE._serialized_end = 42818
    _SPDATAFRAMESTATSCORR._serialized_start = 42820
    _SPDATAFRAMESTATSCORR._serialized_end = 42876
    _SPDATAFRAMESTATSCOV._serialized_start = 42878
    _SPDATAFRAMESTATSCOV._serialized_end = 42933
    _SPDATAFRAMESTATSCROSSTAB._serialized_start = 42935
    _SPDATAFRAMESTATSCROSSTAB._serialized_end = 43054
    _SPDATAFRAMESTATSSAMPLEBY._serialized_start = 43057
    _SPDATAFRAMESTATSSAMPLEBY._serialized_end = 43238
    _SPRELATIONALGROUPEDDATAFRAMEEXPR._serialized_start = 43241
    _SPRELATIONALGROUPEDDATAFRAMEEXPR._serialized_end = 44850
    _SPRELATIONALGROUPEDDATAFRAMEAGG_MAP._serialized_start = 44853
    _SPRELATIONALGROUPEDDATAFRAMEAGG_MAP._serialized_end = 45046
    _SPRELATIONALGROUPEDDATAFRAMEAGG_COLUMNS._serialized_start = 45049
    _SPRELATIONALGROUPEDDATAFRAMEAGG_COLUMNS._serialized_end = 45224
    _SPRELATIONALGROUPEDDATAFRAMEANYVALUE._serialized_start = 45227
    _SPRELATIONALGROUPEDDATAFRAMEANYVALUE._serialized_end = 45380
    _SPRELATIONALGROUPEDDATAFRAMEAVG._serialized_start = 45383
    _SPRELATIONALGROUPEDDATAFRAMEAVG._serialized_end = 45531
    _SPRELATIONALGROUPEDDATAFRAMEBUILTIN._serialized_start = 45534
    _SPRELATIONALGROUPEDDATAFRAMEBUILTIN._serialized_end = 45704
    _SPRELATIONALGROUPEDDATAFRAMECOUNT._serialized_start = 45706
    _SPRELATIONALGROUPEDDATAFRAMECOUNT._serialized_end = 45823
    _SPRELATIONALGROUPEDDATAFRAMEMAX._serialized_start = 45826
    _SPRELATIONALGROUPEDDATAFRAMEMAX._serialized_end = 45974
    _SPRELATIONALGROUPEDDATAFRAMEMEAN._serialized_start = 45977
    _SPRELATIONALGROUPEDDATAFRAMEMEAN._serialized_end = 46126
    _SPRELATIONALGROUPEDDATAFRAMEMEDIAN._serialized_start = 46129
    _SPRELATIONALGROUPEDDATAFRAMEMEDIAN._serialized_end = 46280
    _SPRELATIONALGROUPEDDATAFRAMEMIN._serialized_start = 46283
    _SPRELATIONALGROUPEDDATAFRAMEMIN._serialized_end = 46431
    _SPRELATIONALGROUPEDDATAFRAMESUM._serialized_start = 46434
    _SPRELATIONALGROUPEDDATAFRAMESUM._serialized_end = 46582
    _SPDATAFRAMETYPE._serialized_start = 46584
    _SPDATAFRAMETYPE._serialized_end = 46642
    _SPGROUPEDDATAFRAMETYPE._serialized_start = 46644
    _SPGROUPEDDATAFRAMETYPE._serialized_end = 46714
    _SPWINDOWTYPE._serialized_start = 46716
    _SPWINDOWTYPE._serialized_end = 46730
    _SPCOLEXPRTYPE._serialized_start = 46732
    _SPCOLEXPRTYPE._serialized_end = 46771
    _HASSRCPOSITION._serialized_start = 46774
    _HASSRCPOSITION._serialized_end = 56868
    _STMT._serialized_start = 56870
    _STMT._serialized_end = 56945
    _ASSIGN._serialized_start = 56947
    _ASSIGN._serialized_end = 57037
    _EVAL._serialized_start = 57039
    _EVAL._serialized_end = 57086
    _TYPE._serialized_start = 57089
    _TYPE._serialized_end = 58049
    _UNKNOWNTYPE._serialized_start = 58051
    _UNKNOWNTYPE._serialized_end = 58064
    _ANYTYPE._serialized_start = 58066
    _ANYTYPE._serialized_end = 58075
    _SCALARTYPE._serialized_start = 58078
    _SCALARTYPE._serialized_end = 58379
    _NUMERICTYPE._serialized_start = 58382
    _NUMERICTYPE._serialized_end = 58564
    _NUMBERTYPE._serialized_start = 58566
    _NUMBERTYPE._serialized_end = 58578
    _NOTHINGTYPE._serialized_start = 58580
    _NOTHINGTYPE._serialized_end = 58593
    _UNITTYPE._serialized_start = 58595
    _UNITTYPE._serialized_end = 58605
    _BOOLTYPE._serialized_start = 58607
    _BOOLTYPE._serialized_end = 58617
    _INT32TYPE._serialized_start = 58619
    _INT32TYPE._serialized_end = 58630
    _INT64TYPE._serialized_start = 58632
    _INT64TYPE._serialized_end = 58643
    _FLOAT64TYPE._serialized_start = 58645
    _FLOAT64TYPE._serialized_end = 58658
    _STRINGTYPE._serialized_start = 58660
    _STRINGTYPE._serialized_end = 58672
    _PDREPRTYPE._serialized_start = 58674
    _PDREPRTYPE._serialized_end = 58686
    _FNTYPE._serialized_start = 58688
    _FNTYPE._serialized_end = 58747
    _OPTIONTYPE._serialized_start = 58749
    _OPTIONTYPE._serialized_end = 58785
    _TUPLETYPE._serialized_start = 58787
    _TUPLETYPE._serialized_end = 58822
    _LISTTYPE._serialized_start = 58824
    _LISTTYPE._serialized_end = 58858
    _MAPTYPE._serialized_start = 58860
    _MAPTYPE._serialized_end = 58913
    _TYVAR._serialized_start = 58915
    _TYVAR._serialized_end = 58934
# @@protoc_insertion_point(module_scope)
