#
# Copyright (c) 2012-2024 Snowflake Computing Inc. All rights reserved.
#

# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Snowpark/proto/ast.proto
"""Generated protocol buffer code."""
# flake8: noqa
from google.protobuf import (
    descriptor as _descriptor,
    descriptor_pool as _descriptor_pool,
    symbol_database as _symbol_database,
)
from google.protobuf.internal import builder as _builder

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2

DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n\x18Snowpark/proto/ast.proto\x12\x03\x61st\x1a\x1egoogle/protobuf/wrappers.proto"4\n\x11List_SpColumnExpr\x12\x1f\n\x04list\x18\x01 \x03(\x0b\x32\x11.ast.SpColumnExpr"\x1b\n\x0bList_String\x12\x0c\n\x04list\x18\x01 \x03(\t"A\n\x14Map_String_SpVariant\x12)\n\x04list\x18\x01 \x03(\x0b\x32\x1b.ast.Tuple_String_SpVariant";\n\x11Map_String_String\x12&\n\x04list\x18\x01 \x03(\x0b\x32\x18.ast.Tuple_String_String"S\n\x19Tuple_SpVariant_SpVariant\x12\x1a\n\x02_1\x18\x01 \x01(\x0b\x32\x0e.ast.SpVariant\x12\x1a\n\x02_2\x18\x02 \x01(\x0b\x32\x0e.ast.SpVariant"a\n Tuple_SpVariant_SpVariant_Double\x12\x1a\n\x02_1\x18\x01 \x01(\x0b\x32\x0e.ast.SpVariant\x12!\n\x02_2\x18\x02 \x01(\x0b\x32\x15.ast.SpVariant_Double"F\n\x19Tuple_String_SpColumnExpr\x12\n\n\x02_1\x18\x01 \x01(\t\x12\x1d\n\x02_2\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr"@\n\x16Tuple_String_SpVariant\x12\n\n\x02_1\x18\x01 \x01(\t\x12\x1a\n\x02_2\x18\x02 \x01(\x0b\x32\x0e.ast.SpVariant"-\n\x13Tuple_String_String\x12\n\n\x02_1\x18\x01 \x01(\t\x12\n\n\x02_2\x18\x02 \x01(\t"\xa4\x01\n\x08Language\x12.\n\x0fpython_language\x18\x01 \x01(\x0b\x32\x13.ast.PythonLanguageH\x00\x12,\n\x0escala_language\x18\x02 \x01(\x0b\x32\x12.ast.ScalaLanguageH\x00\x12*\n\rjava_language\x18\x03 \x01(\x0b\x32\x11.ast.JavaLanguageH\x00\x42\x0e\n\x0csealed_value"/\n\x0ePythonLanguage\x12\x1d\n\x07version\x18\x01 \x01(\x0b\x32\x0c.ast.Version".\n\rScalaLanguage\x12\x1d\n\x07version\x18\x01 \x01(\x0b\x32\x0c.ast.Version"-\n\x0cJavaLanguage\x12\x1d\n\x07version\x18\x01 \x01(\x0b\x32\x0c.ast.Version"E\n\x07Version\x12\r\n\x05major\x18\x01 \x01(\x03\x12\r\n\x05minor\x18\x02 \x01(\x03\x12\r\n\x05patch\x18\x03 \x01(\x03\x12\r\n\x05label\x18\x04 \x01(\t"T\n\x0ePythonTimeZone\x12*\n\x04name\x18\x01 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x16\n\x0eoffset_seconds\x18\x02 \x01(\x03"q\n\x0bPdIndexExpr\x12\x17\n\x03ord\x18\x01 \x01(\x0b\x32\x08.ast.OrdH\x00\x12 \n\x08\x66lex_ord\x18\x02 \x01(\x0b\x32\x0c.ast.FlexOrdH\x00\x12\x17\n\x03key\x18\x03 \x01(\x0b\x32\x08.ast.KeyH\x00\x42\x0e\n\x0csealed_value"\x1b\n\x03Ord\x12\x14\n\x01v\x18\x01 \x01(\x0b\x32\t.ast.Expr"\x1f\n\x07\x46lexOrd\x12\x14\n\x01v\x18\x01 \x01(\x0b\x32\t.ast.Expr"\x1b\n\x03Key\x12\x14\n\x01v\x18\x01 \x01(\x0b\x32\t.ast.Expr"\xb9\x02\n\x12PdProjectIndexExpr\x12"\n\tord_range\x18\x01 \x01(\x0b\x32\r.ast.OrdRangeH\x00\x12+\n\x0e\x66lex_ord_range\x18\x02 \x01(\x0b\x32\x11.ast.FlexOrdRangeH\x00\x12"\n\tkey_range\x18\x03 \x01(\x0b\x32\r.ast.KeyRangeH\x00\x12 \n\x08ord_list\x18\x04 \x01(\x0b\x32\x0c.ast.OrdListH\x00\x12)\n\rflex_ord_list\x18\x05 \x01(\x0b\x32\x10.ast.FlexOrdListH\x00\x12 \n\x08key_list\x18\x06 \x01(\x0b\x32\x0c.ast.KeyListH\x00\x12/\n\x10\x62ool_filter_list\x18\x07 \x01(\x0b\x32\x13.ast.BoolFilterListH\x00\x42\x0e\n\x0csealed_value"V\n\x08OrdRange\x12\x18\n\x05start\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04stop\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04step\x18\x03 \x01(\x0b\x32\t.ast.Expr"Z\n\x0c\x46lexOrdRange\x12\x18\n\x05start\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04stop\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04step\x18\x03 \x01(\x0b\x32\t.ast.Expr"=\n\x08KeyRange\x12\x18\n\x05start\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04stop\x18\x02 \x01(\x0b\x32\t.ast.Expr""\n\x07OrdList\x12\x17\n\x04ords\x18\x01 \x01(\x0b\x32\t.ast.Expr"&\n\x0b\x46lexOrdList\x12\x17\n\x04ords\x18\x01 \x01(\x0b\x32\t.ast.Expr""\n\x07KeyList\x12\x17\n\x04keys\x18\x01 \x01(\x0b\x32\t.ast.Expr"+\n\x0e\x42oolFilterList\x12\x19\n\x06\x66ilter\x18\x01 \x01(\x0b\x32\t.ast.Expr"}\n\rSpFlattenMode\x12 \n\x16sp_flatten_mode_object\x18\x01 \x01(\x08H\x00\x12\x1f\n\x15sp_flatten_mode_array\x18\x02 \x01(\x08H\x00\x12\x1e\n\x14sp_flatten_mode_both\x18\x03 \x01(\x08H\x00\x42\t\n\x07variant"6\n\x0eSpGroupingSets\x12$\n\x04sets\x18\x01 \x03(\x0b\x32\x16.ast.List_SpColumnExpr"\x9f\x01\n\nSpSaveMode\x12\x1d\n\x13sp_save_mode_append\x18\x01 \x01(\x08H\x00\x12&\n\x1csp_save_mode_error_if_exists\x18\x02 \x01(\x08H\x00\x12\x1d\n\x13sp_save_mode_ignore\x18\x03 \x01(\x08H\x00\x12 \n\x16sp_save_mode_overwrite\x18\x04 \x01(\x08H\x00\x42\t\n\x07variant"\xa6\x02\n\nSpJoinType\x12\x1d\n\x13sp_join_type__inner\x18\x01 \x01(\x08H\x00\x12"\n\x18sp_join_type__left_outer\x18\x02 \x01(\x08H\x00\x12#\n\x19sp_join_type__right_outer\x18\x03 \x01(\x08H\x00\x12"\n\x18sp_join_type__full_outer\x18\x04 \x01(\x08H\x00\x12\x1d\n\x13sp_join_type__cross\x18\x05 \x01(\x08H\x00\x12!\n\x17sp_join_type__left_semi\x18\x06 \x01(\x08H\x00\x12!\n\x17sp_join_type__left_anti\x18\x07 \x01(\x08H\x00\x12\x1c\n\x12sp_join_type__self\x18\x08 \x01(\x08H\x00\x42\t\n\x07variant"\xcd\x03\n\x10SpWindowSpecExpr\x12\x1e\n\x14sp_window_spec_empty\x18\x01 \x01(\x08H\x00\x12;\n\x17sp_window_spec_order_by\x18\x02 \x01(\x0b\x32\x18.ast.SpWindowSpecOrderByH\x00\x12\x43\n\x1bsp_window_spec_partition_by\x18\x03 \x01(\x0b\x32\x1c.ast.SpWindowSpecPartitionByH\x00\x12\x45\n\x1csp_window_spec_range_between\x18\x04 \x01(\x0b\x32\x1d.ast.SpWindowSpecRangeBetweenH\x00\x12\x43\n\x1bsp_window_spec_rows_between\x18\x05 \x01(\x0b\x32\x1c.ast.SpWindowSpecRowsBetweenH\x00\x12$\n\x1asp_window_spec_current_row\x18\x06 \x01(\x08H\x00\x12,\n"sp_window_spec_unbounded_following\x18\x07 \x01(\x08H\x00\x12,\n"sp_window_spec_unbounded_preceding\x18\x08 \x01(\x08H\x00\x42\t\n\x07variant"Z\n\x13SpWindowSpecOrderBy\x12"\n\x03wnd\x18\x01 \x01(\x0b\x32\x15.ast.SpWindowSpecExpr\x12\x1f\n\x04\x63ols\x18\x02 \x03(\x0b\x32\x11.ast.SpColumnExpr"^\n\x17SpWindowSpecPartitionBy\x12"\n\x03wnd\x18\x01 \x01(\x0b\x32\x15.ast.SpWindowSpecExpr\x12\x1f\n\x04\x63ols\x18\x02 \x03(\x0b\x32\x11.ast.SpColumnExpr"Z\n\x18SpWindowSpecRangeBetween\x12"\n\x03wnd\x18\x01 \x01(\x0b\x32\x15.ast.SpWindowSpecExpr\x12\r\n\x05start\x18\x02 \x01(\x03\x12\x0b\n\x03\x65nd\x18\x03 \x01(\x03"Y\n\x17SpWindowSpecRowsBetween\x12"\n\x03wnd\x18\x01 \x01(\x0b\x32\x15.ast.SpWindowSpecExpr\x12\r\n\x05start\x18\x02 \x01(\x03\x12\x0b\n\x03\x65nd\x18\x03 \x01(\x03"\xbb\x01\n\x13SpTimestampTimeZone\x12(\n\x1esp_timestamp_time_zone_default\x18\x01 \x01(\x08H\x00\x12$\n\x1asp_timestamp_time_zone_ntz\x18\x02 \x01(\x08H\x00\x12$\n\x1asp_timestamp_time_zone_ltz\x18\x03 \x01(\x08H\x00\x12#\n\x19sp_timestamp_time_zone_tz\x18\x04 \x01(\x08H\x00\x42\t\n\x07variant"\xa2\x06\n\nSpDataType\x12)\n\rsp_array_type\x18\x01 \x01(\x0b\x32\x10.ast.SpArrayTypeH\x00\x12\x18\n\x0esp_binary_type\x18\x02 \x01(\x08H\x00\x12\x19\n\x0fsp_boolean_type\x18\x03 \x01(\x08H\x00\x12\x16\n\x0csp_byte_type\x18\x04 \x01(\x08H\x00\x12\x37\n\x14sp_column_identifier\x18\x05 \x01(\x0b\x32\x17.ast.SpColumnIdentifierH\x00\x12\x16\n\x0csp_date_type\x18\x06 \x01(\x08H\x00\x12-\n\x0fsp_decimal_type\x18\x07 \x01(\x0b\x32\x12.ast.SpDecimalTypeH\x00\x12\x18\n\x0esp_double_type\x18\x08 \x01(\x08H\x00\x12\x17\n\rsp_float_type\x18\t \x01(\x08H\x00\x12\x1b\n\x11sp_geography_type\x18\n \x01(\x08H\x00\x12\x1a\n\x10sp_geometry_type\x18\x0b \x01(\x08H\x00\x12\x19\n\x0fsp_integer_type\x18\x0c \x01(\x08H\x00\x12\x16\n\x0csp_long_type\x18\r \x01(\x08H\x00\x12%\n\x0bsp_map_type\x18\x0e \x01(\x0b\x32\x0e.ast.SpMapTypeH\x00\x12\x16\n\x0csp_null_type\x18\x0f \x01(\x08H\x00\x12\x17\n\rsp_short_type\x18\x10 \x01(\x08H\x00\x12+\n\x0esp_string_type\x18\x11 \x01(\x0b\x32\x11.ast.SpStringTypeH\x00\x12-\n\x0fsp_struct_field\x18\x12 \x01(\x0b\x32\x12.ast.SpStructFieldH\x00\x12+\n\x0esp_struct_type\x18\x13 \x01(\x0b\x32\x11.ast.SpStructTypeH\x00\x12\x16\n\x0csp_time_type\x18\x14 \x01(\x08H\x00\x12\x31\n\x11sp_timestamp_type\x18\x15 \x01(\x0b\x32\x14.ast.SpTimestampTypeH\x00\x12\x19\n\x0fsp_variant_type\x18\x16 \x01(\x08H\x00\x12+\n\x0esp_vector_type\x18\x17 \x01(\x0b\x32\x11.ast.SpVectorTypeH\x00\x42\t\n\x07variant">\n\x0bSpArrayType\x12\x1b\n\x02ty\x18\x01 \x01(\x0b\x32\x0f.ast.SpDataType\x12\x12\n\nstructured\x18\x02 \x01(\x08""\n\x12SpColumnIdentifier\x12\x0c\n\x04name\x18\x01 \x01(\t"1\n\rSpDecimalType\x12\x11\n\tprecision\x18\x01 \x01(\x03\x12\r\n\x05scale\x18\x02 \x01(\x03"c\n\tSpMapType\x12\x1f\n\x06key_ty\x18\x01 \x01(\x0b\x32\x0f.ast.SpDataType\x12!\n\x08value_ty\x18\x02 \x01(\x0b\x32\x0f.ast.SpDataType\x12\x12\n\nstructured\x18\x03 \x01(\x08";\n\x0cSpStringType\x12+\n\x06length\x18\x01 \x01(\x0b\x32\x1b.google.protobuf.Int64Value"y\n\rSpStructField\x12\x32\n\x11\x63olumn_identifier\x18\x01 \x01(\x0b\x32\x17.ast.SpColumnIdentifier\x12"\n\tdata_type\x18\x02 \x01(\x0b\x32\x0f.ast.SpDataType\x12\x10\n\x08nullable\x18\x03 \x01(\x08"F\n\x0cSpStructType\x12"\n\x06\x66ields\x18\x01 \x03(\x0b\x32\x12.ast.SpStructField\x12\x12\n\nstructured\x18\x02 \x01(\x08">\n\x0fSpTimestampType\x12+\n\ttime_zone\x18\x01 \x01(\x0b\x32\x18.ast.SpTimestampTimeZone">\n\x0cSpVectorType\x12\x1b\n\x02ty\x18\x01 \x01(\x0b\x32\x0f.ast.SpDataType\x12\x11\n\tdimension\x18\x02 \x01(\x03"\xc2\x05\n\tSpVariant\x12\x33\n\x12sp_variant__object\x18\x01 \x01(\x0b\x32\x15.ast.SpVariant_ObjectH\x00\x12/\n\x10sp_variant__list\x18\x02 \x01(\x0b\x32\x13.ast.SpVariant_ListH\x00\x12\x39\n\x15sp_variant__timestamp\x18\x03 \x01(\x0b\x32\x18.ast.SpVariant_TimestampH\x00\x12/\n\x10sp_variant__date\x18\x04 \x01(\x0b\x32\x13.ast.SpVariant_DateH\x00\x12/\n\x10sp_variant__time\x18\x05 \x01(\x0b\x32\x13.ast.SpVariant_TimeH\x00\x12\x31\n\x11sp_variant__bytes\x18\x06 \x01(\x0b\x32\x14.ast.SpVariant_BytesH\x00\x12\x33\n\x12sp_variant__string\x18\x07 \x01(\x0b\x32\x15.ast.SpVariant_StringH\x00\x12/\n\x10sp_variant__bool\x18\x08 \x01(\x0b\x32\x13.ast.SpVariant_BoolH\x00\x12\x34\n\x13sp_variant__big_int\x18\t \x01(\x0b\x32\x15.ast.SpVariant_BigIntH\x00\x12<\n\x17sp_variant__big_decimal\x18\n \x01(\x0b\x32\x19.ast.SpVariant_BigDecimalH\x00\x12-\n\x0fsp_variant__int\x18\x0b \x01(\x0b\x32\x12.ast.SpVariant_IntH\x00\x12\x31\n\x11sp_variant__float\x18\x0c \x01(\x0b\x32\x14.ast.SpVariant_FloatH\x00\x12\x33\n\x12sp_variant__double\x18\r \x01(\x0b\x32\x15.ast.SpVariant_DoubleH\x00\x42\x0e\n\x0csealed_value"7\n\x10SpVariant_Object\x12#\n\x01v\x18\x01 \x03(\x0b\x32\x18.ast.Tuple_String_String"3\n\x0eSpVariant_List\x12!\n\x01v\x18\x01 \x03(\x0b\x32\x16.ast.Map_String_String" \n\x13SpVariant_Timestamp\x12\t\n\x01v\x18\x01 \x01(\x04"\x1b\n\x0eSpVariant_Date\x12\t\n\x01v\x18\x01 \x01(\x04"\x1b\n\x0eSpVariant_Time\x12\t\n\x01v\x18\x01 \x01(\x04"\x1c\n\x0fSpVariant_Bytes\x12\t\n\x01v\x18\x01 \x01(\x0c"\x1d\n\x10SpVariant_String\x12\t\n\x01v\x18\x01 \x01(\t"\x1b\n\x0eSpVariant_Bool\x12\t\n\x01v\x18\x01 \x01(\x08"\x1d\n\x10SpVariant_BigInt\x12\t\n\x01v\x18\x01 \x01(\x0c"!\n\x14SpVariant_BigDecimal\x12\t\n\x01v\x18\x01 \x01(\x0c"\x1a\n\rSpVariant_Int\x12\t\n\x01v\x18\x01 \x01(\x03"\x1c\n\x0fSpVariant_Float\x12\t\n\x01v\x18\x01 \x01(\x04"\x1d\n\x10SpVariant_Double\x12\t\n\x01v\x18\x01 \x01(\x04"#\n\x05SpRow\x12\x1a\n\x02vs\x18\x01 \x03(\x0b\x32\x0e.ast.SpVariant"k\n\x0bSrcPosition\x12\x0c\n\x04\x66ile\x18\x01 \x01(\t\x12\x12\n\nstart_line\x18\x02 \x01(\x03\x12\x14\n\x0cstart_column\x18\x03 \x01(\x03\x12\x10\n\x08\x65nd_line\x18\x04 \x01(\x03\x12\x12\n\nend_column\x18\x05 \x01(\x03"\x1a\n\x05VarId\x12\x11\n\tbitfield1\x18\x01 \x01(\x04"p\n\x07Request\x12$\n\x0e\x63lient_version\x18\x01 \x01(\x0b\x32\x0c.ast.Version\x12&\n\x0f\x63lient_language\x18\x02 \x01(\x0b\x32\r.ast.Language\x12\x17\n\x04\x62ody\x18\x03 \x03(\x0b\x32\t.ast.Stmt"%\n\x08Response\x12\x19\n\x04\x62ody\x18\x01 \x03(\x0b\x32\x0b.ast.Result"\xaf\x05\n\x05\x43onst\x12-\n\x0f\x62ig_decimal_val\x18\x01 \x01(\x0b\x32\x12.ast.BigDecimalValH\x00\x12%\n\x0b\x62ig_int_val\x18\x02 \x01(\x0b\x32\x0e.ast.BigIntValH\x00\x12$\n\nbinary_val\x18\x03 \x01(\x0b\x32\x0e.ast.BinaryValH\x00\x12 \n\x08\x62ool_val\x18\x04 \x01(\x0b\x32\x0c.ast.BoolValH\x00\x12 \n\x08\x64\x61te_val\x18\x05 \x01(\x0b\x32\x0c.ast.DateValH\x00\x12&\n\x0b\x66loat64_val\x18\x06 \x01(\x0b\x32\x0f.ast.Float64ValH\x00\x12\x1c\n\x06\x66n_val\x18\x07 \x01(\x0b\x32\n.ast.FnValH\x00\x12"\n\tint32_val\x18\x08 \x01(\x0b\x32\r.ast.Int32ValH\x00\x12"\n\tint64_val\x18\t \x01(\x0b\x32\r.ast.Int64ValH\x00\x12 \n\x08none_val\x18\n \x01(\x0b\x32\x0c.ast.NoneValH\x00\x12 \n\x08null_val\x18\x0b \x01(\x0b\x32\x0c.ast.NullValH\x00\x12-\n\x0fpython_date_val\x18\x0c \x01(\x0b\x32\x12.ast.PythonDateValH\x00\x12-\n\x0fpython_time_val\x18\r \x01(\x0b\x32\x12.ast.PythonTimeValH\x00\x12\x37\n\x14python_timestamp_val\x18\x0e \x01(\x0b\x32\x17.ast.PythonTimestampValH\x00\x12$\n\nstring_val\x18\x0f \x01(\x0b\x32\x0e.ast.StringValH\x00\x12 \n\x08time_val\x18\x10 \x01(\x0b\x32\x0c.ast.TimeValH\x00\x12*\n\rtimestamp_val\x18\x11 \x01(\x0b\x32\x11.ast.TimestampValH\x00\x42\t\n\x07variant"(\n\x07NoneVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition"(\n\x07NullVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition"3\n\x07\x42oolVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\x08"4\n\x08Int32Val\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\x03"4\n\x08Int64Val\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\x03"6\n\nFloat64Val\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\x01"5\n\tBigIntVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\x0c"U\n\rBigDecimalVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x0eunscaled_value\x18\x02 \x01(\x0c\x12\r\n\x05scale\x18\x03 \x01(\x03"5\n\tStringVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\t"5\n\tBinaryVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\x0c"8\n\x0cTimestampVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\x03"3\n\x07\x44\x61teVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\x03"3\n\x07TimeVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\x03"\xc1\x01\n\x12PythonTimestampVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0c\n\x04year\x18\x02 \x01(\x03\x12\r\n\x05month\x18\x03 \x01(\x03\x12\x0b\n\x03\x64\x61y\x18\x04 \x01(\x03\x12\x0c\n\x04hour\x18\x05 \x01(\x03\x12\x0e\n\x06minute\x18\x06 \x01(\x03\x12\x0e\n\x06second\x18\x07 \x01(\x03\x12\x13\n\x0bmicrosecond\x18\x08 \x01(\x03\x12\x1f\n\x02tz\x18\t \x01(\x0b\x32\x13.ast.PythonTimeZone"X\n\rPythonDateVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0c\n\x04year\x18\x02 \x01(\x03\x12\r\n\x05month\x18\x03 \x01(\x03\x12\x0b\n\x03\x64\x61y\x18\x04 \x01(\x03"\x92\x01\n\rPythonTimeVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0c\n\x04hour\x18\x02 \x01(\x03\x12\x0e\n\x06minute\x18\x03 \x01(\x03\x12\x0e\n\x06second\x18\x04 \x01(\x03\x12\x13\n\x0bmicrosecond\x18\x05 \x01(\x03\x12\x1f\n\x02tz\x18\x06 \x01(\x0b\x32\x13.ast.PythonTimeZone"O\n\x05\x46nVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0e\n\x06params\x18\x02 \x03(\t\x12\x17\n\x04\x62ody\x18\x03 \x01(\x0b\x32\t.ast.Expr"y\n\x06IfExpr\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x17\n\x04\x63ond\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1a\n\x07if_true\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x1b\n\x08if_false\x18\x04 \x01(\x0b\x32\t.ast.Expr">\n\x07SomeVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x14\n\x01v\x18\x02 \x01(\x0b\x32\t.ast.Expr"@\n\x08TupleVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x15\n\x02vs\x18\x02 \x03(\x0b\x32\t.ast.Expr"?\n\x07ListVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x15\n\x02vs\x18\x02 \x03(\x0b\x32\t.ast.Expr"F\n\tSeqMapVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1a\n\x03kvs\x18\x02 \x03(\x0b\x32\r.ast.TupleVal"\xef\x04\n\rBuiltInFnExpr\x12(\n\x0ftrait_string_fn\x18\x01 \x01(\x0b\x32\r.ast.StringFnH\x00\x12,\n\x0estring_collate\x18\x02 \x01(\x0b\x32\x12.ast.StringCollateH\x00\x12*\n\rstring_concat\x18\x03 \x01(\x0b\x32\x11.ast.StringConcatH\x00\x12.\n\x0fstring_contains\x18\x04 \x01(\x0b\x32\x13.ast.StringContainsH\x00\x12/\n\x10string_ends_with\x18\x05 \x01(\x0b\x32\x13.ast.StringEndsWithH\x00\x12$\n\nstring_len\x18\x06 \x01(\x0b\x32\x0e.ast.StringLenH\x00\x12&\n\x0bstring_like\x18\x07 \x01(\x0b\x32\x0f.ast.StringLikeH\x00\x12*\n\rstring_regexp\x18\x08 \x01(\x0b\x32\x11.ast.StringRegexpH\x00\x12\x35\n\x13string_regexp_count\x18\t \x01(\x0b\x32\x16.ast.StringRegexpCountH\x00\x12\x33\n\x12string_starts_with\x18\n \x01(\x0b\x32\x15.ast.StringStartsWithH\x00\x12*\n\rstring_substr\x18\x0b \x01(\x0b\x32\x11.ast.StringSubstrH\x00\x12-\n\x0fstring_to_lower\x18\x0c \x01(\x0b\x32\x12.ast.StringToLowerH\x00\x12-\n\x0fstring_to_upper\x18\r \x01(\x0b\x32\x12.ast.StringToUpperH\x00\x42\t\n\x07variant"Z\n\tApplyExpr\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x15\n\x02\x66n\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04\x61rgs\x18\x03 \x03(\x0b\x32\t.ast.Expr"P\n\x04PyFn\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0b\n\x03pkg\x18\x02 \x01(\t\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x0e\n\x06params\x18\x04 \x03(\t"K\n\x0cSnowflakeUdf\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0e\n\x06params\x18\x03 \x03(\t"M\n\x0eSnowflakeSproc\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0e\n\x06params\x18\x03 \x03(\t"F\n\x07UnaryOp\x12\x17\n\x03neg\x18\x01 \x01(\x0b\x32\x08.ast.NegH\x00\x12\x17\n\x03not\x18\x02 \x01(\x0b\x32\x08.ast.NotH\x00\x42\t\n\x07variant"\xc6\x03\n\x05\x42inOp\x12\x17\n\x03\x61\x64\x64\x18\x01 \x01(\x0b\x32\x08.ast.AddH\x00\x12\x17\n\x03\x61nd\x18\x02 \x01(\x0b\x32\x08.ast.AndH\x00\x12\x1e\n\x07\x62it_and\x18\x03 \x01(\x0b\x32\x0b.ast.BitAndH\x00\x12\x1c\n\x06\x62it_or\x18\x04 \x01(\x0b\x32\n.ast.BitOrH\x00\x12\x1e\n\x07\x62it_xor\x18\x05 \x01(\x0b\x32\x0b.ast.BitXorH\x00\x12\x17\n\x03\x64iv\x18\x06 \x01(\x0b\x32\x08.ast.DivH\x00\x12\x15\n\x02\x65q\x18\x07 \x01(\x0b\x32\x07.ast.EqH\x00\x12\x17\n\x03geq\x18\x08 \x01(\x0b\x32\x08.ast.GeqH\x00\x12\x15\n\x02gt\x18\t \x01(\x0b\x32\x07.ast.GtH\x00\x12\x17\n\x03leq\x18\n \x01(\x0b\x32\x08.ast.LeqH\x00\x12\x15\n\x02lt\x18\x0b \x01(\x0b\x32\x07.ast.LtH\x00\x12\x17\n\x03mod\x18\x0c \x01(\x0b\x32\x08.ast.ModH\x00\x12\x17\n\x03mul\x18\r \x01(\x0b\x32\x08.ast.MulH\x00\x12\x17\n\x03neq\x18\x0e \x01(\x0b\x32\x08.ast.NeqH\x00\x12\x15\n\x02or\x18\x0f \x01(\x0b\x32\x07.ast.OrH\x00\x12\x17\n\x03pow\x18\x10 \x01(\x0b\x32\x08.ast.PowH\x00\x12\x17\n\x03sub\x18\x11 \x01(\x0b\x32\x08.ast.SubH\x00\x42\t\n\x07variant"@\n\x03Not\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1a\n\x07operand\x18\x02 \x01(\x0b\x32\t.ast.Expr"T\n\x03\x41nd\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03lhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x03 \x01(\x0b\x32\t.ast.Expr"S\n\x02Or\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03lhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x03 \x01(\x0b\x32\t.ast.Expr"S\n\x02\x45q\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03lhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x03 \x01(\x0b\x32\t.ast.Expr"T\n\x03Neq\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03lhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x03 \x01(\x0b\x32\t.ast.Expr"S\n\x02Lt\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03lhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x03 \x01(\x0b\x32\t.ast.Expr"T\n\x03Leq\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03lhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x03 \x01(\x0b\x32\t.ast.Expr"S\n\x02Gt\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03lhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x03 \x01(\x0b\x32\t.ast.Expr"T\n\x03Geq\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03lhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x03 \x01(\x0b\x32\t.ast.Expr"@\n\x03Neg\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1a\n\x07operand\x18\x02 \x01(\x0b\x32\t.ast.Expr"T\n\x03\x41\x64\x64\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03lhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x03 \x01(\x0b\x32\t.ast.Expr"T\n\x03Sub\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03lhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x03 \x01(\x0b\x32\t.ast.Expr"T\n\x03Mul\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03lhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x03 \x01(\x0b\x32\t.ast.Expr"T\n\x03\x44iv\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03lhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x03 \x01(\x0b\x32\t.ast.Expr"T\n\x03Mod\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03lhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x03 \x01(\x0b\x32\t.ast.Expr"T\n\x03Pow\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03lhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x03 \x01(\x0b\x32\t.ast.Expr"W\n\x06\x42itAnd\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03lhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x03 \x01(\x0b\x32\t.ast.Expr"V\n\x05\x42itOr\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03lhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x03 \x01(\x0b\x32\t.ast.Expr"W\n\x06\x42itXor\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03lhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x03 \x01(\x0b\x32\t.ast.Expr"u\n\x08RangeVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x18\n\x05start\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04stop\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04step\x18\x04 \x01(\x0b\x32\t.ast.Expr"\x94\x04\n\x08StringFn\x12,\n\x0estring_collate\x18\x01 \x01(\x0b\x32\x12.ast.StringCollateH\x00\x12.\n\x0fstring_contains\x18\x02 \x01(\x0b\x32\x13.ast.StringContainsH\x00\x12/\n\x10string_ends_with\x18\x03 \x01(\x0b\x32\x13.ast.StringEndsWithH\x00\x12$\n\nstring_len\x18\x04 \x01(\x0b\x32\x0e.ast.StringLenH\x00\x12&\n\x0bstring_like\x18\x05 \x01(\x0b\x32\x0f.ast.StringLikeH\x00\x12*\n\rstring_regexp\x18\x06 \x01(\x0b\x32\x11.ast.StringRegexpH\x00\x12\x35\n\x13string_regexp_count\x18\x07 \x01(\x0b\x32\x16.ast.StringRegexpCountH\x00\x12\x33\n\x12string_starts_with\x18\x08 \x01(\x0b\x32\x15.ast.StringStartsWithH\x00\x12*\n\rstring_substr\x18\t \x01(\x0b\x32\x11.ast.StringSubstrH\x00\x12-\n\x0fstring_to_lower\x18\n \x01(\x0b\x32\x12.ast.StringToLowerH\x00\x12-\n\x0fstring_to_upper\x18\x0b \x01(\x0b\x32\x12.ast.StringToUpperH\x00\x42\t\n\x07variant"B\n\tStringLen\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03str\x18\x02 \x01(\x0b\x32\t.ast.Expr"F\n\rStringToUpper\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03str\x18\x02 \x01(\x0b\x32\t.ast.Expr"F\n\rStringToLower\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03str\x18\x02 \x01(\x0b\x32\t.ast.Expr"d\n\x10StringStartsWith\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03str\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x19\n\x06prefix\x18\x03 \x01(\x0b\x32\t.ast.Expr"b\n\x0eStringEndsWith\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03str\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x19\n\x06suffix\x18\x03 \x01(\x0b\x32\t.ast.Expr"u\n\x0cStringSubstr\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03str\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03pos\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03len\x18\x04 \x01(\x0b\x32\t.ast.Expr"c\n\x0eStringContains\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03str\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1a\n\x07pattern\x18\x03 \x01(\x0b\x32\t.ast.Expr"_\n\nStringLike\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03str\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1a\n\x07pattern\x18\x03 \x01(\x0b\x32\t.ast.Expr"a\n\x0cStringRegexp\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03str\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1a\n\x07pattern\x18\x03 \x01(\x0b\x32\t.ast.Expr"\x99\x01\n\x11StringRegexpCount\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03str\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1a\n\x07pattern\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03pos\x18\x04 \x01(\x0b\x32\t.ast.Expr\x12\x19\n\x06params\x18\x05 \x03(\x0b\x32\t.ast.Expr"^\n\rStringCollate\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03str\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x0e\x63ollation_spec\x18\x03 \x01(\t">\n\x0cStringConcat\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0f\n\x07strings\x18\x02 \x03(\t"\xb7L\n\x04\x45xpr\x12"\n\x0ctrait_bin_op\x18\x01 \x01(\x0b\x32\n.ast.BinOpH\x00\x12\x34\n\x16trait_built_in_fn_expr\x18\x02 \x01(\x0b\x32\x12.ast.BuiltInFnExprH\x00\x12!\n\x0btrait_const\x18\x03 \x01(\x0b\x32\n.ast.ConstH\x00\x12\x31\n\x14trait_sp_column_expr\x18\x04 \x01(\x0b\x32\x11.ast.SpColumnExprH\x00\x12-\n\x12trait_sp_column_fn\x18\x05 \x01(\x0b\x32\x0f.ast.SpColumnFnH\x00\x12H\n trait_sp_copyable_dataframe_expr\x18\x06 \x01(\x0b\x32\x1c.ast.SpCopyableDataframeExprH\x00\x12\x37\n\x17trait_sp_dataframe_expr\x18\x07 \x01(\x0b\x32\x14.ast.SpDataframeExprH\x00\x12J\n!trait_sp_dataframe_reader_options\x18\x08 \x01(\x0b\x32\x1d.ast.SpDataframeReaderOptionsH\x00\x12H\n trait_sp_dataframe_reader_schema\x18\t \x01(\x0b\x32\x1c.ast.SpDataframeReaderSchemaH\x00\x12;\n\x19trait_sp_dataframe_writer\x18\n \x01(\x0b\x32\x16.ast.SpDataframeWriterH\x00\x12J\n!trait_sp_dataframe_writer_options\x18\x0b \x01(\x0b\x32\x1d.ast.SpDataframeWriterOptionsH\x00\x12M\n#trait_sp_dataframe_writer_save_mode\x18\x0c \x01(\x0b\x32\x1e.ast.SpDataframeWriterSaveModeH\x00\x12[\n*trait_sp_relational_grouped_dataframe_expr\x18\r \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExprH\x00\x12(\n\x0ftrait_string_fn\x18\x0e \x01(\x0b\x32\r.ast.StringFnH\x00\x12&\n\x0etrait_unary_op\x18\x0f \x01(\x0b\x32\x0c.ast.UnaryOpH\x00\x12\x17\n\x03\x61\x64\x64\x18\x10 \x01(\x0b\x32\x08.ast.AddH\x00\x12\x17\n\x03\x61nd\x18\x11 \x01(\x0b\x32\x08.ast.AndH\x00\x12$\n\napply_expr\x18\x12 \x01(\x0b\x32\x0e.ast.ApplyExprH\x00\x12-\n\x0f\x62ig_decimal_val\x18\x13 \x01(\x0b\x32\x12.ast.BigDecimalValH\x00\x12%\n\x0b\x62ig_int_val\x18\x14 \x01(\x0b\x32\x0e.ast.BigIntValH\x00\x12$\n\nbinary_val\x18\x15 \x01(\x0b\x32\x0e.ast.BinaryValH\x00\x12\x1e\n\x07\x62it_and\x18\x16 \x01(\x0b\x32\x0b.ast.BitAndH\x00\x12\x1c\n\x06\x62it_or\x18\x17 \x01(\x0b\x32\n.ast.BitOrH\x00\x12\x1e\n\x07\x62it_xor\x18\x18 \x01(\x0b\x32\x0b.ast.BitXorH\x00\x12 \n\x08\x62ool_val\x18\x19 \x01(\x0b\x32\x0c.ast.BoolValH\x00\x12"\n\tcast_expr\x18\x1a \x01(\x0b\x32\r.ast.CastExprH\x00\x12 \n\x08\x64\x61te_val\x18\x1b \x01(\x0b\x32\x0c.ast.DateValH\x00\x12\x17\n\x03\x64iv\x18\x1c \x01(\x0b\x32\x08.ast.DivH\x00\x12\x15\n\x02\x65q\x18\x1d \x01(\x0b\x32\x07.ast.EqH\x00\x12&\n\x0b\x66loat64_val\x18\x1e \x01(\x0b\x32\x0f.ast.Float64ValH\x00\x12\x1c\n\x06\x66n_val\x18\x1f \x01(\x0b\x32\n.ast.FnValH\x00\x12\x17\n\x03geq\x18  \x01(\x0b\x32\x08.ast.GeqH\x00\x12\x15\n\x02gt\x18! \x01(\x0b\x32\x07.ast.GtH\x00\x12\x1e\n\x07if_expr\x18" \x01(\x0b\x32\x0b.ast.IfExprH\x00\x12"\n\tint32_val\x18# \x01(\x0b\x32\r.ast.Int32ValH\x00\x12"\n\tint64_val\x18$ \x01(\x0b\x32\r.ast.Int64ValH\x00\x12\x17\n\x03leq\x18% \x01(\x0b\x32\x08.ast.LeqH\x00\x12 \n\x08list_val\x18& \x01(\x0b\x32\x0c.ast.ListValH\x00\x12\x15\n\x02lt\x18\' \x01(\x0b\x32\x07.ast.LtH\x00\x12\x17\n\x03mod\x18( \x01(\x0b\x32\x08.ast.ModH\x00\x12\x17\n\x03mul\x18) \x01(\x0b\x32\x08.ast.MulH\x00\x12\x17\n\x03neg\x18* \x01(\x0b\x32\x08.ast.NegH\x00\x12\x17\n\x03neq\x18+ \x01(\x0b\x32\x08.ast.NeqH\x00\x12 \n\x08none_val\x18, \x01(\x0b\x32\x0c.ast.NoneValH\x00\x12\x17\n\x03not\x18- \x01(\x0b\x32\x08.ast.NotH\x00\x12 \n\x08null_val\x18. \x01(\x0b\x32\x0c.ast.NullValH\x00\x12\x15\n\x02or\x18/ \x01(\x0b\x32\x07.ast.OrH\x00\x12(\n\x0cpd_dataframe\x18\x30 \x01(\x0b\x32\x10.ast.PdDataframeH\x00\x12\x38\n\x15pd_dataframe_get_item\x18\x31 \x01(\x0b\x32\x17.ast.PdDataframeGetItemH\x00\x12\x32\n\x12pd_dataframe_i_loc\x18\x32 \x01(\x0b\x32\x14.ast.PdDataframeILocH\x00\x12/\n\x10pd_dataframe_loc\x18\x33 \x01(\x0b\x32\x13.ast.PdDataframeLocH\x00\x12\x38\n\x15pd_dataframe_set_item\x18\x34 \x01(\x0b\x32\x17.ast.PdDataframeSetItemH\x00\x12#\n\npd_drop_na\x18\x35 \x01(\x0b\x32\r.ast.PdDropNaH\x00\x12\x1e\n\x07pd_repr\x18\x36 \x01(\x0b\x32\x0b.ast.PdReprH\x00\x12\x17\n\x03pow\x18\x37 \x01(\x0b\x32\x08.ast.PowH\x00\x12\x1a\n\x05py_fn\x18\x38 \x01(\x0b\x32\t.ast.PyFnH\x00\x12-\n\x0fpython_date_val\x18\x39 \x01(\x0b\x32\x12.ast.PythonDateValH\x00\x12-\n\x0fpython_time_val\x18: \x01(\x0b\x32\x12.ast.PythonTimeValH\x00\x12\x37\n\x14python_timestamp_val\x18; \x01(\x0b\x32\x17.ast.PythonTimestampValH\x00\x12"\n\trange_val\x18< \x01(\x0b\x32\r.ast.RangeValH\x00\x12\x17\n\x03ref\x18= \x01(\x0b\x32\x08.ast.RefH\x00\x12%\n\x0bseq_map_val\x18> \x01(\x0b\x32\x0e.ast.SeqMapValH\x00\x12.\n\x0fsnowflake_sproc\x18? \x01(\x0b\x32\x13.ast.SnowflakeSprocH\x00\x12*\n\rsnowflake_udf\x18@ \x01(\x0b\x32\x11.ast.SnowflakeUdfH\x00\x12 \n\x08some_val\x18\x41 \x01(\x0b\x32\x0c.ast.SomeValH\x00\x12"\n\tsp_column\x18\x42 \x01(\x0b\x32\r.ast.SpColumnH\x00\x12-\n\x0fsp_column_alias\x18\x43 \x01(\x0b\x32\x12.ast.SpColumnAliasH\x00\x12\x36\n\x14sp_column_apply__int\x18\x44 \x01(\x0b\x32\x16.ast.SpColumnApply_IntH\x00\x12<\n\x17sp_column_apply__string\x18\x45 \x01(\x0b\x32\x19.ast.SpColumnApply_StringH\x00\x12)\n\rsp_column_asc\x18\x46 \x01(\x0b\x32\x10.ast.SpColumnAscH\x00\x12\x31\n\x11sp_column_between\x18G \x01(\x0b\x32\x14.ast.SpColumnBetweenH\x00\x12+\n\x0esp_column_cast\x18H \x01(\x0b\x32\x11.ast.SpColumnCastH\x00\x12+\n\x0esp_column_desc\x18I \x01(\x0b\x32\x11.ast.SpColumnDescH\x00\x12\x34\n\x13sp_column_equal_nan\x18J \x01(\x0b\x32\x15.ast.SpColumnEqualNanH\x00\x12\x36\n\x14sp_column_equal_null\x18K \x01(\x0b\x32\x16.ast.SpColumnEqualNullH\x00\x12<\n\x17sp_column_in__dataframe\x18L \x01(\x0b\x32\x19.ast.SpColumnIn_DataframeH\x00\x12\x30\n\x11sp_column_in__seq\x18M \x01(\x0b\x32\x13.ast.SpColumnIn_SeqH\x00\x12\x37\n\x15sp_column_is_not_null\x18N \x01(\x0b\x32\x16.ast.SpColumnIsNotNullH\x00\x12\x30\n\x11sp_column_is_null\x18O \x01(\x0b\x32\x13.ast.SpColumnIsNullH\x00\x12+\n\x0esp_column_name\x18P \x01(\x0b\x32\x11.ast.SpColumnNameH\x00\x12+\n\x0esp_column_over\x18Q \x01(\x0b\x32\x11.ast.SpColumnOverH\x00\x12)\n\rsp_column_ref\x18R \x01(\x0b\x32\x10.ast.SpColumnRefH\x00\x12\x32\n\x12sp_column_sql_expr\x18S \x01(\x0b\x32\x14.ast.SpColumnSqlExprH\x00\x12\x32\n\x12sp_column_try_cast\x18T \x01(\x0b\x32\x14.ast.SpColumnTryCastH\x00\x12:\n\x16sp_column_within_group\x18U \x01(\x0b\x32\x18.ast.SpColumnWithinGroupH\x00\x12\'\n\x0csp_copy_into\x18V \x01(\x0b\x32\x0f.ast.SpCopyIntoH\x00\x12\x35\n\x13sp_create_dataframe\x18W \x01(\x0b\x32\x16.ast.SpCreateDataframeH\x00\x12/\n\x10sp_dataframe_agg\x18X \x01(\x0b\x32\x13.ast.SpDataframeAggH\x00\x12\x33\n\x12sp_dataframe_apply\x18Y \x01(\x0b\x32\x15.ast.SpDataframeApplyH\x00\x12/\n\x10sp_dataframe_col\x18Z \x01(\x0b\x32\x13.ast.SpDataframeColH\x00\x12<\n\x17sp_dataframe_cross_join\x18[ \x01(\x0b\x32\x19.ast.SpDataframeCrossJoinH\x00\x12\x31\n\x11sp_dataframe_cube\x18\\ \x01(\x0b\x32\x14.ast.SpDataframeCubeH\x00\x12\x39\n\x15sp_dataframe_distinct\x18] \x01(\x0b\x32\x18.ast.SpDataframeDistinctH\x00\x12\x46\n\x1csp_dataframe_drop_duplicates\x18^ \x01(\x0b\x32\x1e.ast.SpDataframeDropDuplicatesH\x00\x12\x42\n\x1asp_dataframe_drop__columns\x18_ \x01(\x0b\x32\x1c.ast.SpDataframeDrop_ColumnsH\x00\x12\x42\n\x1asp_dataframe_drop__strings\x18` \x01(\x0b\x32\x1c.ast.SpDataframeDrop_StringsH\x00\x12\x35\n\x13sp_dataframe_except\x18\x61 \x01(\x0b\x32\x16.ast.SpDataframeExceptH\x00\x12\x35\n\x13sp_dataframe_filter\x18\x62 \x01(\x0b\x32\x16.ast.SpDataframeFilterH\x00\x12\x33\n\x12sp_dataframe_first\x18\x63 \x01(\x0b\x32\x15.ast.SpDataframeFirstH\x00\x12\x46\n\x1csp_dataframe_flatten__column\x18\x64 \x01(\x0b\x32\x1e.ast.SpDataframeFlatten_ColumnH\x00\x12z\n8sp_dataframe_flatten__column__string__bool__bool__string\x18\x65 \x01(\x0b\x32\x36.ast.SpDataframeFlatten_Column_String_Bool_Bool_StringH\x00\x12\x38\n\x15sp_dataframe_group_by\x18\x66 \x01(\x0b\x32\x17.ast.SpDataframeGroupByH\x00\x12R\n#sp_dataframe_group_by_grouping_sets\x18g \x01(\x0b\x32#.ast.SpDataframeGroupByGroupingSetsH\x00\x12I\n\x1esp_dataframe_group_by__columns\x18h \x01(\x0b\x32\x1f.ast.SpDataframeGroupBy_ColumnsH\x00\x12I\n\x1esp_dataframe_group_by__strings\x18i \x01(\x0b\x32\x1f.ast.SpDataframeGroupBy_StringsH\x00\x12;\n\x16sp_dataframe_intersect\x18j \x01(\x0b\x32\x19.ast.SpDataframeIntersectH\x00\x12\\\n(sp_dataframe_join__dataframe__join_exprs\x18k \x01(\x0b\x32(.ast.SpDataframeJoin_Dataframe_JoinExprsH\x00\x12\x62\n+sp_dataframe_join__dataframe__using_columns\x18l \x01(\x0b\x32+.ast.SpDataframeJoin_Dataframe_UsingColumnsH\x00\x12Z\n\'sp_dataframe_join__table_function__list\x18m \x01(\x0b\x32\'.ast.SpDataframeJoin_TableFunction_ListH\x00\x12X\n&sp_dataframe_join__table_function__map\x18n \x01(\x0b\x32&.ast.SpDataframeJoin_TableFunction_MapH\x00\x12\x33\n\x12sp_dataframe_limit\x18o \x01(\x0b\x32\x15.ast.SpDataframeLimitH\x00\x12\x36\n\x14sp_dataframe_na_drop\x18p \x01(\x0b\x32\x16.ast.SpDataframeNaDropH\x00\x12\x36\n\x14sp_dataframe_na_fill\x18q \x01(\x0b\x32\x16.ast.SpDataframeNaFillH\x00\x12<\n\x17sp_dataframe_na_replace\x18r \x01(\x0b\x32\x19.ast.SpDataframeNaReplaceH\x00\x12@\n\x19sp_dataframe_natural_join\x18s \x01(\x0b\x32\x1b.ast.SpDataframeNaturalJoinH\x00\x12\x42\n\x1asp_dataframe_pivot__column\x18t \x01(\x0b\x32\x1c.ast.SpDataframePivot_ColumnH\x00\x12\x42\n\x1asp_dataframe_pivot__string\x18u \x01(\x0b\x32\x1c.ast.SpDataframePivot_StringH\x00\x12@\n\x19sp_dataframe_random_split\x18v \x01(\x0b\x32\x1b.ast.SpDataframeRandomSplitH\x00\x12/\n\x10sp_dataframe_ref\x18w \x01(\x0b\x32\x13.ast.SpDataframeRefH\x00\x12\x35\n\x13sp_dataframe_rename\x18x \x01(\x0b\x32\x16.ast.SpDataframeRenameH\x00\x12\x46\n\x1csp_dataframe_rollup__columns\x18y \x01(\x0b\x32\x1e.ast.SpDataframeRollup_ColumnsH\x00\x12\x46\n\x1csp_dataframe_rollup__strings\x18z \x01(\x0b\x32\x1e.ast.SpDataframeRollup_StringsH\x00\x12\x44\n\x1bsp_dataframe_sample__double\x18{ \x01(\x0b\x32\x1d.ast.SpDataframeSample_DoubleH\x00\x12@\n\x19sp_dataframe_sample__long\x18| \x01(\x0b\x32\x1b.ast.SpDataframeSample_LongH\x00\x12\x46\n\x1csp_dataframe_select__columns\x18} \x01(\x0b\x32\x1e.ast.SpDataframeSelect_ColumnsH\x00\x12\x46\n\x1csp_dataframe_select__strings\x18~ \x01(\x0b\x32\x1e.ast.SpDataframeSelect_StringsH\x00\x12\x31\n\x11sp_dataframe_show\x18\x7f \x01(\x0b\x32\x14.ast.SpDataframeShowH\x00\x12\x32\n\x11sp_dataframe_sort\x18\x80\x01 \x01(\x0b\x32\x14.ast.SpDataframeSortH\x00\x12\x46\n\x1csp_dataframe_stats_cross_tab\x18\x81\x01 \x01(\x0b\x32\x1d.ast.SpDataframeStatsCrossTabH\x00\x12\x46\n\x1csp_dataframe_stats_sample_by\x18\x82\x01 \x01(\x0b\x32\x1d.ast.SpDataframeStatsSampleByH\x00\x12\x33\n\x12sp_dataframe_to_df\x18\x83\x01 \x01(\x0b\x32\x14.ast.SpDataframeToDfH\x00\x12\x34\n\x12sp_dataframe_union\x18\x84\x01 \x01(\x0b\x32\x15.ast.SpDataframeUnionH\x00\x12;\n\x16sp_dataframe_union_all\x18\x85\x01 \x01(\x0b\x32\x18.ast.SpDataframeUnionAllH\x00\x12I\n\x1esp_dataframe_union_all_by_name\x18\x86\x01 \x01(\x0b\x32\x1e.ast.SpDataframeUnionAllByNameH\x00\x12\x42\n\x1asp_dataframe_union_by_name\x18\x87\x01 \x01(\x0b\x32\x1b.ast.SpDataframeUnionByNameH\x00\x12\x34\n\x12sp_dataframe_where\x18\x88\x01 \x01(\x0b\x32\x15.ast.SpDataframeWhereH\x00\x12?\n\x18sp_dataframe_with_column\x18\x89\x01 \x01(\x0b\x32\x1a.ast.SpDataframeWithColumnH\x00\x12\x41\n\x19sp_dataframe_with_columns\x18\x8a\x01 \x01(\x0b\x32\x1b.ast.SpDataframeWithColumnsH\x00\x12\x34\n\x12sp_flatten__column\x18\x8b\x01 \x01(\x0b\x32\x15.ast.SpFlatten_ColumnH\x00\x12h\n.sp_flatten__column__string__bool__bool__string\x18\x8c\x01 \x01(\x0b\x32-.ast.SpFlatten_Column_String_Bool_Bool_StringH\x00\x12)\n\x0csp_generator\x18\x8d\x01 \x01(\x0b\x32\x10.ast.SpGeneratorH\x00\x12!\n\x08sp_range\x18\x8e\x01 \x01(\x0b\x32\x0c.ast.SpRangeH\x00\x12(\n\x0csp_read_avro\x18\x8f\x01 \x01(\x0b\x32\x0f.ast.SpReadAvroH\x00\x12&\n\x0bsp_read_csv\x18\x90\x01 \x01(\x0b\x32\x0e.ast.SpReadCsvH\x00\x12(\n\x0csp_read_json\x18\x91\x01 \x01(\x0b\x32\x0f.ast.SpReadJsonH\x00\x12&\n\x0bsp_read_orc\x18\x92\x01 \x01(\x0b\x32\x0e.ast.SpReadOrcH\x00\x12.\n\x0fsp_read_parquet\x18\x93\x01 \x01(\x0b\x32\x12.ast.SpReadParquetH\x00\x12*\n\rsp_read_table\x18\x94\x01 \x01(\x0b\x32\x10.ast.SpReadTableH\x00\x12&\n\x0bsp_read_xml\x18\x95\x01 \x01(\x0b\x32\x0e.ast.SpReadXmlH\x00\x12\x65\n,sp_relational_grouped_dataframe_agg__columns\x18\x96\x01 \x01(\x0b\x32,.ast.SpRelationalGroupedDataframeAgg_ColumnsH\x00\x12]\n(sp_relational_grouped_dataframe_agg__map\x18\x97\x01 \x01(\x0b\x32(.ast.SpRelationalGroupedDataframeAgg_MapH\x00\x12_\n)sp_relational_grouped_dataframe_any_value\x18\x98\x01 \x01(\x0b\x32).ast.SpRelationalGroupedDataframeAnyValueH\x00\x12T\n#sp_relational_grouped_dataframe_avg\x18\x99\x01 \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeAvgH\x00\x12\\\n\'sp_relational_grouped_dataframe_builtin\x18\x9a\x01 \x01(\x0b\x32(.ast.SpRelationalGroupedDataframeBuiltinH\x00\x12X\n%sp_relational_grouped_dataframe_count\x18\x9b\x01 \x01(\x0b\x32&.ast.SpRelationalGroupedDataframeCountH\x00\x12T\n#sp_relational_grouped_dataframe_max\x18\x9c\x01 \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeMaxH\x00\x12V\n$sp_relational_grouped_dataframe_mean\x18\x9d\x01 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeMeanH\x00\x12Z\n&sp_relational_grouped_dataframe_median\x18\x9e\x01 \x01(\x0b\x32\'.ast.SpRelationalGroupedDataframeMedianH\x00\x12T\n#sp_relational_grouped_dataframe_min\x18\x9f\x01 \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeMinH\x00\x12T\n#sp_relational_grouped_dataframe_sum\x18\xa0\x01 \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeSumH\x00\x12\x1d\n\x06sp_sql\x18\xa1\x01 \x01(\x0b\x32\n.ast.SpSqlH\x00\x12\x36\n\x13sp_stored_procedure\x18\xa2\x01 \x01(\x0b\x32\x16.ast.SpStoredProcedureH\x00\x12!\n\x08sp_table\x18\xa3\x01 \x01(\x0b\x32\x0c.ast.SpTableH\x00\x12\x32\n\x11sp_table_function\x18\xa4\x01 \x01(\x0b\x32\x14.ast.SpTableFunctionH\x00\x12(\n\x0csp_write_csv\x18\xa5\x01 \x01(\x0b\x32\x0f.ast.SpWriteCsvH\x00\x12*\n\rsp_write_json\x18\xa6\x01 \x01(\x0b\x32\x10.ast.SpWriteJsonH\x00\x12\x30\n\x10sp_write_parquet\x18\xa7\x01 \x01(\x0b\x32\x13.ast.SpWriteParquetH\x00\x12,\n\x0esp_write_table\x18\xa8\x01 \x01(\x0b\x32\x11.ast.SpWriteTableH\x00\x12-\n\x0estring_collate\x18\xa9\x01 \x01(\x0b\x32\x12.ast.StringCollateH\x00\x12+\n\rstring_concat\x18\xaa\x01 \x01(\x0b\x32\x11.ast.StringConcatH\x00\x12/\n\x0fstring_contains\x18\xab\x01 \x01(\x0b\x32\x13.ast.StringContainsH\x00\x12\x30\n\x10string_ends_with\x18\xac\x01 \x01(\x0b\x32\x13.ast.StringEndsWithH\x00\x12%\n\nstring_len\x18\xad\x01 \x01(\x0b\x32\x0e.ast.StringLenH\x00\x12\'\n\x0bstring_like\x18\xae\x01 \x01(\x0b\x32\x0f.ast.StringLikeH\x00\x12+\n\rstring_regexp\x18\xaf\x01 \x01(\x0b\x32\x11.ast.StringRegexpH\x00\x12\x36\n\x13string_regexp_count\x18\xb0\x01 \x01(\x0b\x32\x16.ast.StringRegexpCountH\x00\x12\x34\n\x12string_starts_with\x18\xb1\x01 \x01(\x0b\x32\x15.ast.StringStartsWithH\x00\x12+\n\rstring_substr\x18\xb2\x01 \x01(\x0b\x32\x11.ast.StringSubstrH\x00\x12.\n\x0fstring_to_lower\x18\xb3\x01 \x01(\x0b\x32\x12.ast.StringToLowerH\x00\x12.\n\x0fstring_to_upper\x18\xb4\x01 \x01(\x0b\x32\x12.ast.StringToUpperH\x00\x12%\n\nstring_val\x18\xb5\x01 \x01(\x0b\x32\x0e.ast.StringValH\x00\x12\x18\n\x03sub\x18\xb6\x01 \x01(\x0b\x32\x08.ast.SubH\x00\x12!\n\x08time_val\x18\xb7\x01 \x01(\x0b\x32\x0c.ast.TimeValH\x00\x12+\n\rtimestamp_val\x18\xb8\x01 \x01(\x0b\x32\x11.ast.TimestampValH\x00\x12#\n\ttuple_val\x18\xb9\x01 \x01(\x0b\x32\r.ast.TupleValH\x00\x42\t\n\x07variant"@\n\x03Ref\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1a\n\x06var_id\x18\x02 \x01(\x0b\x32\n.ast.VarId"W\n\x08\x43\x61stExpr\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03typ\x18\x02 \x01(\x0b\x32\t.ast.Type\x12\x14\n\x01v\x18\x03 \x01(\x0b\x32\t.ast.Expr"\x95\x01\n\x0bPdDataframe\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x17\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x18\n\x05index\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x1a\n\x07\x63olumns\x18\x04 \x01(\x0b\x32\t.ast.Expr\x12\x18\n\x05\x64type\x18\x05 \x01(\x0b\x32\t.ast.Type"\x8e\x01\n\x08PdDropNa\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x14\n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x08.ast.Ref\x12\x19\n\x06thresh\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04\x61xis\x18\x04 \x01(\x0b\x32\t.ast.Expr\x12\x19\n\x06subset\x18\x05 \x01(\x0b\x32\t.ast.Expr"e\n\x12PdDataframeGetItem\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x14\n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x08.ast.Ref\x12\x1a\n\x07key_arg\x18\x03 \x01(\x0b\x32\t.ast.Expr"{\n\x12PdDataframeSetItem\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x14\n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x08.ast.Ref\x12\x1a\n\x07key_arg\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x14\n\x01v\x18\x04 \x01(\x0b\x32\t.ast.Expr"z\n\x0ePdDataframeLoc\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x14\n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x08.ast.Ref\x12\x17\n\x04rows\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x1a\n\x07\x63olumns\x18\x04 \x01(\x0b\x32\t.ast.Expr"{\n\x0fPdDataframeILoc\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x14\n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x08.ast.Ref\x12\x17\n\x04rows\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x1a\n\x07\x63olumns\x18\x04 \x01(\x0b\x32\t.ast.Expr"r\n\x06PdRepr\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\r\n\x05\x61sync\x18\x02 \x01(\x08\x12\x13\n\x01v\x18\x03 \x01(\x0b\x32\x08.ast.Ref\x12\x10\n\x08max_rows\x18\x04 \x01(\x03\x12\x13\n\x0bmax_columns\x18\x05 \x01(\x03"u\n\x0cPdReprResult\x12\x10\n\x08num_rows\x18\x01 \x01(\x03\x12\x13\n\x0bnum_columns\x18\x02 \x01(\x03\x12\x15\n\rnum_head_rows\x18\x03 \x01(\x03\x12\x18\n\x10num_head_columns\x18\x04 \x01(\x03\x12\r\n\x05value\x18\x05 \x01(\x0c"\x9e\x01\n\x06Result\x12!\n\x0btrait_error\x18\x01 \x01(\x0b\x32\n.ast.ErrorH\x00\x12\x1e\n\x07\x65val_ok\x18\x02 \x01(\x0b\x32\x0b.ast.EvalOkH\x00\x12\x46\n\x1csession_reset_required_error\x18\x03 \x01(\x0b\x32\x1e.ast.SessionResetRequiredErrorH\x00\x42\t\n\x07variant"\x84\x06\n\nEvalResult\x12!\n\x0btrait_const\x18\x01 \x01(\x0b\x32\n.ast.ConstH\x00\x12-\n\x0f\x62ig_decimal_val\x18\x02 \x01(\x0b\x32\x12.ast.BigDecimalValH\x00\x12%\n\x0b\x62ig_int_val\x18\x03 \x01(\x0b\x32\x0e.ast.BigIntValH\x00\x12$\n\nbinary_val\x18\x04 \x01(\x0b\x32\x0e.ast.BinaryValH\x00\x12 \n\x08\x62ool_val\x18\x05 \x01(\x0b\x32\x0c.ast.BoolValH\x00\x12 \n\x08\x64\x61te_val\x18\x06 \x01(\x0b\x32\x0c.ast.DateValH\x00\x12&\n\x0b\x66loat64_val\x18\x07 \x01(\x0b\x32\x0f.ast.Float64ValH\x00\x12\x1c\n\x06\x66n_val\x18\x08 \x01(\x0b\x32\n.ast.FnValH\x00\x12"\n\tint32_val\x18\t \x01(\x0b\x32\r.ast.Int32ValH\x00\x12"\n\tint64_val\x18\n \x01(\x0b\x32\r.ast.Int64ValH\x00\x12 \n\x08none_val\x18\x0b \x01(\x0b\x32\x0c.ast.NoneValH\x00\x12 \n\x08null_val\x18\x0c \x01(\x0b\x32\x0c.ast.NullValH\x00\x12+\n\x0epd_repr_result\x18\r \x01(\x0b\x32\x11.ast.PdReprResultH\x00\x12-\n\x0fpython_date_val\x18\x0e \x01(\x0b\x32\x12.ast.PythonDateValH\x00\x12-\n\x0fpython_time_val\x18\x0f \x01(\x0b\x32\x12.ast.PythonTimeValH\x00\x12\x37\n\x14python_timestamp_val\x18\x10 \x01(\x0b\x32\x17.ast.PythonTimestampValH\x00\x12$\n\nstring_val\x18\x11 \x01(\x0b\x32\x0e.ast.StringValH\x00\x12 \n\x08time_val\x18\x12 \x01(\x0b\x32\x0c.ast.TimeValH\x00\x12*\n\rtimestamp_val\x18\x13 \x01(\x0b\x32\x11.ast.TimestampValH\x00\x42\t\n\x07variant"P\n\x06\x45valOk\x12\x0b\n\x03uid\x18\x01 \x01(\x03\x12\x1a\n\x06var_id\x18\x02 \x01(\x0b\x32\n.ast.VarId\x12\x1d\n\x04\x64\x61ta\x18\x03 \x01(\x0b\x32\x0f.ast.EvalResult"Z\n\x05\x45rror\x12\x46\n\x1csession_reset_required_error\x18\x01 \x01(\x0b\x32\x1e.ast.SessionResetRequiredErrorH\x00\x42\t\n\x07variant"D\n\x19SessionResetRequiredError\x12\x0b\n\x03uid\x18\x01 \x01(\x03\x12\x1a\n\x06var_id\x18\x02 \x01(\x0b\x32\n.ast.VarId"\xba\x02\n\x0cSpColumnExpr\x12"\n\tsp_column\x18\x01 \x01(\x0b\x32\r.ast.SpColumnH\x00\x12\x36\n\x14sp_column_equal_null\x18\x02 \x01(\x0b\x32\x16.ast.SpColumnEqualNullH\x00\x12)\n\rsp_column_ref\x18\x03 \x01(\x0b\x32\x10.ast.SpColumnRefH\x00\x12\x32\n\x12sp_column_sql_expr\x18\x04 \x01(\x0b\x32\x14.ast.SpColumnSqlExprH\x00\x12\x33\n\x12sp_dataframe_apply\x18\x05 \x01(\x0b\x32\x15.ast.SpDataframeApplyH\x00\x12/\n\x10sp_dataframe_col\x18\x06 \x01(\x0b\x32\x13.ast.SpDataframeColH\x00\x42\t\n\x07variant"8\n\x0bSpColumnRef\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\n\n\x02id\x18\x02 \x01(\t"g\n\x08SpColumn\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0c\n\x04name\x18\x02 \x01(\t\x12.\n\x08\x64\x66_alias\x18\x03 \x01(\x0b\x32\x1c.google.protobuf.StringValue"m\n\x0fSpColumnSqlExpr\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0b\n\x03sql\x18\x02 \x01(\t\x12.\n\x08\x64\x66_alias\x18\x03 \x01(\x0b\x32\x1c.google.protobuf.StringValue"\xcf\x06\n\nSpColumnFn\x12-\n\x0fsp_column_alias\x18\x01 \x01(\x0b\x32\x12.ast.SpColumnAliasH\x00\x12\x36\n\x14sp_column_apply__int\x18\x02 \x01(\x0b\x32\x16.ast.SpColumnApply_IntH\x00\x12<\n\x17sp_column_apply__string\x18\x03 \x01(\x0b\x32\x19.ast.SpColumnApply_StringH\x00\x12)\n\rsp_column_asc\x18\x04 \x01(\x0b\x32\x10.ast.SpColumnAscH\x00\x12\x31\n\x11sp_column_between\x18\x05 \x01(\x0b\x32\x14.ast.SpColumnBetweenH\x00\x12+\n\x0esp_column_cast\x18\x06 \x01(\x0b\x32\x11.ast.SpColumnCastH\x00\x12+\n\x0esp_column_desc\x18\x07 \x01(\x0b\x32\x11.ast.SpColumnDescH\x00\x12\x34\n\x13sp_column_equal_nan\x18\x08 \x01(\x0b\x32\x15.ast.SpColumnEqualNanH\x00\x12<\n\x17sp_column_in__dataframe\x18\t \x01(\x0b\x32\x19.ast.SpColumnIn_DataframeH\x00\x12\x30\n\x11sp_column_in__seq\x18\n \x01(\x0b\x32\x13.ast.SpColumnIn_SeqH\x00\x12\x37\n\x15sp_column_is_not_null\x18\x0b \x01(\x0b\x32\x16.ast.SpColumnIsNotNullH\x00\x12\x30\n\x11sp_column_is_null\x18\x0c \x01(\x0b\x32\x13.ast.SpColumnIsNullH\x00\x12+\n\x0esp_column_name\x18\r \x01(\x0b\x32\x11.ast.SpColumnNameH\x00\x12+\n\x0esp_column_over\x18\x0e \x01(\x0b\x32\x11.ast.SpColumnOverH\x00\x12\x32\n\x12sp_column_try_cast\x18\x0f \x01(\x0b\x32\x14.ast.SpColumnTryCastH\x00\x12:\n\x16sp_column_within_group\x18\x10 \x01(\x0b\x32\x18.ast.SpColumnWithinGroupH\x00\x42\t\n\x07variant"\x87\x01\n\rSpColumnAlias\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03\x63ol\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x31\n\rvariant_is_as\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.BoolValue"W\n\x11SpColumnApply_Int\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03\x63ol\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x0b\n\x03idx\x18\x03 \x01(\x03"\\\n\x14SpColumnApply_String\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03\x63ol\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\r\n\x05\x66ield\x18\x03 \x01(\t"u\n\x0bSpColumnAsc\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03\x63ol\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12/\n\x0bnulls_first\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.BoolValue"\x88\x01\n\x0fSpColumnBetween\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03\x63ol\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1e\n\x0blower_bound\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x1e\n\x0bupper_bound\x18\x04 \x01(\x0b\x32\t.ast.Expr"b\n\x0cSpColumnCast\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03\x63ol\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1b\n\x02to\x18\x03 \x01(\x0b\x32\x0f.ast.SpDataType"e\n\x0fSpColumnTryCast\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03\x63ol\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1b\n\x02to\x18\x03 \x01(\x0b\x32\x0f.ast.SpDataType"v\n\x0cSpColumnDesc\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03\x63ol\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12/\n\x0bnulls_first\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.BoolValue"I\n\x10SpColumnEqualNan\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03\x63ol\x18\x02 \x01(\x0b\x32\t.ast.Expr"b\n\x11SpColumnEqualNull\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03lhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x03 \x01(\x0b\x32\t.ast.Expr"o\n\x14SpColumnIn_Dataframe\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03\x63ol\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12 \n\x02\x64\x66\x18\x03 \x01(\x0b\x32\x14.ast.SpDataframeExpr"b\n\x0eSpColumnIn_Seq\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03\x63ol\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x19\n\x06values\x18\x03 \x03(\x0b\x32\t.ast.Expr"J\n\x11SpColumnIsNotNull\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03\x63ol\x18\x02 \x01(\x0b\x32\t.ast.Expr"G\n\x0eSpColumnIsNull\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03\x63ol\x18\x02 \x01(\x0b\x32\t.ast.Expr"T\n\x0cSpColumnName\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03\x63ol\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\r\n\x05\x61lias\x18\x03 \x01(\t"q\n\x0cSpColumnOver\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03\x63ol\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12*\n\x0bwindow_spec\x18\x03 \x01(\x0b\x32\x15.ast.SpWindowSpecExpr"w\n\x13SpColumnWithinGroup\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03\x63ol\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04\x63ols\x18\x03 \x03(\x0b\x32\t.ast.Expr\x12\x10\n\x08variadic\x18\x04 \x01(\x08"\x9e\x1d\n\x0fSpDataframeExpr\x12H\n trait_sp_copyable_dataframe_expr\x18\x01 \x01(\x0b\x32\x1c.ast.SpCopyableDataframeExprH\x00\x12J\n!trait_sp_dataframe_reader_options\x18\x02 \x01(\x0b\x32\x1d.ast.SpDataframeReaderOptionsH\x00\x12H\n trait_sp_dataframe_reader_schema\x18\x03 \x01(\x0b\x32\x1c.ast.SpDataframeReaderSchemaH\x00\x12\'\n\x0csp_copy_into\x18\x04 \x01(\x0b\x32\x0f.ast.SpCopyIntoH\x00\x12\x35\n\x13sp_create_dataframe\x18\x05 \x01(\x0b\x32\x16.ast.SpCreateDataframeH\x00\x12/\n\x10sp_dataframe_agg\x18\x06 \x01(\x0b\x32\x13.ast.SpDataframeAggH\x00\x12<\n\x17sp_dataframe_cross_join\x18\x07 \x01(\x0b\x32\x19.ast.SpDataframeCrossJoinH\x00\x12\x31\n\x11sp_dataframe_cube\x18\x08 \x01(\x0b\x32\x14.ast.SpDataframeCubeH\x00\x12\x39\n\x15sp_dataframe_distinct\x18\t \x01(\x0b\x32\x18.ast.SpDataframeDistinctH\x00\x12\x46\n\x1csp_dataframe_drop_duplicates\x18\n \x01(\x0b\x32\x1e.ast.SpDataframeDropDuplicatesH\x00\x12\x42\n\x1asp_dataframe_drop__columns\x18\x0b \x01(\x0b\x32\x1c.ast.SpDataframeDrop_ColumnsH\x00\x12\x42\n\x1asp_dataframe_drop__strings\x18\x0c \x01(\x0b\x32\x1c.ast.SpDataframeDrop_StringsH\x00\x12\x35\n\x13sp_dataframe_except\x18\r \x01(\x0b\x32\x16.ast.SpDataframeExceptH\x00\x12\x35\n\x13sp_dataframe_filter\x18\x0e \x01(\x0b\x32\x16.ast.SpDataframeFilterH\x00\x12\x33\n\x12sp_dataframe_first\x18\x0f \x01(\x0b\x32\x15.ast.SpDataframeFirstH\x00\x12\x46\n\x1csp_dataframe_flatten__column\x18\x10 \x01(\x0b\x32\x1e.ast.SpDataframeFlatten_ColumnH\x00\x12z\n8sp_dataframe_flatten__column__string__bool__bool__string\x18\x11 \x01(\x0b\x32\x36.ast.SpDataframeFlatten_Column_String_Bool_Bool_StringH\x00\x12;\n\x16sp_dataframe_intersect\x18\x12 \x01(\x0b\x32\x19.ast.SpDataframeIntersectH\x00\x12\\\n(sp_dataframe_join__dataframe__join_exprs\x18\x13 \x01(\x0b\x32(.ast.SpDataframeJoin_Dataframe_JoinExprsH\x00\x12\x62\n+sp_dataframe_join__dataframe__using_columns\x18\x14 \x01(\x0b\x32+.ast.SpDataframeJoin_Dataframe_UsingColumnsH\x00\x12Z\n\'sp_dataframe_join__table_function__list\x18\x15 \x01(\x0b\x32\'.ast.SpDataframeJoin_TableFunction_ListH\x00\x12X\n&sp_dataframe_join__table_function__map\x18\x16 \x01(\x0b\x32&.ast.SpDataframeJoin_TableFunction_MapH\x00\x12\x33\n\x12sp_dataframe_limit\x18\x17 \x01(\x0b\x32\x15.ast.SpDataframeLimitH\x00\x12\x36\n\x14sp_dataframe_na_drop\x18\x18 \x01(\x0b\x32\x16.ast.SpDataframeNaDropH\x00\x12\x36\n\x14sp_dataframe_na_fill\x18\x19 \x01(\x0b\x32\x16.ast.SpDataframeNaFillH\x00\x12<\n\x17sp_dataframe_na_replace\x18\x1a \x01(\x0b\x32\x19.ast.SpDataframeNaReplaceH\x00\x12@\n\x19sp_dataframe_natural_join\x18\x1b \x01(\x0b\x32\x1b.ast.SpDataframeNaturalJoinH\x00\x12@\n\x19sp_dataframe_random_split\x18\x1c \x01(\x0b\x32\x1b.ast.SpDataframeRandomSplitH\x00\x12/\n\x10sp_dataframe_ref\x18\x1d \x01(\x0b\x32\x13.ast.SpDataframeRefH\x00\x12\x35\n\x13sp_dataframe_rename\x18\x1e \x01(\x0b\x32\x16.ast.SpDataframeRenameH\x00\x12\x44\n\x1bsp_dataframe_sample__double\x18\x1f \x01(\x0b\x32\x1d.ast.SpDataframeSample_DoubleH\x00\x12@\n\x19sp_dataframe_sample__long\x18  \x01(\x0b\x32\x1b.ast.SpDataframeSample_LongH\x00\x12\x46\n\x1csp_dataframe_select__columns\x18! \x01(\x0b\x32\x1e.ast.SpDataframeSelect_ColumnsH\x00\x12\x46\n\x1csp_dataframe_select__strings\x18" \x01(\x0b\x32\x1e.ast.SpDataframeSelect_StringsH\x00\x12\x31\n\x11sp_dataframe_show\x18# \x01(\x0b\x32\x14.ast.SpDataframeShowH\x00\x12\x31\n\x11sp_dataframe_sort\x18$ \x01(\x0b\x32\x14.ast.SpDataframeSortH\x00\x12\x45\n\x1csp_dataframe_stats_cross_tab\x18% \x01(\x0b\x32\x1d.ast.SpDataframeStatsCrossTabH\x00\x12\x45\n\x1csp_dataframe_stats_sample_by\x18& \x01(\x0b\x32\x1d.ast.SpDataframeStatsSampleByH\x00\x12\x32\n\x12sp_dataframe_to_df\x18\' \x01(\x0b\x32\x14.ast.SpDataframeToDfH\x00\x12\x33\n\x12sp_dataframe_union\x18( \x01(\x0b\x32\x15.ast.SpDataframeUnionH\x00\x12:\n\x16sp_dataframe_union_all\x18) \x01(\x0b\x32\x18.ast.SpDataframeUnionAllH\x00\x12H\n\x1esp_dataframe_union_all_by_name\x18* \x01(\x0b\x32\x1e.ast.SpDataframeUnionAllByNameH\x00\x12\x41\n\x1asp_dataframe_union_by_name\x18+ \x01(\x0b\x32\x1b.ast.SpDataframeUnionByNameH\x00\x12\x33\n\x12sp_dataframe_where\x18, \x01(\x0b\x32\x15.ast.SpDataframeWhereH\x00\x12>\n\x18sp_dataframe_with_column\x18- \x01(\x0b\x32\x1a.ast.SpDataframeWithColumnH\x00\x12@\n\x19sp_dataframe_with_columns\x18. \x01(\x0b\x32\x1b.ast.SpDataframeWithColumnsH\x00\x12\x33\n\x12sp_flatten__column\x18/ \x01(\x0b\x32\x15.ast.SpFlatten_ColumnH\x00\x12g\n.sp_flatten__column__string__bool__bool__string\x18\x30 \x01(\x0b\x32-.ast.SpFlatten_Column_String_Bool_Bool_StringH\x00\x12(\n\x0csp_generator\x18\x31 \x01(\x0b\x32\x10.ast.SpGeneratorH\x00\x12 \n\x08sp_range\x18\x32 \x01(\x0b\x32\x0c.ast.SpRangeH\x00\x12\'\n\x0csp_read_avro\x18\x33 \x01(\x0b\x32\x0f.ast.SpReadAvroH\x00\x12%\n\x0bsp_read_csv\x18\x34 \x01(\x0b\x32\x0e.ast.SpReadCsvH\x00\x12\'\n\x0csp_read_json\x18\x35 \x01(\x0b\x32\x0f.ast.SpReadJsonH\x00\x12%\n\x0bsp_read_orc\x18\x36 \x01(\x0b\x32\x0e.ast.SpReadOrcH\x00\x12-\n\x0fsp_read_parquet\x18\x37 \x01(\x0b\x32\x12.ast.SpReadParquetH\x00\x12)\n\rsp_read_table\x18\x38 \x01(\x0b\x32\x10.ast.SpReadTableH\x00\x12%\n\x0bsp_read_xml\x18\x39 \x01(\x0b\x32\x0e.ast.SpReadXmlH\x00\x12\x1c\n\x06sp_sql\x18: \x01(\x0b\x32\n.ast.SpSqlH\x00\x12\x35\n\x13sp_stored_procedure\x18; \x01(\x0b\x32\x16.ast.SpStoredProcedureH\x00\x12 \n\x08sp_table\x18< \x01(\x0b\x32\x0c.ast.SpTableH\x00\x12\x31\n\x11sp_table_function\x18= \x01(\x0b\x32\x14.ast.SpTableFunctionH\x00\x42\t\n\x07variant"G\n\x0eSpDataframeRef\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x02id\x18\x02 \x01(\x0b\x32\n.ast.VarId"H\n\x0fSpDataframeShow\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x02id\x18\x02 \x01(\x0b\x32\n.ast.VarId"\x81\x01\n\x11SpCreateDataframe\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x18\n\x04\x64\x61ta\x18\x02 \x03(\x0b\x32\n.ast.SpRow\x12!\n\x06schema\x18\x03 \x01(\x0b\x32\x11.ast.SpStructType\x12\x10\n\x08variadic\x18\x04 \x01(\x08"\xbd\x01\n(SpFlatten_Column_String_Bool_Bool_String\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x05input\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x0c\n\x04path\x18\x03 \x01(\t\x12\r\n\x05outer\x18\x04 \x01(\x08\x12\x11\n\trecursive\x18\x05 \x01(\x08\x12 \n\x04mode\x18\x06 \x01(\x0b\x32\x12.ast.SpFlattenMode"S\n\x10SpFlatten_Column\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x05input\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnExpr"u\n\x0bSpGenerator\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x11\n\trow_count\x18\x02 \x01(\x03\x12"\n\x07\x63olumns\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr\x12\x10\n\x08variadic\x18\x04 \x01(\x08"\x8c\x01\n\x07SpRange\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12*\n\x05start\x18\x02 \x01(\x0b\x32\x1b.google.protobuf.Int64Value\x12\x0b\n\x03\x65nd\x18\x03 \x01(\x03\x12)\n\x04step\x18\x04 \x01(\x0b\x32\x1b.google.protobuf.Int64Value"5\n\x05SpSql\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\r\n\x05query\x18\x02 \x01(\t"s\n\x11SpStoredProcedure\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0f\n\x07sp_name\x18\x02 \x01(\t\x12\x1c\n\x04\x61rgs\x18\x03 \x03(\x0b\x32\x0e.ast.SpVariant\x12\x10\n\x08variadic\x18\x04 \x01(\x08"Y\n\x07SpTable\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x10\n\x08\x64\x61tabase\x18\x02 \x01(\t\x12\x0e\n\x06schema\x18\x03 \x01(\t\x12\r\n\x05table\x18\x04 \x01(\t"|\n\x0fSpTableFunction\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\n\n\x02\x66n\x18\x02 \x01(\t\x12,\n\x04\x61rgs\x18\x03 \x03(\x0b\x32\x1e.ast.Tuple_String_SpColumnExpr\x12\x10\n\x08variadic\x18\x04 \x01(\x08"w\n\x0fSpDataframeToDf\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x11\n\tcol_names\x18\x03 \x03(\t\x12\x10\n\x08variadic\x18\x04 \x01(\x08"\x81\x01\n\x11SpDataframeNaDrop\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x15min_non_nulls_per_row\x18\x03 \x01(\x03\x12\x0c\n\x04\x63ols\x18\x04 \x03(\t"\x84\x01\n\x11SpDataframeNaFill\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12.\n\tvalue_map\x18\x03 \x03(\x0b\x32\x1b.ast.Tuple_String_SpVariant"\x9e\x01\n\x14SpDataframeNaReplace\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x10\n\x08\x63ol_name\x18\x03 \x01(\t\x12\x33\n\x0breplacement\x18\x04 \x03(\x0b\x32\x1e.ast.Tuple_SpVariant_SpVariant"\x85\x01\n\x0eSpDataframeAgg\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12 \n\x05\x65xprs\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr\x12\x10\n\x08variadic\x18\x04 \x01(\x08"e\n\x10SpDataframeApply\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x10\n\x08\x63ol_name\x18\x03 \x01(\t"c\n\x0eSpDataframeCol\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x10\n\x08\x63ol_name\x18\x03 \x01(\t"{\n\x14SpDataframeCrossJoin\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12!\n\x03lhs\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12!\n\x03rhs\x18\x03 \x01(\x0b\x32\x14.ast.SpDataframeExpr"\x85\x01\n\x0fSpDataframeCube\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1f\n\x04\x63ols\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr\x12\x10\n\x08variadic\x18\x04 \x01(\x08"V\n\x13SpDataframeDistinct\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr"\x8d\x01\n\x17SpDataframeDrop_Columns\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1f\n\x04\x63ols\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr\x12\x10\n\x08variadic\x18\x04 \x01(\x08"z\n\x17SpDataframeDrop_Strings\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x0c\n\x04\x63ols\x18\x03 \x03(\t\x12\x10\n\x08variadic\x18\x04 \x01(\x08"j\n\x19SpDataframeDropDuplicates\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x0c\n\x04\x63ols\x18\x03 \x03(\t"y\n\x11SpDataframeExcept\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12#\n\x05other\x18\x03 \x01(\x0b\x32\x14.ast.SpDataframeExpr"z\n\x11SpDataframeFilter\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12$\n\tcondition\x18\x03 \x01(\x0b\x32\x11.ast.SpColumnExpr"\xe8\x01\n1SpDataframeFlatten_Column_String_Bool_Bool_String\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12 \n\x05input\x18\x03 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x0c\n\x04path\x18\x04 \x01(\t\x12\r\n\x05outer\x18\x05 \x01(\x08\x12\x11\n\trecursive\x18\x06 \x01(\x08\x12 \n\x04mode\x18\x07 \x01(\x0b\x32\x12.ast.SpFlattenMode"~\n\x19SpDataframeFlatten_Column\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12 \n\x05input\x18\x03 \x01(\x0b\x32\x11.ast.SpColumnExpr"\xa1\x01\n\x10SpDataframeFirst\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x0b\n\x03num\x18\x03 \x01(\x03\x12\r\n\x05\x62lock\x18\x04 \x01(\x08\x12\x30\n\x10statement_params\x18\x05 \x01(\x0b\x32\x16.ast.Map_String_String"\x90\x01\n\x1aSpDataframeGroupBy_Columns\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1f\n\x04\x63ols\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr\x12\x10\n\x08variadic\x18\x04 \x01(\x08"}\n\x1aSpDataframeGroupBy_Strings\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x0c\n\x04\x63ols\x18\x03 \x03(\t\x12\x10\n\x08variadic\x18\x04 \x01(\x08"U\n\x12SpDataframeGroupBy\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr"|\n\x14SpDataframeIntersect\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12#\n\x05other\x18\x03 \x01(\x0b\x32\x14.ast.SpDataframeExpr"\x8e\x02\n!SpDataframeJoin_TableFunction_Map\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12"\n\x04\x66unc\x18\x03 \x01(\x0b\x32\x14.ast.SpTableFunction\x12,\n\x04\x61rgs\x18\x04 \x03(\x0b\x32\x1e.ast.Tuple_String_SpColumnExpr\x12,\n\x0cpartition_by\x18\x05 \x01(\x0b\x32\x16.ast.List_SpColumnExpr\x12(\n\x08order_by\x18\x06 \x01(\x0b\x32\x16.ast.List_SpColumnExpr"\x94\x02\n"SpDataframeJoin_TableFunction_List\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12"\n\x04\x66unc\x18\x03 \x01(\x0b\x32\x14.ast.SpTableFunction\x12\x1f\n\x04\x61rgs\x18\x04 \x03(\x0b\x32\x11.ast.SpColumnExpr\x12,\n\x0cpartition_by\x18\x05 \x01(\x0b\x32\x16.ast.List_SpColumnExpr\x12(\n\x08order_by\x18\x06 \x01(\x0b\x32\x16.ast.List_SpColumnExpr\x12\x10\n\x08variadic\x18\x07 \x01(\x08"\xd8\x01\n#SpDataframeJoin_Dataframe_JoinExprs\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12!\n\x03lhs\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12!\n\x03rhs\x18\x03 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12(\n\njoin_exprs\x18\x04 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12"\n\tjoin_type\x18\x05 \x01(\x0b\x32\x0f.ast.SpJoinType"\xec\x01\n&SpDataframeJoin_Dataframe_UsingColumns\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12!\n\x03lhs\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12!\n\x03rhs\x18\x03 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\'\n\rusing_columns\x18\x04 \x01(\x0b\x32\x10.ast.List_String\x12"\n\tjoin_type\x18\x05 \x01(\x0b\x32\x0f.ast.SpJoinType\x12\x10\n\x08variadic\x18\x06 \x01(\x08"^\n\x10SpDataframeLimit\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\t\n\x01n\x18\x03 \x01(\x03"\xa1\x01\n\x16SpDataframeNaturalJoin\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12!\n\x03lhs\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12!\n\x03rhs\x18\x03 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12"\n\tjoin_type\x18\x04 \x01(\x0b\x32\x0f.ast.SpJoinType"\xa3\x01\n\x17SpDataframePivot_Column\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\'\n\x0cpivot_column\x18\x03 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x1e\n\x06values\x18\x04 \x03(\x0b\x32\x0e.ast.SpVariant"\x90\x01\n\x17SpDataframePivot_String\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x14\n\x0cpivot_column\x18\x03 \x01(\t\x12\x1e\n\x06values\x18\x04 \x03(\x0b\x32\x0e.ast.SpVariant"\xc7\x01\n\x16SpDataframeRandomSplit\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x0f\n\x07weights\x18\x03 \x03(\x04\x12)\n\x04seed\x18\x04 \x01(\x0b\x32\x1b.google.protobuf.Int64Value\x12\x30\n\x10statement_params\x18\x05 \x01(\x0b\x32\x16.ast.Map_String_String"\x86\x01\n\x11SpDataframeRename\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x10\n\x08new_name\x18\x03 \x01(\t\x12\x1e\n\x03\x63ol\x18\x04 \x01(\x0b\x32\x11.ast.SpColumnExpr"\x8f\x01\n\x19SpDataframeRollup_Columns\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1f\n\x04\x63ols\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr\x12\x10\n\x08variadic\x18\x04 \x01(\x08"|\n\x19SpDataframeRollup_Strings\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x0c\n\x04\x63ols\x18\x03 \x03(\t\x12\x10\n\x08variadic\x18\x04 \x01(\x08"y\n\x18SpDataframeSample_Double\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1c\n\x14probability_fraction\x18\x03 \x01(\x04"f\n\x16SpDataframeSample_Long\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x0b\n\x03num\x18\x03 \x01(\x03"\x87\x01\n\x19SpDataframeSelect_Columns\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x17\n\x04\x63ols\x18\x03 \x03(\x0b\x32\t.ast.Expr\x12\x10\n\x08variadic\x18\x04 \x01(\x08"|\n\x19SpDataframeSelect_Strings\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x0c\n\x04\x63ols\x18\x03 \x03(\t\x12\x10\n\x08variadic\x18\x04 \x01(\x08"\x85\x01\n\x0fSpDataframeSort\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1f\n\x04\x63ols\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr\x12\x10\n\x08variadic\x18\x04 \x01(\x08"w\n\x10SpDataframeUnion\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12!\n\x03lhs\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12!\n\x03rhs\x18\x03 \x01(\x0b\x32\x14.ast.SpDataframeExpr"z\n\x13SpDataframeUnionAll\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12!\n\x03lhs\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12!\n\x03rhs\x18\x03 \x01(\x0b\x32\x14.ast.SpDataframeExpr"\x80\x01\n\x19SpDataframeUnionAllByName\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12!\n\x03lhs\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12!\n\x03rhs\x18\x03 \x01(\x0b\x32\x14.ast.SpDataframeExpr"}\n\x16SpDataframeUnionByName\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12!\n\x03lhs\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12!\n\x03rhs\x18\x03 \x01(\x0b\x32\x14.ast.SpDataframeExpr"y\n\x10SpDataframeWhere\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12$\n\tcondition\x18\x03 \x01(\x0b\x32\x11.ast.SpColumnExpr"\x8a\x01\n\x15SpDataframeWithColumn\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x10\n\x08\x63ol_name\x18\x03 \x01(\t\x12\x1e\n\x03\x63ol\x18\x04 \x01(\x0b\x32\x11.ast.SpColumnExpr"\x8f\x01\n\x16SpDataframeWithColumns\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x11\n\tcol_names\x18\x03 \x03(\t\x12!\n\x06values\x18\x04 \x03(\x0b\x32\x11.ast.SpColumnExpr"\x9f\x01\n\x1eSpDataframeGroupByGroupingSets\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12*\n\rgrouping_sets\x18\x03 \x03(\x0b\x32\x13.ast.SpGroupingSets\x12\x10\n\x08variadic\x18\x04 \x01(\x08"\x84\x04\n\x17SpCopyableDataframeExpr\x12J\n!trait_sp_dataframe_reader_options\x18\x01 \x01(\x0b\x32\x1d.ast.SpDataframeReaderOptionsH\x00\x12H\n trait_sp_dataframe_reader_schema\x18\x02 \x01(\x0b\x32\x1c.ast.SpDataframeReaderSchemaH\x00\x12\'\n\x0csp_copy_into\x18\x03 \x01(\x0b\x32\x0f.ast.SpCopyIntoH\x00\x12\'\n\x0csp_read_avro\x18\x04 \x01(\x0b\x32\x0f.ast.SpReadAvroH\x00\x12%\n\x0bsp_read_csv\x18\x05 \x01(\x0b\x32\x0e.ast.SpReadCsvH\x00\x12\'\n\x0csp_read_json\x18\x06 \x01(\x0b\x32\x0f.ast.SpReadJsonH\x00\x12%\n\x0bsp_read_orc\x18\x07 \x01(\x0b\x32\x0e.ast.SpReadOrcH\x00\x12-\n\x0fsp_read_parquet\x18\x08 \x01(\x0b\x32\x12.ast.SpReadParquetH\x00\x12)\n\rsp_read_table\x18\t \x01(\x0b\x32\x10.ast.SpReadTableH\x00\x12%\n\x0bsp_read_xml\x18\n \x01(\x0b\x32\x0e.ast.SpReadXmlH\x00\x42\t\n\x07variant"6\n\x18SpDataframeReaderOptions\x12\x0f\n\x05\x64ummy\x18\x01 \x01(\x08H\x00\x42\t\n\x07variant"5\n\x17SpDataframeReaderSchema\x12\x0f\n\x05\x64ummy\x18\x01 \x01(\x08H\x00\x42\t\n\x07variant"9\n\nSpReadAvro\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0c\n\x04path\x18\x02 \x01(\t"8\n\tSpReadCsv\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0c\n\x04path\x18\x02 \x01(\t"9\n\nSpReadJson\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0c\n\x04path\x18\x02 \x01(\t"8\n\tSpReadOrc\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0c\n\x04path\x18\x02 \x01(\t"<\n\rSpReadParquet\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0c\n\x04path\x18\x02 \x01(\t":\n\x0bSpReadTable\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0c\n\x04name\x18\x02 \x01(\t"8\n\tSpReadXml\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0c\n\x04path\x18\x02 \x01(\t"\xcb\x01\n\nSpCopyInto\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x12\n\ntable_name\x18\x02 \x01(\t\x12-\n\x13target_column_names\x18\x03 \x01(\x0b\x32\x10.ast.List_String\x12/\n\x0ftransformations\x18\x04 \x01(\x0b\x32\x16.ast.List_SpColumnExpr\x12*\n\x07options\x18\x05 \x01(\x0b\x32\x19.ast.Map_String_SpVariant"\xeb\x02\n\x11SpDataframeWriter\x12J\n!trait_sp_dataframe_writer_options\x18\x01 \x01(\x0b\x32\x1d.ast.SpDataframeWriterOptionsH\x00\x12M\n#trait_sp_dataframe_writer_save_mode\x18\x02 \x01(\x0b\x32\x1e.ast.SpDataframeWriterSaveModeH\x00\x12\'\n\x0csp_write_csv\x18\x03 \x01(\x0b\x32\x0f.ast.SpWriteCsvH\x00\x12)\n\rsp_write_json\x18\x04 \x01(\x0b\x32\x10.ast.SpWriteJsonH\x00\x12/\n\x10sp_write_parquet\x18\x05 \x01(\x0b\x32\x13.ast.SpWriteParquetH\x00\x12+\n\x0esp_write_table\x18\x06 \x01(\x0b\x32\x11.ast.SpWriteTableH\x00\x42\t\n\x07variant"7\n\x19SpDataframeWriterSaveMode\x12\x0f\n\x05\x64ummy\x18\x01 \x01(\x08H\x00\x42\t\n\x07variant"6\n\x18SpDataframeWriterOptions\x12\x0f\n\x05\x64ummy\x18\x01 \x01(\x08H\x00\x42\t\n\x07variant"[\n\nSpWriteCsv\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x0c\n\x04path\x18\x03 \x01(\t"\\\n\x0bSpWriteJson\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x0c\n\x04path\x18\x03 \x01(\t"_\n\x0eSpWriteParquet\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x0c\n\x04path\x18\x03 \x01(\t"\x95\x01\n\x0cSpWriteTable\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x35\n\x13\x64\x61tabase_and_schema\x18\x03 \x01(\x0b\x32\x18.ast.Tuple_String_String\x12\r\n\x05table\x18\x04 \x01(\t"B\n\x1eSpDataframeStatsApproxQuantile\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr"8\n\x14SpDataframeStatsCorr\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr"7\n\x13SpDataframeStatsCov\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr"w\n\x18SpDataframeStatsCrossTab\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x0c\n\x04\x63ol1\x18\x03 \x01(\t\x12\x0c\n\x04\x63ol2\x18\x04 \x01(\t"\xb5\x01\n\x18SpDataframeStatsSampleBy\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1e\n\x03\x63ol\x18\x03 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12\x38\n\tfractions\x18\x04 \x03(\x0b\x32%.ast.Tuple_SpVariant_SpVariant_Double"\xc9\x0c\n SpRelationalGroupedDataframeExpr\x12\x38\n\x15sp_dataframe_group_by\x18\x01 \x01(\x0b\x32\x17.ast.SpDataframeGroupByH\x00\x12R\n#sp_dataframe_group_by_grouping_sets\x18\x02 \x01(\x0b\x32#.ast.SpDataframeGroupByGroupingSetsH\x00\x12I\n\x1esp_dataframe_group_by__columns\x18\x03 \x01(\x0b\x32\x1f.ast.SpDataframeGroupBy_ColumnsH\x00\x12I\n\x1esp_dataframe_group_by__strings\x18\x04 \x01(\x0b\x32\x1f.ast.SpDataframeGroupBy_StringsH\x00\x12\x42\n\x1asp_dataframe_pivot__column\x18\x05 \x01(\x0b\x32\x1c.ast.SpDataframePivot_ColumnH\x00\x12\x42\n\x1asp_dataframe_pivot__string\x18\x06 \x01(\x0b\x32\x1c.ast.SpDataframePivot_StringH\x00\x12\x46\n\x1csp_dataframe_rollup__columns\x18\x07 \x01(\x0b\x32\x1e.ast.SpDataframeRollup_ColumnsH\x00\x12\x46\n\x1csp_dataframe_rollup__strings\x18\x08 \x01(\x0b\x32\x1e.ast.SpDataframeRollup_StringsH\x00\x12\x64\n,sp_relational_grouped_dataframe_agg__columns\x18\t \x01(\x0b\x32,.ast.SpRelationalGroupedDataframeAgg_ColumnsH\x00\x12\\\n(sp_relational_grouped_dataframe_agg__map\x18\n \x01(\x0b\x32(.ast.SpRelationalGroupedDataframeAgg_MapH\x00\x12^\n)sp_relational_grouped_dataframe_any_value\x18\x0b \x01(\x0b\x32).ast.SpRelationalGroupedDataframeAnyValueH\x00\x12S\n#sp_relational_grouped_dataframe_avg\x18\x0c \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeAvgH\x00\x12[\n\'sp_relational_grouped_dataframe_builtin\x18\r \x01(\x0b\x32(.ast.SpRelationalGroupedDataframeBuiltinH\x00\x12W\n%sp_relational_grouped_dataframe_count\x18\x0e \x01(\x0b\x32&.ast.SpRelationalGroupedDataframeCountH\x00\x12S\n#sp_relational_grouped_dataframe_max\x18\x0f \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeMaxH\x00\x12U\n$sp_relational_grouped_dataframe_mean\x18\x10 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeMeanH\x00\x12Y\n&sp_relational_grouped_dataframe_median\x18\x11 \x01(\x0b\x32\'.ast.SpRelationalGroupedDataframeMedianH\x00\x12S\n#sp_relational_grouped_dataframe_min\x18\x12 \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeMinH\x00\x12S\n#sp_relational_grouped_dataframe_sum\x18\x13 \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeSumH\x00\x42\t\n\x07variant"\xc1\x01\n#SpRelationalGroupedDataframeAgg_Map\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x31\n\x02\x64\x66\x18\x02 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExpr\x12 \n\x05\x65xprs\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr\x12\x14\n\x0c\x65xprs_is_map\x18\x04 \x01(\x08\x12\x10\n\x08variadic\x18\x05 \x01(\x08"\xaf\x01\n\'SpRelationalGroupedDataframeAgg_Columns\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x31\n\x02\x64\x66\x18\x02 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExpr\x12 \n\x05\x65xprs\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr\x12\x10\n\x08variadic\x18\x04 \x01(\x08"\x99\x01\n$SpRelationalGroupedDataframeAnyValue\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x31\n\x02\x64\x66\x18\x02 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExpr\x12\x1f\n\x04\x63ols\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr"\x94\x01\n\x1fSpRelationalGroupedDataframeAvg\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x31\n\x02\x64\x66\x18\x02 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExpr\x12\x1f\n\x04\x63ols\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr"\xaa\x01\n#SpRelationalGroupedDataframeBuiltin\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x31\n\x02\x64\x66\x18\x02 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExpr\x12\x10\n\x08\x61gg_name\x18\x03 \x01(\t\x12\x1f\n\x04\x63ols\x18\x04 \x03(\x0b\x32\x11.ast.SpColumnExpr"u\n!SpRelationalGroupedDataframeCount\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x31\n\x02\x64\x66\x18\x02 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExpr"\x94\x01\n\x1fSpRelationalGroupedDataframeMax\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x31\n\x02\x64\x66\x18\x02 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExpr\x12\x1f\n\x04\x63ols\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr"\x95\x01\n SpRelationalGroupedDataframeMean\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x31\n\x02\x64\x66\x18\x02 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExpr\x12\x1f\n\x04\x63ols\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr"\x97\x01\n"SpRelationalGroupedDataframeMedian\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x31\n\x02\x64\x66\x18\x02 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExpr\x12\x1f\n\x04\x63ols\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr"\x94\x01\n\x1fSpRelationalGroupedDataframeMin\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x31\n\x02\x64\x66\x18\x02 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExpr\x12\x1f\n\x04\x63ols\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr"\x94\x01\n\x1fSpRelationalGroupedDataframeSum\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x31\n\x02\x64\x66\x18\x02 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExpr\x12\x1f\n\x04\x63ols\x18\x03 \x03(\x0b\x32\x11.ast.SpColumnExpr":\n\x0fSpDataframeType\x12\x0f\n\x07\x63olumns\x18\x01 \x03(\t\x12\x16\n\x03tys\x18\x02 \x03(\x0b\x32\t.ast.Type"F\n\x16SpGroupedDataframeType\x12\x15\n\router_columns\x18\x01 \x03(\t\x12\x15\n\rinner_columns\x18\x02 \x03(\t"\x0e\n\x0cSpWindowType"\'\n\rSpColExprType\x12\x16\n\x03typ\x18\x01 \x01(\x0b\x32\t.ast.Type"\xe3L\n\x0eHasSrcPosition\x12"\n\x0ctrait_bin_op\x18\x01 \x01(\x0b\x32\n.ast.BinOpH\x00\x12\x34\n\x16trait_built_in_fn_expr\x18\x02 \x01(\x0b\x32\x12.ast.BuiltInFnExprH\x00\x12!\n\x0btrait_const\x18\x03 \x01(\x0b\x32\n.ast.ConstH\x00\x12\x1f\n\ntrait_expr\x18\x04 \x01(\x0b\x32\t.ast.ExprH\x00\x12\x31\n\x14trait_sp_column_expr\x18\x05 \x01(\x0b\x32\x11.ast.SpColumnExprH\x00\x12-\n\x12trait_sp_column_fn\x18\x06 \x01(\x0b\x32\x0f.ast.SpColumnFnH\x00\x12H\n trait_sp_copyable_dataframe_expr\x18\x07 \x01(\x0b\x32\x1c.ast.SpCopyableDataframeExprH\x00\x12\x37\n\x17trait_sp_dataframe_expr\x18\x08 \x01(\x0b\x32\x14.ast.SpDataframeExprH\x00\x12J\n!trait_sp_dataframe_reader_options\x18\t \x01(\x0b\x32\x1d.ast.SpDataframeReaderOptionsH\x00\x12H\n trait_sp_dataframe_reader_schema\x18\n \x01(\x0b\x32\x1c.ast.SpDataframeReaderSchemaH\x00\x12;\n\x19trait_sp_dataframe_writer\x18\x0b \x01(\x0b\x32\x16.ast.SpDataframeWriterH\x00\x12J\n!trait_sp_dataframe_writer_options\x18\x0c \x01(\x0b\x32\x1d.ast.SpDataframeWriterOptionsH\x00\x12M\n#trait_sp_dataframe_writer_save_mode\x18\r \x01(\x0b\x32\x1e.ast.SpDataframeWriterSaveModeH\x00\x12[\n*trait_sp_relational_grouped_dataframe_expr\x18\x0e \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExprH\x00\x12(\n\x0ftrait_string_fn\x18\x0f \x01(\x0b\x32\r.ast.StringFnH\x00\x12&\n\x0etrait_unary_op\x18\x10 \x01(\x0b\x32\x0c.ast.UnaryOpH\x00\x12\x17\n\x03\x61\x64\x64\x18\x11 \x01(\x0b\x32\x08.ast.AddH\x00\x12\x17\n\x03\x61nd\x18\x12 \x01(\x0b\x32\x08.ast.AndH\x00\x12$\n\napply_expr\x18\x13 \x01(\x0b\x32\x0e.ast.ApplyExprH\x00\x12-\n\x0f\x62ig_decimal_val\x18\x14 \x01(\x0b\x32\x12.ast.BigDecimalValH\x00\x12%\n\x0b\x62ig_int_val\x18\x15 \x01(\x0b\x32\x0e.ast.BigIntValH\x00\x12$\n\nbinary_val\x18\x16 \x01(\x0b\x32\x0e.ast.BinaryValH\x00\x12\x1e\n\x07\x62it_and\x18\x17 \x01(\x0b\x32\x0b.ast.BitAndH\x00\x12\x1c\n\x06\x62it_or\x18\x18 \x01(\x0b\x32\n.ast.BitOrH\x00\x12\x1e\n\x07\x62it_xor\x18\x19 \x01(\x0b\x32\x0b.ast.BitXorH\x00\x12 \n\x08\x62ool_val\x18\x1a \x01(\x0b\x32\x0c.ast.BoolValH\x00\x12"\n\tcast_expr\x18\x1b \x01(\x0b\x32\r.ast.CastExprH\x00\x12 \n\x08\x64\x61te_val\x18\x1c \x01(\x0b\x32\x0c.ast.DateValH\x00\x12\x17\n\x03\x64iv\x18\x1d \x01(\x0b\x32\x08.ast.DivH\x00\x12\x15\n\x02\x65q\x18\x1e \x01(\x0b\x32\x07.ast.EqH\x00\x12&\n\x0b\x66loat64_val\x18\x1f \x01(\x0b\x32\x0f.ast.Float64ValH\x00\x12\x1c\n\x06\x66n_val\x18  \x01(\x0b\x32\n.ast.FnValH\x00\x12\x17\n\x03geq\x18! \x01(\x0b\x32\x08.ast.GeqH\x00\x12\x15\n\x02gt\x18" \x01(\x0b\x32\x07.ast.GtH\x00\x12\x1e\n\x07if_expr\x18# \x01(\x0b\x32\x0b.ast.IfExprH\x00\x12"\n\tint32_val\x18$ \x01(\x0b\x32\r.ast.Int32ValH\x00\x12"\n\tint64_val\x18% \x01(\x0b\x32\r.ast.Int64ValH\x00\x12\x17\n\x03leq\x18& \x01(\x0b\x32\x08.ast.LeqH\x00\x12 \n\x08list_val\x18\' \x01(\x0b\x32\x0c.ast.ListValH\x00\x12\x15\n\x02lt\x18( \x01(\x0b\x32\x07.ast.LtH\x00\x12\x17\n\x03mod\x18) \x01(\x0b\x32\x08.ast.ModH\x00\x12\x17\n\x03mul\x18* \x01(\x0b\x32\x08.ast.MulH\x00\x12\x17\n\x03neg\x18+ \x01(\x0b\x32\x08.ast.NegH\x00\x12\x17\n\x03neq\x18, \x01(\x0b\x32\x08.ast.NeqH\x00\x12 \n\x08none_val\x18- \x01(\x0b\x32\x0c.ast.NoneValH\x00\x12\x17\n\x03not\x18. \x01(\x0b\x32\x08.ast.NotH\x00\x12 \n\x08null_val\x18/ \x01(\x0b\x32\x0c.ast.NullValH\x00\x12\x15\n\x02or\x18\x30 \x01(\x0b\x32\x07.ast.OrH\x00\x12(\n\x0cpd_dataframe\x18\x31 \x01(\x0b\x32\x10.ast.PdDataframeH\x00\x12\x38\n\x15pd_dataframe_get_item\x18\x32 \x01(\x0b\x32\x17.ast.PdDataframeGetItemH\x00\x12\x32\n\x12pd_dataframe_i_loc\x18\x33 \x01(\x0b\x32\x14.ast.PdDataframeILocH\x00\x12/\n\x10pd_dataframe_loc\x18\x34 \x01(\x0b\x32\x13.ast.PdDataframeLocH\x00\x12\x38\n\x15pd_dataframe_set_item\x18\x35 \x01(\x0b\x32\x17.ast.PdDataframeSetItemH\x00\x12#\n\npd_drop_na\x18\x36 \x01(\x0b\x32\r.ast.PdDropNaH\x00\x12\x1e\n\x07pd_repr\x18\x37 \x01(\x0b\x32\x0b.ast.PdReprH\x00\x12\x17\n\x03pow\x18\x38 \x01(\x0b\x32\x08.ast.PowH\x00\x12\x1a\n\x05py_fn\x18\x39 \x01(\x0b\x32\t.ast.PyFnH\x00\x12-\n\x0fpython_date_val\x18: \x01(\x0b\x32\x12.ast.PythonDateValH\x00\x12-\n\x0fpython_time_val\x18; \x01(\x0b\x32\x12.ast.PythonTimeValH\x00\x12\x37\n\x14python_timestamp_val\x18< \x01(\x0b\x32\x17.ast.PythonTimestampValH\x00\x12"\n\trange_val\x18= \x01(\x0b\x32\r.ast.RangeValH\x00\x12\x17\n\x03ref\x18> \x01(\x0b\x32\x08.ast.RefH\x00\x12%\n\x0bseq_map_val\x18? \x01(\x0b\x32\x0e.ast.SeqMapValH\x00\x12.\n\x0fsnowflake_sproc\x18@ \x01(\x0b\x32\x13.ast.SnowflakeSprocH\x00\x12*\n\rsnowflake_udf\x18\x41 \x01(\x0b\x32\x11.ast.SnowflakeUdfH\x00\x12 \n\x08some_val\x18\x42 \x01(\x0b\x32\x0c.ast.SomeValH\x00\x12"\n\tsp_column\x18\x43 \x01(\x0b\x32\r.ast.SpColumnH\x00\x12-\n\x0fsp_column_alias\x18\x44 \x01(\x0b\x32\x12.ast.SpColumnAliasH\x00\x12\x36\n\x14sp_column_apply__int\x18\x45 \x01(\x0b\x32\x16.ast.SpColumnApply_IntH\x00\x12<\n\x17sp_column_apply__string\x18\x46 \x01(\x0b\x32\x19.ast.SpColumnApply_StringH\x00\x12)\n\rsp_column_asc\x18G \x01(\x0b\x32\x10.ast.SpColumnAscH\x00\x12\x31\n\x11sp_column_between\x18H \x01(\x0b\x32\x14.ast.SpColumnBetweenH\x00\x12+\n\x0esp_column_cast\x18I \x01(\x0b\x32\x11.ast.SpColumnCastH\x00\x12+\n\x0esp_column_desc\x18J \x01(\x0b\x32\x11.ast.SpColumnDescH\x00\x12\x34\n\x13sp_column_equal_nan\x18K \x01(\x0b\x32\x15.ast.SpColumnEqualNanH\x00\x12\x36\n\x14sp_column_equal_null\x18L \x01(\x0b\x32\x16.ast.SpColumnEqualNullH\x00\x12<\n\x17sp_column_in__dataframe\x18M \x01(\x0b\x32\x19.ast.SpColumnIn_DataframeH\x00\x12\x30\n\x11sp_column_in__seq\x18N \x01(\x0b\x32\x13.ast.SpColumnIn_SeqH\x00\x12\x37\n\x15sp_column_is_not_null\x18O \x01(\x0b\x32\x16.ast.SpColumnIsNotNullH\x00\x12\x30\n\x11sp_column_is_null\x18P \x01(\x0b\x32\x13.ast.SpColumnIsNullH\x00\x12+\n\x0esp_column_name\x18Q \x01(\x0b\x32\x11.ast.SpColumnNameH\x00\x12+\n\x0esp_column_over\x18R \x01(\x0b\x32\x11.ast.SpColumnOverH\x00\x12)\n\rsp_column_ref\x18S \x01(\x0b\x32\x10.ast.SpColumnRefH\x00\x12\x32\n\x12sp_column_sql_expr\x18T \x01(\x0b\x32\x14.ast.SpColumnSqlExprH\x00\x12\x32\n\x12sp_column_try_cast\x18U \x01(\x0b\x32\x14.ast.SpColumnTryCastH\x00\x12:\n\x16sp_column_within_group\x18V \x01(\x0b\x32\x18.ast.SpColumnWithinGroupH\x00\x12\'\n\x0csp_copy_into\x18W \x01(\x0b\x32\x0f.ast.SpCopyIntoH\x00\x12\x35\n\x13sp_create_dataframe\x18X \x01(\x0b\x32\x16.ast.SpCreateDataframeH\x00\x12/\n\x10sp_dataframe_agg\x18Y \x01(\x0b\x32\x13.ast.SpDataframeAggH\x00\x12\x33\n\x12sp_dataframe_apply\x18Z \x01(\x0b\x32\x15.ast.SpDataframeApplyH\x00\x12/\n\x10sp_dataframe_col\x18[ \x01(\x0b\x32\x13.ast.SpDataframeColH\x00\x12<\n\x17sp_dataframe_cross_join\x18\\ \x01(\x0b\x32\x19.ast.SpDataframeCrossJoinH\x00\x12\x31\n\x11sp_dataframe_cube\x18] \x01(\x0b\x32\x14.ast.SpDataframeCubeH\x00\x12\x39\n\x15sp_dataframe_distinct\x18^ \x01(\x0b\x32\x18.ast.SpDataframeDistinctH\x00\x12\x46\n\x1csp_dataframe_drop_duplicates\x18_ \x01(\x0b\x32\x1e.ast.SpDataframeDropDuplicatesH\x00\x12\x42\n\x1asp_dataframe_drop__columns\x18` \x01(\x0b\x32\x1c.ast.SpDataframeDrop_ColumnsH\x00\x12\x42\n\x1asp_dataframe_drop__strings\x18\x61 \x01(\x0b\x32\x1c.ast.SpDataframeDrop_StringsH\x00\x12\x35\n\x13sp_dataframe_except\x18\x62 \x01(\x0b\x32\x16.ast.SpDataframeExceptH\x00\x12\x35\n\x13sp_dataframe_filter\x18\x63 \x01(\x0b\x32\x16.ast.SpDataframeFilterH\x00\x12\x33\n\x12sp_dataframe_first\x18\x64 \x01(\x0b\x32\x15.ast.SpDataframeFirstH\x00\x12\x46\n\x1csp_dataframe_flatten__column\x18\x65 \x01(\x0b\x32\x1e.ast.SpDataframeFlatten_ColumnH\x00\x12z\n8sp_dataframe_flatten__column__string__bool__bool__string\x18\x66 \x01(\x0b\x32\x36.ast.SpDataframeFlatten_Column_String_Bool_Bool_StringH\x00\x12\x38\n\x15sp_dataframe_group_by\x18g \x01(\x0b\x32\x17.ast.SpDataframeGroupByH\x00\x12R\n#sp_dataframe_group_by_grouping_sets\x18h \x01(\x0b\x32#.ast.SpDataframeGroupByGroupingSetsH\x00\x12I\n\x1esp_dataframe_group_by__columns\x18i \x01(\x0b\x32\x1f.ast.SpDataframeGroupBy_ColumnsH\x00\x12I\n\x1esp_dataframe_group_by__strings\x18j \x01(\x0b\x32\x1f.ast.SpDataframeGroupBy_StringsH\x00\x12;\n\x16sp_dataframe_intersect\x18k \x01(\x0b\x32\x19.ast.SpDataframeIntersectH\x00\x12\\\n(sp_dataframe_join__dataframe__join_exprs\x18l \x01(\x0b\x32(.ast.SpDataframeJoin_Dataframe_JoinExprsH\x00\x12\x62\n+sp_dataframe_join__dataframe__using_columns\x18m \x01(\x0b\x32+.ast.SpDataframeJoin_Dataframe_UsingColumnsH\x00\x12Z\n\'sp_dataframe_join__table_function__list\x18n \x01(\x0b\x32\'.ast.SpDataframeJoin_TableFunction_ListH\x00\x12X\n&sp_dataframe_join__table_function__map\x18o \x01(\x0b\x32&.ast.SpDataframeJoin_TableFunction_MapH\x00\x12\x33\n\x12sp_dataframe_limit\x18p \x01(\x0b\x32\x15.ast.SpDataframeLimitH\x00\x12\x36\n\x14sp_dataframe_na_drop\x18q \x01(\x0b\x32\x16.ast.SpDataframeNaDropH\x00\x12\x36\n\x14sp_dataframe_na_fill\x18r \x01(\x0b\x32\x16.ast.SpDataframeNaFillH\x00\x12<\n\x17sp_dataframe_na_replace\x18s \x01(\x0b\x32\x19.ast.SpDataframeNaReplaceH\x00\x12@\n\x19sp_dataframe_natural_join\x18t \x01(\x0b\x32\x1b.ast.SpDataframeNaturalJoinH\x00\x12\x42\n\x1asp_dataframe_pivot__column\x18u \x01(\x0b\x32\x1c.ast.SpDataframePivot_ColumnH\x00\x12\x42\n\x1asp_dataframe_pivot__string\x18v \x01(\x0b\x32\x1c.ast.SpDataframePivot_StringH\x00\x12@\n\x19sp_dataframe_random_split\x18w \x01(\x0b\x32\x1b.ast.SpDataframeRandomSplitH\x00\x12/\n\x10sp_dataframe_ref\x18x \x01(\x0b\x32\x13.ast.SpDataframeRefH\x00\x12\x35\n\x13sp_dataframe_rename\x18y \x01(\x0b\x32\x16.ast.SpDataframeRenameH\x00\x12\x46\n\x1csp_dataframe_rollup__columns\x18z \x01(\x0b\x32\x1e.ast.SpDataframeRollup_ColumnsH\x00\x12\x46\n\x1csp_dataframe_rollup__strings\x18{ \x01(\x0b\x32\x1e.ast.SpDataframeRollup_StringsH\x00\x12\x44\n\x1bsp_dataframe_sample__double\x18| \x01(\x0b\x32\x1d.ast.SpDataframeSample_DoubleH\x00\x12@\n\x19sp_dataframe_sample__long\x18} \x01(\x0b\x32\x1b.ast.SpDataframeSample_LongH\x00\x12\x46\n\x1csp_dataframe_select__columns\x18~ \x01(\x0b\x32\x1e.ast.SpDataframeSelect_ColumnsH\x00\x12\x46\n\x1csp_dataframe_select__strings\x18\x7f \x01(\x0b\x32\x1e.ast.SpDataframeSelect_StringsH\x00\x12\x32\n\x11sp_dataframe_show\x18\x80\x01 \x01(\x0b\x32\x14.ast.SpDataframeShowH\x00\x12\x32\n\x11sp_dataframe_sort\x18\x81\x01 \x01(\x0b\x32\x14.ast.SpDataframeSortH\x00\x12\x46\n\x1csp_dataframe_stats_cross_tab\x18\x82\x01 \x01(\x0b\x32\x1d.ast.SpDataframeStatsCrossTabH\x00\x12\x46\n\x1csp_dataframe_stats_sample_by\x18\x83\x01 \x01(\x0b\x32\x1d.ast.SpDataframeStatsSampleByH\x00\x12\x33\n\x12sp_dataframe_to_df\x18\x84\x01 \x01(\x0b\x32\x14.ast.SpDataframeToDfH\x00\x12\x34\n\x12sp_dataframe_union\x18\x85\x01 \x01(\x0b\x32\x15.ast.SpDataframeUnionH\x00\x12;\n\x16sp_dataframe_union_all\x18\x86\x01 \x01(\x0b\x32\x18.ast.SpDataframeUnionAllH\x00\x12I\n\x1esp_dataframe_union_all_by_name\x18\x87\x01 \x01(\x0b\x32\x1e.ast.SpDataframeUnionAllByNameH\x00\x12\x42\n\x1asp_dataframe_union_by_name\x18\x88\x01 \x01(\x0b\x32\x1b.ast.SpDataframeUnionByNameH\x00\x12\x34\n\x12sp_dataframe_where\x18\x89\x01 \x01(\x0b\x32\x15.ast.SpDataframeWhereH\x00\x12?\n\x18sp_dataframe_with_column\x18\x8a\x01 \x01(\x0b\x32\x1a.ast.SpDataframeWithColumnH\x00\x12\x41\n\x19sp_dataframe_with_columns\x18\x8b\x01 \x01(\x0b\x32\x1b.ast.SpDataframeWithColumnsH\x00\x12\x34\n\x12sp_flatten__column\x18\x8c\x01 \x01(\x0b\x32\x15.ast.SpFlatten_ColumnH\x00\x12h\n.sp_flatten__column__string__bool__bool__string\x18\x8d\x01 \x01(\x0b\x32-.ast.SpFlatten_Column_String_Bool_Bool_StringH\x00\x12)\n\x0csp_generator\x18\x8e\x01 \x01(\x0b\x32\x10.ast.SpGeneratorH\x00\x12!\n\x08sp_range\x18\x8f\x01 \x01(\x0b\x32\x0c.ast.SpRangeH\x00\x12(\n\x0csp_read_avro\x18\x90\x01 \x01(\x0b\x32\x0f.ast.SpReadAvroH\x00\x12&\n\x0bsp_read_csv\x18\x91\x01 \x01(\x0b\x32\x0e.ast.SpReadCsvH\x00\x12(\n\x0csp_read_json\x18\x92\x01 \x01(\x0b\x32\x0f.ast.SpReadJsonH\x00\x12&\n\x0bsp_read_orc\x18\x93\x01 \x01(\x0b\x32\x0e.ast.SpReadOrcH\x00\x12.\n\x0fsp_read_parquet\x18\x94\x01 \x01(\x0b\x32\x12.ast.SpReadParquetH\x00\x12*\n\rsp_read_table\x18\x95\x01 \x01(\x0b\x32\x10.ast.SpReadTableH\x00\x12&\n\x0bsp_read_xml\x18\x96\x01 \x01(\x0b\x32\x0e.ast.SpReadXmlH\x00\x12\x65\n,sp_relational_grouped_dataframe_agg__columns\x18\x97\x01 \x01(\x0b\x32,.ast.SpRelationalGroupedDataframeAgg_ColumnsH\x00\x12]\n(sp_relational_grouped_dataframe_agg__map\x18\x98\x01 \x01(\x0b\x32(.ast.SpRelationalGroupedDataframeAgg_MapH\x00\x12_\n)sp_relational_grouped_dataframe_any_value\x18\x99\x01 \x01(\x0b\x32).ast.SpRelationalGroupedDataframeAnyValueH\x00\x12T\n#sp_relational_grouped_dataframe_avg\x18\x9a\x01 \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeAvgH\x00\x12\\\n\'sp_relational_grouped_dataframe_builtin\x18\x9b\x01 \x01(\x0b\x32(.ast.SpRelationalGroupedDataframeBuiltinH\x00\x12X\n%sp_relational_grouped_dataframe_count\x18\x9c\x01 \x01(\x0b\x32&.ast.SpRelationalGroupedDataframeCountH\x00\x12T\n#sp_relational_grouped_dataframe_max\x18\x9d\x01 \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeMaxH\x00\x12V\n$sp_relational_grouped_dataframe_mean\x18\x9e\x01 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeMeanH\x00\x12Z\n&sp_relational_grouped_dataframe_median\x18\x9f\x01 \x01(\x0b\x32\'.ast.SpRelationalGroupedDataframeMedianH\x00\x12T\n#sp_relational_grouped_dataframe_min\x18\xa0\x01 \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeMinH\x00\x12T\n#sp_relational_grouped_dataframe_sum\x18\xa1\x01 \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeSumH\x00\x12\x1d\n\x06sp_sql\x18\xa2\x01 \x01(\x0b\x32\n.ast.SpSqlH\x00\x12\x36\n\x13sp_stored_procedure\x18\xa3\x01 \x01(\x0b\x32\x16.ast.SpStoredProcedureH\x00\x12!\n\x08sp_table\x18\xa4\x01 \x01(\x0b\x32\x0c.ast.SpTableH\x00\x12\x32\n\x11sp_table_function\x18\xa5\x01 \x01(\x0b\x32\x14.ast.SpTableFunctionH\x00\x12(\n\x0csp_write_csv\x18\xa6\x01 \x01(\x0b\x32\x0f.ast.SpWriteCsvH\x00\x12*\n\rsp_write_json\x18\xa7\x01 \x01(\x0b\x32\x10.ast.SpWriteJsonH\x00\x12\x30\n\x10sp_write_parquet\x18\xa8\x01 \x01(\x0b\x32\x13.ast.SpWriteParquetH\x00\x12,\n\x0esp_write_table\x18\xa9\x01 \x01(\x0b\x32\x11.ast.SpWriteTableH\x00\x12-\n\x0estring_collate\x18\xaa\x01 \x01(\x0b\x32\x12.ast.StringCollateH\x00\x12+\n\rstring_concat\x18\xab\x01 \x01(\x0b\x32\x11.ast.StringConcatH\x00\x12/\n\x0fstring_contains\x18\xac\x01 \x01(\x0b\x32\x13.ast.StringContainsH\x00\x12\x30\n\x10string_ends_with\x18\xad\x01 \x01(\x0b\x32\x13.ast.StringEndsWithH\x00\x12%\n\nstring_len\x18\xae\x01 \x01(\x0b\x32\x0e.ast.StringLenH\x00\x12\'\n\x0bstring_like\x18\xaf\x01 \x01(\x0b\x32\x0f.ast.StringLikeH\x00\x12+\n\rstring_regexp\x18\xb0\x01 \x01(\x0b\x32\x11.ast.StringRegexpH\x00\x12\x36\n\x13string_regexp_count\x18\xb1\x01 \x01(\x0b\x32\x16.ast.StringRegexpCountH\x00\x12\x34\n\x12string_starts_with\x18\xb2\x01 \x01(\x0b\x32\x15.ast.StringStartsWithH\x00\x12+\n\rstring_substr\x18\xb3\x01 \x01(\x0b\x32\x11.ast.StringSubstrH\x00\x12.\n\x0fstring_to_lower\x18\xb4\x01 \x01(\x0b\x32\x12.ast.StringToLowerH\x00\x12.\n\x0fstring_to_upper\x18\xb5\x01 \x01(\x0b\x32\x12.ast.StringToUpperH\x00\x12%\n\nstring_val\x18\xb6\x01 \x01(\x0b\x32\x0e.ast.StringValH\x00\x12\x18\n\x03sub\x18\xb7\x01 \x01(\x0b\x32\x08.ast.SubH\x00\x12!\n\x08time_val\x18\xb8\x01 \x01(\x0b\x32\x0c.ast.TimeValH\x00\x12+\n\rtimestamp_val\x18\xb9\x01 \x01(\x0b\x32\x11.ast.TimestampValH\x00\x12#\n\ttuple_val\x18\xba\x01 \x01(\x0b\x32\r.ast.TupleValH\x00\x42\t\n\x07variant"K\n\x04Stmt\x12\x1d\n\x06\x61ssign\x18\x01 \x01(\x0b\x32\x0b.ast.AssignH\x00\x12\x19\n\x04\x65val\x18\x02 \x01(\x0b\x32\t.ast.EvalH\x00\x42\t\n\x07variant"x\n\x06\x41ssign\x12\x0b\n\x03uid\x18\x01 \x01(\x03\x12\x1a\n\x06var_id\x18\x02 \x01(\x0b\x32\n.ast.VarId\x12\x17\n\x04\x65xpr\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12,\n\x06symbol\x18\x04 \x01(\x0b\x32\x1c.google.protobuf.StringValue"/\n\x04\x45val\x12\x0b\n\x03uid\x18\x01 \x01(\x03\x12\x1a\n\x06var_id\x18\x02 \x01(\x0b\x32\n.ast.VarId"\xc0\x07\n\x04Type\x12.\n\x12trait_numeric_type\x18\x01 \x01(\x0b\x32\x10.ast.NumericTypeH\x00\x12,\n\x11trait_scalar_type\x18\x02 \x01(\x0b\x32\x0f.ast.ScalarTypeH\x00\x12 \n\x08\x61ny_type\x18\x03 \x01(\x0b\x32\x0c.ast.AnyTypeH\x00\x12"\n\tbool_type\x18\x04 \x01(\x0b\x32\r.ast.BoolTypeH\x00\x12(\n\x0c\x66loat64_type\x18\x05 \x01(\x0b\x32\x10.ast.Float64TypeH\x00\x12\x1e\n\x07\x66n_type\x18\x06 \x01(\x0b\x32\x0b.ast.FnTypeH\x00\x12$\n\nint32_type\x18\x07 \x01(\x0b\x32\x0e.ast.Int32TypeH\x00\x12$\n\nint64_type\x18\x08 \x01(\x0b\x32\x0e.ast.Int64TypeH\x00\x12"\n\tlist_type\x18\t \x01(\x0b\x32\r.ast.ListTypeH\x00\x12 \n\x08map_type\x18\n \x01(\x0b\x32\x0c.ast.MapTypeH\x00\x12(\n\x0cnothing_type\x18\x0b \x01(\x0b\x32\x10.ast.NothingTypeH\x00\x12&\n\x0bnumber_type\x18\x0c \x01(\x0b\x32\x0f.ast.NumberTypeH\x00\x12&\n\x0boption_type\x18\r \x01(\x0b\x32\x0f.ast.OptionTypeH\x00\x12\'\n\x0cpd_repr_type\x18\x0e \x01(\x0b\x32\x0f.ast.PdReprTypeH\x00\x12.\n\x10sp_col_expr_type\x18\x0f \x01(\x0b\x32\x12.ast.SpColExprTypeH\x00\x12\x31\n\x11sp_dataframe_type\x18\x10 \x01(\x0b\x32\x14.ast.SpDataframeTypeH\x00\x12@\n\x19sp_grouped_dataframe_type\x18\x11 \x01(\x0b\x32\x1b.ast.SpGroupedDataframeTypeH\x00\x12+\n\x0esp_window_type\x18\x12 \x01(\x0b\x32\x11.ast.SpWindowTypeH\x00\x12&\n\x0bstring_type\x18\x13 \x01(\x0b\x32\x0f.ast.StringTypeH\x00\x12$\n\ntuple_type\x18\x14 \x01(\x0b\x32\x0e.ast.TupleTypeH\x00\x12\x1c\n\x06ty_var\x18\x15 \x01(\x0b\x32\n.ast.TyVarH\x00\x12"\n\tunit_type\x18\x16 \x01(\x0b\x32\r.ast.UnitTypeH\x00\x12(\n\x0cunknown_type\x18\x17 \x01(\x0b\x32\x10.ast.UnknownTypeH\x00\x42\t\n\x07variant"\r\n\x0bUnknownType"\t\n\x07\x41nyType"\xad\x02\n\nScalarType\x12.\n\x12trait_numeric_type\x18\x01 \x01(\x0b\x32\x10.ast.NumericTypeH\x00\x12"\n\tbool_type\x18\x02 \x01(\x0b\x32\r.ast.BoolTypeH\x00\x12(\n\x0c\x66loat64_type\x18\x03 \x01(\x0b\x32\x10.ast.Float64TypeH\x00\x12$\n\nint32_type\x18\x04 \x01(\x0b\x32\x0e.ast.Int32TypeH\x00\x12$\n\nint64_type\x18\x05 \x01(\x0b\x32\x0e.ast.Int64TypeH\x00\x12&\n\x0bnumber_type\x18\x06 \x01(\x0b\x32\x0f.ast.NumberTypeH\x00\x12"\n\tunit_type\x18\x07 \x01(\x0b\x32\r.ast.UnitTypeH\x00\x42\t\n\x07variant"\xb6\x01\n\x0bNumericType\x12(\n\x0c\x66loat64_type\x18\x01 \x01(\x0b\x32\x10.ast.Float64TypeH\x00\x12$\n\nint32_type\x18\x02 \x01(\x0b\x32\x0e.ast.Int32TypeH\x00\x12$\n\nint64_type\x18\x03 \x01(\x0b\x32\x0e.ast.Int64TypeH\x00\x12&\n\x0bnumber_type\x18\x04 \x01(\x0b\x32\x0f.ast.NumberTypeH\x00\x42\t\n\x07variant"\x0c\n\nNumberType"\r\n\x0bNothingType"\n\n\x08UnitType"\n\n\x08\x42oolType"\x0b\n\tInt32Type"\x0b\n\tInt64Type"\r\n\x0b\x46loat64Type"\x0c\n\nStringType"\x0c\n\nPdReprType";\n\x06\x46nType\x12\x19\n\x06params\x18\x01 \x03(\x0b\x32\t.ast.Type\x12\x16\n\x03ret\x18\x02 \x01(\x0b\x32\t.ast.Type"$\n\nOptionType\x12\x16\n\x03typ\x18\x01 \x01(\x0b\x32\t.ast.Type"#\n\tTupleType\x12\x16\n\x03tys\x18\x01 \x03(\x0b\x32\t.ast.Type""\n\x08ListType\x12\x16\n\x03typ\x18\x01 \x01(\x0b\x32\t.ast.Type"5\n\x07MapType\x12\x14\n\x01k\x18\x01 \x01(\x0b\x32\t.ast.Type\x12\x14\n\x01v\x18\x02 \x01(\x0b\x32\t.ast.Type"\x13\n\x05TyVar\x12\n\n\x02id\x18\x01 \x01(\tB\x1e\n\x1c\x63om.snowflake.snowpark.protob\x06proto3'
)

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, "Snowpark.proto.ast_pb2", globals())
if _descriptor._USE_C_DESCRIPTORS == False:

    DESCRIPTOR._options = None
    DESCRIPTOR._serialized_options = b"\n\034com.snowflake.snowpark.proto"
    _LIST_SPCOLUMNEXPR._serialized_start = 65
    _LIST_SPCOLUMNEXPR._serialized_end = 117
    _LIST_STRING._serialized_start = 119
    _LIST_STRING._serialized_end = 146
    _MAP_STRING_SPVARIANT._serialized_start = 148
    _MAP_STRING_SPVARIANT._serialized_end = 213
    _MAP_STRING_STRING._serialized_start = 215
    _MAP_STRING_STRING._serialized_end = 274
    _TUPLE_SPVARIANT_SPVARIANT._serialized_start = 276
    _TUPLE_SPVARIANT_SPVARIANT._serialized_end = 359
    _TUPLE_SPVARIANT_SPVARIANT_DOUBLE._serialized_start = 361
    _TUPLE_SPVARIANT_SPVARIANT_DOUBLE._serialized_end = 458
    _TUPLE_STRING_SPCOLUMNEXPR._serialized_start = 460
    _TUPLE_STRING_SPCOLUMNEXPR._serialized_end = 530
    _TUPLE_STRING_SPVARIANT._serialized_start = 532
    _TUPLE_STRING_SPVARIANT._serialized_end = 596
    _TUPLE_STRING_STRING._serialized_start = 598
    _TUPLE_STRING_STRING._serialized_end = 643
    _LANGUAGE._serialized_start = 646
    _LANGUAGE._serialized_end = 810
    _PYTHONLANGUAGE._serialized_start = 812
    _PYTHONLANGUAGE._serialized_end = 859
    _SCALALANGUAGE._serialized_start = 861
    _SCALALANGUAGE._serialized_end = 907
    _JAVALANGUAGE._serialized_start = 909
    _JAVALANGUAGE._serialized_end = 954
    _VERSION._serialized_start = 956
    _VERSION._serialized_end = 1025
    _PYTHONTIMEZONE._serialized_start = 1027
    _PYTHONTIMEZONE._serialized_end = 1111
    _PDINDEXEXPR._serialized_start = 1113
    _PDINDEXEXPR._serialized_end = 1226
    _ORD._serialized_start = 1228
    _ORD._serialized_end = 1255
    _FLEXORD._serialized_start = 1257
    _FLEXORD._serialized_end = 1288
    _KEY._serialized_start = 1290
    _KEY._serialized_end = 1317
    _PDPROJECTINDEXEXPR._serialized_start = 1320
    _PDPROJECTINDEXEXPR._serialized_end = 1633
    _ORDRANGE._serialized_start = 1635
    _ORDRANGE._serialized_end = 1721
    _FLEXORDRANGE._serialized_start = 1723
    _FLEXORDRANGE._serialized_end = 1813
    _KEYRANGE._serialized_start = 1815
    _KEYRANGE._serialized_end = 1876
    _ORDLIST._serialized_start = 1878
    _ORDLIST._serialized_end = 1912
    _FLEXORDLIST._serialized_start = 1914
    _FLEXORDLIST._serialized_end = 1952
    _KEYLIST._serialized_start = 1954
    _KEYLIST._serialized_end = 1988
    _BOOLFILTERLIST._serialized_start = 1990
    _BOOLFILTERLIST._serialized_end = 2033
    _SPFLATTENMODE._serialized_start = 2035
    _SPFLATTENMODE._serialized_end = 2160
    _SPGROUPINGSETS._serialized_start = 2162
    _SPGROUPINGSETS._serialized_end = 2216
    _SPSAVEMODE._serialized_start = 2219
    _SPSAVEMODE._serialized_end = 2378
    _SPJOINTYPE._serialized_start = 2381
    _SPJOINTYPE._serialized_end = 2675
    _SPWINDOWSPECEXPR._serialized_start = 2678
    _SPWINDOWSPECEXPR._serialized_end = 3139
    _SPWINDOWSPECORDERBY._serialized_start = 3141
    _SPWINDOWSPECORDERBY._serialized_end = 3231
    _SPWINDOWSPECPARTITIONBY._serialized_start = 3233
    _SPWINDOWSPECPARTITIONBY._serialized_end = 3327
    _SPWINDOWSPECRANGEBETWEEN._serialized_start = 3329
    _SPWINDOWSPECRANGEBETWEEN._serialized_end = 3419
    _SPWINDOWSPECROWSBETWEEN._serialized_start = 3421
    _SPWINDOWSPECROWSBETWEEN._serialized_end = 3510
    _SPTIMESTAMPTIMEZONE._serialized_start = 3513
    _SPTIMESTAMPTIMEZONE._serialized_end = 3700
    _SPDATATYPE._serialized_start = 3703
    _SPDATATYPE._serialized_end = 4505
    _SPARRAYTYPE._serialized_start = 4507
    _SPARRAYTYPE._serialized_end = 4569
    _SPCOLUMNIDENTIFIER._serialized_start = 4571
    _SPCOLUMNIDENTIFIER._serialized_end = 4605
    _SPDECIMALTYPE._serialized_start = 4607
    _SPDECIMALTYPE._serialized_end = 4656
    _SPMAPTYPE._serialized_start = 4658
    _SPMAPTYPE._serialized_end = 4757
    _SPSTRINGTYPE._serialized_start = 4759
    _SPSTRINGTYPE._serialized_end = 4818
    _SPSTRUCTFIELD._serialized_start = 4820
    _SPSTRUCTFIELD._serialized_end = 4941
    _SPSTRUCTTYPE._serialized_start = 4943
    _SPSTRUCTTYPE._serialized_end = 5013
    _SPTIMESTAMPTYPE._serialized_start = 5015
    _SPTIMESTAMPTYPE._serialized_end = 5077
    _SPVECTORTYPE._serialized_start = 5079
    _SPVECTORTYPE._serialized_end = 5141
    _SPVARIANT._serialized_start = 5144
    _SPVARIANT._serialized_end = 5850
    _SPVARIANT_OBJECT._serialized_start = 5852
    _SPVARIANT_OBJECT._serialized_end = 5907
    _SPVARIANT_LIST._serialized_start = 5909
    _SPVARIANT_LIST._serialized_end = 5960
    _SPVARIANT_TIMESTAMP._serialized_start = 5962
    _SPVARIANT_TIMESTAMP._serialized_end = 5994
    _SPVARIANT_DATE._serialized_start = 5996
    _SPVARIANT_DATE._serialized_end = 6023
    _SPVARIANT_TIME._serialized_start = 6025
    _SPVARIANT_TIME._serialized_end = 6052
    _SPVARIANT_BYTES._serialized_start = 6054
    _SPVARIANT_BYTES._serialized_end = 6082
    _SPVARIANT_STRING._serialized_start = 6084
    _SPVARIANT_STRING._serialized_end = 6113
    _SPVARIANT_BOOL._serialized_start = 6115
    _SPVARIANT_BOOL._serialized_end = 6142
    _SPVARIANT_BIGINT._serialized_start = 6144
    _SPVARIANT_BIGINT._serialized_end = 6173
    _SPVARIANT_BIGDECIMAL._serialized_start = 6175
    _SPVARIANT_BIGDECIMAL._serialized_end = 6208
    _SPVARIANT_INT._serialized_start = 6210
    _SPVARIANT_INT._serialized_end = 6236
    _SPVARIANT_FLOAT._serialized_start = 6238
    _SPVARIANT_FLOAT._serialized_end = 6266
    _SPVARIANT_DOUBLE._serialized_start = 6268
    _SPVARIANT_DOUBLE._serialized_end = 6297
    _SPROW._serialized_start = 6299
    _SPROW._serialized_end = 6334
    _SRCPOSITION._serialized_start = 6336
    _SRCPOSITION._serialized_end = 6443
    _VARID._serialized_start = 6445
    _VARID._serialized_end = 6471
    _REQUEST._serialized_start = 6473
    _REQUEST._serialized_end = 6585
    _RESPONSE._serialized_start = 6587
    _RESPONSE._serialized_end = 6624
    _CONST._serialized_start = 6627
    _CONST._serialized_end = 7314
    _NONEVAL._serialized_start = 7316
    _NONEVAL._serialized_end = 7356
    _NULLVAL._serialized_start = 7358
    _NULLVAL._serialized_end = 7398
    _BOOLVAL._serialized_start = 7400
    _BOOLVAL._serialized_end = 7451
    _INT32VAL._serialized_start = 7453
    _INT32VAL._serialized_end = 7505
    _INT64VAL._serialized_start = 7507
    _INT64VAL._serialized_end = 7559
    _FLOAT64VAL._serialized_start = 7561
    _FLOAT64VAL._serialized_end = 7615
    _BIGINTVAL._serialized_start = 7617
    _BIGINTVAL._serialized_end = 7670
    _BIGDECIMALVAL._serialized_start = 7672
    _BIGDECIMALVAL._serialized_end = 7757
    _STRINGVAL._serialized_start = 7759
    _STRINGVAL._serialized_end = 7812
    _BINARYVAL._serialized_start = 7814
    _BINARYVAL._serialized_end = 7867
    _TIMESTAMPVAL._serialized_start = 7869
    _TIMESTAMPVAL._serialized_end = 7925
    _DATEVAL._serialized_start = 7927
    _DATEVAL._serialized_end = 7978
    _TIMEVAL._serialized_start = 7980
    _TIMEVAL._serialized_end = 8031
    _PYTHONTIMESTAMPVAL._serialized_start = 8034
    _PYTHONTIMESTAMPVAL._serialized_end = 8227
    _PYTHONDATEVAL._serialized_start = 8229
    _PYTHONDATEVAL._serialized_end = 8317
    _PYTHONTIMEVAL._serialized_start = 8320
    _PYTHONTIMEVAL._serialized_end = 8466
    _FNVAL._serialized_start = 8468
    _FNVAL._serialized_end = 8547
    _IFEXPR._serialized_start = 8549
    _IFEXPR._serialized_end = 8670
    _SOMEVAL._serialized_start = 8672
    _SOMEVAL._serialized_end = 8734
    _TUPLEVAL._serialized_start = 8736
    _TUPLEVAL._serialized_end = 8800
    _LISTVAL._serialized_start = 8802
    _LISTVAL._serialized_end = 8865
    _SEQMAPVAL._serialized_start = 8867
    _SEQMAPVAL._serialized_end = 8937
    _BUILTINFNEXPR._serialized_start = 8940
    _BUILTINFNEXPR._serialized_end = 9563
    _APPLYEXPR._serialized_start = 9565
    _APPLYEXPR._serialized_end = 9655
    _PYFN._serialized_start = 9657
    _PYFN._serialized_end = 9737
    _SNOWFLAKEUDF._serialized_start = 9739
    _SNOWFLAKEUDF._serialized_end = 9814
    _SNOWFLAKESPROC._serialized_start = 9816
    _SNOWFLAKESPROC._serialized_end = 9893
    _UNARYOP._serialized_start = 9895
    _UNARYOP._serialized_end = 9965
    _BINOP._serialized_start = 9968
    _BINOP._serialized_end = 10422
    _NOT._serialized_start = 10424
    _NOT._serialized_end = 10488
    _AND._serialized_start = 10490
    _AND._serialized_end = 10574
    _OR._serialized_start = 10576
    _OR._serialized_end = 10659
    _EQ._serialized_start = 10661
    _EQ._serialized_end = 10744
    _NEQ._serialized_start = 10746
    _NEQ._serialized_end = 10830
    _LT._serialized_start = 10832
    _LT._serialized_end = 10915
    _LEQ._serialized_start = 10917
    _LEQ._serialized_end = 11001
    _GT._serialized_start = 11003
    _GT._serialized_end = 11086
    _GEQ._serialized_start = 11088
    _GEQ._serialized_end = 11172
    _NEG._serialized_start = 11174
    _NEG._serialized_end = 11238
    _ADD._serialized_start = 11240
    _ADD._serialized_end = 11324
    _SUB._serialized_start = 11326
    _SUB._serialized_end = 11410
    _MUL._serialized_start = 11412
    _MUL._serialized_end = 11496
    _DIV._serialized_start = 11498
    _DIV._serialized_end = 11582
    _MOD._serialized_start = 11584
    _MOD._serialized_end = 11668
    _POW._serialized_start = 11670
    _POW._serialized_end = 11754
    _BITAND._serialized_start = 11756
    _BITAND._serialized_end = 11843
    _BITOR._serialized_start = 11845
    _BITOR._serialized_end = 11931
    _BITXOR._serialized_start = 11933
    _BITXOR._serialized_end = 12020
    _RANGEVAL._serialized_start = 12022
    _RANGEVAL._serialized_end = 12139
    _STRINGFN._serialized_start = 12142
    _STRINGFN._serialized_end = 12674
    _STRINGLEN._serialized_start = 12676
    _STRINGLEN._serialized_end = 12742
    _STRINGTOUPPER._serialized_start = 12744
    _STRINGTOUPPER._serialized_end = 12814
    _STRINGTOLOWER._serialized_start = 12816
    _STRINGTOLOWER._serialized_end = 12886
    _STRINGSTARTSWITH._serialized_start = 12888
    _STRINGSTARTSWITH._serialized_end = 12988
    _STRINGENDSWITH._serialized_start = 12990
    _STRINGENDSWITH._serialized_end = 13088
    _STRINGSUBSTR._serialized_start = 13090
    _STRINGSUBSTR._serialized_end = 13207
    _STRINGCONTAINS._serialized_start = 13209
    _STRINGCONTAINS._serialized_end = 13308
    _STRINGLIKE._serialized_start = 13310
    _STRINGLIKE._serialized_end = 13405
    _STRINGREGEXP._serialized_start = 13407
    _STRINGREGEXP._serialized_end = 13504
    _STRINGREGEXPCOUNT._serialized_start = 13507
    _STRINGREGEXPCOUNT._serialized_end = 13660
    _STRINGCOLLATE._serialized_start = 13662
    _STRINGCOLLATE._serialized_end = 13756
    _STRINGCONCAT._serialized_start = 13758
    _STRINGCONCAT._serialized_end = 13820
    _EXPR._serialized_start = 13823
    _EXPR._serialized_end = 23606
    _REF._serialized_start = 23608
    _REF._serialized_end = 23672
    _CASTEXPR._serialized_start = 23674
    _CASTEXPR._serialized_end = 23761
    _PDDATAFRAME._serialized_start = 23764
    _PDDATAFRAME._serialized_end = 23913
    _PDDROPNA._serialized_start = 23916
    _PDDROPNA._serialized_end = 24058
    _PDDATAFRAMEGETITEM._serialized_start = 24060
    _PDDATAFRAMEGETITEM._serialized_end = 24161
    _PDDATAFRAMESETITEM._serialized_start = 24163
    _PDDATAFRAMESETITEM._serialized_end = 24286
    _PDDATAFRAMELOC._serialized_start = 24288
    _PDDATAFRAMELOC._serialized_end = 24410
    _PDDATAFRAMEILOC._serialized_start = 24412
    _PDDATAFRAMEILOC._serialized_end = 24535
    _PDREPR._serialized_start = 24537
    _PDREPR._serialized_end = 24651
    _PDREPRRESULT._serialized_start = 24653
    _PDREPRRESULT._serialized_end = 24770
    _RESULT._serialized_start = 24773
    _RESULT._serialized_end = 24931
    _EVALRESULT._serialized_start = 24934
    _EVALRESULT._serialized_end = 25706
    _EVALOK._serialized_start = 25708
    _EVALOK._serialized_end = 25788
    _ERROR._serialized_start = 25790
    _ERROR._serialized_end = 25880
    _SESSIONRESETREQUIREDERROR._serialized_start = 25882
    _SESSIONRESETREQUIREDERROR._serialized_end = 25950
    _SPCOLUMNEXPR._serialized_start = 25953
    _SPCOLUMNEXPR._serialized_end = 26267
    _SPCOLUMNREF._serialized_start = 26269
    _SPCOLUMNREF._serialized_end = 26325
    _SPCOLUMN._serialized_start = 26327
    _SPCOLUMN._serialized_end = 26430
    _SPCOLUMNSQLEXPR._serialized_start = 26432
    _SPCOLUMNSQLEXPR._serialized_end = 26541
    _SPCOLUMNFN._serialized_start = 26544
    _SPCOLUMNFN._serialized_end = 27391
    _SPCOLUMNALIAS._serialized_start = 27394
    _SPCOLUMNALIAS._serialized_end = 27529
    _SPCOLUMNAPPLY_INT._serialized_start = 27531
    _SPCOLUMNAPPLY_INT._serialized_end = 27618
    _SPCOLUMNAPPLY_STRING._serialized_start = 27620
    _SPCOLUMNAPPLY_STRING._serialized_end = 27712
    _SPCOLUMNASC._serialized_start = 27714
    _SPCOLUMNASC._serialized_end = 27831
    _SPCOLUMNBETWEEN._serialized_start = 27834
    _SPCOLUMNBETWEEN._serialized_end = 27970
    _SPCOLUMNCAST._serialized_start = 27972
    _SPCOLUMNCAST._serialized_end = 28070
    _SPCOLUMNTRYCAST._serialized_start = 28072
    _SPCOLUMNTRYCAST._serialized_end = 28173
    _SPCOLUMNDESC._serialized_start = 28175
    _SPCOLUMNDESC._serialized_end = 28293
    _SPCOLUMNEQUALNAN._serialized_start = 28295
    _SPCOLUMNEQUALNAN._serialized_end = 28368
    _SPCOLUMNEQUALNULL._serialized_start = 28370
    _SPCOLUMNEQUALNULL._serialized_end = 28468
    _SPCOLUMNIN_DATAFRAME._serialized_start = 28470
    _SPCOLUMNIN_DATAFRAME._serialized_end = 28581
    _SPCOLUMNIN_SEQ._serialized_start = 28583
    _SPCOLUMNIN_SEQ._serialized_end = 28681
    _SPCOLUMNISNOTNULL._serialized_start = 28683
    _SPCOLUMNISNOTNULL._serialized_end = 28757
    _SPCOLUMNISNULL._serialized_start = 28759
    _SPCOLUMNISNULL._serialized_end = 28830
    _SPCOLUMNNAME._serialized_start = 28832
    _SPCOLUMNNAME._serialized_end = 28916
    _SPCOLUMNOVER._serialized_start = 28918
    _SPCOLUMNOVER._serialized_end = 29031
    _SPCOLUMNWITHINGROUP._serialized_start = 29033
    _SPCOLUMNWITHINGROUP._serialized_end = 29152
    _SPDATAFRAMEEXPR._serialized_start = 29155
    _SPDATAFRAMEEXPR._serialized_end = 32897
    _SPDATAFRAMEREF._serialized_start = 32899
    _SPDATAFRAMEREF._serialized_end = 32970
    _SPDATAFRAMESHOW._serialized_start = 32972
    _SPDATAFRAMESHOW._serialized_end = 33044
    _SPCREATEDATAFRAME._serialized_start = 33047
    _SPCREATEDATAFRAME._serialized_end = 33176
    _SPFLATTEN_COLUMN_STRING_BOOL_BOOL_STRING._serialized_start = 33179
    _SPFLATTEN_COLUMN_STRING_BOOL_BOOL_STRING._serialized_end = 33368
    _SPFLATTEN_COLUMN._serialized_start = 33370
    _SPFLATTEN_COLUMN._serialized_end = 33453
    _SPGENERATOR._serialized_start = 33455
    _SPGENERATOR._serialized_end = 33572
    _SPRANGE._serialized_start = 33575
    _SPRANGE._serialized_end = 33715
    _SPSQL._serialized_start = 33717
    _SPSQL._serialized_end = 33770
    _SPSTOREDPROCEDURE._serialized_start = 33772
    _SPSTOREDPROCEDURE._serialized_end = 33887
    _SPTABLE._serialized_start = 33889
    _SPTABLE._serialized_end = 33978
    _SPTABLEFUNCTION._serialized_start = 33980
    _SPTABLEFUNCTION._serialized_end = 34104
    _SPDATAFRAMETODF._serialized_start = 34106
    _SPDATAFRAMETODF._serialized_end = 34225
    _SPDATAFRAMENADROP._serialized_start = 34228
    _SPDATAFRAMENADROP._serialized_end = 34357
    _SPDATAFRAMENAFILL._serialized_start = 34360
    _SPDATAFRAMENAFILL._serialized_end = 34492
    _SPDATAFRAMENAREPLACE._serialized_start = 34495
    _SPDATAFRAMENAREPLACE._serialized_end = 34653
    _SPDATAFRAMEAGG._serialized_start = 34656
    _SPDATAFRAMEAGG._serialized_end = 34789
    _SPDATAFRAMEAPPLY._serialized_start = 34791
    _SPDATAFRAMEAPPLY._serialized_end = 34892
    _SPDATAFRAMECOL._serialized_start = 34894
    _SPDATAFRAMECOL._serialized_end = 34993
    _SPDATAFRAMECROSSJOIN._serialized_start = 34995
    _SPDATAFRAMECROSSJOIN._serialized_end = 35118
    _SPDATAFRAMECUBE._serialized_start = 35121
    _SPDATAFRAMECUBE._serialized_end = 35254
    _SPDATAFRAMEDISTINCT._serialized_start = 35256
    _SPDATAFRAMEDISTINCT._serialized_end = 35342
    _SPDATAFRAMEDROP_COLUMNS._serialized_start = 35345
    _SPDATAFRAMEDROP_COLUMNS._serialized_end = 35486
    _SPDATAFRAMEDROP_STRINGS._serialized_start = 35488
    _SPDATAFRAMEDROP_STRINGS._serialized_end = 35610
    _SPDATAFRAMEDROPDUPLICATES._serialized_start = 35612
    _SPDATAFRAMEDROPDUPLICATES._serialized_end = 35718
    _SPDATAFRAMEEXCEPT._serialized_start = 35720
    _SPDATAFRAMEEXCEPT._serialized_end = 35841
    _SPDATAFRAMEFILTER._serialized_start = 35843
    _SPDATAFRAMEFILTER._serialized_end = 35965
    _SPDATAFRAMEFLATTEN_COLUMN_STRING_BOOL_BOOL_STRING._serialized_start = 35968
    _SPDATAFRAMEFLATTEN_COLUMN_STRING_BOOL_BOOL_STRING._serialized_end = 36200
    _SPDATAFRAMEFLATTEN_COLUMN._serialized_start = 36202
    _SPDATAFRAMEFLATTEN_COLUMN._serialized_end = 36328
    _SPDATAFRAMEFIRST._serialized_start = 36331
    _SPDATAFRAMEFIRST._serialized_end = 36492
    _SPDATAFRAMEGROUPBY_COLUMNS._serialized_start = 36495
    _SPDATAFRAMEGROUPBY_COLUMNS._serialized_end = 36639
    _SPDATAFRAMEGROUPBY_STRINGS._serialized_start = 36641
    _SPDATAFRAMEGROUPBY_STRINGS._serialized_end = 36766
    _SPDATAFRAMEGROUPBY._serialized_start = 36768
    _SPDATAFRAMEGROUPBY._serialized_end = 36853
    _SPDATAFRAMEINTERSECT._serialized_start = 36855
    _SPDATAFRAMEINTERSECT._serialized_end = 36979
    _SPDATAFRAMEJOIN_TABLEFUNCTION_MAP._serialized_start = 36982
    _SPDATAFRAMEJOIN_TABLEFUNCTION_MAP._serialized_end = 37252
    _SPDATAFRAMEJOIN_TABLEFUNCTION_LIST._serialized_start = 37255
    _SPDATAFRAMEJOIN_TABLEFUNCTION_LIST._serialized_end = 37531
    _SPDATAFRAMEJOIN_DATAFRAME_JOINEXPRS._serialized_start = 37534
    _SPDATAFRAMEJOIN_DATAFRAME_JOINEXPRS._serialized_end = 37750
    _SPDATAFRAMEJOIN_DATAFRAME_USINGCOLUMNS._serialized_start = 37753
    _SPDATAFRAMEJOIN_DATAFRAME_USINGCOLUMNS._serialized_end = 37989
    _SPDATAFRAMELIMIT._serialized_start = 37991
    _SPDATAFRAMELIMIT._serialized_end = 38085
    _SPDATAFRAMENATURALJOIN._serialized_start = 38088
    _SPDATAFRAMENATURALJOIN._serialized_end = 38249
    _SPDATAFRAMEPIVOT_COLUMN._serialized_start = 38252
    _SPDATAFRAMEPIVOT_COLUMN._serialized_end = 38415
    _SPDATAFRAMEPIVOT_STRING._serialized_start = 38418
    _SPDATAFRAMEPIVOT_STRING._serialized_end = 38562
    _SPDATAFRAMERANDOMSPLIT._serialized_start = 38565
    _SPDATAFRAMERANDOMSPLIT._serialized_end = 38764
    _SPDATAFRAMERENAME._serialized_start = 38767
    _SPDATAFRAMERENAME._serialized_end = 38901
    _SPDATAFRAMEROLLUP_COLUMNS._serialized_start = 38904
    _SPDATAFRAMEROLLUP_COLUMNS._serialized_end = 39047
    _SPDATAFRAMEROLLUP_STRINGS._serialized_start = 39049
    _SPDATAFRAMEROLLUP_STRINGS._serialized_end = 39173
    _SPDATAFRAMESAMPLE_DOUBLE._serialized_start = 39175
    _SPDATAFRAMESAMPLE_DOUBLE._serialized_end = 39296
    _SPDATAFRAMESAMPLE_LONG._serialized_start = 39298
    _SPDATAFRAMESAMPLE_LONG._serialized_end = 39400
    _SPDATAFRAMESELECT_COLUMNS._serialized_start = 39403
    _SPDATAFRAMESELECT_COLUMNS._serialized_end = 39538
    _SPDATAFRAMESELECT_STRINGS._serialized_start = 39540
    _SPDATAFRAMESELECT_STRINGS._serialized_end = 39664
    _SPDATAFRAMESORT._serialized_start = 39667
    _SPDATAFRAMESORT._serialized_end = 39800
    _SPDATAFRAMEUNION._serialized_start = 39802
    _SPDATAFRAMEUNION._serialized_end = 39921
    _SPDATAFRAMEUNIONALL._serialized_start = 39923
    _SPDATAFRAMEUNIONALL._serialized_end = 40045
    _SPDATAFRAMEUNIONALLBYNAME._serialized_start = 40048
    _SPDATAFRAMEUNIONALLBYNAME._serialized_end = 40176
    _SPDATAFRAMEUNIONBYNAME._serialized_start = 40178
    _SPDATAFRAMEUNIONBYNAME._serialized_end = 40303
    _SPDATAFRAMEWHERE._serialized_start = 40305
    _SPDATAFRAMEWHERE._serialized_end = 40426
    _SPDATAFRAMEWITHCOLUMN._serialized_start = 40429
    _SPDATAFRAMEWITHCOLUMN._serialized_end = 40567
    _SPDATAFRAMEWITHCOLUMNS._serialized_start = 40570
    _SPDATAFRAMEWITHCOLUMNS._serialized_end = 40713
    _SPDATAFRAMEGROUPBYGROUPINGSETS._serialized_start = 40716
    _SPDATAFRAMEGROUPBYGROUPINGSETS._serialized_end = 40875
    _SPCOPYABLEDATAFRAMEEXPR._serialized_start = 40878
    _SPCOPYABLEDATAFRAMEEXPR._serialized_end = 41394
    _SPDATAFRAMEREADEROPTIONS._serialized_start = 41396
    _SPDATAFRAMEREADEROPTIONS._serialized_end = 41450
    _SPDATAFRAMEREADERSCHEMA._serialized_start = 41452
    _SPDATAFRAMEREADERSCHEMA._serialized_end = 41505
    _SPREADAVRO._serialized_start = 41507
    _SPREADAVRO._serialized_end = 41564
    _SPREADCSV._serialized_start = 41566
    _SPREADCSV._serialized_end = 41622
    _SPREADJSON._serialized_start = 41624
    _SPREADJSON._serialized_end = 41681
    _SPREADORC._serialized_start = 41683
    _SPREADORC._serialized_end = 41739
    _SPREADPARQUET._serialized_start = 41741
    _SPREADPARQUET._serialized_end = 41801
    _SPREADTABLE._serialized_start = 41803
    _SPREADTABLE._serialized_end = 41861
    _SPREADXML._serialized_start = 41863
    _SPREADXML._serialized_end = 41919
    _SPCOPYINTO._serialized_start = 41922
    _SPCOPYINTO._serialized_end = 42125
    _SPDATAFRAMEWRITER._serialized_start = 42128
    _SPDATAFRAMEWRITER._serialized_end = 42491
    _SPDATAFRAMEWRITERSAVEMODE._serialized_start = 42493
    _SPDATAFRAMEWRITERSAVEMODE._serialized_end = 42548
    _SPDATAFRAMEWRITEROPTIONS._serialized_start = 42550
    _SPDATAFRAMEWRITEROPTIONS._serialized_end = 42604
    _SPWRITECSV._serialized_start = 42606
    _SPWRITECSV._serialized_end = 42697
    _SPWRITEJSON._serialized_start = 42699
    _SPWRITEJSON._serialized_end = 42791
    _SPWRITEPARQUET._serialized_start = 42793
    _SPWRITEPARQUET._serialized_end = 42888
    _SPWRITETABLE._serialized_start = 42891
    _SPWRITETABLE._serialized_end = 43040
    _SPDATAFRAMESTATSAPPROXQUANTILE._serialized_start = 43042
    _SPDATAFRAMESTATSAPPROXQUANTILE._serialized_end = 43108
    _SPDATAFRAMESTATSCORR._serialized_start = 43110
    _SPDATAFRAMESTATSCORR._serialized_end = 43166
    _SPDATAFRAMESTATSCOV._serialized_start = 43168
    _SPDATAFRAMESTATSCOV._serialized_end = 43223
    _SPDATAFRAMESTATSCROSSTAB._serialized_start = 43225
    _SPDATAFRAMESTATSCROSSTAB._serialized_end = 43344
    _SPDATAFRAMESTATSSAMPLEBY._serialized_start = 43347
    _SPDATAFRAMESTATSSAMPLEBY._serialized_end = 43528
    _SPRELATIONALGROUPEDDATAFRAMEEXPR._serialized_start = 43531
    _SPRELATIONALGROUPEDDATAFRAMEEXPR._serialized_end = 45140
    _SPRELATIONALGROUPEDDATAFRAMEAGG_MAP._serialized_start = 45143
    _SPRELATIONALGROUPEDDATAFRAMEAGG_MAP._serialized_end = 45336
    _SPRELATIONALGROUPEDDATAFRAMEAGG_COLUMNS._serialized_start = 45339
    _SPRELATIONALGROUPEDDATAFRAMEAGG_COLUMNS._serialized_end = 45514
    _SPRELATIONALGROUPEDDATAFRAMEANYVALUE._serialized_start = 45517
    _SPRELATIONALGROUPEDDATAFRAMEANYVALUE._serialized_end = 45670
    _SPRELATIONALGROUPEDDATAFRAMEAVG._serialized_start = 45673
    _SPRELATIONALGROUPEDDATAFRAMEAVG._serialized_end = 45821
    _SPRELATIONALGROUPEDDATAFRAMEBUILTIN._serialized_start = 45824
    _SPRELATIONALGROUPEDDATAFRAMEBUILTIN._serialized_end = 45994
    _SPRELATIONALGROUPEDDATAFRAMECOUNT._serialized_start = 45996
    _SPRELATIONALGROUPEDDATAFRAMECOUNT._serialized_end = 46113
    _SPRELATIONALGROUPEDDATAFRAMEMAX._serialized_start = 46116
    _SPRELATIONALGROUPEDDATAFRAMEMAX._serialized_end = 46264
    _SPRELATIONALGROUPEDDATAFRAMEMEAN._serialized_start = 46267
    _SPRELATIONALGROUPEDDATAFRAMEMEAN._serialized_end = 46416
    _SPRELATIONALGROUPEDDATAFRAMEMEDIAN._serialized_start = 46419
    _SPRELATIONALGROUPEDDATAFRAMEMEDIAN._serialized_end = 46570
    _SPRELATIONALGROUPEDDATAFRAMEMIN._serialized_start = 46573
    _SPRELATIONALGROUPEDDATAFRAMEMIN._serialized_end = 46721
    _SPRELATIONALGROUPEDDATAFRAMESUM._serialized_start = 46724
    _SPRELATIONALGROUPEDDATAFRAMESUM._serialized_end = 46872
    _SPDATAFRAMETYPE._serialized_start = 46874
    _SPDATAFRAMETYPE._serialized_end = 46932
    _SPGROUPEDDATAFRAMETYPE._serialized_start = 46934
    _SPGROUPEDDATAFRAMETYPE._serialized_end = 47004
    _SPWINDOWTYPE._serialized_start = 47006
    _SPWINDOWTYPE._serialized_end = 47020
    _SPCOLEXPRTYPE._serialized_start = 47022
    _SPCOLEXPRTYPE._serialized_end = 47061
    _HASSRCPOSITION._serialized_start = 47064
    _HASSRCPOSITION._serialized_end = 56891
    _STMT._serialized_start = 56893
    _STMT._serialized_end = 56968
    _ASSIGN._serialized_start = 56970
    _ASSIGN._serialized_end = 57090
    _EVAL._serialized_start = 57092
    _EVAL._serialized_end = 57139
    _TYPE._serialized_start = 57142
    _TYPE._serialized_end = 58102
    _UNKNOWNTYPE._serialized_start = 58104
    _UNKNOWNTYPE._serialized_end = 58117
    _ANYTYPE._serialized_start = 58119
    _ANYTYPE._serialized_end = 58128
    _SCALARTYPE._serialized_start = 58131
    _SCALARTYPE._serialized_end = 58432
    _NUMERICTYPE._serialized_start = 58435
    _NUMERICTYPE._serialized_end = 58617
    _NUMBERTYPE._serialized_start = 58619
    _NUMBERTYPE._serialized_end = 58631
    _NOTHINGTYPE._serialized_start = 58633
    _NOTHINGTYPE._serialized_end = 58646
    _UNITTYPE._serialized_start = 58648
    _UNITTYPE._serialized_end = 58658
    _BOOLTYPE._serialized_start = 58660
    _BOOLTYPE._serialized_end = 58670
    _INT32TYPE._serialized_start = 58672
    _INT32TYPE._serialized_end = 58683
    _INT64TYPE._serialized_start = 58685
    _INT64TYPE._serialized_end = 58696
    _FLOAT64TYPE._serialized_start = 58698
    _FLOAT64TYPE._serialized_end = 58711
    _STRINGTYPE._serialized_start = 58713
    _STRINGTYPE._serialized_end = 58725
    _PDREPRTYPE._serialized_start = 58727
    _PDREPRTYPE._serialized_end = 58739
    _FNTYPE._serialized_start = 58741
    _FNTYPE._serialized_end = 58800
    _OPTIONTYPE._serialized_start = 58802
    _OPTIONTYPE._serialized_end = 58838
    _TUPLETYPE._serialized_start = 58840
    _TUPLETYPE._serialized_end = 58875
    _LISTTYPE._serialized_start = 58877
    _LISTTYPE._serialized_end = 58911
    _MAPTYPE._serialized_start = 58913
    _MAPTYPE._serialized_end = 58966
    _TYVAR._serialized_start = 58968
    _TYVAR._serialized_end = 58987
# @@protoc_insertion_point(module_scope)
