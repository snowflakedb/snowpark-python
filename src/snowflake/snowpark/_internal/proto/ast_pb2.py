#
# Copyright (c) 2012-2024 Snowflake Computing Inc. All rights reserved.
#

# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Snowpark/proto/ast.proto
"""Generated protocol buffer code."""
from google.protobuf import (
    descriptor as _descriptor,
    descriptor_pool as _descriptor_pool,
    symbol_database as _symbol_database,
)
from google.protobuf.internal import builder as _builder

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2

import snowflake.snowpark._internal.proto.scalapb_pb2 as scalapb_dot_scalapb__pb2

DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n\x18Snowpark/proto/ast.proto\x12\x03\x61st\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x15scalapb/scalapb.proto"$\n\tList_Expr\x12\x17\n\x04list\x18\x01 \x03(\x0b\x32\t.ast.Expr"0\n\x0fList_SpDataType\x12\x1d\n\x04list\x18\x01 \x03(\x0b\x32\x0f.ast.SpDataType"\x1b\n\x0bList_String\x12\x0c\n\x04list\x18\x01 \x03(\t"3\n\rMap_Expr_Expr\x12"\n\x04list\x18\x01 \x03(\x0b\x32\x14.ast.Tuple_Expr_Expr"7\n\x0fMap_String_Expr\x12$\n\x04list\x18\x01 \x03(\x0b\x32\x16.ast.Tuple_String_Expr";\n\x11Map_String_String\x12&\n\x04list\x18\x01 \x03(\x0b\x32\x18.ast.Tuple_String_String"?\n\x0fTuple_Expr_Expr\x12\x15\n\x02_1\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x15\n\x02_2\x18\x02 \x01(\x0b\x32\t.ast.Expr"5\n\x10Tuple_Expr_Float\x12\x15\n\x02_1\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\n\n\x02_2\x18\x02 \x01(\x01"6\n\x11Tuple_String_Expr\x12\n\n\x02_1\x18\x01 \x01(\t\x12\x15\n\x02_2\x18\x02 \x01(\x0b\x32\t.ast.Expr"2\n\x18Tuple_String_List_String\x12\n\n\x02_1\x18\x01 \x01(\t\x12\n\n\x02_2\x18\x02 \x03(\t"@\n\x16Tuple_String_SpVariant\x12\n\n\x02_1\x18\x01 \x01(\t\x12\x1a\n\x02_2\x18\x02 \x01(\x0b\x32\x0e.ast.SpVariant"-\n\x13Tuple_String_String\x12\n\n\x02_1\x18\x01 \x01(\t\x12\n\n\x02_2\x18\x02 \x01(\t"\xa4\x01\n\x08Language\x12*\n\rjava_language\x18\x01 \x01(\x0b\x32\x11.ast.JavaLanguageH\x00\x12.\n\x0fpython_language\x18\x02 \x01(\x0b\x32\x13.ast.PythonLanguageH\x00\x12,\n\x0escala_language\x18\x03 \x01(\x0b\x32\x12.ast.ScalaLanguageH\x00\x42\x0e\n\x0csealed_value"/\n\x0ePythonLanguage\x12\x1d\n\x07version\x18\x01 \x01(\x0b\x32\x0c.ast.Version".\n\rScalaLanguage\x12\x1d\n\x07version\x18\x01 \x01(\x0b\x32\x0c.ast.Version"-\n\x0cJavaLanguage\x12\x1d\n\x07version\x18\x01 \x01(\x0b\x32\x0c.ast.Version"E\n\x07Version\x12\r\n\x05label\x18\x01 \x01(\t\x12\r\n\x05major\x18\x02 \x01(\x03\x12\r\n\x05minor\x18\x03 \x01(\x03\x12\r\n\x05patch\x18\x04 \x01(\x03"T\n\x0ePythonTimeZone\x12*\n\x04name\x18\x01 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x16\n\x0eoffset_seconds\x18\x02 \x01(\x03"v\n\x06\x46nName\x12\'\n\x0c\x66n_name_flat\x18\x01 \x01(\x0b\x32\x0f.ast.FnNameFlatH\x00\x12\x33\n\x12\x66n_name_structured\x18\x02 \x01(\x0b\x32\x15.ast.FnNameStructuredH\x00\x42\x0e\n\x0csealed_value"\x1a\n\nFnNameFlat\x12\x0c\n\x04name\x18\x01 \x01(\t" \n\x10\x46nNameStructured\x12\x0c\n\x04name\x18\x01 \x03(\t"\x84\x01\n\nUdtfSchema\x12\x33\n\x12udtf_schema__names\x18\x01 \x01(\x0b\x32\x15.ast.UdtfSchema_NamesH\x00\x12\x31\n\x11udtf_schema__type\x18\x02 \x01(\x0b\x32\x14.ast.UdtfSchema_TypeH\x00\x42\x0e\n\x0csealed_value"7\n\x0fUdtfSchema_Type\x12$\n\x0breturn_type\x18\x01 \x01(\x0b\x32\x0f.ast.SpDataType""\n\x10UdtfSchema_Names\x12\x0e\n\x06schema\x18\x01 \x03(\t"\xc8\x01\n\x0fTableFnCallType\x12%\n\x1btable_fn_call_type__builtin\x18\x01 \x01(\x08H\x00\x12+\n!table_fn_call_type__call_table_fn\x18\x02 \x01(\x08H\x00\x12.\n$table_fn_call_type__session_table_fn\x18\x03 \x01(\x08H\x00\x12&\n\x1ctable_fn_call_type__table_fn\x18\x04 \x01(\x08H\x00\x42\t\n\x07variant"\xaa\x02\n\x18SpWindowRelativePosition\x12\x32\n(sp_window_relative_position__current_row\x18\x01 \x01(\x08H\x00\x12W\n%sp_window_relative_position__position\x18\x02 \x01(\x0b\x32&.ast.SpWindowRelativePosition_PositionH\x00\x12:\n0sp_window_relative_position__unbounded_following\x18\x03 \x01(\x08H\x00\x12:\n0sp_window_relative_position__unbounded_preceding\x18\x04 \x01(\x08H\x00\x42\t\n\x07variant".\n!SpWindowRelativePosition_Position\x12\t\n\x01n\x18\x01 \x01(\x03"q\n\x0bPdIndexExpr\x12 \n\x08\x66lex_ord\x18\x01 \x01(\x0b\x32\x0c.ast.FlexOrdH\x00\x12\x17\n\x03key\x18\x02 \x01(\x0b\x32\x08.ast.KeyH\x00\x12\x17\n\x03ord\x18\x03 \x01(\x0b\x32\x08.ast.OrdH\x00\x42\x0e\n\x0csealed_value"\x1b\n\x03Ord\x12\x14\n\x01v\x18\x01 \x01(\x0b\x32\t.ast.Expr"\x1f\n\x07\x46lexOrd\x12\x14\n\x01v\x18\x01 \x01(\x0b\x32\t.ast.Expr"\x1b\n\x03Key\x12\x14\n\x01v\x18\x01 \x01(\x0b\x32\t.ast.Expr"\xb9\x02\n\x12PdProjectIndexExpr\x12/\n\x10\x62ool_filter_list\x18\x01 \x01(\x0b\x32\x13.ast.BoolFilterListH\x00\x12)\n\rflex_ord_list\x18\x02 \x01(\x0b\x32\x10.ast.FlexOrdListH\x00\x12+\n\x0e\x66lex_ord_range\x18\x03 \x01(\x0b\x32\x11.ast.FlexOrdRangeH\x00\x12 \n\x08key_list\x18\x04 \x01(\x0b\x32\x0c.ast.KeyListH\x00\x12"\n\tkey_range\x18\x05 \x01(\x0b\x32\r.ast.KeyRangeH\x00\x12 \n\x08ord_list\x18\x06 \x01(\x0b\x32\x0c.ast.OrdListH\x00\x12"\n\tord_range\x18\x07 \x01(\x0b\x32\r.ast.OrdRangeH\x00\x42\x0e\n\x0csealed_value"V\n\x08OrdRange\x12\x18\n\x05start\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04step\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04stop\x18\x03 \x01(\x0b\x32\t.ast.Expr"Z\n\x0c\x46lexOrdRange\x12\x18\n\x05start\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04step\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04stop\x18\x03 \x01(\x0b\x32\t.ast.Expr"=\n\x08KeyRange\x12\x18\n\x05start\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04stop\x18\x02 \x01(\x0b\x32\t.ast.Expr""\n\x07OrdList\x12\x17\n\x04ords\x18\x01 \x01(\x0b\x32\t.ast.Expr"&\n\x0b\x46lexOrdList\x12\x17\n\x04ords\x18\x01 \x01(\x0b\x32\t.ast.Expr""\n\x07KeyList\x12\x17\n\x04keys\x18\x01 \x01(\x0b\x32\t.ast.Expr"+\n\x0e\x42oolFilterList\x12\x19\n\x06\x66ilter\x18\x01 \x01(\x0b\x32\t.ast.Expr"}\n\rSpFlattenMode\x12\x1f\n\x15sp_flatten_mode_array\x18\x01 \x01(\x08H\x00\x12\x1e\n\x14sp_flatten_mode_both\x18\x02 \x01(\x08H\x00\x12 \n\x16sp_flatten_mode_object\x18\x03 \x01(\x08H\x00\x42\t\n\x07variant"P\n\x0eSpTableVariant\x12\x1a\n\x10sp_session_table\x18\x01 \x01(\x08H\x00\x12\x17\n\rsp_table_init\x18\x02 \x01(\x08H\x00\x42\t\n\x07variant"\xc0\x01\n\nSpSaveMode\x12\x1d\n\x13sp_save_mode_append\x18\x01 \x01(\x08H\x00\x12&\n\x1csp_save_mode_error_if_exists\x18\x02 \x01(\x08H\x00\x12\x1d\n\x13sp_save_mode_ignore\x18\x03 \x01(\x08H\x00\x12 \n\x16sp_save_mode_overwrite\x18\x04 \x01(\x08H\x00\x12\x1f\n\x15sp_save_mode_truncate\x18\x05 \x01(\x08H\x00\x42\t\n\x07variant"\xa6\x02\n\nSpJoinType\x12\x1c\n\x12sp_join_type__asof\x18\x01 \x01(\x08H\x00\x12\x1d\n\x13sp_join_type__cross\x18\x02 \x01(\x08H\x00\x12"\n\x18sp_join_type__full_outer\x18\x03 \x01(\x08H\x00\x12\x1d\n\x13sp_join_type__inner\x18\x04 \x01(\x08H\x00\x12!\n\x17sp_join_type__left_anti\x18\x05 \x01(\x08H\x00\x12"\n\x18sp_join_type__left_outer\x18\x06 \x01(\x08H\x00\x12!\n\x17sp_join_type__left_semi\x18\x07 \x01(\x08H\x00\x12#\n\x19sp_join_type__right_outer\x18\x08 \x01(\x08H\x00\x42\t\n\x07variant"\xbb\x01\n\x13SpTimestampTimeZone\x12(\n\x1esp_timestamp_time_zone_default\x18\x01 \x01(\x08H\x00\x12$\n\x1asp_timestamp_time_zone_ltz\x18\x02 \x01(\x08H\x00\x12$\n\x1asp_timestamp_time_zone_ntz\x18\x03 \x01(\x08H\x00\x12#\n\x19sp_timestamp_time_zone_tz\x18\x04 \x01(\x08H\x00\x42\t\n\x07variant"\x9d\x07\n\nSpDataType\x12)\n\rsp_array_type\x18\x01 \x01(\x0b\x32\x10.ast.SpArrayTypeH\x00\x12\x18\n\x0esp_binary_type\x18\x02 \x01(\x08H\x00\x12\x19\n\x0fsp_boolean_type\x18\x03 \x01(\x08H\x00\x12\x16\n\x0csp_byte_type\x18\x04 \x01(\x08H\x00\x12\x37\n\x14sp_column_identifier\x18\x05 \x01(\x0b\x32\x17.ast.SpColumnIdentifierH\x00\x12\x16\n\x0csp_date_type\x18\x06 \x01(\x08H\x00\x12-\n\x0fsp_decimal_type\x18\x07 \x01(\x0b\x32\x12.ast.SpDecimalTypeH\x00\x12\x18\n\x0esp_double_type\x18\x08 \x01(\x08H\x00\x12\x17\n\rsp_float_type\x18\t \x01(\x08H\x00\x12\x1b\n\x11sp_geography_type\x18\n \x01(\x08H\x00\x12\x1a\n\x10sp_geometry_type\x18\x0b \x01(\x08H\x00\x12\x19\n\x0fsp_integer_type\x18\x0c \x01(\x08H\x00\x12\x16\n\x0csp_long_type\x18\r \x01(\x08H\x00\x12%\n\x0bsp_map_type\x18\x0e \x01(\x0b\x32\x0e.ast.SpMapTypeH\x00\x12\x16\n\x0csp_null_type\x18\x0f \x01(\x08H\x00\x12?\n\x19sp_pandas_data_frame_type\x18\x10 \x01(\x0b\x32\x1a.ast.SpPandasDataFrameTypeH\x00\x12\x38\n\x15sp_pandas_series_type\x18\x11 \x01(\x0b\x32\x17.ast.SpPandasSeriesTypeH\x00\x12\x17\n\rsp_short_type\x18\x12 \x01(\x08H\x00\x12+\n\x0esp_string_type\x18\x13 \x01(\x0b\x32\x11.ast.SpStringTypeH\x00\x12-\n\x0fsp_struct_field\x18\x14 \x01(\x0b\x32\x12.ast.SpStructFieldH\x00\x12+\n\x0esp_struct_type\x18\x15 \x01(\x0b\x32\x11.ast.SpStructTypeH\x00\x12\x16\n\x0csp_time_type\x18\x16 \x01(\x08H\x00\x12\x31\n\x11sp_timestamp_type\x18\x17 \x01(\x0b\x32\x14.ast.SpTimestampTypeH\x00\x12\x19\n\x0fsp_variant_type\x18\x18 \x01(\x08H\x00\x12+\n\x0esp_vector_type\x18\x19 \x01(\x0b\x32\x11.ast.SpVectorTypeH\x00\x42\t\n\x07variant">\n\x0bSpArrayType\x12\x12\n\nstructured\x18\x01 \x01(\x08\x12\x1b\n\x02ty\x18\x02 \x01(\x0b\x32\x0f.ast.SpDataType""\n\x12SpColumnIdentifier\x12\x0c\n\x04name\x18\x01 \x01(\t"1\n\rSpDecimalType\x12\x11\n\tprecision\x18\x01 \x01(\x03\x12\r\n\x05scale\x18\x02 \x01(\x03"c\n\tSpMapType\x12\x1f\n\x06key_ty\x18\x01 \x01(\x0b\x32\x0f.ast.SpDataType\x12\x12\n\nstructured\x18\x02 \x01(\x08\x12!\n\x08value_ty\x18\x03 \x01(\x0b\x32\x0f.ast.SpDataType";\n\x0cSpStringType\x12+\n\x06length\x18\x01 \x01(\x0b\x32\x1b.google.protobuf.Int64Value"y\n\rSpStructField\x12\x32\n\x11\x63olumn_identifier\x18\x01 \x01(\x0b\x32\x17.ast.SpColumnIdentifier\x12"\n\tdata_type\x18\x02 \x01(\x0b\x32\x0f.ast.SpDataType\x12\x10\n\x08nullable\x18\x03 \x01(\x08"F\n\x0cSpStructType\x12"\n\x06\x66ields\x18\x01 \x03(\x0b\x32\x12.ast.SpStructField\x12\x12\n\nstructured\x18\x02 \x01(\x08">\n\x0fSpTimestampType\x12+\n\ttime_zone\x18\x01 \x01(\x0b\x32\x18.ast.SpTimestampTimeZone">\n\x0cSpVectorType\x12\x11\n\tdimension\x18\x01 \x01(\x03\x12\x1b\n\x02ty\x18\x02 \x01(\x0b\x32\x0f.ast.SpDataType"4\n\x12SpPandasSeriesType\x12\x1e\n\x05\x65l_ty\x18\x01 \x01(\x0b\x32\x0f.ast.SpDataType"N\n\x15SpPandasDataFrameType\x12\x11\n\tcol_names\x18\x01 \x03(\t\x12"\n\tcol_types\x18\x02 \x03(\x0b\x32\x0f.ast.SpDataType"\xc2\x05\n\tSpVariant\x12<\n\x17sp_variant__big_decimal\x18\x01 \x01(\x0b\x32\x19.ast.SpVariant_BigDecimalH\x00\x12\x34\n\x13sp_variant__big_int\x18\x02 \x01(\x0b\x32\x15.ast.SpVariant_BigIntH\x00\x12/\n\x10sp_variant__bool\x18\x03 \x01(\x0b\x32\x13.ast.SpVariant_BoolH\x00\x12\x31\n\x11sp_variant__bytes\x18\x04 \x01(\x0b\x32\x14.ast.SpVariant_BytesH\x00\x12/\n\x10sp_variant__date\x18\x05 \x01(\x0b\x32\x13.ast.SpVariant_DateH\x00\x12\x33\n\x12sp_variant__double\x18\x06 \x01(\x0b\x32\x15.ast.SpVariant_DoubleH\x00\x12\x31\n\x11sp_variant__float\x18\x07 \x01(\x0b\x32\x14.ast.SpVariant_FloatH\x00\x12-\n\x0fsp_variant__int\x18\x08 \x01(\x0b\x32\x12.ast.SpVariant_IntH\x00\x12/\n\x10sp_variant__list\x18\t \x01(\x0b\x32\x13.ast.SpVariant_ListH\x00\x12\x33\n\x12sp_variant__object\x18\n \x01(\x0b\x32\x15.ast.SpVariant_ObjectH\x00\x12\x33\n\x12sp_variant__string\x18\x0b \x01(\x0b\x32\x15.ast.SpVariant_StringH\x00\x12/\n\x10sp_variant__time\x18\x0c \x01(\x0b\x32\x13.ast.SpVariant_TimeH\x00\x12\x39\n\x15sp_variant__timestamp\x18\r \x01(\x0b\x32\x18.ast.SpVariant_TimestampH\x00\x42\x0e\n\x0csealed_value"7\n\x10SpVariant_Object\x12#\n\x01v\x18\x01 \x03(\x0b\x32\x18.ast.Tuple_String_String"3\n\x0eSpVariant_List\x12!\n\x01v\x18\x01 \x03(\x0b\x32\x16.ast.Map_String_String" \n\x13SpVariant_Timestamp\x12\t\n\x01v\x18\x01 \x01(\x04"\x1b\n\x0eSpVariant_Date\x12\t\n\x01v\x18\x01 \x01(\x04"\x1b\n\x0eSpVariant_Time\x12\t\n\x01v\x18\x01 \x01(\x04"\x1c\n\x0fSpVariant_Bytes\x12\t\n\x01v\x18\x01 \x01(\x0c"\x1d\n\x10SpVariant_String\x12\t\n\x01v\x18\x01 \x01(\t"\x1b\n\x0eSpVariant_Bool\x12\t\n\x01v\x18\x01 \x01(\x08"\x1d\n\x10SpVariant_BigInt\x12\t\n\x01v\x18\x01 \x01(\x0c"!\n\x14SpVariant_BigDecimal\x12\t\n\x01v\x18\x01 \x01(\x0c"\x1a\n\rSpVariant_Int\x12\t\n\x01v\x18\x01 \x01(\x03"\x1c\n\x0fSpVariant_Float\x12\t\n\x01v\x18\x01 \x01(\x04"\x1d\n\x10SpVariant_Double\x12\t\n\x01v\x18\x01 \x01(\x04"\x91\x01\n\x0bSpTableName\x12\x32\n\x12sp_table_name_flat\x18\x01 \x01(\x0b\x32\x14.ast.SpTableNameFlatH\x00\x12>\n\x18sp_table_name_structured\x18\x02 \x01(\x0b\x32\x1a.ast.SpTableNameStructuredH\x00\x42\x0e\n\x0csealed_value"\x1f\n\x0fSpTableNameFlat\x12\x0c\n\x04name\x18\x01 \x01(\t"%\n\x15SpTableNameStructured\x12\x0c\n\x04name\x18\x01 \x03(\t"=\n\x15StagedPandasDataframe\x12$\n\ntemp_table\x18\x01 \x01(\x0b\x32\x10.ast.SpTableName"\xe1\x01\n\x0fSpDataframeData\x12<\n\x17sp_dataframe_data__list\x18\x01 \x01(\x0b\x32\x19.ast.SpDataframeData_ListH\x00\x12@\n\x19sp_dataframe_data__pandas\x18\x02 \x01(\x0b\x32\x1b.ast.SpDataframeData_PandasH\x00\x12>\n\x18sp_dataframe_data__tuple\x18\x03 \x01(\x0b\x32\x1a.ast.SpDataframeData_TupleH\x00\x42\x0e\n\x0csealed_value"-\n\x14SpDataframeData_List\x12\x15\n\x02vs\x18\x01 \x03(\x0b\x32\t.ast.Expr".\n\x15SpDataframeData_Tuple\x12\x15\n\x02vs\x18\x01 \x03(\x0b\x32\t.ast.Expr"?\n\x16SpDataframeData_Pandas\x12%\n\x01v\x18\x01 \x01(\x0b\x32\x1a.ast.StagedPandasDataframe"\xab\x01\n\x11SpDataframeSchema\x12@\n\x19sp_dataframe_schema__list\x18\x01 \x01(\x0b\x32\x1b.ast.SpDataframeSchema_ListH\x00\x12\x44\n\x1bsp_dataframe_schema__struct\x18\x02 \x01(\x0b\x32\x1d.ast.SpDataframeSchema_StructH\x00\x42\x0e\n\x0csealed_value"$\n\x16SpDataframeSchema_List\x12\n\n\x02vs\x18\x01 \x03(\t"8\n\x18SpDataframeSchema_Struct\x12\x1c\n\x01v\x18\x01 \x01(\x0b\x32\x11.ast.SpStructType"&\n\nSpCallable\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0c\n\x04name\x18\x02 \x01(\t"\x98\x01\n\x0cSpPivotValue\x12@\n\x19sp_pivot_value__dataframe\x18\x01 \x01(\x0b\x32\x1b.ast.SpPivotValue_DataframeH\x00\x12\x36\n\x14sp_pivot_value__expr\x18\x02 \x01(\x0b\x32\x16.ast.SpPivotValue_ExprH\x00\x42\x0e\n\x0csealed_value")\n\x11SpPivotValue_Expr\x12\x14\n\x01v\x18\x01 \x01(\x0b\x32\t.ast.Expr"8\n\x16SpPivotValue_Dataframe\x12\x1e\n\x01v\x18\x01 \x01(\x0b\x32\x13.ast.SpDataframeRef"k\n\x0bSrcPosition\x12\x12\n\nend_column\x18\x01 \x01(\x03\x12\x10\n\x08\x65nd_line\x18\x02 \x01(\x03\x12\x0c\n\x04\x66ile\x18\x03 \x01(\t\x12\x14\n\x0cstart_column\x18\x04 \x01(\x03\x12\x12\n\nstart_line\x18\x05 \x01(\x03"\x1a\n\x05VarId\x12\x11\n\tbitfield1\x18\x01 \x01(\x04"\x8c\x01\n\x07Request\x12\x17\n\x04\x62ody\x18\x01 \x03(\x0b\x32\t.ast.Stmt\x12\x1a\n\x12\x63lient_ast_version\x18\x02 \x01(\x03\x12&\n\x0f\x63lient_language\x18\x03 \x01(\x0b\x32\r.ast.Language\x12$\n\x0e\x63lient_version\x18\x04 \x01(\x0b\x32\x0c.ast.Version"%\n\x08Response\x12\x19\n\x04\x62ody\x18\x01 \x03(\x0b\x32\x0b.ast.Result"\xde\x05\n\x05\x43onst\x12-\n\x0f\x62ig_decimal_val\x18\x01 \x01(\x0b\x32\x12.ast.BigDecimalValH\x00\x12%\n\x0b\x62ig_int_val\x18\x02 \x01(\x0b\x32\x0e.ast.BigIntValH\x00\x12$\n\nbinary_val\x18\x03 \x01(\x0b\x32\x0e.ast.BinaryValH\x00\x12 \n\x08\x62ool_val\x18\x04 \x01(\x0b\x32\x0c.ast.BoolValH\x00\x12 \n\x08\x64\x61te_val\x18\x05 \x01(\x0b\x32\x0c.ast.DateValH\x00\x12&\n\x0b\x66loat64_val\x18\x06 \x01(\x0b\x32\x0f.ast.Float64ValH\x00\x12\x1c\n\x06\x66n_val\x18\x07 \x01(\x0b\x32\n.ast.FnValH\x00\x12"\n\tint32_val\x18\x08 \x01(\x0b\x32\r.ast.Int32ValH\x00\x12"\n\tint64_val\x18\t \x01(\x0b\x32\r.ast.Int64ValH\x00\x12 \n\x08none_val\x18\n \x01(\x0b\x32\x0c.ast.NoneValH\x00\x12 \n\x08null_val\x18\x0b \x01(\x0b\x32\x0c.ast.NullValH\x00\x12-\n\x0fpython_date_val\x18\x0c \x01(\x0b\x32\x12.ast.PythonDateValH\x00\x12-\n\x0fpython_time_val\x18\r \x01(\x0b\x32\x12.ast.PythonTimeValH\x00\x12\x37\n\x14python_timestamp_val\x18\x0e \x01(\x0b\x32\x17.ast.PythonTimestampValH\x00\x12-\n\x0fsp_datatype_val\x18\x0f \x01(\x0b\x32\x12.ast.SpDatatypeValH\x00\x12$\n\nstring_val\x18\x10 \x01(\x0b\x32\x0e.ast.StringValH\x00\x12 \n\x08time_val\x18\x11 \x01(\x0b\x32\x0c.ast.TimeValH\x00\x12*\n\rtimestamp_val\x18\x12 \x01(\x0b\x32\x11.ast.TimestampValH\x00\x42\t\n\x07variant"(\n\x07NoneVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition"(\n\x07NullVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition"3\n\x07\x42oolVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\x08"4\n\x08Int32Val\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\x03"4\n\x08Int64Val\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\x03"6\n\nFloat64Val\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\x01"5\n\tBigIntVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\x0c"U\n\rBigDecimalVal\x12\r\n\x05scale\x18\x01 \x01(\x03\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x0eunscaled_value\x18\x03 \x01(\x0c"5\n\tStringVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\t"5\n\tBinaryVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\x0c"8\n\x0cTimestampVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\x03"3\n\x07\x44\x61teVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\x03"3\n\x07TimeVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\x03"\xc1\x01\n\x12PythonTimestampVal\x12\x0b\n\x03\x64\x61y\x18\x01 \x01(\x03\x12\x0c\n\x04hour\x18\x02 \x01(\x03\x12\x13\n\x0bmicrosecond\x18\x03 \x01(\x03\x12\x0e\n\x06minute\x18\x04 \x01(\x03\x12\r\n\x05month\x18\x05 \x01(\x03\x12\x0e\n\x06second\x18\x06 \x01(\x03\x12\x1d\n\x03src\x18\x07 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1f\n\x02tz\x18\x08 \x01(\x0b\x32\x13.ast.PythonTimeZone\x12\x0c\n\x04year\x18\t \x01(\x03"X\n\rPythonDateVal\x12\x0b\n\x03\x64\x61y\x18\x01 \x01(\x03\x12\r\n\x05month\x18\x02 \x01(\x03\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0c\n\x04year\x18\x04 \x01(\x03"\x92\x01\n\rPythonTimeVal\x12\x0c\n\x04hour\x18\x01 \x01(\x03\x12\x13\n\x0bmicrosecond\x18\x02 \x01(\x03\x12\x0e\n\x06minute\x18\x03 \x01(\x03\x12\x0e\n\x06second\x18\x04 \x01(\x03\x12\x1d\n\x03src\x18\x05 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1f\n\x02tz\x18\x06 \x01(\x0b\x32\x13.ast.PythonTimeZone"O\n\x05\x46nVal\x12\x17\n\x04\x62ody\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x0e\n\x06params\x18\x02 \x03(\t\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"Q\n\rSpDatatypeVal\x12!\n\x08\x64\x61tatype\x18\x01 \x01(\x0b\x32\x0f.ast.SpDataType\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition"y\n\x06IfExpr\x12\x17\n\x04\x63ond\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1b\n\x08if_false\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1a\n\x07if_true\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition">\n\x07SomeVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x14\n\x01v\x18\x02 \x01(\x0b\x32\t.ast.Expr"@\n\x08TupleVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x15\n\x02vs\x18\x02 \x03(\x0b\x32\t.ast.Expr"?\n\x07ListVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x15\n\x02vs\x18\x02 \x03(\x0b\x32\t.ast.Expr"F\n\tSeqMapVal\x12\x1a\n\x03kvs\x18\x01 \x03(\x0b\x32\r.ast.TupleVal\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition"\x8f\x01\n\tApplyExpr\x12\x1a\n\x02\x66n\x18\x01 \x01(\x0b\x32\x0e.ast.FnRefExpr\x12*\n\nnamed_args\x18\x02 \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12\x1b\n\x08pos_args\x18\x03 \x03(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition"\x98\x04\n\tFnRefExpr\x12\x30\n\x14trait_fn_id_ref_expr\x18\x01 \x01(\x0b\x32\x10.ast.FnIdRefExprH\x00\x12\x34\n\x16trait_fn_name_ref_expr\x18\x02 \x01(\x0b\x32\x12.ast.FnNameRefExprH\x00\x12$\n\nbuiltin_fn\x18\x03 \x01(\x0b\x32\x0e.ast.BuiltinFnH\x00\x12\x38\n\x15indirect_fn_name_call\x18\x04 \x01(\x0b\x32\x17.ast.IndirectFnNameCallH\x00\x12\x41\n\x1aindirect_table_fn_call_ref\x18\x05 \x01(\x0b\x32\x1b.ast.IndirectTableFnCallRefH\x00\x12/\n\x10session_table_fn\x18\x06 \x01(\x0b\x32\x13.ast.SessionTableFnH\x00\x12!\n\tsp_fn_ref\x18\x07 \x01(\x0b\x32\x0c.ast.SpFnRefH\x00\x12\x30\n\x10stored_procedure\x18\x08 \x01(\x0b\x32\x14.ast.StoredProcedureH\x00\x12 \n\x08table_fn\x18\t \x01(\x0b\x32\x0c.ast.TableFnH\x00\x12\x19\n\x04udaf\x18\n \x01(\x0b\x32\t.ast.UdafH\x00\x12\x17\n\x03udf\x18\x0b \x01(\x0b\x32\x08.ast.UdfH\x00\x12\x19\n\x04udtf\x18\x0c \x01(\x0b\x32\t.ast.UdtfH\x00\x42\t\n\x07variant"\xce\x02\n\rFnNameRefExpr\x12$\n\nbuiltin_fn\x18\x01 \x01(\x0b\x32\x0e.ast.BuiltinFnH\x00\x12\x38\n\x15indirect_fn_name_call\x18\x02 \x01(\x0b\x32\x17.ast.IndirectFnNameCallH\x00\x12/\n\x10session_table_fn\x18\x03 \x01(\x0b\x32\x13.ast.SessionTableFnH\x00\x12\x30\n\x10stored_procedure\x18\x04 \x01(\x0b\x32\x14.ast.StoredProcedureH\x00\x12 \n\x08table_fn\x18\x05 \x01(\x0b\x32\x0c.ast.TableFnH\x00\x12\x19\n\x04udaf\x18\x06 \x01(\x0b\x32\t.ast.UdafH\x00\x12\x17\n\x03udf\x18\x07 \x01(\x0b\x32\x08.ast.UdfH\x00\x12\x19\n\x04udtf\x18\x08 \x01(\x0b\x32\t.ast.UdtfH\x00\x42\t\n\x07variant"~\n\x0b\x46nIdRefExpr\x12\x41\n\x1aindirect_table_fn_call_ref\x18\x01 \x01(\x0b\x32\x1b.ast.IndirectTableFnCallRefH\x00\x12!\n\tsp_fn_ref\x18\x02 \x01(\x0b\x32\x0c.ast.SpFnRefH\x00\x42\t\n\x07variant"@\n\x07SpFnRef\x12\x16\n\x02id\x18\x01 \x01(\x0b\x32\n.ast.VarId\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition"E\n\tBuiltinFn\x12\x19\n\x04name\x18\x01 \x01(\x0b\x32\x0b.ast.FnName\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition"\xb3\x01\n\x0fStoredProcedure\x12\x34\n\x10log_on_exception\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.BoolValue\x12\x19\n\x04name\x18\x02 \x01(\x0b\x32\x0b.ast.FnName\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x30\n\x10statement_params\x18\x04 \x03(\x0b\x32\x16.ast.Tuple_String_Expr"\xad\x05\n\x03Udf\x12-\n\x07\x63omment\x18\x01 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12$\n\x1c\x65xternal_access_integrations\x18\x02 \x03(\t\x12\x1d\n\x04\x66unc\x18\x03 \x01(\x0b\x32\x0f.ast.SpCallable\x12\x15\n\rif_not_exists\x18\x04 \x01(\x08\x12\x11\n\timmutable\x18\x05 \x01(\x08\x12!\n\x07imports\x18\x06 \x03(\x0b\x32\x10.ast.SpTableName\x12)\n\x0binput_types\x18\x07 \x01(\x0b\x32\x14.ast.List_SpDataType\x12\x14\n\x0cis_permanent\x18\x08 \x01(\x08\x12&\n\x06kwargs\x18\t \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12\x33\n\x0emax_batch_size\x18\n \x01(\x0b\x32\x1b.google.protobuf.Int64Value\x12\x19\n\x04name\x18\x0b \x01(\x0b\x32\x0b.ast.FnName\x12\x10\n\x08packages\x18\x0c \x03(\t\x12\x10\n\x08parallel\x18\r \x01(\x03\x12\x0f\n\x07replace\x18\x0e \x01(\x08\x12$\n\x0breturn_type\x18\x0f \x01(\x0b\x32\x0f.ast.SpDataType\x12)\n\x07secrets\x18\x10 \x03(\x0b\x32\x18.ast.Tuple_String_String\x12\x0e\n\x06secure\x18\x11 \x01(\x08\x12\x1b\n\x13source_code_display\x18\x12 \x01(\x08\x12\x1d\n\x03src\x18\x13 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x0estage_location\x18\x14 \x01(\t\x12\x32\n\x10statement_params\x18\x15 \x03(\x0b\x32\x18.ast.Tuple_String_String\x12\x0e\n\x06strict\x18\x16 \x01(\x08"\xe1\x04\n\x04Udtf\x12-\n\x07\x63omment\x18\x01 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12$\n\x1c\x65xternal_access_integrations\x18\x02 \x03(\t\x12 \n\x07handler\x18\x03 \x01(\x0b\x32\x0f.ast.SpCallable\x12\x15\n\rif_not_exists\x18\x04 \x01(\x08\x12\x11\n\timmutable\x18\x05 \x01(\x08\x12!\n\x07imports\x18\x06 \x03(\x0b\x32\x10.ast.SpTableName\x12)\n\x0binput_types\x18\x07 \x01(\x0b\x32\x14.ast.List_SpDataType\x12\x14\n\x0cis_permanent\x18\x08 \x01(\x08\x12&\n\x06kwargs\x18\t \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12\x19\n\x04name\x18\n \x01(\x0b\x32\x0b.ast.FnName\x12&\n\routput_schema\x18\x0b \x01(\x0b\x32\x0f.ast.UdtfSchema\x12\x10\n\x08packages\x18\x0c \x03(\t\x12\x10\n\x08parallel\x18\r \x01(\x03\x12\x0f\n\x07replace\x18\x0e \x01(\x08\x12)\n\x07secrets\x18\x0f \x03(\x0b\x32\x18.ast.Tuple_String_String\x12\x0e\n\x06secure\x18\x10 \x01(\x08\x12\x1d\n\x03src\x18\x11 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x0estage_location\x18\x12 \x01(\t\x12\x32\n\x10statement_params\x18\x13 \x03(\x0b\x32\x18.ast.Tuple_String_String\x12\x0e\n\x06strict\x18\x14 \x01(\x08"\xdd\x04\n\x04Udaf\x12-\n\x07\x63omment\x18\x01 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12$\n\x1c\x65xternal_access_integrations\x18\x02 \x03(\t\x12 \n\x07handler\x18\x03 \x01(\x0b\x32\x0f.ast.SpCallable\x12\x15\n\rif_not_exists\x18\x04 \x01(\x08\x12\x11\n\timmutable\x18\x05 \x01(\x08\x12!\n\x07imports\x18\x06 \x03(\x0b\x32\x10.ast.SpTableName\x12)\n\x0binput_types\x18\x07 \x01(\x0b\x32\x14.ast.List_SpDataType\x12\x14\n\x0cis_permanent\x18\x08 \x01(\x08\x12&\n\x06kwargs\x18\t \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12\x19\n\x04name\x18\n \x01(\x0b\x32\x0b.ast.FnName\x12\x10\n\x08packages\x18\x0b \x03(\t\x12\x10\n\x08parallel\x18\x0c \x01(\x03\x12\x0f\n\x07replace\x18\r \x01(\x08\x12$\n\x0breturn_type\x18\x0e \x01(\x0b\x32\x0f.ast.SpDataType\x12)\n\x07secrets\x18\x0f \x03(\x0b\x32\x18.ast.Tuple_String_String\x12\x1d\n\x03src\x18\x10 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x34\n\x0estage_location\x18\x11 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x32\n\x10statement_params\x18\x12 \x03(\x0b\x32\x18.ast.Tuple_String_String"N\n\x12IndirectFnNameCall\x12\x19\n\x04name\x18\x01 \x01(\x0b\x32\x0b.ast.FnName\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition"O\n\x16IndirectTableFnCallRef\x12\x16\n\x02id\x18\x01 \x01(\x0b\x32\n.ast.VarId\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition"J\n\x0eSessionTableFn\x12\x19\n\x04name\x18\x01 \x01(\x0b\x32\x0b.ast.FnName\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition"l\n\x07TableFn\x12\'\n\tcall_type\x18\x01 \x01(\x0b\x32\x14.ast.TableFnCallType\x12\x19\n\x04name\x18\x02 \x01(\x0b\x32\x0b.ast.FnName\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"F\n\x07UnaryOp\x12\x17\n\x03neg\x18\x01 \x01(\x0b\x32\x08.ast.NegH\x00\x12\x17\n\x03not\x18\x02 \x01(\x0b\x32\x08.ast.NotH\x00\x42\t\n\x07variant"\xc6\x03\n\x05\x42inOp\x12\x17\n\x03\x61\x64\x64\x18\x01 \x01(\x0b\x32\x08.ast.AddH\x00\x12\x17\n\x03\x61nd\x18\x02 \x01(\x0b\x32\x08.ast.AndH\x00\x12\x1e\n\x07\x62it_and\x18\x03 \x01(\x0b\x32\x0b.ast.BitAndH\x00\x12\x1c\n\x06\x62it_or\x18\x04 \x01(\x0b\x32\n.ast.BitOrH\x00\x12\x1e\n\x07\x62it_xor\x18\x05 \x01(\x0b\x32\x0b.ast.BitXorH\x00\x12\x17\n\x03\x64iv\x18\x06 \x01(\x0b\x32\x08.ast.DivH\x00\x12\x15\n\x02\x65q\x18\x07 \x01(\x0b\x32\x07.ast.EqH\x00\x12\x17\n\x03geq\x18\x08 \x01(\x0b\x32\x08.ast.GeqH\x00\x12\x15\n\x02gt\x18\t \x01(\x0b\x32\x07.ast.GtH\x00\x12\x17\n\x03leq\x18\n \x01(\x0b\x32\x08.ast.LeqH\x00\x12\x15\n\x02lt\x18\x0b \x01(\x0b\x32\x07.ast.LtH\x00\x12\x17\n\x03mod\x18\x0c \x01(\x0b\x32\x08.ast.ModH\x00\x12\x17\n\x03mul\x18\r \x01(\x0b\x32\x08.ast.MulH\x00\x12\x17\n\x03neq\x18\x0e \x01(\x0b\x32\x08.ast.NeqH\x00\x12\x15\n\x02or\x18\x0f \x01(\x0b\x32\x07.ast.OrH\x00\x12\x17\n\x03pow\x18\x10 \x01(\x0b\x32\x08.ast.PowH\x00\x12\x17\n\x03sub\x18\x11 \x01(\x0b\x32\x08.ast.SubH\x00\x42\t\n\x07variant"@\n\x03Not\x12\x1a\n\x07operand\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition"T\n\x03\x41nd\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"S\n\x02Or\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"S\n\x02\x45q\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"T\n\x03Neq\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"S\n\x02Lt\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"T\n\x03Leq\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"S\n\x02Gt\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"T\n\x03Geq\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"@\n\x03Neg\x12\x1a\n\x07operand\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition"T\n\x03\x41\x64\x64\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"T\n\x03Sub\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"T\n\x03Mul\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"T\n\x03\x44iv\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"T\n\x03Mod\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"T\n\x03Pow\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"W\n\x06\x42itAnd\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"V\n\x05\x42itOr\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"W\n\x06\x42itXor\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"u\n\x08RangeVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x18\n\x05start\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04step\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04stop\x18\x04 \x01(\x0b\x32\t.ast.Expr"\xe3\x02\n\x10SpWindowSpecExpr\x12\x36\n\x14sp_window_spec_empty\x18\x01 \x01(\x0b\x32\x16.ast.SpWindowSpecEmptyH\x00\x12;\n\x17sp_window_spec_order_by\x18\x02 \x01(\x0b\x32\x18.ast.SpWindowSpecOrderByH\x00\x12\x43\n\x1bsp_window_spec_partition_by\x18\x03 \x01(\x0b\x32\x1c.ast.SpWindowSpecPartitionByH\x00\x12\x45\n\x1csp_window_spec_range_between\x18\x04 \x01(\x0b\x32\x1d.ast.SpWindowSpecRangeBetweenH\x00\x12\x43\n\x1bsp_window_spec_rows_between\x18\x05 \x01(\x0b\x32\x1c.ast.SpWindowSpecRowsBetweenH\x00\x42\t\n\x07variant"V\n\x11SpWindowSpecEmpty\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12"\n\x03wnd\x18\x02 \x01(\x0b\x32\x15.ast.SpWindowSpecExpr"q\n\x13SpWindowSpecOrderBy\x12\x17\n\x04\x63ols\x18\x01 \x03(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\x12"\n\x03wnd\x18\x03 \x01(\x0b\x32\x15.ast.SpWindowSpecExpr"u\n\x17SpWindowSpecPartitionBy\x12\x17\n\x04\x63ols\x18\x01 \x03(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\x12"\n\x03wnd\x18\x03 \x01(\x0b\x32\x15.ast.SpWindowSpecExpr"\xb7\x01\n\x18SpWindowSpecRangeBetween\x12*\n\x03\x65nd\x18\x01 \x01(\x0b\x32\x1d.ast.SpWindowRelativePosition\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\x12,\n\x05start\x18\x03 \x01(\x0b\x32\x1d.ast.SpWindowRelativePosition\x12"\n\x03wnd\x18\x04 \x01(\x0b\x32\x15.ast.SpWindowSpecExpr"\xb6\x01\n\x17SpWindowSpecRowsBetween\x12*\n\x03\x65nd\x18\x01 \x01(\x0b\x32\x1d.ast.SpWindowRelativePosition\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\x12,\n\x05start\x18\x03 \x01(\x0b\x32\x1d.ast.SpWindowRelativePosition\x12"\n\x03wnd\x18\x04 \x01(\x0b\x32\x15.ast.SpWindowSpecExpr"\xeaQ\n\x04\x45xpr\x12"\n\x0ctrait_bin_op\x18\x01 \x01(\x0b\x32\n.ast.BinOpH\x00\x12!\n\x0btrait_const\x18\x02 \x01(\x0b\x32\n.ast.ConstH\x00\x12\x30\n\x14trait_fn_id_ref_expr\x18\x03 \x01(\x0b\x32\x10.ast.FnIdRefExprH\x00\x12\x34\n\x16trait_fn_name_ref_expr\x18\x04 \x01(\x0b\x32\x12.ast.FnNameRefExprH\x00\x12+\n\x11trait_fn_ref_expr\x18\x05 \x01(\x0b\x32\x0e.ast.FnRefExprH\x00\x12\x31\n\x14trait_sp_column_expr\x18\x06 \x01(\x0b\x32\x11.ast.SpColumnExprH\x00\x12-\n\x12trait_sp_column_fn\x18\x07 \x01(\x0b\x32\x0f.ast.SpColumnFnH\x00\x12\x37\n\x17trait_sp_dataframe_expr\x18\x08 \x01(\x0b\x32\x14.ast.SpDataframeExprH\x00\x12;\n\x19trait_sp_dataframe_writer\x18\t \x01(\x0b\x32\x16.ast.SpDataframeWriterH\x00\x12J\n!trait_sp_dataframe_writer_options\x18\n \x01(\x0b\x32\x1d.ast.SpDataframeWriterOptionsH\x00\x12M\n#trait_sp_dataframe_writer_save_mode\x18\x0b \x01(\x0b\x32\x1e.ast.SpDataframeWriterSaveModeH\x00\x12[\n*trait_sp_relational_grouped_dataframe_expr\x18\x0c \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExprH\x00\x12/\n\x13trait_sp_write_file\x18\r \x01(\x0b\x32\x10.ast.SpWriteFileH\x00\x12&\n\x0etrait_unary_op\x18\x0e \x01(\x0b\x32\x0c.ast.UnaryOpH\x00\x12\x17\n\x03\x61\x64\x64\x18\x0f \x01(\x0b\x32\x08.ast.AddH\x00\x12\x17\n\x03\x61nd\x18\x10 \x01(\x0b\x32\x08.ast.AndH\x00\x12$\n\napply_expr\x18\x11 \x01(\x0b\x32\x0e.ast.ApplyExprH\x00\x12-\n\x0f\x62ig_decimal_val\x18\x12 \x01(\x0b\x32\x12.ast.BigDecimalValH\x00\x12%\n\x0b\x62ig_int_val\x18\x13 \x01(\x0b\x32\x0e.ast.BigIntValH\x00\x12$\n\nbinary_val\x18\x14 \x01(\x0b\x32\x0e.ast.BinaryValH\x00\x12\x1e\n\x07\x62it_and\x18\x15 \x01(\x0b\x32\x0b.ast.BitAndH\x00\x12\x1c\n\x06\x62it_or\x18\x16 \x01(\x0b\x32\n.ast.BitOrH\x00\x12\x1e\n\x07\x62it_xor\x18\x17 \x01(\x0b\x32\x0b.ast.BitXorH\x00\x12 \n\x08\x62ool_val\x18\x18 \x01(\x0b\x32\x0c.ast.BoolValH\x00\x12$\n\nbuiltin_fn\x18\x19 \x01(\x0b\x32\x0e.ast.BuiltinFnH\x00\x12"\n\tcast_expr\x18\x1a \x01(\x0b\x32\r.ast.CastExprH\x00\x12 \n\x08\x64\x61te_val\x18\x1b \x01(\x0b\x32\x0c.ast.DateValH\x00\x12\x17\n\x03\x64iv\x18\x1c \x01(\x0b\x32\x08.ast.DivH\x00\x12\x15\n\x02\x65q\x18\x1d \x01(\x0b\x32\x07.ast.EqH\x00\x12&\n\x0b\x66loat64_val\x18\x1e \x01(\x0b\x32\x0f.ast.Float64ValH\x00\x12\x1c\n\x06\x66n_val\x18\x1f \x01(\x0b\x32\n.ast.FnValH\x00\x12\x17\n\x03geq\x18  \x01(\x0b\x32\x08.ast.GeqH\x00\x12\x15\n\x02gt\x18! \x01(\x0b\x32\x07.ast.GtH\x00\x12\x1e\n\x07if_expr\x18" \x01(\x0b\x32\x0b.ast.IfExprH\x00\x12\x38\n\x15indirect_fn_name_call\x18# \x01(\x0b\x32\x17.ast.IndirectFnNameCallH\x00\x12\x41\n\x1aindirect_table_fn_call_ref\x18$ \x01(\x0b\x32\x1b.ast.IndirectTableFnCallRefH\x00\x12"\n\tint32_val\x18% \x01(\x0b\x32\r.ast.Int32ValH\x00\x12"\n\tint64_val\x18& \x01(\x0b\x32\r.ast.Int64ValH\x00\x12\x17\n\x03leq\x18\' \x01(\x0b\x32\x08.ast.LeqH\x00\x12 \n\x08list_val\x18( \x01(\x0b\x32\x0c.ast.ListValH\x00\x12\x15\n\x02lt\x18) \x01(\x0b\x32\x07.ast.LtH\x00\x12\x17\n\x03mod\x18* \x01(\x0b\x32\x08.ast.ModH\x00\x12\x17\n\x03mul\x18+ \x01(\x0b\x32\x08.ast.MulH\x00\x12\x17\n\x03neg\x18, \x01(\x0b\x32\x08.ast.NegH\x00\x12\x17\n\x03neq\x18- \x01(\x0b\x32\x08.ast.NeqH\x00\x12 \n\x08none_val\x18. \x01(\x0b\x32\x0c.ast.NoneValH\x00\x12\x17\n\x03not\x18/ \x01(\x0b\x32\x08.ast.NotH\x00\x12 \n\x08null_val\x18\x30 \x01(\x0b\x32\x0c.ast.NullValH\x00\x12-\n\x0fobject_get_item\x18\x31 \x01(\x0b\x32\x12.ast.ObjectGetItemH\x00\x12\x15\n\x02or\x18\x32 \x01(\x0b\x32\x07.ast.OrH\x00\x12(\n\x0cpd_dataframe\x18\x33 \x01(\x0b\x32\x10.ast.PdDataframeH\x00\x12\x38\n\x15pd_dataframe_get_item\x18\x34 \x01(\x0b\x32\x17.ast.PdDataframeGetItemH\x00\x12\x32\n\x12pd_dataframe_i_loc\x18\x35 \x01(\x0b\x32\x14.ast.PdDataframeILocH\x00\x12/\n\x10pd_dataframe_loc\x18\x36 \x01(\x0b\x32\x13.ast.PdDataframeLocH\x00\x12\x38\n\x15pd_dataframe_set_item\x18\x37 \x01(\x0b\x32\x17.ast.PdDataframeSetItemH\x00\x12#\n\npd_drop_na\x18\x38 \x01(\x0b\x32\r.ast.PdDropNaH\x00\x12\x1e\n\x07pd_repr\x18\x39 \x01(\x0b\x32\x0b.ast.PdReprH\x00\x12\x17\n\x03pow\x18: \x01(\x0b\x32\x08.ast.PowH\x00\x12-\n\x0fpython_date_val\x18; \x01(\x0b\x32\x12.ast.PythonDateValH\x00\x12-\n\x0fpython_time_val\x18< \x01(\x0b\x32\x12.ast.PythonTimeValH\x00\x12\x37\n\x14python_timestamp_val\x18= \x01(\x0b\x32\x17.ast.PythonTimestampValH\x00\x12"\n\trange_val\x18> \x01(\x0b\x32\r.ast.RangeValH\x00\x12\x17\n\x03ref\x18? \x01(\x0b\x32\x08.ast.RefH\x00\x12%\n\x0bseq_map_val\x18@ \x01(\x0b\x32\x0e.ast.SeqMapValH\x00\x12/\n\x10session_table_fn\x18\x41 \x01(\x0b\x32\x13.ast.SessionTableFnH\x00\x12 \n\x08some_val\x18\x42 \x01(\x0b\x32\x0c.ast.SomeValH\x00\x12-\n\x0fsp_column_alias\x18\x43 \x01(\x0b\x32\x12.ast.SpColumnAliasH\x00\x12\x36\n\x14sp_column_apply__int\x18\x44 \x01(\x0b\x32\x16.ast.SpColumnApply_IntH\x00\x12<\n\x17sp_column_apply__string\x18\x45 \x01(\x0b\x32\x19.ast.SpColumnApply_StringH\x00\x12)\n\rsp_column_asc\x18\x46 \x01(\x0b\x32\x10.ast.SpColumnAscH\x00\x12\x31\n\x11sp_column_between\x18G \x01(\x0b\x32\x14.ast.SpColumnBetweenH\x00\x12\x34\n\x13sp_column_case_when\x18H \x01(\x0b\x32\x15.ast.SpColumnCaseWhenH\x00\x12+\n\x0esp_column_cast\x18I \x01(\x0b\x32\x11.ast.SpColumnCastH\x00\x12+\n\x0esp_column_desc\x18J \x01(\x0b\x32\x11.ast.SpColumnDescH\x00\x12\x34\n\x13sp_column_equal_nan\x18K \x01(\x0b\x32\x15.ast.SpColumnEqualNanH\x00\x12\x36\n\x14sp_column_equal_null\x18L \x01(\x0b\x32\x16.ast.SpColumnEqualNullH\x00\x12<\n\x17sp_column_in__dataframe\x18M \x01(\x0b\x32\x19.ast.SpColumnIn_DataframeH\x00\x12\x30\n\x11sp_column_in__seq\x18N \x01(\x0b\x32\x13.ast.SpColumnIn_SeqH\x00\x12\x37\n\x15sp_column_is_not_null\x18O \x01(\x0b\x32\x16.ast.SpColumnIsNotNullH\x00\x12\x30\n\x11sp_column_is_null\x18P \x01(\x0b\x32\x13.ast.SpColumnIsNullH\x00\x12+\n\x0esp_column_name\x18Q \x01(\x0b\x32\x11.ast.SpColumnNameH\x00\x12+\n\x0esp_column_over\x18R \x01(\x0b\x32\x11.ast.SpColumnOverH\x00\x12)\n\rsp_column_ref\x18S \x01(\x0b\x32\x10.ast.SpColumnRefH\x00\x12\x32\n\x12sp_column_sql_expr\x18T \x01(\x0b\x32\x14.ast.SpColumnSqlExprH\x00\x12>\n\x18sp_column_string_collate\x18U \x01(\x0b\x32\x1a.ast.SpColumnStringCollateH\x00\x12@\n\x19sp_column_string_contains\x18V \x01(\x0b\x32\x1b.ast.SpColumnStringContainsH\x00\x12\x41\n\x1asp_column_string_ends_with\x18W \x01(\x0b\x32\x1b.ast.SpColumnStringEndsWithH\x00\x12\x38\n\x15sp_column_string_like\x18X \x01(\x0b\x32\x17.ast.SpColumnStringLikeH\x00\x12<\n\x17sp_column_string_regexp\x18Y \x01(\x0b\x32\x19.ast.SpColumnStringRegexpH\x00\x12\x45\n\x1csp_column_string_starts_with\x18Z \x01(\x0b\x32\x1d.ast.SpColumnStringStartsWithH\x00\x12<\n\x17sp_column_string_substr\x18[ \x01(\x0b\x32\x19.ast.SpColumnStringSubstrH\x00\x12\x32\n\x12sp_column_try_cast\x18\\ \x01(\x0b\x32\x14.ast.SpColumnTryCastH\x00\x12:\n\x16sp_column_within_group\x18] \x01(\x0b\x32\x18.ast.SpColumnWithinGroupH\x00\x12\x35\n\x13sp_create_dataframe\x18^ \x01(\x0b\x32\x16.ast.SpCreateDataframeH\x00\x12/\n\x10sp_dataframe_agg\x18_ \x01(\x0b\x32\x13.ast.SpDataframeAggH\x00\x12\x33\n\x12sp_dataframe_alias\x18` \x01(\x0b\x32\x15.ast.SpDataframeAliasH\x00\x12Q\n"sp_dataframe_analytics_compute_lag\x18\x61 \x01(\x0b\x32#.ast.SpDataframeAnalyticsComputeLagH\x00\x12S\n#sp_dataframe_analytics_compute_lead\x18\x62 \x01(\x0b\x32$.ast.SpDataframeAnalyticsComputeLeadH\x00\x12W\n%sp_dataframe_analytics_cumulative_agg\x18\x63 \x01(\x0b\x32&.ast.SpDataframeAnalyticsCumulativeAggH\x00\x12O\n!sp_dataframe_analytics_moving_agg\x18\x64 \x01(\x0b\x32".ast.SpDataframeAnalyticsMovingAggH\x00\x12X\n&sp_dataframe_analytics_time_series_agg\x18\x65 \x01(\x0b\x32&.ast.SpDataframeAnalyticsTimeSeriesAggH\x00\x12\x33\n\x12sp_dataframe_apply\x18\x66 \x01(\x0b\x32\x15.ast.SpDataframeApplyH\x00\x12@\n\x19sp_dataframe_cache_result\x18g \x01(\x0b\x32\x1b.ast.SpDataframeCacheResultH\x00\x12/\n\x10sp_dataframe_col\x18h \x01(\x0b\x32\x13.ast.SpDataframeColH\x00\x12\x37\n\x14sp_dataframe_collect\x18i \x01(\x0b\x32\x17.ast.SpDataframeCollectH\x00\x12\x45\n\x1csp_dataframe_copy_into_table\x18j \x01(\x0b\x32\x1d.ast.SpDataframeCopyIntoTableH\x00\x12\x33\n\x12sp_dataframe_count\x18k \x01(\x0b\x32\x15.ast.SpDataframeCountH\x00\x12\x63\n,sp_dataframe_create_or_replace_dynamic_table\x18l \x01(\x0b\x32+.ast.SpDataframeCreateOrReplaceDynamicTableH\x00\x12R\n#sp_dataframe_create_or_replace_view\x18m \x01(\x0b\x32#.ast.SpDataframeCreateOrReplaceViewH\x00\x12<\n\x17sp_dataframe_cross_join\x18n \x01(\x0b\x32\x19.ast.SpDataframeCrossJoinH\x00\x12\x31\n\x11sp_dataframe_cube\x18o \x01(\x0b\x32\x14.ast.SpDataframeCubeH\x00\x12\x39\n\x15sp_dataframe_describe\x18p \x01(\x0b\x32\x18.ast.SpDataframeDescribeH\x00\x12\x39\n\x15sp_dataframe_distinct\x18q \x01(\x0b\x32\x18.ast.SpDataframeDistinctH\x00\x12\x31\n\x11sp_dataframe_drop\x18r \x01(\x0b\x32\x14.ast.SpDataframeDropH\x00\x12\x46\n\x1csp_dataframe_drop_duplicates\x18s \x01(\x0b\x32\x1e.ast.SpDataframeDropDuplicatesH\x00\x12\x35\n\x13sp_dataframe_except\x18t \x01(\x0b\x32\x16.ast.SpDataframeExceptH\x00\x12\x35\n\x13sp_dataframe_filter\x18u \x01(\x0b\x32\x16.ast.SpDataframeFilterH\x00\x12\x33\n\x12sp_dataframe_first\x18v \x01(\x0b\x32\x15.ast.SpDataframeFirstH\x00\x12\x37\n\x14sp_dataframe_flatten\x18w \x01(\x0b\x32\x17.ast.SpDataframeFlattenH\x00\x12\x38\n\x15sp_dataframe_group_by\x18x \x01(\x0b\x32\x17.ast.SpDataframeGroupByH\x00\x12R\n#sp_dataframe_group_by_grouping_sets\x18y \x01(\x0b\x32#.ast.SpDataframeGroupByGroupingSetsH\x00\x12I\n\x1esp_dataframe_group_by__columns\x18z \x01(\x0b\x32\x1f.ast.SpDataframeGroupBy_ColumnsH\x00\x12I\n\x1esp_dataframe_group_by__strings\x18{ \x01(\x0b\x32\x1f.ast.SpDataframeGroupBy_StringsH\x00\x12;\n\x16sp_dataframe_intersect\x18| \x01(\x0b\x32\x19.ast.SpDataframeIntersectH\x00\x12\x31\n\x11sp_dataframe_join\x18} \x01(\x0b\x32\x14.ast.SpDataframeJoinH\x00\x12M\n sp_dataframe_join_table_function\x18~ \x01(\x0b\x32!.ast.SpDataframeJoinTableFunctionH\x00\x12\\\n(sp_dataframe_join__dataframe__join_exprs\x18\x7f \x01(\x0b\x32(.ast.SpDataframeJoin_Dataframe_JoinExprsH\x00\x12\x63\n+sp_dataframe_join__dataframe__using_columns\x18\x80\x01 \x01(\x0b\x32+.ast.SpDataframeJoin_Dataframe_UsingColumnsH\x00\x12\x34\n\x12sp_dataframe_limit\x18\x81\x01 \x01(\x0b\x32\x15.ast.SpDataframeLimitH\x00\x12\x46\n\x1csp_dataframe_na_drop__python\x18\x82\x01 \x01(\x0b\x32\x1d.ast.SpDataframeNaDrop_PythonH\x00\x12\x44\n\x1bsp_dataframe_na_drop__scala\x18\x83\x01 \x01(\x0b\x32\x1c.ast.SpDataframeNaDrop_ScalaH\x00\x12\x37\n\x14sp_dataframe_na_fill\x18\x84\x01 \x01(\x0b\x32\x16.ast.SpDataframeNaFillH\x00\x12=\n\x17sp_dataframe_na_replace\x18\x85\x01 \x01(\x0b\x32\x19.ast.SpDataframeNaReplaceH\x00\x12\x41\n\x19sp_dataframe_natural_join\x18\x86\x01 \x01(\x0b\x32\x1b.ast.SpDataframeNaturalJoinH\x00\x12\x34\n\x12sp_dataframe_pivot\x18\x87\x01 \x01(\x0b\x32\x15.ast.SpDataframePivotH\x00\x12\x41\n\x19sp_dataframe_random_split\x18\x88\x01 \x01(\x0b\x32\x1b.ast.SpDataframeRandomSplitH\x00\x12\x30\n\x10sp_dataframe_ref\x18\x89\x01 \x01(\x0b\x32\x13.ast.SpDataframeRefH\x00\x12\x36\n\x13sp_dataframe_rename\x18\x8a\x01 \x01(\x0b\x32\x16.ast.SpDataframeRenameH\x00\x12\x36\n\x13sp_dataframe_rollup\x18\x8b\x01 \x01(\x0b\x32\x16.ast.SpDataframeRollupH\x00\x12G\n\x1csp_dataframe_rollup__columns\x18\x8c\x01 \x01(\x0b\x32\x1e.ast.SpDataframeRollup_ColumnsH\x00\x12G\n\x1csp_dataframe_rollup__strings\x18\x8d\x01 \x01(\x0b\x32\x1e.ast.SpDataframeRollup_StringsH\x00\x12\x36\n\x13sp_dataframe_sample\x18\x8e\x01 \x01(\x0b\x32\x16.ast.SpDataframeSampleH\x00\x12G\n\x1csp_dataframe_select__columns\x18\x8f\x01 \x01(\x0b\x32\x1e.ast.SpDataframeSelect_ColumnsH\x00\x12\x43\n\x1asp_dataframe_select__exprs\x18\x90\x01 \x01(\x0b\x32\x1c.ast.SpDataframeSelect_ExprsH\x00\x12\x32\n\x11sp_dataframe_show\x18\x91\x01 \x01(\x0b\x32\x14.ast.SpDataframeShowH\x00\x12\x32\n\x11sp_dataframe_sort\x18\x92\x01 \x01(\x0b\x32\x14.ast.SpDataframeSortH\x00\x12P\n!sp_dataframe_stat_approx_quantile\x18\x93\x01 \x01(\x0b\x32".ast.SpDataframeStatApproxQuantileH\x00\x12;\n\x16sp_dataframe_stat_corr\x18\x94\x01 \x01(\x0b\x32\x18.ast.SpDataframeStatCorrH\x00\x12\x39\n\x15sp_dataframe_stat_cov\x18\x95\x01 \x01(\x0b\x32\x17.ast.SpDataframeStatCovH\x00\x12\x44\n\x1bsp_dataframe_stat_cross_tab\x18\x96\x01 \x01(\x0b\x32\x1c.ast.SpDataframeStatCrossTabH\x00\x12\x44\n\x1bsp_dataframe_stat_sample_by\x18\x97\x01 \x01(\x0b\x32\x1c.ast.SpDataframeStatSampleByH\x00\x12\x33\n\x12sp_dataframe_to_df\x18\x98\x01 \x01(\x0b\x32\x14.ast.SpDataframeToDfH\x00\x12\x34\n\x12sp_dataframe_union\x18\x99\x01 \x01(\x0b\x32\x15.ast.SpDataframeUnionH\x00\x12;\n\x16sp_dataframe_union_all\x18\x9a\x01 \x01(\x0b\x32\x18.ast.SpDataframeUnionAllH\x00\x12I\n\x1esp_dataframe_union_all_by_name\x18\x9b\x01 \x01(\x0b\x32\x1e.ast.SpDataframeUnionAllByNameH\x00\x12\x42\n\x1asp_dataframe_union_by_name\x18\x9c\x01 \x01(\x0b\x32\x1b.ast.SpDataframeUnionByNameH\x00\x12\x38\n\x14sp_dataframe_unpivot\x18\x9d\x01 \x01(\x0b\x32\x17.ast.SpDataframeUnpivotH\x00\x12\x34\n\x12sp_dataframe_where\x18\x9e\x01 \x01(\x0b\x32\x15.ast.SpDataframeWhereH\x00\x12?\n\x18sp_dataframe_with_column\x18\x9f\x01 \x01(\x0b\x32\x1a.ast.SpDataframeWithColumnH\x00\x12N\n sp_dataframe_with_column_renamed\x18\xa0\x01 \x01(\x0b\x32!.ast.SpDataframeWithColumnRenamedH\x00\x12\x41\n\x19sp_dataframe_with_columns\x18\xa1\x01 \x01(\x0b\x32\x1b.ast.SpDataframeWithColumnsH\x00\x12\x34\n\x12sp_dataframe_write\x18\xa2\x01 \x01(\x0b\x32\x15.ast.SpDataframeWriteH\x00\x12.\n\x0fsp_datatype_val\x18\xa3\x01 \x01(\x0b\x32\x12.ast.SpDatatypeValH\x00\x12%\n\nsp_flatten\x18\xa4\x01 \x01(\x0b\x32\x0e.ast.SpFlattenH\x00\x12"\n\tsp_fn_ref\x18\xa5\x01 \x01(\x0b\x32\x0c.ast.SpFnRefH\x00\x12)\n\x0csp_generator\x18\xa6\x01 \x01(\x0b\x32\x10.ast.SpGeneratorH\x00\x12\x30\n\x10sp_grouping_sets\x18\xa7\x01 \x01(\x0b\x32\x13.ast.SpGroupingSetsH\x00\x12!\n\x08sp_range\x18\xa8\x01 \x01(\x0b\x32\x0c.ast.SpRangeH\x00\x12(\n\x0csp_read_avro\x18\xa9\x01 \x01(\x0b\x32\x0f.ast.SpReadAvroH\x00\x12&\n\x0bsp_read_csv\x18\xaa\x01 \x01(\x0b\x32\x0e.ast.SpReadCsvH\x00\x12(\n\x0csp_read_json\x18\xab\x01 \x01(\x0b\x32\x0f.ast.SpReadJsonH\x00\x12&\n\x0bsp_read_orc\x18\xac\x01 \x01(\x0b\x32\x0e.ast.SpReadOrcH\x00\x12.\n\x0fsp_read_parquet\x18\xad\x01 \x01(\x0b\x32\x12.ast.SpReadParquetH\x00\x12*\n\rsp_read_table\x18\xae\x01 \x01(\x0b\x32\x10.ast.SpReadTableH\x00\x12&\n\x0bsp_read_xml\x18\xaf\x01 \x01(\x0b\x32\x0e.ast.SpReadXmlH\x00\x12T\n#sp_relational_grouped_dataframe_agg\x18\xb0\x01 \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeAggH\x00\x12j\n/sp_relational_grouped_dataframe_apply_in_pandas\x18\xb1\x01 \x01(\x0b\x32..ast.SpRelationalGroupedDataframeApplyInPandasH\x00\x12\\\n\'sp_relational_grouped_dataframe_builtin\x18\xb2\x01 \x01(\x0b\x32(.ast.SpRelationalGroupedDataframeBuiltinH\x00\x12X\n%sp_relational_grouped_dataframe_pivot\x18\xb3\x01 \x01(\x0b\x32&.ast.SpRelationalGroupedDataframePivotH\x00\x12T\n#sp_relational_grouped_dataframe_ref\x18\xb4\x01 \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeRefH\x00\x12\x1d\n\x06sp_row\x18\xb5\x01 \x01(\x0b\x32\n.ast.SpRowH\x00\x12\x1d\n\x06sp_sql\x18\xb6\x01 \x01(\x0b\x32\n.ast.SpSqlH\x00\x12\x36\n\x13sp_stored_procedure\x18\xb7\x01 \x01(\x0b\x32\x16.ast.SpStoredProcedureH\x00\x12!\n\x08sp_table\x18\xb8\x01 \x01(\x0b\x32\x0c.ast.SpTableH\x00\x12\x44\n\x1bsp_write_copy_into_location\x18\xb9\x01 \x01(\x0b\x32\x1c.ast.SpWriteCopyIntoLocationH\x00\x12(\n\x0csp_write_csv\x18\xba\x01 \x01(\x0b\x32\x0f.ast.SpWriteCsvH\x00\x12*\n\rsp_write_json\x18\xbb\x01 \x01(\x0b\x32\x10.ast.SpWriteJsonH\x00\x12.\n\x0fsp_write_pandas\x18\xbc\x01 \x01(\x0b\x32\x12.ast.SpWritePandasH\x00\x12\x30\n\x10sp_write_parquet\x18\xbd\x01 \x01(\x0b\x32\x13.ast.SpWriteParquetH\x00\x12,\n\x0esp_write_table\x18\xbe\x01 \x01(\x0b\x32\x11.ast.SpWriteTableH\x00\x12\x31\n\x10stored_procedure\x18\xbf\x01 \x01(\x0b\x32\x14.ast.StoredProcedureH\x00\x12%\n\nstring_val\x18\xc0\x01 \x01(\x0b\x32\x0e.ast.StringValH\x00\x12\x18\n\x03sub\x18\xc1\x01 \x01(\x0b\x32\x08.ast.SubH\x00\x12!\n\x08table_fn\x18\xc2\x01 \x01(\x0b\x32\x0c.ast.TableFnH\x00\x12!\n\x08time_val\x18\xc3\x01 \x01(\x0b\x32\x0c.ast.TimeValH\x00\x12+\n\rtimestamp_val\x18\xc4\x01 \x01(\x0b\x32\x11.ast.TimestampValH\x00\x12#\n\ttuple_val\x18\xc5\x01 \x01(\x0b\x32\r.ast.TupleValH\x00\x12\x1a\n\x04udaf\x18\xc6\x01 \x01(\x0b\x32\t.ast.UdafH\x00\x12\x18\n\x03udf\x18\xc7\x01 \x01(\x0b\x32\x08.ast.UdfH\x00\x12\x1a\n\x04udtf\x18\xc8\x01 \x01(\x0b\x32\t.ast.UdtfH\x00\x42\t\n\x07variant"@\n\x03Ref\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1a\n\x06var_id\x18\x02 \x01(\x0b\x32\n.ast.VarId"W\n\x08\x43\x61stExpr\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x03typ\x18\x02 \x01(\x0b\x32\t.ast.Type\x12\x14\n\x01v\x18\x03 \x01(\x0b\x32\t.ast.Expr"`\n\rObjectGetItem\x12\x17\n\x04\x61rgs\x18\x01 \x03(\x0b\x32\t.ast.Expr\x12\x17\n\x03obj\x18\x02 \x01(\x0b\x32\n.ast.VarId\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"\x95\x01\n\x0bPdDataframe\x12\x1a\n\x07\x63olumns\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x18\n\x05\x64type\x18\x03 \x01(\x0b\x32\t.ast.Type\x12\x18\n\x05index\x18\x04 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x05 \x01(\x0b\x32\x10.ast.SrcPosition"\x8e\x01\n\x08PdDropNa\x12\x17\n\x04\x61xis\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x14\n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x08.ast.Ref\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x19\n\x06subset\x18\x04 \x01(\x0b\x32\t.ast.Expr\x12\x19\n\x06thresh\x18\x05 \x01(\x0b\x32\t.ast.Expr"e\n\x12PdDataframeGetItem\x12\x14\n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x08.ast.Ref\x12\x1a\n\x07key_arg\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"{\n\x12PdDataframeSetItem\x12\x14\n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x08.ast.Ref\x12\x1a\n\x07key_arg\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x14\n\x01v\x18\x04 \x01(\x0b\x32\t.ast.Expr"z\n\x0ePdDataframeLoc\x12\x1a\n\x07\x63olumns\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x14\n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x08.ast.Ref\x12\x17\n\x04rows\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition"{\n\x0fPdDataframeILoc\x12\x1a\n\x07\x63olumns\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x14\n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x08.ast.Ref\x12\x17\n\x04rows\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition"r\n\x06PdRepr\x12\r\n\x05\x61sync\x18\x01 \x01(\x08\x12\x13\n\x0bmax_columns\x18\x02 \x01(\x03\x12\x10\n\x08max_rows\x18\x03 \x01(\x03\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x13\n\x01v\x18\x05 \x01(\x0b\x32\x08.ast.Ref"u\n\x0cPdReprResult\x12\x13\n\x0bnum_columns\x18\x01 \x01(\x03\x12\x18\n\x10num_head_columns\x18\x02 \x01(\x03\x12\x15\n\rnum_head_rows\x18\x03 \x01(\x03\x12\x10\n\x08num_rows\x18\x04 \x01(\x03\x12\r\n\x05value\x18\x05 \x01(\x0c"\x9e\x01\n\x06Result\x12!\n\x0btrait_error\x18\x01 \x01(\x0b\x32\n.ast.ErrorH\x00\x12\x1e\n\x07\x65val_ok\x18\x02 \x01(\x0b\x32\x0b.ast.EvalOkH\x00\x12\x46\n\x1csession_reset_required_error\x18\x03 \x01(\x0b\x32\x1e.ast.SessionResetRequiredErrorH\x00\x42\t\n\x07variant"\xb3\x06\n\nEvalResult\x12!\n\x0btrait_const\x18\x01 \x01(\x0b\x32\n.ast.ConstH\x00\x12-\n\x0f\x62ig_decimal_val\x18\x02 \x01(\x0b\x32\x12.ast.BigDecimalValH\x00\x12%\n\x0b\x62ig_int_val\x18\x03 \x01(\x0b\x32\x0e.ast.BigIntValH\x00\x12$\n\nbinary_val\x18\x04 \x01(\x0b\x32\x0e.ast.BinaryValH\x00\x12 \n\x08\x62ool_val\x18\x05 \x01(\x0b\x32\x0c.ast.BoolValH\x00\x12 \n\x08\x64\x61te_val\x18\x06 \x01(\x0b\x32\x0c.ast.DateValH\x00\x12&\n\x0b\x66loat64_val\x18\x07 \x01(\x0b\x32\x0f.ast.Float64ValH\x00\x12\x1c\n\x06\x66n_val\x18\x08 \x01(\x0b\x32\n.ast.FnValH\x00\x12"\n\tint32_val\x18\t \x01(\x0b\x32\r.ast.Int32ValH\x00\x12"\n\tint64_val\x18\n \x01(\x0b\x32\r.ast.Int64ValH\x00\x12 \n\x08none_val\x18\x0b \x01(\x0b\x32\x0c.ast.NoneValH\x00\x12 \n\x08null_val\x18\x0c \x01(\x0b\x32\x0c.ast.NullValH\x00\x12+\n\x0epd_repr_result\x18\r \x01(\x0b\x32\x11.ast.PdReprResultH\x00\x12-\n\x0fpython_date_val\x18\x0e \x01(\x0b\x32\x12.ast.PythonDateValH\x00\x12-\n\x0fpython_time_val\x18\x0f \x01(\x0b\x32\x12.ast.PythonTimeValH\x00\x12\x37\n\x14python_timestamp_val\x18\x10 \x01(\x0b\x32\x17.ast.PythonTimestampValH\x00\x12-\n\x0fsp_datatype_val\x18\x11 \x01(\x0b\x32\x12.ast.SpDatatypeValH\x00\x12$\n\nstring_val\x18\x12 \x01(\x0b\x32\x0e.ast.StringValH\x00\x12 \n\x08time_val\x18\x13 \x01(\x0b\x32\x0c.ast.TimeValH\x00\x12*\n\rtimestamp_val\x18\x14 \x01(\x0b\x32\x11.ast.TimestampValH\x00\x42\t\n\x07variant"P\n\x06\x45valOk\x12\x1d\n\x04\x64\x61ta\x18\x01 \x01(\x0b\x32\x0f.ast.EvalResult\x12\x0b\n\x03uid\x18\x02 \x01(\x03\x12\x1a\n\x06var_id\x18\x03 \x01(\x0b\x32\n.ast.VarId"Z\n\x05\x45rror\x12\x46\n\x1csession_reset_required_error\x18\x01 \x01(\x0b\x32\x1e.ast.SessionResetRequiredErrorH\x00\x42\t\n\x07variant"D\n\x19SessionResetRequiredError\x12\x0b\n\x03uid\x18\x01 \x01(\x03\x12\x1a\n\x06var_id\x18\x02 \x01(\x0b\x32\n.ast.VarId"\xcc\x02\n\x0cSpColumnExpr\x12\x34\n\x13sp_column_case_when\x18\x01 \x01(\x0b\x32\x15.ast.SpColumnCaseWhenH\x00\x12\x36\n\x14sp_column_equal_null\x18\x02 \x01(\x0b\x32\x16.ast.SpColumnEqualNullH\x00\x12)\n\rsp_column_ref\x18\x03 \x01(\x0b\x32\x10.ast.SpColumnRefH\x00\x12\x32\n\x12sp_column_sql_expr\x18\x04 \x01(\x0b\x32\x14.ast.SpColumnSqlExprH\x00\x12\x33\n\x12sp_dataframe_apply\x18\x05 \x01(\x0b\x32\x15.ast.SpDataframeApplyH\x00\x12/\n\x10sp_dataframe_col\x18\x06 \x01(\x0b\x32\x13.ast.SpDataframeColH\x00\x42\t\n\x07variant"8\n\x0bSpColumnRef\x12\n\n\x02id\x18\x01 \x01(\t\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition"m\n\x0fSpColumnSqlExpr\x12.\n\x08\x64\x66_alias\x18\x01 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x0b\n\x03sql\x18\x02 \x01(\t\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"c\n\nSpCaseExpr\x12\x1c\n\tcondition\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x18\n\x05value\x18\x03 \x01(\x0b\x32\t.ast.Expr"Q\n\x10SpColumnCaseWhen\x12\x1e\n\x05\x63\x61ses\x18\x01 \x03(\x0b\x32\x0f.ast.SpCaseExpr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition"\x91\n\n\nSpColumnFn\x12-\n\x0fsp_column_alias\x18\x01 \x01(\x0b\x32\x12.ast.SpColumnAliasH\x00\x12\x36\n\x14sp_column_apply__int\x18\x02 \x01(\x0b\x32\x16.ast.SpColumnApply_IntH\x00\x12<\n\x17sp_column_apply__string\x18\x03 \x01(\x0b\x32\x19.ast.SpColumnApply_StringH\x00\x12)\n\rsp_column_asc\x18\x04 \x01(\x0b\x32\x10.ast.SpColumnAscH\x00\x12\x31\n\x11sp_column_between\x18\x05 \x01(\x0b\x32\x14.ast.SpColumnBetweenH\x00\x12+\n\x0esp_column_cast\x18\x06 \x01(\x0b\x32\x11.ast.SpColumnCastH\x00\x12+\n\x0esp_column_desc\x18\x07 \x01(\x0b\x32\x11.ast.SpColumnDescH\x00\x12\x34\n\x13sp_column_equal_nan\x18\x08 \x01(\x0b\x32\x15.ast.SpColumnEqualNanH\x00\x12<\n\x17sp_column_in__dataframe\x18\t \x01(\x0b\x32\x19.ast.SpColumnIn_DataframeH\x00\x12\x30\n\x11sp_column_in__seq\x18\n \x01(\x0b\x32\x13.ast.SpColumnIn_SeqH\x00\x12\x37\n\x15sp_column_is_not_null\x18\x0b \x01(\x0b\x32\x16.ast.SpColumnIsNotNullH\x00\x12\x30\n\x11sp_column_is_null\x18\x0c \x01(\x0b\x32\x13.ast.SpColumnIsNullH\x00\x12+\n\x0esp_column_name\x18\r \x01(\x0b\x32\x11.ast.SpColumnNameH\x00\x12+\n\x0esp_column_over\x18\x0e \x01(\x0b\x32\x11.ast.SpColumnOverH\x00\x12>\n\x18sp_column_string_collate\x18\x0f \x01(\x0b\x32\x1a.ast.SpColumnStringCollateH\x00\x12@\n\x19sp_column_string_contains\x18\x10 \x01(\x0b\x32\x1b.ast.SpColumnStringContainsH\x00\x12\x41\n\x1asp_column_string_ends_with\x18\x11 \x01(\x0b\x32\x1b.ast.SpColumnStringEndsWithH\x00\x12\x38\n\x15sp_column_string_like\x18\x12 \x01(\x0b\x32\x17.ast.SpColumnStringLikeH\x00\x12<\n\x17sp_column_string_regexp\x18\x13 \x01(\x0b\x32\x19.ast.SpColumnStringRegexpH\x00\x12\x45\n\x1csp_column_string_starts_with\x18\x14 \x01(\x0b\x32\x1d.ast.SpColumnStringStartsWithH\x00\x12<\n\x17sp_column_string_substr\x18\x15 \x01(\x0b\x32\x19.ast.SpColumnStringSubstrH\x00\x12\x32\n\x12sp_column_try_cast\x18\x16 \x01(\x0b\x32\x14.ast.SpColumnTryCastH\x00\x12:\n\x16sp_column_within_group\x18\x17 \x01(\x0b\x32\x18.ast.SpColumnWithinGroupH\x00\x42\t\n\x07variant"\x87\x01\n\rSpColumnAlias\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x31\n\rvariant_is_as\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.BoolValue"W\n\x11SpColumnApply_Int\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x0b\n\x03idx\x18\x02 \x01(\x03\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"\\\n\x14SpColumnApply_String\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\r\n\x05\x66ield\x18\x02 \x01(\t\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"u\n\x0bSpColumnAsc\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12/\n\x0bnulls_first\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.BoolValue\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"\x88\x01\n\x0fSpColumnBetween\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1e\n\x0blower_bound\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x0bupper_bound\x18\x04 \x01(\x0b\x32\t.ast.Expr"b\n\x0cSpColumnCast\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1b\n\x02to\x18\x03 \x01(\x0b\x32\x0f.ast.SpDataType"e\n\x0fSpColumnTryCast\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1b\n\x02to\x18\x03 \x01(\x0b\x32\x0f.ast.SpDataType"v\n\x0cSpColumnDesc\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12/\n\x0bnulls_first\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.BoolValue\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"I\n\x10SpColumnEqualNan\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition"b\n\x11SpColumnEqualNull\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"o\n\x14SpColumnIn_Dataframe\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"b\n\x0eSpColumnIn_Seq\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x19\n\x06values\x18\x03 \x03(\x0b\x32\t.ast.Expr"J\n\x11SpColumnIsNotNull\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition"G\n\x0eSpColumnIsNull\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition"T\n\x0cSpColumnName\x12\r\n\x05\x61lias\x18\x01 \x01(\t\x12\x16\n\x03\x63ol\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"q\n\x0cSpColumnOver\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\x12*\n\x0bwindow_spec\x18\x03 \x01(\x0b\x32\x15.ast.SpWindowSpecExpr"l\n\x13SpColumnWithinGroup\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1e\n\x04\x63ols\x18\x02 \x01(\x0b\x32\x10.ast.ExprArgList\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"g\n\x12SpColumnStringLike\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1a\n\x07pattern\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"\x88\x01\n\x14SpColumnStringRegexp\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\nparameters\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1a\n\x07pattern\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition"l\n\x18SpColumnStringStartsWith\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x19\n\x06prefix\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"j\n\x16SpColumnStringEndsWith\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x19\n\x06suffix\x18\x03 \x01(\x0b\x32\t.ast.Expr"}\n\x14SpColumnStringSubstr\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03len\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03pos\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition"q\n\x15SpColumnStringCollate\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12!\n\x0e\x63ollation_spec\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"k\n\x16SpColumnStringContains\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1a\n\x07pattern\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"\xd1"\n\x0fSpDataframeExpr\x12\x35\n\x13sp_create_dataframe\x18\x01 \x01(\x0b\x32\x16.ast.SpCreateDataframeH\x00\x12/\n\x10sp_dataframe_agg\x18\x02 \x01(\x0b\x32\x13.ast.SpDataframeAggH\x00\x12\x33\n\x12sp_dataframe_alias\x18\x03 \x01(\x0b\x32\x15.ast.SpDataframeAliasH\x00\x12Q\n"sp_dataframe_analytics_compute_lag\x18\x04 \x01(\x0b\x32#.ast.SpDataframeAnalyticsComputeLagH\x00\x12S\n#sp_dataframe_analytics_compute_lead\x18\x05 \x01(\x0b\x32$.ast.SpDataframeAnalyticsComputeLeadH\x00\x12W\n%sp_dataframe_analytics_cumulative_agg\x18\x06 \x01(\x0b\x32&.ast.SpDataframeAnalyticsCumulativeAggH\x00\x12O\n!sp_dataframe_analytics_moving_agg\x18\x07 \x01(\x0b\x32".ast.SpDataframeAnalyticsMovingAggH\x00\x12X\n&sp_dataframe_analytics_time_series_agg\x18\x08 \x01(\x0b\x32&.ast.SpDataframeAnalyticsTimeSeriesAggH\x00\x12\x37\n\x14sp_dataframe_collect\x18\t \x01(\x0b\x32\x17.ast.SpDataframeCollectH\x00\x12\x33\n\x12sp_dataframe_count\x18\n \x01(\x0b\x32\x15.ast.SpDataframeCountH\x00\x12<\n\x17sp_dataframe_cross_join\x18\x0b \x01(\x0b\x32\x19.ast.SpDataframeCrossJoinH\x00\x12\x39\n\x15sp_dataframe_describe\x18\x0c \x01(\x0b\x32\x18.ast.SpDataframeDescribeH\x00\x12\x39\n\x15sp_dataframe_distinct\x18\r \x01(\x0b\x32\x18.ast.SpDataframeDistinctH\x00\x12\x31\n\x11sp_dataframe_drop\x18\x0e \x01(\x0b\x32\x14.ast.SpDataframeDropH\x00\x12\x46\n\x1csp_dataframe_drop_duplicates\x18\x0f \x01(\x0b\x32\x1e.ast.SpDataframeDropDuplicatesH\x00\x12\x35\n\x13sp_dataframe_except\x18\x10 \x01(\x0b\x32\x16.ast.SpDataframeExceptH\x00\x12\x35\n\x13sp_dataframe_filter\x18\x11 \x01(\x0b\x32\x16.ast.SpDataframeFilterH\x00\x12\x33\n\x12sp_dataframe_first\x18\x12 \x01(\x0b\x32\x15.ast.SpDataframeFirstH\x00\x12\x37\n\x14sp_dataframe_flatten\x18\x13 \x01(\x0b\x32\x17.ast.SpDataframeFlattenH\x00\x12;\n\x16sp_dataframe_intersect\x18\x14 \x01(\x0b\x32\x19.ast.SpDataframeIntersectH\x00\x12\x31\n\x11sp_dataframe_join\x18\x15 \x01(\x0b\x32\x14.ast.SpDataframeJoinH\x00\x12M\n sp_dataframe_join_table_function\x18\x16 \x01(\x0b\x32!.ast.SpDataframeJoinTableFunctionH\x00\x12\\\n(sp_dataframe_join__dataframe__join_exprs\x18\x17 \x01(\x0b\x32(.ast.SpDataframeJoin_Dataframe_JoinExprsH\x00\x12\x62\n+sp_dataframe_join__dataframe__using_columns\x18\x18 \x01(\x0b\x32+.ast.SpDataframeJoin_Dataframe_UsingColumnsH\x00\x12\x33\n\x12sp_dataframe_limit\x18\x19 \x01(\x0b\x32\x15.ast.SpDataframeLimitH\x00\x12\x45\n\x1csp_dataframe_na_drop__python\x18\x1a \x01(\x0b\x32\x1d.ast.SpDataframeNaDrop_PythonH\x00\x12\x43\n\x1bsp_dataframe_na_drop__scala\x18\x1b \x01(\x0b\x32\x1c.ast.SpDataframeNaDrop_ScalaH\x00\x12\x36\n\x14sp_dataframe_na_fill\x18\x1c \x01(\x0b\x32\x16.ast.SpDataframeNaFillH\x00\x12<\n\x17sp_dataframe_na_replace\x18\x1d \x01(\x0b\x32\x19.ast.SpDataframeNaReplaceH\x00\x12@\n\x19sp_dataframe_natural_join\x18\x1e \x01(\x0b\x32\x1b.ast.SpDataframeNaturalJoinH\x00\x12@\n\x19sp_dataframe_random_split\x18\x1f \x01(\x0b\x32\x1b.ast.SpDataframeRandomSplitH\x00\x12/\n\x10sp_dataframe_ref\x18  \x01(\x0b\x32\x13.ast.SpDataframeRefH\x00\x12\x35\n\x13sp_dataframe_rename\x18! \x01(\x0b\x32\x16.ast.SpDataframeRenameH\x00\x12\x35\n\x13sp_dataframe_sample\x18" \x01(\x0b\x32\x16.ast.SpDataframeSampleH\x00\x12\x46\n\x1csp_dataframe_select__columns\x18# \x01(\x0b\x32\x1e.ast.SpDataframeSelect_ColumnsH\x00\x12\x42\n\x1asp_dataframe_select__exprs\x18$ \x01(\x0b\x32\x1c.ast.SpDataframeSelect_ExprsH\x00\x12\x31\n\x11sp_dataframe_show\x18% \x01(\x0b\x32\x14.ast.SpDataframeShowH\x00\x12\x31\n\x11sp_dataframe_sort\x18& \x01(\x0b\x32\x14.ast.SpDataframeSortH\x00\x12O\n!sp_dataframe_stat_approx_quantile\x18\' \x01(\x0b\x32".ast.SpDataframeStatApproxQuantileH\x00\x12:\n\x16sp_dataframe_stat_corr\x18( \x01(\x0b\x32\x18.ast.SpDataframeStatCorrH\x00\x12\x38\n\x15sp_dataframe_stat_cov\x18) \x01(\x0b\x32\x17.ast.SpDataframeStatCovH\x00\x12\x43\n\x1bsp_dataframe_stat_cross_tab\x18* \x01(\x0b\x32\x1c.ast.SpDataframeStatCrossTabH\x00\x12\x43\n\x1bsp_dataframe_stat_sample_by\x18+ \x01(\x0b\x32\x1c.ast.SpDataframeStatSampleByH\x00\x12\x32\n\x12sp_dataframe_to_df\x18, \x01(\x0b\x32\x14.ast.SpDataframeToDfH\x00\x12\x33\n\x12sp_dataframe_union\x18- \x01(\x0b\x32\x15.ast.SpDataframeUnionH\x00\x12:\n\x16sp_dataframe_union_all\x18. \x01(\x0b\x32\x18.ast.SpDataframeUnionAllH\x00\x12H\n\x1esp_dataframe_union_all_by_name\x18/ \x01(\x0b\x32\x1e.ast.SpDataframeUnionAllByNameH\x00\x12\x41\n\x1asp_dataframe_union_by_name\x18\x30 \x01(\x0b\x32\x1b.ast.SpDataframeUnionByNameH\x00\x12\x37\n\x14sp_dataframe_unpivot\x18\x31 \x01(\x0b\x32\x17.ast.SpDataframeUnpivotH\x00\x12\x33\n\x12sp_dataframe_where\x18\x32 \x01(\x0b\x32\x15.ast.SpDataframeWhereH\x00\x12>\n\x18sp_dataframe_with_column\x18\x33 \x01(\x0b\x32\x1a.ast.SpDataframeWithColumnH\x00\x12M\n sp_dataframe_with_column_renamed\x18\x34 \x01(\x0b\x32!.ast.SpDataframeWithColumnRenamedH\x00\x12@\n\x19sp_dataframe_with_columns\x18\x35 \x01(\x0b\x32\x1b.ast.SpDataframeWithColumnsH\x00\x12\x33\n\x12sp_dataframe_write\x18\x36 \x01(\x0b\x32\x15.ast.SpDataframeWriteH\x00\x12$\n\nsp_flatten\x18\x37 \x01(\x0b\x32\x0e.ast.SpFlattenH\x00\x12(\n\x0csp_generator\x18\x38 \x01(\x0b\x32\x10.ast.SpGeneratorH\x00\x12 \n\x08sp_range\x18\x39 \x01(\x0b\x32\x0c.ast.SpRangeH\x00\x12\'\n\x0csp_read_avro\x18: \x01(\x0b\x32\x0f.ast.SpReadAvroH\x00\x12%\n\x0bsp_read_csv\x18; \x01(\x0b\x32\x0e.ast.SpReadCsvH\x00\x12\'\n\x0csp_read_json\x18< \x01(\x0b\x32\x0f.ast.SpReadJsonH\x00\x12%\n\x0bsp_read_orc\x18= \x01(\x0b\x32\x0e.ast.SpReadOrcH\x00\x12-\n\x0fsp_read_parquet\x18> \x01(\x0b\x32\x12.ast.SpReadParquetH\x00\x12)\n\rsp_read_table\x18? \x01(\x0b\x32\x10.ast.SpReadTableH\x00\x12%\n\x0bsp_read_xml\x18@ \x01(\x0b\x32\x0e.ast.SpReadXmlH\x00\x12S\n#sp_relational_grouped_dataframe_agg\x18\x41 \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeAggH\x00\x12i\n/sp_relational_grouped_dataframe_apply_in_pandas\x18\x42 \x01(\x0b\x32..ast.SpRelationalGroupedDataframeApplyInPandasH\x00\x12[\n\'sp_relational_grouped_dataframe_builtin\x18\x43 \x01(\x0b\x32(.ast.SpRelationalGroupedDataframeBuiltinH\x00\x12W\n%sp_relational_grouped_dataframe_pivot\x18\x44 \x01(\x0b\x32&.ast.SpRelationalGroupedDataframePivotH\x00\x12\x1c\n\x06sp_sql\x18\x45 \x01(\x0b\x32\n.ast.SpSqlH\x00\x12\x35\n\x13sp_stored_procedure\x18\x46 \x01(\x0b\x32\x16.ast.SpStoredProcedureH\x00\x12 \n\x08sp_table\x18G \x01(\x0b\x32\x0c.ast.SpTableH\x00\x12-\n\x0fsp_write_pandas\x18H \x01(\x0b\x32\x12.ast.SpWritePandasH\x00\x42\t\n\x07variant"G\n\x0eSpDataframeRef\x12\x16\n\x02id\x18\x01 \x01(\x0b\x32\n.ast.VarId\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition"H\n\x0fSpDataframeShow\x12\x16\n\x02id\x18\x01 \x01(\x0b\x32\n.ast.VarId\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition"\x8c\x01\n\x10SpDataframeCount\x12\r\n\x05\x62lock\x18\x01 \x01(\x08\x12\x16\n\x02id\x18\x02 \x01(\x0b\x32\n.ast.VarId\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\x04 \x03(\x0b\x32\x18.ast.Tuple_String_String"\xd1\x01\n\x12SpDataframeCollect\x12\r\n\x05\x62lock\x18\x01 \x01(\x08\x12\x16\n\x0e\x63\x61se_sensitive\x18\x02 \x01(\x08\x12\x16\n\x02id\x18\x03 \x01(\x0b\x32\n.ast.VarId\x12\x18\n\x10log_on_exception\x18\x04 \x01(\x08\x12\x0f\n\x07no_wait\x18\x05 \x01(\x08\x12\x1d\n\x03src\x18\x06 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\x07 \x03(\x0b\x32\x18.ast.Tuple_String_String"~\n\x11SpCreateDataframe\x12"\n\x04\x64\x61ta\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeData\x12&\n\x06schema\x18\x02 \x01(\x0b\x32\x16.ast.SpDataframeSchema\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"\x80\x03\n\rSpWritePandas\x12\x19\n\x11\x61uto_create_table\x18\x01 \x01(\x08\x12/\n\nchunk_size\x18\x02 \x01(\x0b\x32\x1b.google.protobuf.Int64Value\x12\x13\n\x0b\x63ompression\x18\x03 \x01(\t\x12\x19\n\x11\x63reate_temp_table\x18\x04 \x01(\x08\x12 \n\x02\x64\x66\x18\x05 \x01(\x0b\x32\x14.ast.SpDataframeData\x12&\n\x06kwargs\x18\x06 \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12\x10\n\x08on_error\x18\x07 \x01(\t\x12\x11\n\toverwrite\x18\x08 \x01(\x08\x12\x10\n\x08parallel\x18\t \x01(\x03\x12\x19\n\x11quote_identifiers\x18\n \x01(\x08\x12\x1d\n\x03src\x18\x0b \x01(\x0b\x32\x10.ast.SrcPosition\x12$\n\ntable_name\x18\x0c \x01(\x0b\x32\x10.ast.SpTableName\x12\x12\n\ntable_type\x18\r \x01(\t"\xb4\x01\n\tSpFlatten\x12\x18\n\x05input\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12 \n\x04mode\x18\x02 \x01(\x0b\x32\x12.ast.SpFlattenMode\x12\r\n\x05outer\x18\x03 \x01(\x08\x12*\n\x04path\x18\x04 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x11\n\trecursive\x18\x05 \x01(\x08\x12\x1d\n\x03src\x18\x06 \x01(\x0b\x32\x10.ast.SrcPosition"\x89\x01\n\x0bSpGenerator\x12\x1a\n\x07\x63olumns\x18\x01 \x03(\x0b\x32\t.ast.Expr\x12\x11\n\trow_count\x18\x02 \x01(\x03\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1a\n\x12time_limit_seconds\x18\x04 \x01(\x03\x12\x10\n\x08variadic\x18\x05 \x01(\x08"\x8c\x01\n\x07SpRange\x12(\n\x03\x65nd\x18\x01 \x01(\x0b\x32\x1b.google.protobuf.Int64Value\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\x12\r\n\x05start\x18\x03 \x01(\x03\x12)\n\x04step\x18\x04 \x01(\x0b\x32\x1b.google.protobuf.Int64Value"P\n\x05SpSql\x12\x19\n\x06params\x18\x01 \x03(\x0b\x32\t.ast.Expr\x12\r\n\x05query\x18\x02 \x01(\t\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"s\n\x11SpStoredProcedure\x12\x1c\n\x04\x61rgs\x18\x01 \x03(\x0b\x32\x0e.ast.SpVariant\x12\x0f\n\x07sp_name\x18\x02 \x01(\t\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x10\n\x08variadic\x18\x04 \x01(\x08"\x91\x01\n\x07SpTable\x12!\n\x19is_temp_table_for_cleanup\x18\x01 \x01(\x08\x12\x1e\n\x04name\x18\x02 \x01(\x0b\x32\x10.ast.SpTableName\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12$\n\x07variant\x18\x04 \x01(\x0b\x32\x13.ast.SpTableVariant"w\n\x0fSpDataframeToDf\x12\x11\n\tcol_names\x18\x01 \x03(\t\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x10\n\x08variadic\x18\x04 \x01(\x08"\x87\x01\n\x17SpDataframeNaDrop_Scala\x12\x0c\n\x04\x63ols\x18\x01 \x03(\t\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x15min_non_nulls_per_row\x18\x03 \x01(\x03\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition"\xb7\x01\n\x18SpDataframeNaDrop_Python\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x0b\n\x03how\x18\x02 \x01(\t\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x06subset\x18\x04 \x01(\x0b\x32\x10.ast.List_String\x12+\n\x06thresh\x18\x05 \x01(\x0b\x32\x1b.google.protobuf.Int64Value"\xb9\x01\n\x11SpDataframeNaFill\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x06subset\x18\x03 \x01(\x0b\x32\x10.ast.List_String\x12\x18\n\x05value\x18\x04 \x01(\x0b\x32\t.ast.Expr\x12\'\n\tvalue_map\x18\x05 \x01(\x0b\x32\x14.ast.Map_String_Expr"\xae\x02\n\x14SpDataframeNaReplace\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12+\n\x0freplacement_map\x18\x02 \x01(\x0b\x32\x12.ast.Map_Expr_Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x06subset\x18\x04 \x01(\x0b\x32\x10.ast.List_String\x12\'\n\x0fto_replace_list\x18\x05 \x01(\x0b\x32\x0e.ast.List_Expr\x12#\n\x10to_replace_value\x18\x06 \x01(\x0b\x32\t.ast.Expr\x12\x18\n\x05value\x18\x07 \x01(\x0b\x32\t.ast.Expr\x12\x1e\n\x06values\x18\x08 \x01(\x0b\x32\x0e.ast.List_Expr"r\n\x0eSpDataframeAgg\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1f\n\x05\x65xprs\x18\x02 \x01(\x0b\x32\x10.ast.ExprArgList\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"a\n\x10SpDataframeAlias\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"e\n\x10SpDataframeApply\x12\x10\n\x08\x63ol_name\x18\x01 \x01(\t\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"c\n\x0eSpDataframeCol\x12\x10\n\x08\x63ol_name\x18\x01 \x01(\t\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"\xd9\x01\n\x14SpDataframeCrossJoin\x12!\n\x03lhs\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12-\n\x07lsuffix\x18\x02 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12!\n\x03rhs\x18\x03 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12-\n\x07rsuffix\x18\x04 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x1d\n\x03src\x18\x05 \x01(\x0b\x32\x10.ast.SrcPosition"r\n\x0fSpDataframeCube\x12\x1e\n\x04\x63ols\x18\x01 \x01(\x0b\x32\x10.ast.ExprArgList\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"v\n\x13SpDataframeDescribe\x12\x1e\n\x04\x63ols\x18\x01 \x01(\x0b\x32\x10.ast.ExprArgList\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"V\n\x13SpDataframeDistinct\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition"r\n\x0fSpDataframeDrop\x12\x1e\n\x04\x63ols\x18\x01 \x01(\x0b\x32\x10.ast.ExprArgList\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"|\n\x19SpDataframeDropDuplicates\x12\x0c\n\x04\x63ols\x18\x01 \x03(\t\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x10\n\x08variadic\x18\x04 \x01(\x08"y\n\x11SpDataframeExcept\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12#\n\x05other\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"r\n\x11SpDataframeFilter\x12\x1c\n\tcondition\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"\xdf\x01\n\x12SpDataframeFlatten\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x18\n\x05input\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12 \n\x04mode\x18\x03 \x01(\x0b\x32\x12.ast.SpFlattenMode\x12\r\n\x05outer\x18\x04 \x01(\x08\x12*\n\x04path\x18\x05 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x11\n\trecursive\x18\x06 \x01(\x08\x12\x1d\n\x03src\x18\x07 \x01(\x0b\x32\x10.ast.SrcPosition"\xa3\x01\n\x10SpDataframeFirst\x12\r\n\x05\x62lock\x18\x01 \x01(\x08\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x0b\n\x03num\x18\x03 \x01(\x03\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\x05 \x03(\x0b\x32\x18.ast.Tuple_String_String"\x90\x01\n\x1aSpDataframeGroupBy_Columns\x12\x1f\n\x04\x63ols\x18\x01 \x03(\x0b\x32\x11.ast.SpColumnExpr\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x10\n\x08variadic\x18\x04 \x01(\x08"}\n\x1aSpDataframeGroupBy_Strings\x12\x0c\n\x04\x63ols\x18\x01 \x03(\t\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x10\n\x08variadic\x18\x04 \x01(\x08"u\n\x12SpDataframeGroupBy\x12\x1e\n\x04\x63ols\x18\x01 \x01(\x0b\x32\x10.ast.ExprArgList\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"|\n\x14SpDataframeIntersect\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12#\n\x05other\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"\xba\x02\n\x0fSpDataframeJoin\x12\x1c\n\tjoin_expr\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12"\n\tjoin_type\x18\x02 \x01(\x0b\x32\x0f.ast.SpJoinType\x12!\n\x03lhs\x18\x03 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12-\n\x07lsuffix\x18\x04 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12"\n\x0fmatch_condition\x18\x05 \x01(\x0b\x32\t.ast.Expr\x12!\n\x03rhs\x18\x06 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12-\n\x07rsuffix\x18\x07 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x1d\n\x03src\x18\x08 \x01(\x0b\x32\x10.ast.SrcPosition"~\n\x1cSpDataframeJoinTableFunction\x12\x1c\n\x04\x66unc\x18\x01 \x01(\x0b\x32\x0e.ast.ApplyExpr\x12!\n\x03lhs\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"\xd8\x01\n#SpDataframeJoin_Dataframe_JoinExprs\x12(\n\njoin_exprs\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12"\n\tjoin_type\x18\x02 \x01(\x0b\x32\x0f.ast.SpJoinType\x12!\n\x03lhs\x18\x03 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12!\n\x03rhs\x18\x04 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x05 \x01(\x0b\x32\x10.ast.SrcPosition"\xec\x01\n&SpDataframeJoin_Dataframe_UsingColumns\x12"\n\tjoin_type\x18\x01 \x01(\x0b\x32\x0f.ast.SpJoinType\x12!\n\x03lhs\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12!\n\x03rhs\x18\x03 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\x12\'\n\rusing_columns\x18\x05 \x01(\x0b\x32\x10.ast.List_String\x12\x10\n\x08variadic\x18\x06 \x01(\x08"n\n\x10SpDataframeLimit\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\t\n\x01n\x18\x02 \x01(\x03\x12\x0e\n\x06offset\x18\x03 \x01(\x03\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition"\xa1\x01\n\x16SpDataframeNaturalJoin\x12"\n\tjoin_type\x18\x01 \x01(\x0b\x32\x0f.ast.SpJoinType\x12!\n\x03lhs\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12!\n\x03rhs\x18\x03 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition"\xb8\x01\n\x10SpDataframePivot\x12"\n\x0f\x64\x65\x66\x61ult_on_null\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1c\n\tpivot_col\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\x12!\n\x06values\x18\x05 \x01(\x0b\x32\x11.ast.SpPivotValue"\xa0\x01\n\x12SpDataframeUnpivot\x12\x1e\n\x0b\x63olumn_list\x18\x01 \x03(\x0b\x32\t.ast.Expr\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x13\n\x0bname_column\x18\x03 \x01(\t\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x14\n\x0cvalue_column\x18\x05 \x01(\t"\xc9\x01\n\x16SpDataframeRandomSplit\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12)\n\x04seed\x18\x02 \x01(\x0b\x32\x1b.google.protobuf.Int64Value\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\x04 \x03(\x0b\x32\x18.ast.Tuple_String_String\x12\x0f\n\x07weights\x18\x05 \x03(\x01"\xa8\x01\n\x11SpDataframeRename\x12 \n\rcol_or_mapper\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x30\n\nnew_column\x18\x03 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition"\x8f\x01\n\x19SpDataframeRollup_Columns\x12\x1f\n\x04\x63ols\x18\x01 \x03(\x0b\x32\x11.ast.SpColumnExpr\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x10\n\x08variadic\x18\x04 \x01(\x08"|\n\x19SpDataframeRollup_Strings\x12\x0c\n\x04\x63ols\x18\x01 \x03(\t\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x10\n\x08variadic\x18\x04 \x01(\x08"t\n\x11SpDataframeRollup\x12\x1e\n\x04\x63ols\x18\x01 \x01(\x0b\x32\x10.ast.ExprArgList\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"\xba\x01\n\x11SpDataframeSample\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12(\n\x03num\x18\x02 \x01(\x0b\x32\x1b.google.protobuf.Int64Value\x12:\n\x14probability_fraction\x18\x03 \x01(\x0b\x32\x1c.google.protobuf.DoubleValue\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition"\x87\x01\n\x19SpDataframeSelect_Columns\x12\x17\n\x04\x63ols\x18\x01 \x03(\x0b\x32\t.ast.Expr\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x10\n\x08variadic\x18\x04 \x01(\x08"{\n\x17SpDataframeSelect_Exprs\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\r\n\x05\x65xprs\x18\x02 \x03(\t\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x10\n\x08variadic\x18\x04 \x01(\x08"\xa0\x01\n\x0fSpDataframeSort\x12\x1c\n\tascending\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04\x63ols\x18\x02 \x03(\x0b\x32\t.ast.Expr\x12\x15\n\rcols_variadic\x18\x03 \x01(\x08\x12 \n\x02\x64\x66\x18\x04 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x05 \x01(\x0b\x32\x10.ast.SrcPosition"x\n\x10SpDataframeUnion\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12#\n\x05other\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"{\n\x13SpDataframeUnionAll\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12#\n\x05other\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"\x81\x01\n\x19SpDataframeUnionAllByName\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12#\n\x05other\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"~\n\x16SpDataframeUnionByName\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12#\n\x05other\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"y\n\x10SpDataframeWhere\x12$\n\tcondition\x18\x01 \x01(\x0b\x32\x11.ast.SpColumnExpr\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"\x82\x01\n\x15SpDataframeWithColumn\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x10\n\x08\x63ol_name\x18\x02 \x01(\t\x12 \n\x02\x64\x66\x18\x03 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition"\x89\x01\n\x1cSpDataframeWithColumnRenamed\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x10\n\x08new_name\x18\x03 \x01(\t\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition"\x87\x01\n\x16SpDataframeWithColumns\x12\x11\n\tcol_names\x18\x01 \x03(\t\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x19\n\x06values\x18\x04 \x03(\x0b\x32\t.ast.Expr"\x9f\x01\n\x1eSpDataframeGroupByGroupingSets\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12*\n\rgrouping_sets\x18\x02 \x03(\x0b\x32\x13.ast.SpGroupingSets\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x10\n\x08variadic\x18\x04 \x01(\x08"O\n\x0eSpGroupingSets\x12\x1e\n\x04sets\x18\x01 \x01(\x0b\x32\x10.ast.ExprArgList\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition"\xe4\x01\n\x1dSpDataframeAnalyticsMovingAgg\x12+\n\x04\x61ggs\x18\x01 \x03(\x0b\x32\x1d.ast.Tuple_String_List_String\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1b\n\x13\x66ormatted_col_names\x18\x03 \x03(\t\x12\x10\n\x08group_by\x18\x04 \x03(\t\x12\x10\n\x08order_by\x18\x05 \x03(\t\x12\x1d\n\x03src\x18\x06 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x14\n\x0cwindow_sizes\x18\x07 \x03(\x03"\xe6\x01\n!SpDataframeAnalyticsCumulativeAgg\x12+\n\x04\x61ggs\x18\x01 \x03(\x0b\x32\x1d.ast.Tuple_String_List_String\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1b\n\x13\x66ormatted_col_names\x18\x03 \x03(\t\x12\x10\n\x08group_by\x18\x04 \x03(\t\x12\x12\n\nis_forward\x18\x05 \x01(\x08\x12\x10\n\x08order_by\x18\x06 \x03(\t\x12\x1d\n\x03src\x18\x07 \x01(\x0b\x32\x10.ast.SrcPosition"\xc9\x01\n\x1eSpDataframeAnalyticsComputeLag\x12\x17\n\x04\x63ols\x18\x01 \x03(\x0b\x32\t.ast.Expr\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1b\n\x13\x66ormatted_col_names\x18\x03 \x03(\t\x12\x10\n\x08group_by\x18\x04 \x03(\t\x12\x0c\n\x04lags\x18\x05 \x03(\x03\x12\x10\n\x08order_by\x18\x06 \x03(\t\x12\x1d\n\x03src\x18\x07 \x01(\x0b\x32\x10.ast.SrcPosition"\xcb\x01\n\x1fSpDataframeAnalyticsComputeLead\x12\x17\n\x04\x63ols\x18\x01 \x03(\x0b\x32\t.ast.Expr\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1b\n\x13\x66ormatted_col_names\x18\x03 \x03(\t\x12\x10\n\x08group_by\x18\x04 \x03(\t\x12\r\n\x05leads\x18\x05 \x03(\x03\x12\x10\n\x08order_by\x18\x06 \x03(\t\x12\x1d\n\x03src\x18\x07 \x01(\x0b\x32\x10.ast.SrcPosition"\xfd\x01\n!SpDataframeAnalyticsTimeSeriesAgg\x12+\n\x04\x61ggs\x18\x01 \x03(\x0b\x32\x1d.ast.Tuple_String_List_String\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1b\n\x13\x66ormatted_col_names\x18\x03 \x03(\t\x12\x10\n\x08group_by\x18\x04 \x03(\t\x12\x18\n\x10sliding_interval\x18\x05 \x01(\t\x12\x1d\n\x03src\x18\x06 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x10\n\x08time_col\x18\x07 \x01(\t\x12\x0f\n\x07windows\x18\x08 \x03(\t"\xfd\x02\n\x11SpDataframeReader\x12>\n\x18sp_dataframe_reader_init\x18\x01 \x01(\x0b\x32\x1a.ast.SpDataframeReaderInitH\x00\x12\x42\n\x1asp_dataframe_reader_option\x18\x02 \x01(\x0b\x32\x1c.ast.SpDataframeReaderOptionH\x00\x12\x44\n\x1bsp_dataframe_reader_options\x18\x03 \x01(\x0b\x32\x1d.ast.SpDataframeReaderOptionsH\x00\x12\x42\n\x1asp_dataframe_reader_schema\x18\x04 \x01(\x0b\x32\x1c.ast.SpDataframeReaderSchemaH\x00\x12O\n!sp_dataframe_reader_with_metadata\x18\x05 \x01(\x0b\x32".ast.SpDataframeReaderWithMetadataH\x00\x42\t\n\x07variant"6\n\x15SpDataframeReaderInit\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition"\x87\x01\n\x17SpDataframeReaderOption\x12\x0b\n\x03key\x18\x01 \x01(\t\x12&\n\x06reader\x18\x02 \x01(\x0b\x32\x16.ast.SpDataframeReader\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x18\n\x05value\x18\x04 \x01(\x0b\x32\t.ast.Expr"\x8a\x01\n\x18SpDataframeReaderOptions\x12\'\n\x07\x63onfigs\x18\x01 \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12&\n\x06reader\x18\x02 \x01(\x0b\x32\x16.ast.SpDataframeReader\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"\x83\x01\n\x17SpDataframeReaderSchema\x12&\n\x06reader\x18\x01 \x01(\x0b\x32\x16.ast.SpDataframeReader\x12!\n\x06schema\x18\x02 \x01(\x0b\x32\x11.ast.SpStructType\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"\x92\x01\n\x1dSpDataframeReaderWithMetadata\x12*\n\x10metadata_columns\x18\x01 \x01(\x0b\x32\x10.ast.ExprArgList\x12&\n\x06reader\x18\x02 \x01(\x0b\x32\x16.ast.SpDataframeReader\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"t\n\x0bSpReadTable\x12\x1e\n\x04name\x18\x01 \x01(\x0b\x32\x10.ast.SpTableName\x12&\n\x06reader\x18\x02 \x01(\x0b\x32\x16.ast.SpDataframeReader\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"`\n\tSpReadCsv\x12\x0c\n\x04path\x18\x01 \x01(\t\x12&\n\x06reader\x18\x02 \x01(\x0b\x32\x16.ast.SpDataframeReader\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"a\n\nSpReadJson\x12\x0c\n\x04path\x18\x01 \x01(\t\x12&\n\x06reader\x18\x02 \x01(\x0b\x32\x16.ast.SpDataframeReader\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"a\n\nSpReadAvro\x12\x0c\n\x04path\x18\x01 \x01(\t\x12&\n\x06reader\x18\x02 \x01(\x0b\x32\x16.ast.SpDataframeReader\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"`\n\tSpReadOrc\x12\x0c\n\x04path\x18\x01 \x01(\t\x12&\n\x06reader\x18\x02 \x01(\x0b\x32\x16.ast.SpDataframeReader\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"d\n\rSpReadParquet\x12\x0c\n\x04path\x18\x01 \x01(\t\x12&\n\x06reader\x18\x02 \x01(\x0b\x32\x16.ast.SpDataframeReader\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"`\n\tSpReadXml\x12\x0c\n\x04path\x18\x01 \x01(\t\x12&\n\x06reader\x18\x02 \x01(\x0b\x32\x16.ast.SpDataframeReader\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"\xe1\x03\n\x11SpDataframeWriter\x12J\n!trait_sp_dataframe_writer_options\x18\x01 \x01(\x0b\x32\x1d.ast.SpDataframeWriterOptionsH\x00\x12M\n#trait_sp_dataframe_writer_save_mode\x18\x02 \x01(\x0b\x32\x1e.ast.SpDataframeWriterSaveModeH\x00\x12/\n\x13trait_sp_write_file\x18\x03 \x01(\x0b\x32\x10.ast.SpWriteFileH\x00\x12\x43\n\x1bsp_write_copy_into_location\x18\x04 \x01(\x0b\x32\x1c.ast.SpWriteCopyIntoLocationH\x00\x12\'\n\x0csp_write_csv\x18\x05 \x01(\x0b\x32\x0f.ast.SpWriteCsvH\x00\x12)\n\rsp_write_json\x18\x06 \x01(\x0b\x32\x10.ast.SpWriteJsonH\x00\x12/\n\x10sp_write_parquet\x18\x07 \x01(\x0b\x32\x13.ast.SpWriteParquetH\x00\x12+\n\x0esp_write_table\x18\x08 \x01(\x0b\x32\x11.ast.SpWriteTableH\x00\x42\t\n\x07variant"7\n\x19SpDataframeWriterSaveMode\x12\x0f\n\x05\x64ummy\x18\x01 \x01(\x08H\x00\x42\t\n\x07variant"6\n\x18SpDataframeWriterOptions\x12\x0f\n\x05\x64ummy\x18\x01 \x01(\x08H\x00\x42\t\n\x07variant"w\n\x10SpDataframeWrite\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12"\n\tsave_mode\x18\x02 \x01(\x0b\x32\x0f.ast.SpSaveMode\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"\xe2\x01\n\x0bSpWriteFile\x12\x43\n\x1bsp_write_copy_into_location\x18\x01 \x01(\x0b\x32\x1c.ast.SpWriteCopyIntoLocationH\x00\x12\'\n\x0csp_write_csv\x18\x02 \x01(\x0b\x32\x0f.ast.SpWriteCsvH\x00\x12)\n\rsp_write_json\x18\x03 \x01(\x0b\x32\x10.ast.SpWriteJsonH\x00\x12/\n\x10sp_write_parquet\x18\x04 \x01(\x0b\x32\x13.ast.SpWriteParquetH\x00\x42\t\n\x07variant"\xae\x02\n\nSpWriteCsv\x12\r\n\x05\x62lock\x18\x01 \x01(\x08\x12,\n\x0c\x63opy_options\x18\x02 \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12\x35\n\x13\x66ormat_type_options\x18\x03 \x03(\x0b\x32\x18.ast.Tuple_String_String\x12\x0e\n\x06header\x18\x04 \x01(\x08\x12\x16\n\x02id\x18\x05 \x01(\x0b\x32\n.ast.VarId\x12\x10\n\x08location\x18\x06 \x01(\t\x12\x1f\n\x0cpartition_by\x18\x07 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x08 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\t \x03(\x0b\x32\x18.ast.Tuple_String_String"\xaf\x02\n\x0bSpWriteJson\x12\r\n\x05\x62lock\x18\x01 \x01(\x08\x12,\n\x0c\x63opy_options\x18\x02 \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12\x35\n\x13\x66ormat_type_options\x18\x03 \x03(\x0b\x32\x18.ast.Tuple_String_String\x12\x0e\n\x06header\x18\x04 \x01(\x08\x12\x16\n\x02id\x18\x05 \x01(\x0b\x32\n.ast.VarId\x12\x10\n\x08location\x18\x06 \x01(\t\x12\x1f\n\x0cpartition_by\x18\x07 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x08 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\t \x03(\x0b\x32\x18.ast.Tuple_String_String"\xb2\x02\n\x0eSpWriteParquet\x12\r\n\x05\x62lock\x18\x01 \x01(\x08\x12,\n\x0c\x63opy_options\x18\x02 \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12\x35\n\x13\x66ormat_type_options\x18\x03 \x03(\x0b\x32\x18.ast.Tuple_String_String\x12\x0e\n\x06header\x18\x04 \x01(\x08\x12\x16\n\x02id\x18\x05 \x01(\x0b\x32\n.ast.VarId\x12\x10\n\x08location\x18\x06 \x01(\t\x12\x1f\n\x0cpartition_by\x18\x07 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x08 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\t \x03(\x0b\x32\x18.ast.Tuple_String_String"\xea\x02\n\x0cSpWriteTable\x12\r\n\x05\x62lock\x18\x01 \x01(\x08\x12\'\n\x0f\x63lustering_keys\x18\x02 \x01(\x0b\x32\x0e.ast.List_Expr\x12\x14\n\x0c\x63olumn_order\x18\x03 \x01(\t\x12-\n\x07\x63omment\x18\x04 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x19\n\x11\x63reate_temp_table\x18\x05 \x01(\x08\x12\x16\n\x02id\x18\x06 \x01(\x0b\x32\n.ast.VarId\x12\x1d\n\x04mode\x18\x07 \x01(\x0b\x32\x0f.ast.SpSaveMode\x12\x1d\n\x03src\x18\x08 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\t \x03(\x0b\x32\x18.ast.Tuple_String_String\x12$\n\ntable_name\x18\n \x01(\x0b\x32\x10.ast.SpTableName\x12\x12\n\ntable_type\x18\x0b \x01(\t"\xab\x03\n\x17SpWriteCopyIntoLocation\x12\r\n\x05\x62lock\x18\x01 \x01(\x08\x12,\n\x0c\x63opy_options\x18\x02 \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12\x36\n\x10\x66ile_format_name\x18\x03 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x36\n\x10\x66ile_format_type\x18\x04 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x35\n\x13\x66ormat_type_options\x18\x05 \x03(\x0b\x32\x18.ast.Tuple_String_String\x12\x0e\n\x06header\x18\x06 \x01(\x08\x12\x16\n\x02id\x18\x07 \x01(\x0b\x32\n.ast.VarId\x12\x10\n\x08location\x18\x08 \x01(\t\x12\x1f\n\x0cpartition_by\x18\t \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\n \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\x0b \x03(\x0b\x32\x18.ast.Tuple_String_String"\xe3\x01\n\x1eSpDataframeCreateOrReplaceView\x12-\n\x07\x63omment\x18\x01 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x0f\n\x07is_temp\x18\x03 \x01(\x08\x12\x0c\n\x04name\x18\x04 \x03(\t\x12\x1d\n\x03src\x18\x05 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\x06 \x03(\x0b\x32\x18.ast.Tuple_String_String"\xfa\x01\n&SpDataframeCreateOrReplaceDynamicTable\x12-\n\x07\x63omment\x18\x01 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x0b\n\x03lag\x18\x03 \x01(\t\x12\x0c\n\x04name\x18\x04 \x03(\t\x12\x1d\n\x03src\x18\x05 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\x06 \x03(\x0b\x32\x18.ast.Tuple_String_String\x12\x11\n\twarehouse\x18\x07 \x01(\t"\xb7\x03\n\x18SpDataframeCopyIntoTable\x12,\n\x0c\x63opy_options\x18\x01 \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\r\n\x05\x66iles\x18\x03 \x03(\t\x12\x33\n\x13\x66ormat_type_options\x18\x04 \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12-\n\x07pattern\x18\x05 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x1d\n\x03src\x18\x06 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\x07 \x03(\x0b\x32\x18.ast.Tuple_String_String\x12\x12\n\ntable_name\x18\x08 \x03(\t\x12\x16\n\x0etarget_columns\x18\t \x03(\t\x12"\n\x0ftransformations\x18\n \x03(\x0b\x32\t.ast.Expr\x12\x35\n\x0fvalidation_mode\x18\x0b \x01(\x0b\x32\x1c.google.protobuf.StringValue"\x8d\x01\n\x16SpDataframeCacheResult\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\x03 \x03(\x0b\x32\x18.ast.Tuple_String_String"\xb7\x01\n\x1dSpDataframeStatApproxQuantile\x12\x17\n\x04\x63ols\x18\x01 \x03(\x0b\x32\t.ast.Expr\x12\x16\n\x02id\x18\x02 \x01(\x0b\x32\n.ast.VarId\x12\x12\n\npercentile\x18\x03 \x03(\x01\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\x05 \x03(\x0b\x32\x18.ast.Tuple_String_String"\xb2\x01\n\x13SpDataframeStatCorr\x12\x17\n\x04\x63ol1\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04\x63ol2\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x02id\x18\x03 \x01(\x0b\x32\n.ast.VarId\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\x05 \x03(\x0b\x32\x18.ast.Tuple_String_String"\xb1\x01\n\x12SpDataframeStatCov\x12\x17\n\x04\x63ol1\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04\x63ol2\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x02id\x18\x03 \x01(\x0b\x32\n.ast.VarId\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\x05 \x03(\x0b\x32\x18.ast.Tuple_String_String"\xb6\x01\n\x17SpDataframeStatCrossTab\x12\x17\n\x04\x63ol1\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04\x63ol2\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x02id\x18\x03 \x01(\x0b\x32\n.ast.VarId\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\x05 \x03(\x0b\x32\x18.ast.Tuple_String_String"\x9c\x01\n\x17SpDataframeStatSampleBy\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12(\n\tfractions\x18\x03 \x03(\x0b\x32\x15.ast.Tuple_Expr_Float\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition"\xd5\x05\n SpRelationalGroupedDataframeExpr\x12\x31\n\x11sp_dataframe_cube\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeCubeH\x00\x12\x38\n\x15sp_dataframe_group_by\x18\x02 \x01(\x0b\x32\x17.ast.SpDataframeGroupByH\x00\x12R\n#sp_dataframe_group_by_grouping_sets\x18\x03 \x01(\x0b\x32#.ast.SpDataframeGroupByGroupingSetsH\x00\x12I\n\x1esp_dataframe_group_by__columns\x18\x04 \x01(\x0b\x32\x1f.ast.SpDataframeGroupBy_ColumnsH\x00\x12I\n\x1esp_dataframe_group_by__strings\x18\x05 \x01(\x0b\x32\x1f.ast.SpDataframeGroupBy_StringsH\x00\x12\x33\n\x12sp_dataframe_pivot\x18\x06 \x01(\x0b\x32\x15.ast.SpDataframePivotH\x00\x12\x35\n\x13sp_dataframe_rollup\x18\x07 \x01(\x0b\x32\x16.ast.SpDataframeRollupH\x00\x12\x46\n\x1csp_dataframe_rollup__columns\x18\x08 \x01(\x0b\x32\x1e.ast.SpDataframeRollup_ColumnsH\x00\x12\x46\n\x1csp_dataframe_rollup__strings\x18\t \x01(\x0b\x32\x1e.ast.SpDataframeRollup_StringsH\x00\x12S\n#sp_relational_grouped_dataframe_ref\x18\n \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeRefH\x00\x42\t\n\x07variant"X\n\x1fSpRelationalGroupedDataframeRef\x12\x16\n\x02id\x18\x01 \x01(\x0b\x32\n.ast.VarId\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition"\x9c\x01\n\x1fSpRelationalGroupedDataframeAgg\x12\x1f\n\x05\x65xprs\x18\x01 \x01(\x0b\x32\x10.ast.ExprArgList\x12\x39\n\ngrouped_df\x18\x02 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition"\xb1\x01\n#SpRelationalGroupedDataframeBuiltin\x12\x10\n\x08\x61gg_name\x18\x01 \x01(\t\x12\x1e\n\x04\x63ols\x18\x02 \x01(\x0b\x32\x10.ast.ExprArgList\x12\x39\n\ngrouped_df\x18\x03 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExpr\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition"\xf6\x01\n)SpRelationalGroupedDataframeApplyInPandas\x12\x1d\n\x04\x66unc\x18\x01 \x01(\x0b\x32\x0f.ast.SpCallable\x12\x39\n\ngrouped_df\x18\x02 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExpr\x12&\n\x06kwargs\x18\x03 \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12(\n\routput_schema\x18\x04 \x01(\x0b\x32\x11.ast.SpStructType\x12\x1d\n\x03src\x18\x05 \x01(\x0b\x32\x10.ast.SrcPosition"\xe2\x01\n!SpRelationalGroupedDataframePivot\x12"\n\x0f\x64\x65\x66\x61ult_on_null\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x39\n\ngrouped_df\x18\x02 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExpr\x12\x1c\n\tpivot_col\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\x12!\n\x06values\x18\x05 \x01(\x0b\x32\x11.ast.SpPivotValue"^\n\x05SpRow\x12\x1f\n\x05names\x18\x01 \x01(\x0b\x32\x10.ast.List_String\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x15\n\x02vs\x18\x03 \x03(\x0b\x32\t.ast.Expr"8\n\x0b\x45xprArgList\x12\x17\n\x04\x61rgs\x18\x01 \x03(\x0b\x32\t.ast.Expr\x12\x10\n\x08variadic\x18\x02 \x01(\x08":\n\x0fSpDataframeType\x12\x0f\n\x07\x63olumns\x18\x01 \x03(\t\x12\x16\n\x03tys\x18\x02 \x03(\x0b\x32\t.ast.Type"F\n\x16SpGroupedDataframeType\x12\x15\n\rinner_columns\x18\x01 \x03(\t\x12\x15\n\router_columns\x18\x02 \x03(\t"\x0e\n\x0cSpWindowType"\'\n\rSpColExprType\x12\x16\n\x03typ\x18\x01 \x01(\x0b\x32\t.ast.Type"\xeaX\n\x0eHasSrcPosition\x12"\n\x0ctrait_bin_op\x18\x01 \x01(\x0b\x32\n.ast.BinOpH\x00\x12!\n\x0btrait_const\x18\x02 \x01(\x0b\x32\n.ast.ConstH\x00\x12\x1f\n\ntrait_expr\x18\x03 \x01(\x0b\x32\t.ast.ExprH\x00\x12\x30\n\x14trait_fn_id_ref_expr\x18\x04 \x01(\x0b\x32\x10.ast.FnIdRefExprH\x00\x12\x34\n\x16trait_fn_name_ref_expr\x18\x05 \x01(\x0b\x32\x12.ast.FnNameRefExprH\x00\x12+\n\x11trait_fn_ref_expr\x18\x06 \x01(\x0b\x32\x0e.ast.FnRefExprH\x00\x12\x31\n\x14trait_sp_column_expr\x18\x07 \x01(\x0b\x32\x11.ast.SpColumnExprH\x00\x12-\n\x12trait_sp_column_fn\x18\x08 \x01(\x0b\x32\x0f.ast.SpColumnFnH\x00\x12\x37\n\x17trait_sp_dataframe_expr\x18\t \x01(\x0b\x32\x14.ast.SpDataframeExprH\x00\x12;\n\x19trait_sp_dataframe_reader\x18\n \x01(\x0b\x32\x16.ast.SpDataframeReaderH\x00\x12;\n\x19trait_sp_dataframe_writer\x18\x0b \x01(\x0b\x32\x16.ast.SpDataframeWriterH\x00\x12J\n!trait_sp_dataframe_writer_options\x18\x0c \x01(\x0b\x32\x1d.ast.SpDataframeWriterOptionsH\x00\x12M\n#trait_sp_dataframe_writer_save_mode\x18\r \x01(\x0b\x32\x1e.ast.SpDataframeWriterSaveModeH\x00\x12[\n*trait_sp_relational_grouped_dataframe_expr\x18\x0e \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExprH\x00\x12:\n\x19trait_sp_window_spec_expr\x18\x0f \x01(\x0b\x32\x15.ast.SpWindowSpecExprH\x00\x12/\n\x13trait_sp_write_file\x18\x10 \x01(\x0b\x32\x10.ast.SpWriteFileH\x00\x12&\n\x0etrait_unary_op\x18\x11 \x01(\x0b\x32\x0c.ast.UnaryOpH\x00\x12\x17\n\x03\x61\x64\x64\x18\x12 \x01(\x0b\x32\x08.ast.AddH\x00\x12\x17\n\x03\x61nd\x18\x13 \x01(\x0b\x32\x08.ast.AndH\x00\x12$\n\napply_expr\x18\x14 \x01(\x0b\x32\x0e.ast.ApplyExprH\x00\x12-\n\x0f\x62ig_decimal_val\x18\x15 \x01(\x0b\x32\x12.ast.BigDecimalValH\x00\x12%\n\x0b\x62ig_int_val\x18\x16 \x01(\x0b\x32\x0e.ast.BigIntValH\x00\x12$\n\nbinary_val\x18\x17 \x01(\x0b\x32\x0e.ast.BinaryValH\x00\x12\x1e\n\x07\x62it_and\x18\x18 \x01(\x0b\x32\x0b.ast.BitAndH\x00\x12\x1c\n\x06\x62it_or\x18\x19 \x01(\x0b\x32\n.ast.BitOrH\x00\x12\x1e\n\x07\x62it_xor\x18\x1a \x01(\x0b\x32\x0b.ast.BitXorH\x00\x12 \n\x08\x62ool_val\x18\x1b \x01(\x0b\x32\x0c.ast.BoolValH\x00\x12$\n\nbuiltin_fn\x18\x1c \x01(\x0b\x32\x0e.ast.BuiltinFnH\x00\x12"\n\tcast_expr\x18\x1d \x01(\x0b\x32\r.ast.CastExprH\x00\x12 \n\x08\x64\x61te_val\x18\x1e \x01(\x0b\x32\x0c.ast.DateValH\x00\x12\x17\n\x03\x64iv\x18\x1f \x01(\x0b\x32\x08.ast.DivH\x00\x12\x15\n\x02\x65q\x18  \x01(\x0b\x32\x07.ast.EqH\x00\x12&\n\x0b\x66loat64_val\x18! \x01(\x0b\x32\x0f.ast.Float64ValH\x00\x12\x1c\n\x06\x66n_val\x18" \x01(\x0b\x32\n.ast.FnValH\x00\x12\x17\n\x03geq\x18# \x01(\x0b\x32\x08.ast.GeqH\x00\x12\x15\n\x02gt\x18$ \x01(\x0b\x32\x07.ast.GtH\x00\x12\x1e\n\x07if_expr\x18% \x01(\x0b\x32\x0b.ast.IfExprH\x00\x12\x38\n\x15indirect_fn_name_call\x18& \x01(\x0b\x32\x17.ast.IndirectFnNameCallH\x00\x12\x41\n\x1aindirect_table_fn_call_ref\x18\' \x01(\x0b\x32\x1b.ast.IndirectTableFnCallRefH\x00\x12"\n\tint32_val\x18( \x01(\x0b\x32\r.ast.Int32ValH\x00\x12"\n\tint64_val\x18) \x01(\x0b\x32\r.ast.Int64ValH\x00\x12\x17\n\x03leq\x18* \x01(\x0b\x32\x08.ast.LeqH\x00\x12 \n\x08list_val\x18+ \x01(\x0b\x32\x0c.ast.ListValH\x00\x12\x15\n\x02lt\x18, \x01(\x0b\x32\x07.ast.LtH\x00\x12\x17\n\x03mod\x18- \x01(\x0b\x32\x08.ast.ModH\x00\x12\x17\n\x03mul\x18. \x01(\x0b\x32\x08.ast.MulH\x00\x12\x17\n\x03neg\x18/ \x01(\x0b\x32\x08.ast.NegH\x00\x12\x17\n\x03neq\x18\x30 \x01(\x0b\x32\x08.ast.NeqH\x00\x12 \n\x08none_val\x18\x31 \x01(\x0b\x32\x0c.ast.NoneValH\x00\x12\x17\n\x03not\x18\x32 \x01(\x0b\x32\x08.ast.NotH\x00\x12 \n\x08null_val\x18\x33 \x01(\x0b\x32\x0c.ast.NullValH\x00\x12-\n\x0fobject_get_item\x18\x34 \x01(\x0b\x32\x12.ast.ObjectGetItemH\x00\x12\x15\n\x02or\x18\x35 \x01(\x0b\x32\x07.ast.OrH\x00\x12(\n\x0cpd_dataframe\x18\x36 \x01(\x0b\x32\x10.ast.PdDataframeH\x00\x12\x38\n\x15pd_dataframe_get_item\x18\x37 \x01(\x0b\x32\x17.ast.PdDataframeGetItemH\x00\x12\x32\n\x12pd_dataframe_i_loc\x18\x38 \x01(\x0b\x32\x14.ast.PdDataframeILocH\x00\x12/\n\x10pd_dataframe_loc\x18\x39 \x01(\x0b\x32\x13.ast.PdDataframeLocH\x00\x12\x38\n\x15pd_dataframe_set_item\x18: \x01(\x0b\x32\x17.ast.PdDataframeSetItemH\x00\x12#\n\npd_drop_na\x18; \x01(\x0b\x32\r.ast.PdDropNaH\x00\x12\x1e\n\x07pd_repr\x18< \x01(\x0b\x32\x0b.ast.PdReprH\x00\x12\x17\n\x03pow\x18= \x01(\x0b\x32\x08.ast.PowH\x00\x12-\n\x0fpython_date_val\x18> \x01(\x0b\x32\x12.ast.PythonDateValH\x00\x12-\n\x0fpython_time_val\x18? \x01(\x0b\x32\x12.ast.PythonTimeValH\x00\x12\x37\n\x14python_timestamp_val\x18@ \x01(\x0b\x32\x17.ast.PythonTimestampValH\x00\x12"\n\trange_val\x18\x41 \x01(\x0b\x32\r.ast.RangeValH\x00\x12\x17\n\x03ref\x18\x42 \x01(\x0b\x32\x08.ast.RefH\x00\x12%\n\x0bseq_map_val\x18\x43 \x01(\x0b\x32\x0e.ast.SeqMapValH\x00\x12/\n\x10session_table_fn\x18\x44 \x01(\x0b\x32\x13.ast.SessionTableFnH\x00\x12 \n\x08some_val\x18\x45 \x01(\x0b\x32\x0c.ast.SomeValH\x00\x12\'\n\x0csp_case_expr\x18\x46 \x01(\x0b\x32\x0f.ast.SpCaseExprH\x00\x12-\n\x0fsp_column_alias\x18G \x01(\x0b\x32\x12.ast.SpColumnAliasH\x00\x12\x36\n\x14sp_column_apply__int\x18H \x01(\x0b\x32\x16.ast.SpColumnApply_IntH\x00\x12<\n\x17sp_column_apply__string\x18I \x01(\x0b\x32\x19.ast.SpColumnApply_StringH\x00\x12)\n\rsp_column_asc\x18J \x01(\x0b\x32\x10.ast.SpColumnAscH\x00\x12\x31\n\x11sp_column_between\x18K \x01(\x0b\x32\x14.ast.SpColumnBetweenH\x00\x12\x34\n\x13sp_column_case_when\x18L \x01(\x0b\x32\x15.ast.SpColumnCaseWhenH\x00\x12+\n\x0esp_column_cast\x18M \x01(\x0b\x32\x11.ast.SpColumnCastH\x00\x12+\n\x0esp_column_desc\x18N \x01(\x0b\x32\x11.ast.SpColumnDescH\x00\x12\x34\n\x13sp_column_equal_nan\x18O \x01(\x0b\x32\x15.ast.SpColumnEqualNanH\x00\x12\x36\n\x14sp_column_equal_null\x18P \x01(\x0b\x32\x16.ast.SpColumnEqualNullH\x00\x12<\n\x17sp_column_in__dataframe\x18Q \x01(\x0b\x32\x19.ast.SpColumnIn_DataframeH\x00\x12\x30\n\x11sp_column_in__seq\x18R \x01(\x0b\x32\x13.ast.SpColumnIn_SeqH\x00\x12\x37\n\x15sp_column_is_not_null\x18S \x01(\x0b\x32\x16.ast.SpColumnIsNotNullH\x00\x12\x30\n\x11sp_column_is_null\x18T \x01(\x0b\x32\x13.ast.SpColumnIsNullH\x00\x12+\n\x0esp_column_name\x18U \x01(\x0b\x32\x11.ast.SpColumnNameH\x00\x12+\n\x0esp_column_over\x18V \x01(\x0b\x32\x11.ast.SpColumnOverH\x00\x12)\n\rsp_column_ref\x18W \x01(\x0b\x32\x10.ast.SpColumnRefH\x00\x12\x32\n\x12sp_column_sql_expr\x18X \x01(\x0b\x32\x14.ast.SpColumnSqlExprH\x00\x12>\n\x18sp_column_string_collate\x18Y \x01(\x0b\x32\x1a.ast.SpColumnStringCollateH\x00\x12@\n\x19sp_column_string_contains\x18Z \x01(\x0b\x32\x1b.ast.SpColumnStringContainsH\x00\x12\x41\n\x1asp_column_string_ends_with\x18[ \x01(\x0b\x32\x1b.ast.SpColumnStringEndsWithH\x00\x12\x38\n\x15sp_column_string_like\x18\\ \x01(\x0b\x32\x17.ast.SpColumnStringLikeH\x00\x12<\n\x17sp_column_string_regexp\x18] \x01(\x0b\x32\x19.ast.SpColumnStringRegexpH\x00\x12\x45\n\x1csp_column_string_starts_with\x18^ \x01(\x0b\x32\x1d.ast.SpColumnStringStartsWithH\x00\x12<\n\x17sp_column_string_substr\x18_ \x01(\x0b\x32\x19.ast.SpColumnStringSubstrH\x00\x12\x32\n\x12sp_column_try_cast\x18` \x01(\x0b\x32\x14.ast.SpColumnTryCastH\x00\x12:\n\x16sp_column_within_group\x18\x61 \x01(\x0b\x32\x18.ast.SpColumnWithinGroupH\x00\x12\x35\n\x13sp_create_dataframe\x18\x62 \x01(\x0b\x32\x16.ast.SpCreateDataframeH\x00\x12/\n\x10sp_dataframe_agg\x18\x63 \x01(\x0b\x32\x13.ast.SpDataframeAggH\x00\x12\x33\n\x12sp_dataframe_alias\x18\x64 \x01(\x0b\x32\x15.ast.SpDataframeAliasH\x00\x12Q\n"sp_dataframe_analytics_compute_lag\x18\x65 \x01(\x0b\x32#.ast.SpDataframeAnalyticsComputeLagH\x00\x12S\n#sp_dataframe_analytics_compute_lead\x18\x66 \x01(\x0b\x32$.ast.SpDataframeAnalyticsComputeLeadH\x00\x12W\n%sp_dataframe_analytics_cumulative_agg\x18g \x01(\x0b\x32&.ast.SpDataframeAnalyticsCumulativeAggH\x00\x12O\n!sp_dataframe_analytics_moving_agg\x18h \x01(\x0b\x32".ast.SpDataframeAnalyticsMovingAggH\x00\x12X\n&sp_dataframe_analytics_time_series_agg\x18i \x01(\x0b\x32&.ast.SpDataframeAnalyticsTimeSeriesAggH\x00\x12\x33\n\x12sp_dataframe_apply\x18j \x01(\x0b\x32\x15.ast.SpDataframeApplyH\x00\x12@\n\x19sp_dataframe_cache_result\x18k \x01(\x0b\x32\x1b.ast.SpDataframeCacheResultH\x00\x12/\n\x10sp_dataframe_col\x18l \x01(\x0b\x32\x13.ast.SpDataframeColH\x00\x12\x37\n\x14sp_dataframe_collect\x18m \x01(\x0b\x32\x17.ast.SpDataframeCollectH\x00\x12\x45\n\x1csp_dataframe_copy_into_table\x18n \x01(\x0b\x32\x1d.ast.SpDataframeCopyIntoTableH\x00\x12\x33\n\x12sp_dataframe_count\x18o \x01(\x0b\x32\x15.ast.SpDataframeCountH\x00\x12\x63\n,sp_dataframe_create_or_replace_dynamic_table\x18p \x01(\x0b\x32+.ast.SpDataframeCreateOrReplaceDynamicTableH\x00\x12R\n#sp_dataframe_create_or_replace_view\x18q \x01(\x0b\x32#.ast.SpDataframeCreateOrReplaceViewH\x00\x12<\n\x17sp_dataframe_cross_join\x18r \x01(\x0b\x32\x19.ast.SpDataframeCrossJoinH\x00\x12\x31\n\x11sp_dataframe_cube\x18s \x01(\x0b\x32\x14.ast.SpDataframeCubeH\x00\x12\x39\n\x15sp_dataframe_describe\x18t \x01(\x0b\x32\x18.ast.SpDataframeDescribeH\x00\x12\x39\n\x15sp_dataframe_distinct\x18u \x01(\x0b\x32\x18.ast.SpDataframeDistinctH\x00\x12\x31\n\x11sp_dataframe_drop\x18v \x01(\x0b\x32\x14.ast.SpDataframeDropH\x00\x12\x46\n\x1csp_dataframe_drop_duplicates\x18w \x01(\x0b\x32\x1e.ast.SpDataframeDropDuplicatesH\x00\x12\x35\n\x13sp_dataframe_except\x18x \x01(\x0b\x32\x16.ast.SpDataframeExceptH\x00\x12\x35\n\x13sp_dataframe_filter\x18y \x01(\x0b\x32\x16.ast.SpDataframeFilterH\x00\x12\x33\n\x12sp_dataframe_first\x18z \x01(\x0b\x32\x15.ast.SpDataframeFirstH\x00\x12\x37\n\x14sp_dataframe_flatten\x18{ \x01(\x0b\x32\x17.ast.SpDataframeFlattenH\x00\x12\x38\n\x15sp_dataframe_group_by\x18| \x01(\x0b\x32\x17.ast.SpDataframeGroupByH\x00\x12R\n#sp_dataframe_group_by_grouping_sets\x18} \x01(\x0b\x32#.ast.SpDataframeGroupByGroupingSetsH\x00\x12I\n\x1esp_dataframe_group_by__columns\x18~ \x01(\x0b\x32\x1f.ast.SpDataframeGroupBy_ColumnsH\x00\x12I\n\x1esp_dataframe_group_by__strings\x18\x7f \x01(\x0b\x32\x1f.ast.SpDataframeGroupBy_StringsH\x00\x12<\n\x16sp_dataframe_intersect\x18\x80\x01 \x01(\x0b\x32\x19.ast.SpDataframeIntersectH\x00\x12\x32\n\x11sp_dataframe_join\x18\x81\x01 \x01(\x0b\x32\x14.ast.SpDataframeJoinH\x00\x12N\n sp_dataframe_join_table_function\x18\x82\x01 \x01(\x0b\x32!.ast.SpDataframeJoinTableFunctionH\x00\x12]\n(sp_dataframe_join__dataframe__join_exprs\x18\x83\x01 \x01(\x0b\x32(.ast.SpDataframeJoin_Dataframe_JoinExprsH\x00\x12\x63\n+sp_dataframe_join__dataframe__using_columns\x18\x84\x01 \x01(\x0b\x32+.ast.SpDataframeJoin_Dataframe_UsingColumnsH\x00\x12\x34\n\x12sp_dataframe_limit\x18\x85\x01 \x01(\x0b\x32\x15.ast.SpDataframeLimitH\x00\x12\x46\n\x1csp_dataframe_na_drop__python\x18\x86\x01 \x01(\x0b\x32\x1d.ast.SpDataframeNaDrop_PythonH\x00\x12\x44\n\x1bsp_dataframe_na_drop__scala\x18\x87\x01 \x01(\x0b\x32\x1c.ast.SpDataframeNaDrop_ScalaH\x00\x12\x37\n\x14sp_dataframe_na_fill\x18\x88\x01 \x01(\x0b\x32\x16.ast.SpDataframeNaFillH\x00\x12=\n\x17sp_dataframe_na_replace\x18\x89\x01 \x01(\x0b\x32\x19.ast.SpDataframeNaReplaceH\x00\x12\x41\n\x19sp_dataframe_natural_join\x18\x8a\x01 \x01(\x0b\x32\x1b.ast.SpDataframeNaturalJoinH\x00\x12\x34\n\x12sp_dataframe_pivot\x18\x8b\x01 \x01(\x0b\x32\x15.ast.SpDataframePivotH\x00\x12\x41\n\x19sp_dataframe_random_split\x18\x8c\x01 \x01(\x0b\x32\x1b.ast.SpDataframeRandomSplitH\x00\x12?\n\x18sp_dataframe_reader_init\x18\x8d\x01 \x01(\x0b\x32\x1a.ast.SpDataframeReaderInitH\x00\x12\x43\n\x1asp_dataframe_reader_option\x18\x8e\x01 \x01(\x0b\x32\x1c.ast.SpDataframeReaderOptionH\x00\x12\x45\n\x1bsp_dataframe_reader_options\x18\x8f\x01 \x01(\x0b\x32\x1d.ast.SpDataframeReaderOptionsH\x00\x12\x43\n\x1asp_dataframe_reader_schema\x18\x90\x01 \x01(\x0b\x32\x1c.ast.SpDataframeReaderSchemaH\x00\x12P\n!sp_dataframe_reader_with_metadata\x18\x91\x01 \x01(\x0b\x32".ast.SpDataframeReaderWithMetadataH\x00\x12\x30\n\x10sp_dataframe_ref\x18\x92\x01 \x01(\x0b\x32\x13.ast.SpDataframeRefH\x00\x12\x36\n\x13sp_dataframe_rename\x18\x93\x01 \x01(\x0b\x32\x16.ast.SpDataframeRenameH\x00\x12\x36\n\x13sp_dataframe_rollup\x18\x94\x01 \x01(\x0b\x32\x16.ast.SpDataframeRollupH\x00\x12G\n\x1csp_dataframe_rollup__columns\x18\x95\x01 \x01(\x0b\x32\x1e.ast.SpDataframeRollup_ColumnsH\x00\x12G\n\x1csp_dataframe_rollup__strings\x18\x96\x01 \x01(\x0b\x32\x1e.ast.SpDataframeRollup_StringsH\x00\x12\x36\n\x13sp_dataframe_sample\x18\x97\x01 \x01(\x0b\x32\x16.ast.SpDataframeSampleH\x00\x12G\n\x1csp_dataframe_select__columns\x18\x98\x01 \x01(\x0b\x32\x1e.ast.SpDataframeSelect_ColumnsH\x00\x12\x43\n\x1asp_dataframe_select__exprs\x18\x99\x01 \x01(\x0b\x32\x1c.ast.SpDataframeSelect_ExprsH\x00\x12\x32\n\x11sp_dataframe_show\x18\x9a\x01 \x01(\x0b\x32\x14.ast.SpDataframeShowH\x00\x12\x32\n\x11sp_dataframe_sort\x18\x9b\x01 \x01(\x0b\x32\x14.ast.SpDataframeSortH\x00\x12P\n!sp_dataframe_stat_approx_quantile\x18\x9c\x01 \x01(\x0b\x32".ast.SpDataframeStatApproxQuantileH\x00\x12;\n\x16sp_dataframe_stat_corr\x18\x9d\x01 \x01(\x0b\x32\x18.ast.SpDataframeStatCorrH\x00\x12\x39\n\x15sp_dataframe_stat_cov\x18\x9e\x01 \x01(\x0b\x32\x17.ast.SpDataframeStatCovH\x00\x12\x44\n\x1bsp_dataframe_stat_cross_tab\x18\x9f\x01 \x01(\x0b\x32\x1c.ast.SpDataframeStatCrossTabH\x00\x12\x44\n\x1bsp_dataframe_stat_sample_by\x18\xa0\x01 \x01(\x0b\x32\x1c.ast.SpDataframeStatSampleByH\x00\x12\x33\n\x12sp_dataframe_to_df\x18\xa1\x01 \x01(\x0b\x32\x14.ast.SpDataframeToDfH\x00\x12\x34\n\x12sp_dataframe_union\x18\xa2\x01 \x01(\x0b\x32\x15.ast.SpDataframeUnionH\x00\x12;\n\x16sp_dataframe_union_all\x18\xa3\x01 \x01(\x0b\x32\x18.ast.SpDataframeUnionAllH\x00\x12I\n\x1esp_dataframe_union_all_by_name\x18\xa4\x01 \x01(\x0b\x32\x1e.ast.SpDataframeUnionAllByNameH\x00\x12\x42\n\x1asp_dataframe_union_by_name\x18\xa5\x01 \x01(\x0b\x32\x1b.ast.SpDataframeUnionByNameH\x00\x12\x38\n\x14sp_dataframe_unpivot\x18\xa6\x01 \x01(\x0b\x32\x17.ast.SpDataframeUnpivotH\x00\x12\x34\n\x12sp_dataframe_where\x18\xa7\x01 \x01(\x0b\x32\x15.ast.SpDataframeWhereH\x00\x12?\n\x18sp_dataframe_with_column\x18\xa8\x01 \x01(\x0b\x32\x1a.ast.SpDataframeWithColumnH\x00\x12N\n sp_dataframe_with_column_renamed\x18\xa9\x01 \x01(\x0b\x32!.ast.SpDataframeWithColumnRenamedH\x00\x12\x41\n\x19sp_dataframe_with_columns\x18\xaa\x01 \x01(\x0b\x32\x1b.ast.SpDataframeWithColumnsH\x00\x12\x34\n\x12sp_dataframe_write\x18\xab\x01 \x01(\x0b\x32\x15.ast.SpDataframeWriteH\x00\x12.\n\x0fsp_datatype_val\x18\xac\x01 \x01(\x0b\x32\x12.ast.SpDatatypeValH\x00\x12%\n\nsp_flatten\x18\xad\x01 \x01(\x0b\x32\x0e.ast.SpFlattenH\x00\x12"\n\tsp_fn_ref\x18\xae\x01 \x01(\x0b\x32\x0c.ast.SpFnRefH\x00\x12)\n\x0csp_generator\x18\xaf\x01 \x01(\x0b\x32\x10.ast.SpGeneratorH\x00\x12\x30\n\x10sp_grouping_sets\x18\xb0\x01 \x01(\x0b\x32\x13.ast.SpGroupingSetsH\x00\x12!\n\x08sp_range\x18\xb1\x01 \x01(\x0b\x32\x0c.ast.SpRangeH\x00\x12(\n\x0csp_read_avro\x18\xb2\x01 \x01(\x0b\x32\x0f.ast.SpReadAvroH\x00\x12&\n\x0bsp_read_csv\x18\xb3\x01 \x01(\x0b\x32\x0e.ast.SpReadCsvH\x00\x12(\n\x0csp_read_json\x18\xb4\x01 \x01(\x0b\x32\x0f.ast.SpReadJsonH\x00\x12&\n\x0bsp_read_orc\x18\xb5\x01 \x01(\x0b\x32\x0e.ast.SpReadOrcH\x00\x12.\n\x0fsp_read_parquet\x18\xb6\x01 \x01(\x0b\x32\x12.ast.SpReadParquetH\x00\x12*\n\rsp_read_table\x18\xb7\x01 \x01(\x0b\x32\x10.ast.SpReadTableH\x00\x12&\n\x0bsp_read_xml\x18\xb8\x01 \x01(\x0b\x32\x0e.ast.SpReadXmlH\x00\x12T\n#sp_relational_grouped_dataframe_agg\x18\xb9\x01 \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeAggH\x00\x12j\n/sp_relational_grouped_dataframe_apply_in_pandas\x18\xba\x01 \x01(\x0b\x32..ast.SpRelationalGroupedDataframeApplyInPandasH\x00\x12\\\n\'sp_relational_grouped_dataframe_builtin\x18\xbb\x01 \x01(\x0b\x32(.ast.SpRelationalGroupedDataframeBuiltinH\x00\x12X\n%sp_relational_grouped_dataframe_pivot\x18\xbc\x01 \x01(\x0b\x32&.ast.SpRelationalGroupedDataframePivotH\x00\x12T\n#sp_relational_grouped_dataframe_ref\x18\xbd\x01 \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeRefH\x00\x12\x1d\n\x06sp_row\x18\xbe\x01 \x01(\x0b\x32\n.ast.SpRowH\x00\x12\x1d\n\x06sp_sql\x18\xbf\x01 \x01(\x0b\x32\n.ast.SpSqlH\x00\x12\x36\n\x13sp_stored_procedure\x18\xc0\x01 \x01(\x0b\x32\x16.ast.SpStoredProcedureH\x00\x12!\n\x08sp_table\x18\xc1\x01 \x01(\x0b\x32\x0c.ast.SpTableH\x00\x12\x37\n\x14sp_window_spec_empty\x18\xc2\x01 \x01(\x0b\x32\x16.ast.SpWindowSpecEmptyH\x00\x12<\n\x17sp_window_spec_order_by\x18\xc3\x01 \x01(\x0b\x32\x18.ast.SpWindowSpecOrderByH\x00\x12\x44\n\x1bsp_window_spec_partition_by\x18\xc4\x01 \x01(\x0b\x32\x1c.ast.SpWindowSpecPartitionByH\x00\x12\x46\n\x1csp_window_spec_range_between\x18\xc5\x01 \x01(\x0b\x32\x1d.ast.SpWindowSpecRangeBetweenH\x00\x12\x44\n\x1bsp_window_spec_rows_between\x18\xc6\x01 \x01(\x0b\x32\x1c.ast.SpWindowSpecRowsBetweenH\x00\x12\x44\n\x1bsp_write_copy_into_location\x18\xc7\x01 \x01(\x0b\x32\x1c.ast.SpWriteCopyIntoLocationH\x00\x12(\n\x0csp_write_csv\x18\xc8\x01 \x01(\x0b\x32\x0f.ast.SpWriteCsvH\x00\x12*\n\rsp_write_json\x18\xc9\x01 \x01(\x0b\x32\x10.ast.SpWriteJsonH\x00\x12.\n\x0fsp_write_pandas\x18\xca\x01 \x01(\x0b\x32\x12.ast.SpWritePandasH\x00\x12\x30\n\x10sp_write_parquet\x18\xcb\x01 \x01(\x0b\x32\x13.ast.SpWriteParquetH\x00\x12,\n\x0esp_write_table\x18\xcc\x01 \x01(\x0b\x32\x11.ast.SpWriteTableH\x00\x12\x31\n\x10stored_procedure\x18\xcd\x01 \x01(\x0b\x32\x14.ast.StoredProcedureH\x00\x12%\n\nstring_val\x18\xce\x01 \x01(\x0b\x32\x0e.ast.StringValH\x00\x12\x18\n\x03sub\x18\xcf\x01 \x01(\x0b\x32\x08.ast.SubH\x00\x12!\n\x08table_fn\x18\xd0\x01 \x01(\x0b\x32\x0c.ast.TableFnH\x00\x12!\n\x08time_val\x18\xd1\x01 \x01(\x0b\x32\x0c.ast.TimeValH\x00\x12+\n\rtimestamp_val\x18\xd2\x01 \x01(\x0b\x32\x11.ast.TimestampValH\x00\x12#\n\ttuple_val\x18\xd3\x01 \x01(\x0b\x32\r.ast.TupleValH\x00\x12\x1a\n\x04udaf\x18\xd4\x01 \x01(\x0b\x32\t.ast.UdafH\x00\x12\x18\n\x03udf\x18\xd5\x01 \x01(\x0b\x32\x08.ast.UdfH\x00\x12\x1a\n\x04udtf\x18\xd6\x01 \x01(\x0b\x32\t.ast.UdtfH\x00\x42\t\n\x07variant"K\n\x04Stmt\x12\x1d\n\x06\x61ssign\x18\x01 \x01(\x0b\x32\x0b.ast.AssignH\x00\x12\x19\n\x04\x65val\x18\x02 \x01(\x0b\x32\t.ast.EvalH\x00\x42\t\n\x07variant"x\n\x06\x41ssign\x12\x17\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12,\n\x06symbol\x18\x02 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x0b\n\x03uid\x18\x03 \x01(\x03\x12\x1a\n\x06var_id\x18\x04 \x01(\x0b\x32\n.ast.VarId"/\n\x04\x45val\x12\x0b\n\x03uid\x18\x01 \x01(\x03\x12\x1a\n\x06var_id\x18\x02 \x01(\x0b\x32\n.ast.VarId"\xc0\x07\n\x04Type\x12.\n\x12trait_numeric_type\x18\x01 \x01(\x0b\x32\x10.ast.NumericTypeH\x00\x12,\n\x11trait_scalar_type\x18\x02 \x01(\x0b\x32\x0f.ast.ScalarTypeH\x00\x12 \n\x08\x61ny_type\x18\x03 \x01(\x0b\x32\x0c.ast.AnyTypeH\x00\x12"\n\tbool_type\x18\x04 \x01(\x0b\x32\r.ast.BoolTypeH\x00\x12(\n\x0c\x66loat64_type\x18\x05 \x01(\x0b\x32\x10.ast.Float64TypeH\x00\x12\x1e\n\x07\x66n_type\x18\x06 \x01(\x0b\x32\x0b.ast.FnTypeH\x00\x12$\n\nint32_type\x18\x07 \x01(\x0b\x32\x0e.ast.Int32TypeH\x00\x12$\n\nint64_type\x18\x08 \x01(\x0b\x32\x0e.ast.Int64TypeH\x00\x12"\n\tlist_type\x18\t \x01(\x0b\x32\r.ast.ListTypeH\x00\x12 \n\x08map_type\x18\n \x01(\x0b\x32\x0c.ast.MapTypeH\x00\x12(\n\x0cnothing_type\x18\x0b \x01(\x0b\x32\x10.ast.NothingTypeH\x00\x12&\n\x0bnumber_type\x18\x0c \x01(\x0b\x32\x0f.ast.NumberTypeH\x00\x12&\n\x0boption_type\x18\r \x01(\x0b\x32\x0f.ast.OptionTypeH\x00\x12\'\n\x0cpd_repr_type\x18\x0e \x01(\x0b\x32\x0f.ast.PdReprTypeH\x00\x12.\n\x10sp_col_expr_type\x18\x0f \x01(\x0b\x32\x12.ast.SpColExprTypeH\x00\x12\x31\n\x11sp_dataframe_type\x18\x10 \x01(\x0b\x32\x14.ast.SpDataframeTypeH\x00\x12@\n\x19sp_grouped_dataframe_type\x18\x11 \x01(\x0b\x32\x1b.ast.SpGroupedDataframeTypeH\x00\x12+\n\x0esp_window_type\x18\x12 \x01(\x0b\x32\x11.ast.SpWindowTypeH\x00\x12&\n\x0bstring_type\x18\x13 \x01(\x0b\x32\x0f.ast.StringTypeH\x00\x12$\n\ntuple_type\x18\x14 \x01(\x0b\x32\x0e.ast.TupleTypeH\x00\x12\x1c\n\x06ty_var\x18\x15 \x01(\x0b\x32\n.ast.TyVarH\x00\x12"\n\tunit_type\x18\x16 \x01(\x0b\x32\r.ast.UnitTypeH\x00\x12(\n\x0cunknown_type\x18\x17 \x01(\x0b\x32\x10.ast.UnknownTypeH\x00\x42\t\n\x07variant"\r\n\x0bUnknownType"\t\n\x07\x41nyType"\xad\x02\n\nScalarType\x12.\n\x12trait_numeric_type\x18\x01 \x01(\x0b\x32\x10.ast.NumericTypeH\x00\x12"\n\tbool_type\x18\x02 \x01(\x0b\x32\r.ast.BoolTypeH\x00\x12(\n\x0c\x66loat64_type\x18\x03 \x01(\x0b\x32\x10.ast.Float64TypeH\x00\x12$\n\nint32_type\x18\x04 \x01(\x0b\x32\x0e.ast.Int32TypeH\x00\x12$\n\nint64_type\x18\x05 \x01(\x0b\x32\x0e.ast.Int64TypeH\x00\x12&\n\x0bnumber_type\x18\x06 \x01(\x0b\x32\x0f.ast.NumberTypeH\x00\x12"\n\tunit_type\x18\x07 \x01(\x0b\x32\r.ast.UnitTypeH\x00\x42\t\n\x07variant"\xb6\x01\n\x0bNumericType\x12(\n\x0c\x66loat64_type\x18\x01 \x01(\x0b\x32\x10.ast.Float64TypeH\x00\x12$\n\nint32_type\x18\x02 \x01(\x0b\x32\x0e.ast.Int32TypeH\x00\x12$\n\nint64_type\x18\x03 \x01(\x0b\x32\x0e.ast.Int64TypeH\x00\x12&\n\x0bnumber_type\x18\x04 \x01(\x0b\x32\x0f.ast.NumberTypeH\x00\x42\t\n\x07variant"\x0c\n\nNumberType"\r\n\x0bNothingType"\n\n\x08UnitType"\n\n\x08\x42oolType"\x0b\n\tInt32Type"\x0b\n\tInt64Type"\r\n\x0b\x46loat64Type"\x0c\n\nStringType"\x0c\n\nPdReprType";\n\x06\x46nType\x12\x19\n\x06params\x18\x01 \x03(\x0b\x32\t.ast.Type\x12\x16\n\x03ret\x18\x02 \x01(\x0b\x32\t.ast.Type"$\n\nOptionType\x12\x16\n\x03typ\x18\x01 \x01(\x0b\x32\t.ast.Type"#\n\tTupleType\x12\x16\n\x03tys\x18\x01 \x03(\x0b\x32\t.ast.Type""\n\x08ListType\x12\x16\n\x03typ\x18\x01 \x01(\x0b\x32\t.ast.Type"5\n\x07MapType\x12\x14\n\x01k\x18\x01 \x01(\x0b\x32\t.ast.Type\x12\x14\n\x01v\x18\x02 \x01(\x0b\x32\t.ast.Type"\x13\n\x05TyVar\x12\n\n\x02id\x18\x01 \x01(\t*8\n\x0b__Version__\x12\x18\n\x14PROTO3_REQUIRES_THIS\x10\x00\x12\x0f\n\x0bMAX_VERSION\x10\x01\x42%\n\x1c\x63om.snowflake.snowpark.proto\xe2?\x04H\x01X\x00\x62\x06proto3'
)

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, "Snowpark.proto.ast_pb2", globals())
if _descriptor._USE_C_DESCRIPTORS == False:

    DESCRIPTOR._options = None
    DESCRIPTOR._serialized_options = (
        b"\n\034com.snowflake.snowpark.proto\342?\004H\001X\000"
    )
    ___VERSION__._serialized_start = 72016
    ___VERSION__._serialized_end = 72072
    _LIST_EXPR._serialized_start = 88
    _LIST_EXPR._serialized_end = 124
    _LIST_SPDATATYPE._serialized_start = 126
    _LIST_SPDATATYPE._serialized_end = 174
    _LIST_STRING._serialized_start = 176
    _LIST_STRING._serialized_end = 203
    _MAP_EXPR_EXPR._serialized_start = 205
    _MAP_EXPR_EXPR._serialized_end = 256
    _MAP_STRING_EXPR._serialized_start = 258
    _MAP_STRING_EXPR._serialized_end = 313
    _MAP_STRING_STRING._serialized_start = 315
    _MAP_STRING_STRING._serialized_end = 374
    _TUPLE_EXPR_EXPR._serialized_start = 376
    _TUPLE_EXPR_EXPR._serialized_end = 439
    _TUPLE_EXPR_FLOAT._serialized_start = 441
    _TUPLE_EXPR_FLOAT._serialized_end = 494
    _TUPLE_STRING_EXPR._serialized_start = 496
    _TUPLE_STRING_EXPR._serialized_end = 550
    _TUPLE_STRING_LIST_STRING._serialized_start = 552
    _TUPLE_STRING_LIST_STRING._serialized_end = 602
    _TUPLE_STRING_SPVARIANT._serialized_start = 604
    _TUPLE_STRING_SPVARIANT._serialized_end = 668
    _TUPLE_STRING_STRING._serialized_start = 670
    _TUPLE_STRING_STRING._serialized_end = 715
    _LANGUAGE._serialized_start = 718
    _LANGUAGE._serialized_end = 882
    _PYTHONLANGUAGE._serialized_start = 884
    _PYTHONLANGUAGE._serialized_end = 931
    _SCALALANGUAGE._serialized_start = 933
    _SCALALANGUAGE._serialized_end = 979
    _JAVALANGUAGE._serialized_start = 981
    _JAVALANGUAGE._serialized_end = 1026
    _VERSION._serialized_start = 1028
    _VERSION._serialized_end = 1097
    _PYTHONTIMEZONE._serialized_start = 1099
    _PYTHONTIMEZONE._serialized_end = 1183
    _FNNAME._serialized_start = 1185
    _FNNAME._serialized_end = 1303
    _FNNAMEFLAT._serialized_start = 1305
    _FNNAMEFLAT._serialized_end = 1331
    _FNNAMESTRUCTURED._serialized_start = 1333
    _FNNAMESTRUCTURED._serialized_end = 1365
    _UDTFSCHEMA._serialized_start = 1368
    _UDTFSCHEMA._serialized_end = 1500
    _UDTFSCHEMA_TYPE._serialized_start = 1502
    _UDTFSCHEMA_TYPE._serialized_end = 1557
    _UDTFSCHEMA_NAMES._serialized_start = 1559
    _UDTFSCHEMA_NAMES._serialized_end = 1593
    _TABLEFNCALLTYPE._serialized_start = 1596
    _TABLEFNCALLTYPE._serialized_end = 1796
    _SPWINDOWRELATIVEPOSITION._serialized_start = 1799
    _SPWINDOWRELATIVEPOSITION._serialized_end = 2097
    _SPWINDOWRELATIVEPOSITION_POSITION._serialized_start = 2099
    _SPWINDOWRELATIVEPOSITION_POSITION._serialized_end = 2145
    _PDINDEXEXPR._serialized_start = 2147
    _PDINDEXEXPR._serialized_end = 2260
    _ORD._serialized_start = 2262
    _ORD._serialized_end = 2289
    _FLEXORD._serialized_start = 2291
    _FLEXORD._serialized_end = 2322
    _KEY._serialized_start = 2324
    _KEY._serialized_end = 2351
    _PDPROJECTINDEXEXPR._serialized_start = 2354
    _PDPROJECTINDEXEXPR._serialized_end = 2667
    _ORDRANGE._serialized_start = 2669
    _ORDRANGE._serialized_end = 2755
    _FLEXORDRANGE._serialized_start = 2757
    _FLEXORDRANGE._serialized_end = 2847
    _KEYRANGE._serialized_start = 2849
    _KEYRANGE._serialized_end = 2910
    _ORDLIST._serialized_start = 2912
    _ORDLIST._serialized_end = 2946
    _FLEXORDLIST._serialized_start = 2948
    _FLEXORDLIST._serialized_end = 2986
    _KEYLIST._serialized_start = 2988
    _KEYLIST._serialized_end = 3022
    _BOOLFILTERLIST._serialized_start = 3024
    _BOOLFILTERLIST._serialized_end = 3067
    _SPFLATTENMODE._serialized_start = 3069
    _SPFLATTENMODE._serialized_end = 3194
    _SPTABLEVARIANT._serialized_start = 3196
    _SPTABLEVARIANT._serialized_end = 3276
    _SPSAVEMODE._serialized_start = 3279
    _SPSAVEMODE._serialized_end = 3471
    _SPJOINTYPE._serialized_start = 3474
    _SPJOINTYPE._serialized_end = 3768
    _SPTIMESTAMPTIMEZONE._serialized_start = 3771
    _SPTIMESTAMPTIMEZONE._serialized_end = 3958
    _SPDATATYPE._serialized_start = 3961
    _SPDATATYPE._serialized_end = 4886
    _SPARRAYTYPE._serialized_start = 4888
    _SPARRAYTYPE._serialized_end = 4950
    _SPCOLUMNIDENTIFIER._serialized_start = 4952
    _SPCOLUMNIDENTIFIER._serialized_end = 4986
    _SPDECIMALTYPE._serialized_start = 4988
    _SPDECIMALTYPE._serialized_end = 5037
    _SPMAPTYPE._serialized_start = 5039
    _SPMAPTYPE._serialized_end = 5138
    _SPSTRINGTYPE._serialized_start = 5140
    _SPSTRINGTYPE._serialized_end = 5199
    _SPSTRUCTFIELD._serialized_start = 5201
    _SPSTRUCTFIELD._serialized_end = 5322
    _SPSTRUCTTYPE._serialized_start = 5324
    _SPSTRUCTTYPE._serialized_end = 5394
    _SPTIMESTAMPTYPE._serialized_start = 5396
    _SPTIMESTAMPTYPE._serialized_end = 5458
    _SPVECTORTYPE._serialized_start = 5460
    _SPVECTORTYPE._serialized_end = 5522
    _SPPANDASSERIESTYPE._serialized_start = 5524
    _SPPANDASSERIESTYPE._serialized_end = 5576
    _SPPANDASDATAFRAMETYPE._serialized_start = 5578
    _SPPANDASDATAFRAMETYPE._serialized_end = 5656
    _SPVARIANT._serialized_start = 5659
    _SPVARIANT._serialized_end = 6365
    _SPVARIANT_OBJECT._serialized_start = 6367
    _SPVARIANT_OBJECT._serialized_end = 6422
    _SPVARIANT_LIST._serialized_start = 6424
    _SPVARIANT_LIST._serialized_end = 6475
    _SPVARIANT_TIMESTAMP._serialized_start = 6477
    _SPVARIANT_TIMESTAMP._serialized_end = 6509
    _SPVARIANT_DATE._serialized_start = 6511
    _SPVARIANT_DATE._serialized_end = 6538
    _SPVARIANT_TIME._serialized_start = 6540
    _SPVARIANT_TIME._serialized_end = 6567
    _SPVARIANT_BYTES._serialized_start = 6569
    _SPVARIANT_BYTES._serialized_end = 6597
    _SPVARIANT_STRING._serialized_start = 6599
    _SPVARIANT_STRING._serialized_end = 6628
    _SPVARIANT_BOOL._serialized_start = 6630
    _SPVARIANT_BOOL._serialized_end = 6657
    _SPVARIANT_BIGINT._serialized_start = 6659
    _SPVARIANT_BIGINT._serialized_end = 6688
    _SPVARIANT_BIGDECIMAL._serialized_start = 6690
    _SPVARIANT_BIGDECIMAL._serialized_end = 6723
    _SPVARIANT_INT._serialized_start = 6725
    _SPVARIANT_INT._serialized_end = 6751
    _SPVARIANT_FLOAT._serialized_start = 6753
    _SPVARIANT_FLOAT._serialized_end = 6781
    _SPVARIANT_DOUBLE._serialized_start = 6783
    _SPVARIANT_DOUBLE._serialized_end = 6812
    _SPTABLENAME._serialized_start = 6815
    _SPTABLENAME._serialized_end = 6960
    _SPTABLENAMEFLAT._serialized_start = 6962
    _SPTABLENAMEFLAT._serialized_end = 6993
    _SPTABLENAMESTRUCTURED._serialized_start = 6995
    _SPTABLENAMESTRUCTURED._serialized_end = 7032
    _STAGEDPANDASDATAFRAME._serialized_start = 7034
    _STAGEDPANDASDATAFRAME._serialized_end = 7095
    _SPDATAFRAMEDATA._serialized_start = 7098
    _SPDATAFRAMEDATA._serialized_end = 7323
    _SPDATAFRAMEDATA_LIST._serialized_start = 7325
    _SPDATAFRAMEDATA_LIST._serialized_end = 7370
    _SPDATAFRAMEDATA_TUPLE._serialized_start = 7372
    _SPDATAFRAMEDATA_TUPLE._serialized_end = 7418
    _SPDATAFRAMEDATA_PANDAS._serialized_start = 7420
    _SPDATAFRAMEDATA_PANDAS._serialized_end = 7483
    _SPDATAFRAMESCHEMA._serialized_start = 7486
    _SPDATAFRAMESCHEMA._serialized_end = 7657
    _SPDATAFRAMESCHEMA_LIST._serialized_start = 7659
    _SPDATAFRAMESCHEMA_LIST._serialized_end = 7695
    _SPDATAFRAMESCHEMA_STRUCT._serialized_start = 7697
    _SPDATAFRAMESCHEMA_STRUCT._serialized_end = 7753
    _SPCALLABLE._serialized_start = 7755
    _SPCALLABLE._serialized_end = 7793
    _SPPIVOTVALUE._serialized_start = 7796
    _SPPIVOTVALUE._serialized_end = 7948
    _SPPIVOTVALUE_EXPR._serialized_start = 7950
    _SPPIVOTVALUE_EXPR._serialized_end = 7991
    _SPPIVOTVALUE_DATAFRAME._serialized_start = 7993
    _SPPIVOTVALUE_DATAFRAME._serialized_end = 8049
    _SRCPOSITION._serialized_start = 8051
    _SRCPOSITION._serialized_end = 8158
    _VARID._serialized_start = 8160
    _VARID._serialized_end = 8186
    _REQUEST._serialized_start = 8189
    _REQUEST._serialized_end = 8329
    _RESPONSE._serialized_start = 8331
    _RESPONSE._serialized_end = 8368
    _CONST._serialized_start = 8371
    _CONST._serialized_end = 9105
    _NONEVAL._serialized_start = 9107
    _NONEVAL._serialized_end = 9147
    _NULLVAL._serialized_start = 9149
    _NULLVAL._serialized_end = 9189
    _BOOLVAL._serialized_start = 9191
    _BOOLVAL._serialized_end = 9242
    _INT32VAL._serialized_start = 9244
    _INT32VAL._serialized_end = 9296
    _INT64VAL._serialized_start = 9298
    _INT64VAL._serialized_end = 9350
    _FLOAT64VAL._serialized_start = 9352
    _FLOAT64VAL._serialized_end = 9406
    _BIGINTVAL._serialized_start = 9408
    _BIGINTVAL._serialized_end = 9461
    _BIGDECIMALVAL._serialized_start = 9463
    _BIGDECIMALVAL._serialized_end = 9548
    _STRINGVAL._serialized_start = 9550
    _STRINGVAL._serialized_end = 9603
    _BINARYVAL._serialized_start = 9605
    _BINARYVAL._serialized_end = 9658
    _TIMESTAMPVAL._serialized_start = 9660
    _TIMESTAMPVAL._serialized_end = 9716
    _DATEVAL._serialized_start = 9718
    _DATEVAL._serialized_end = 9769
    _TIMEVAL._serialized_start = 9771
    _TIMEVAL._serialized_end = 9822
    _PYTHONTIMESTAMPVAL._serialized_start = 9825
    _PYTHONTIMESTAMPVAL._serialized_end = 10018
    _PYTHONDATEVAL._serialized_start = 10020
    _PYTHONDATEVAL._serialized_end = 10108
    _PYTHONTIMEVAL._serialized_start = 10111
    _PYTHONTIMEVAL._serialized_end = 10257
    _FNVAL._serialized_start = 10259
    _FNVAL._serialized_end = 10338
    _SPDATATYPEVAL._serialized_start = 10340
    _SPDATATYPEVAL._serialized_end = 10421
    _IFEXPR._serialized_start = 10423
    _IFEXPR._serialized_end = 10544
    _SOMEVAL._serialized_start = 10546
    _SOMEVAL._serialized_end = 10608
    _TUPLEVAL._serialized_start = 10610
    _TUPLEVAL._serialized_end = 10674
    _LISTVAL._serialized_start = 10676
    _LISTVAL._serialized_end = 10739
    _SEQMAPVAL._serialized_start = 10741
    _SEQMAPVAL._serialized_end = 10811
    _APPLYEXPR._serialized_start = 10814
    _APPLYEXPR._serialized_end = 10957
    _FNREFEXPR._serialized_start = 10960
    _FNREFEXPR._serialized_end = 11496
    _FNNAMEREFEXPR._serialized_start = 11499
    _FNNAMEREFEXPR._serialized_end = 11833
    _FNIDREFEXPR._serialized_start = 11835
    _FNIDREFEXPR._serialized_end = 11961
    _SPFNREF._serialized_start = 11963
    _SPFNREF._serialized_end = 12027
    _BUILTINFN._serialized_start = 12029
    _BUILTINFN._serialized_end = 12098
    _STOREDPROCEDURE._serialized_start = 12101
    _STOREDPROCEDURE._serialized_end = 12280
    _UDF._serialized_start = 12283
    _UDF._serialized_end = 12968
    _UDTF._serialized_start = 12971
    _UDTF._serialized_end = 13580
    _UDAF._serialized_start = 13583
    _UDAF._serialized_end = 14188
    _INDIRECTFNNAMECALL._serialized_start = 14190
    _INDIRECTFNNAMECALL._serialized_end = 14268
    _INDIRECTTABLEFNCALLREF._serialized_start = 14270
    _INDIRECTTABLEFNCALLREF._serialized_end = 14349
    _SESSIONTABLEFN._serialized_start = 14351
    _SESSIONTABLEFN._serialized_end = 14425
    _TABLEFN._serialized_start = 14427
    _TABLEFN._serialized_end = 14535
    _UNARYOP._serialized_start = 14537
    _UNARYOP._serialized_end = 14607
    _BINOP._serialized_start = 14610
    _BINOP._serialized_end = 15064
    _NOT._serialized_start = 15066
    _NOT._serialized_end = 15130
    _AND._serialized_start = 15132
    _AND._serialized_end = 15216
    _OR._serialized_start = 15218
    _OR._serialized_end = 15301
    _EQ._serialized_start = 15303
    _EQ._serialized_end = 15386
    _NEQ._serialized_start = 15388
    _NEQ._serialized_end = 15472
    _LT._serialized_start = 15474
    _LT._serialized_end = 15557
    _LEQ._serialized_start = 15559
    _LEQ._serialized_end = 15643
    _GT._serialized_start = 15645
    _GT._serialized_end = 15728
    _GEQ._serialized_start = 15730
    _GEQ._serialized_end = 15814
    _NEG._serialized_start = 15816
    _NEG._serialized_end = 15880
    _ADD._serialized_start = 15882
    _ADD._serialized_end = 15966
    _SUB._serialized_start = 15968
    _SUB._serialized_end = 16052
    _MUL._serialized_start = 16054
    _MUL._serialized_end = 16138
    _DIV._serialized_start = 16140
    _DIV._serialized_end = 16224
    _MOD._serialized_start = 16226
    _MOD._serialized_end = 16310
    _POW._serialized_start = 16312
    _POW._serialized_end = 16396
    _BITAND._serialized_start = 16398
    _BITAND._serialized_end = 16485
    _BITOR._serialized_start = 16487
    _BITOR._serialized_end = 16573
    _BITXOR._serialized_start = 16575
    _BITXOR._serialized_end = 16662
    _RANGEVAL._serialized_start = 16664
    _RANGEVAL._serialized_end = 16781
    _SPWINDOWSPECEXPR._serialized_start = 16784
    _SPWINDOWSPECEXPR._serialized_end = 17139
    _SPWINDOWSPECEMPTY._serialized_start = 17141
    _SPWINDOWSPECEMPTY._serialized_end = 17227
    _SPWINDOWSPECORDERBY._serialized_start = 17229
    _SPWINDOWSPECORDERBY._serialized_end = 17342
    _SPWINDOWSPECPARTITIONBY._serialized_start = 17344
    _SPWINDOWSPECPARTITIONBY._serialized_end = 17461
    _SPWINDOWSPECRANGEBETWEEN._serialized_start = 17464
    _SPWINDOWSPECRANGEBETWEEN._serialized_end = 17647
    _SPWINDOWSPECROWSBETWEEN._serialized_start = 17650
    _SPWINDOWSPECROWSBETWEEN._serialized_end = 17832
    _EXPR._serialized_start = 17835
    _EXPR._serialized_end = 28309
    _REF._serialized_start = 28311
    _REF._serialized_end = 28375
    _CASTEXPR._serialized_start = 28377
    _CASTEXPR._serialized_end = 28464
    _OBJECTGETITEM._serialized_start = 28466
    _OBJECTGETITEM._serialized_end = 28562
    _PDDATAFRAME._serialized_start = 28565
    _PDDATAFRAME._serialized_end = 28714
    _PDDROPNA._serialized_start = 28717
    _PDDROPNA._serialized_end = 28859
    _PDDATAFRAMEGETITEM._serialized_start = 28861
    _PDDATAFRAMEGETITEM._serialized_end = 28962
    _PDDATAFRAMESETITEM._serialized_start = 28964
    _PDDATAFRAMESETITEM._serialized_end = 29087
    _PDDATAFRAMELOC._serialized_start = 29089
    _PDDATAFRAMELOC._serialized_end = 29211
    _PDDATAFRAMEILOC._serialized_start = 29213
    _PDDATAFRAMEILOC._serialized_end = 29336
    _PDREPR._serialized_start = 29338
    _PDREPR._serialized_end = 29452
    _PDREPRRESULT._serialized_start = 29454
    _PDREPRRESULT._serialized_end = 29571
    _RESULT._serialized_start = 29574
    _RESULT._serialized_end = 29732
    _EVALRESULT._serialized_start = 29735
    _EVALRESULT._serialized_end = 30554
    _EVALOK._serialized_start = 30556
    _EVALOK._serialized_end = 30636
    _ERROR._serialized_start = 30638
    _ERROR._serialized_end = 30728
    _SESSIONRESETREQUIREDERROR._serialized_start = 30730
    _SESSIONRESETREQUIREDERROR._serialized_end = 30798
    _SPCOLUMNEXPR._serialized_start = 30801
    _SPCOLUMNEXPR._serialized_end = 31133
    _SPCOLUMNREF._serialized_start = 31135
    _SPCOLUMNREF._serialized_end = 31191
    _SPCOLUMNSQLEXPR._serialized_start = 31193
    _SPCOLUMNSQLEXPR._serialized_end = 31302
    _SPCASEEXPR._serialized_start = 31304
    _SPCASEEXPR._serialized_end = 31403
    _SPCOLUMNCASEWHEN._serialized_start = 31405
    _SPCOLUMNCASEWHEN._serialized_end = 31486
    _SPCOLUMNFN._serialized_start = 31489
    _SPCOLUMNFN._serialized_end = 32786
    _SPCOLUMNALIAS._serialized_start = 32789
    _SPCOLUMNALIAS._serialized_end = 32924
    _SPCOLUMNAPPLY_INT._serialized_start = 32926
    _SPCOLUMNAPPLY_INT._serialized_end = 33013
    _SPCOLUMNAPPLY_STRING._serialized_start = 33015
    _SPCOLUMNAPPLY_STRING._serialized_end = 33107
    _SPCOLUMNASC._serialized_start = 33109
    _SPCOLUMNASC._serialized_end = 33226
    _SPCOLUMNBETWEEN._serialized_start = 33229
    _SPCOLUMNBETWEEN._serialized_end = 33365
    _SPCOLUMNCAST._serialized_start = 33367
    _SPCOLUMNCAST._serialized_end = 33465
    _SPCOLUMNTRYCAST._serialized_start = 33467
    _SPCOLUMNTRYCAST._serialized_end = 33568
    _SPCOLUMNDESC._serialized_start = 33570
    _SPCOLUMNDESC._serialized_end = 33688
    _SPCOLUMNEQUALNAN._serialized_start = 33690
    _SPCOLUMNEQUALNAN._serialized_end = 33763
    _SPCOLUMNEQUALNULL._serialized_start = 33765
    _SPCOLUMNEQUALNULL._serialized_end = 33863
    _SPCOLUMNIN_DATAFRAME._serialized_start = 33865
    _SPCOLUMNIN_DATAFRAME._serialized_end = 33976
    _SPCOLUMNIN_SEQ._serialized_start = 33978
    _SPCOLUMNIN_SEQ._serialized_end = 34076
    _SPCOLUMNISNOTNULL._serialized_start = 34078
    _SPCOLUMNISNOTNULL._serialized_end = 34152
    _SPCOLUMNISNULL._serialized_start = 34154
    _SPCOLUMNISNULL._serialized_end = 34225
    _SPCOLUMNNAME._serialized_start = 34227
    _SPCOLUMNNAME._serialized_end = 34311
    _SPCOLUMNOVER._serialized_start = 34313
    _SPCOLUMNOVER._serialized_end = 34426
    _SPCOLUMNWITHINGROUP._serialized_start = 34428
    _SPCOLUMNWITHINGROUP._serialized_end = 34536
    _SPCOLUMNSTRINGLIKE._serialized_start = 34538
    _SPCOLUMNSTRINGLIKE._serialized_end = 34641
    _SPCOLUMNSTRINGREGEXP._serialized_start = 34644
    _SPCOLUMNSTRINGREGEXP._serialized_end = 34780
    _SPCOLUMNSTRINGSTARTSWITH._serialized_start = 34782
    _SPCOLUMNSTRINGSTARTSWITH._serialized_end = 34890
    _SPCOLUMNSTRINGENDSWITH._serialized_start = 34892
    _SPCOLUMNSTRINGENDSWITH._serialized_end = 34998
    _SPCOLUMNSTRINGSUBSTR._serialized_start = 35000
    _SPCOLUMNSTRINGSUBSTR._serialized_end = 35125
    _SPCOLUMNSTRINGCOLLATE._serialized_start = 35127
    _SPCOLUMNSTRINGCOLLATE._serialized_end = 35240
    _SPCOLUMNSTRINGCONTAINS._serialized_start = 35242
    _SPCOLUMNSTRINGCONTAINS._serialized_end = 35349
    _SPDATAFRAMEEXPR._serialized_start = 35352
    _SPDATAFRAMEEXPR._serialized_end = 39785
    _SPDATAFRAMEREF._serialized_start = 39787
    _SPDATAFRAMEREF._serialized_end = 39858
    _SPDATAFRAMESHOW._serialized_start = 39860
    _SPDATAFRAMESHOW._serialized_end = 39932
    _SPDATAFRAMECOUNT._serialized_start = 39935
    _SPDATAFRAMECOUNT._serialized_end = 40075
    _SPDATAFRAMECOLLECT._serialized_start = 40078
    _SPDATAFRAMECOLLECT._serialized_end = 40287
    _SPCREATEDATAFRAME._serialized_start = 40289
    _SPCREATEDATAFRAME._serialized_end = 40415
    _SPWRITEPANDAS._serialized_start = 40418
    _SPWRITEPANDAS._serialized_end = 40802
    _SPFLATTEN._serialized_start = 40805
    _SPFLATTEN._serialized_end = 40985
    _SPGENERATOR._serialized_start = 40988
    _SPGENERATOR._serialized_end = 41125
    _SPRANGE._serialized_start = 41128
    _SPRANGE._serialized_end = 41268
    _SPSQL._serialized_start = 41270
    _SPSQL._serialized_end = 41350
    _SPSTOREDPROCEDURE._serialized_start = 41352
    _SPSTOREDPROCEDURE._serialized_end = 41467
    _SPTABLE._serialized_start = 41470
    _SPTABLE._serialized_end = 41615
    _SPDATAFRAMETODF._serialized_start = 41617
    _SPDATAFRAMETODF._serialized_end = 41736
    _SPDATAFRAMENADROP_SCALA._serialized_start = 41739
    _SPDATAFRAMENADROP_SCALA._serialized_end = 41874
    _SPDATAFRAMENADROP_PYTHON._serialized_start = 41877
    _SPDATAFRAMENADROP_PYTHON._serialized_end = 42060
    _SPDATAFRAMENAFILL._serialized_start = 42063
    _SPDATAFRAMENAFILL._serialized_end = 42248
    _SPDATAFRAMENAREPLACE._serialized_start = 42251
    _SPDATAFRAMENAREPLACE._serialized_end = 42553
    _SPDATAFRAMEAGG._serialized_start = 42555
    _SPDATAFRAMEAGG._serialized_end = 42669
    _SPDATAFRAMEALIAS._serialized_start = 42671
    _SPDATAFRAMEALIAS._serialized_end = 42768
    _SPDATAFRAMEAPPLY._serialized_start = 42770
    _SPDATAFRAMEAPPLY._serialized_end = 42871
    _SPDATAFRAMECOL._serialized_start = 42873
    _SPDATAFRAMECOL._serialized_end = 42972
    _SPDATAFRAMECROSSJOIN._serialized_start = 42975
    _SPDATAFRAMECROSSJOIN._serialized_end = 43192
    _SPDATAFRAMECUBE._serialized_start = 43194
    _SPDATAFRAMECUBE._serialized_end = 43308
    _SPDATAFRAMEDESCRIBE._serialized_start = 43310
    _SPDATAFRAMEDESCRIBE._serialized_end = 43428
    _SPDATAFRAMEDISTINCT._serialized_start = 43430
    _SPDATAFRAMEDISTINCT._serialized_end = 43516
    _SPDATAFRAMEDROP._serialized_start = 43518
    _SPDATAFRAMEDROP._serialized_end = 43632
    _SPDATAFRAMEDROPDUPLICATES._serialized_start = 43634
    _SPDATAFRAMEDROPDUPLICATES._serialized_end = 43758
    _SPDATAFRAMEEXCEPT._serialized_start = 43760
    _SPDATAFRAMEEXCEPT._serialized_end = 43881
    _SPDATAFRAMEFILTER._serialized_start = 43883
    _SPDATAFRAMEFILTER._serialized_end = 43997
    _SPDATAFRAMEFLATTEN._serialized_start = 44000
    _SPDATAFRAMEFLATTEN._serialized_end = 44223
    _SPDATAFRAMEFIRST._serialized_start = 44226
    _SPDATAFRAMEFIRST._serialized_end = 44389
    _SPDATAFRAMEGROUPBY_COLUMNS._serialized_start = 44392
    _SPDATAFRAMEGROUPBY_COLUMNS._serialized_end = 44536
    _SPDATAFRAMEGROUPBY_STRINGS._serialized_start = 44538
    _SPDATAFRAMEGROUPBY_STRINGS._serialized_end = 44663
    _SPDATAFRAMEGROUPBY._serialized_start = 44665
    _SPDATAFRAMEGROUPBY._serialized_end = 44782
    _SPDATAFRAMEINTERSECT._serialized_start = 44784
    _SPDATAFRAMEINTERSECT._serialized_end = 44908
    _SPDATAFRAMEJOIN._serialized_start = 44911
    _SPDATAFRAMEJOIN._serialized_end = 45225
    _SPDATAFRAMEJOINTABLEFUNCTION._serialized_start = 45227
    _SPDATAFRAMEJOINTABLEFUNCTION._serialized_end = 45353
    _SPDATAFRAMEJOIN_DATAFRAME_JOINEXPRS._serialized_start = 45356
    _SPDATAFRAMEJOIN_DATAFRAME_JOINEXPRS._serialized_end = 45572
    _SPDATAFRAMEJOIN_DATAFRAME_USINGCOLUMNS._serialized_start = 45575
    _SPDATAFRAMEJOIN_DATAFRAME_USINGCOLUMNS._serialized_end = 45811
    _SPDATAFRAMELIMIT._serialized_start = 45813
    _SPDATAFRAMELIMIT._serialized_end = 45923
    _SPDATAFRAMENATURALJOIN._serialized_start = 45926
    _SPDATAFRAMENATURALJOIN._serialized_end = 46087
    _SPDATAFRAMEPIVOT._serialized_start = 46090
    _SPDATAFRAMEPIVOT._serialized_end = 46274
    _SPDATAFRAMEUNPIVOT._serialized_start = 46277
    _SPDATAFRAMEUNPIVOT._serialized_end = 46437
    _SPDATAFRAMERANDOMSPLIT._serialized_start = 46440
    _SPDATAFRAMERANDOMSPLIT._serialized_end = 46641
    _SPDATAFRAMERENAME._serialized_start = 46644
    _SPDATAFRAMERENAME._serialized_end = 46812
    _SPDATAFRAMEROLLUP_COLUMNS._serialized_start = 46815
    _SPDATAFRAMEROLLUP_COLUMNS._serialized_end = 46958
    _SPDATAFRAMEROLLUP_STRINGS._serialized_start = 46960
    _SPDATAFRAMEROLLUP_STRINGS._serialized_end = 47084
    _SPDATAFRAMEROLLUP._serialized_start = 47086
    _SPDATAFRAMEROLLUP._serialized_end = 47202
    _SPDATAFRAMESAMPLE._serialized_start = 47205
    _SPDATAFRAMESAMPLE._serialized_end = 47391
    _SPDATAFRAMESELECT_COLUMNS._serialized_start = 47394
    _SPDATAFRAMESELECT_COLUMNS._serialized_end = 47529
    _SPDATAFRAMESELECT_EXPRS._serialized_start = 47531
    _SPDATAFRAMESELECT_EXPRS._serialized_end = 47654
    _SPDATAFRAMESORT._serialized_start = 47657
    _SPDATAFRAMESORT._serialized_end = 47817
    _SPDATAFRAMEUNION._serialized_start = 47819
    _SPDATAFRAMEUNION._serialized_end = 47939
    _SPDATAFRAMEUNIONALL._serialized_start = 47941
    _SPDATAFRAMEUNIONALL._serialized_end = 48064
    _SPDATAFRAMEUNIONALLBYNAME._serialized_start = 48067
    _SPDATAFRAMEUNIONALLBYNAME._serialized_end = 48196
    _SPDATAFRAMEUNIONBYNAME._serialized_start = 48198
    _SPDATAFRAMEUNIONBYNAME._serialized_end = 48324
    _SPDATAFRAMEWHERE._serialized_start = 48326
    _SPDATAFRAMEWHERE._serialized_end = 48447
    _SPDATAFRAMEWITHCOLUMN._serialized_start = 48450
    _SPDATAFRAMEWITHCOLUMN._serialized_end = 48580
    _SPDATAFRAMEWITHCOLUMNRENAMED._serialized_start = 48583
    _SPDATAFRAMEWITHCOLUMNRENAMED._serialized_end = 48720
    _SPDATAFRAMEWITHCOLUMNS._serialized_start = 48723
    _SPDATAFRAMEWITHCOLUMNS._serialized_end = 48858
    _SPDATAFRAMEGROUPBYGROUPINGSETS._serialized_start = 48861
    _SPDATAFRAMEGROUPBYGROUPINGSETS._serialized_end = 49020
    _SPGROUPINGSETS._serialized_start = 49022
    _SPGROUPINGSETS._serialized_end = 49101
    _SPDATAFRAMEANALYTICSMOVINGAGG._serialized_start = 49104
    _SPDATAFRAMEANALYTICSMOVINGAGG._serialized_end = 49332
    _SPDATAFRAMEANALYTICSCUMULATIVEAGG._serialized_start = 49335
    _SPDATAFRAMEANALYTICSCUMULATIVEAGG._serialized_end = 49565
    _SPDATAFRAMEANALYTICSCOMPUTELAG._serialized_start = 49568
    _SPDATAFRAMEANALYTICSCOMPUTELAG._serialized_end = 49769
    _SPDATAFRAMEANALYTICSCOMPUTELEAD._serialized_start = 49772
    _SPDATAFRAMEANALYTICSCOMPUTELEAD._serialized_end = 49975
    _SPDATAFRAMEANALYTICSTIMESERIESAGG._serialized_start = 49978
    _SPDATAFRAMEANALYTICSTIMESERIESAGG._serialized_end = 50231
    _SPDATAFRAMEREADER._serialized_start = 50234
    _SPDATAFRAMEREADER._serialized_end = 50615
    _SPDATAFRAMEREADERINIT._serialized_start = 50617
    _SPDATAFRAMEREADERINIT._serialized_end = 50671
    _SPDATAFRAMEREADEROPTION._serialized_start = 50674
    _SPDATAFRAMEREADEROPTION._serialized_end = 50809
    _SPDATAFRAMEREADEROPTIONS._serialized_start = 50812
    _SPDATAFRAMEREADEROPTIONS._serialized_end = 50950
    _SPDATAFRAMEREADERSCHEMA._serialized_start = 50953
    _SPDATAFRAMEREADERSCHEMA._serialized_end = 51084
    _SPDATAFRAMEREADERWITHMETADATA._serialized_start = 51087
    _SPDATAFRAMEREADERWITHMETADATA._serialized_end = 51233
    _SPREADTABLE._serialized_start = 51235
    _SPREADTABLE._serialized_end = 51351
    _SPREADCSV._serialized_start = 51353
    _SPREADCSV._serialized_end = 51449
    _SPREADJSON._serialized_start = 51451
    _SPREADJSON._serialized_end = 51548
    _SPREADAVRO._serialized_start = 51550
    _SPREADAVRO._serialized_end = 51647
    _SPREADORC._serialized_start = 51649
    _SPREADORC._serialized_end = 51745
    _SPREADPARQUET._serialized_start = 51747
    _SPREADPARQUET._serialized_end = 51847
    _SPREADXML._serialized_start = 51849
    _SPREADXML._serialized_end = 51945
    _SPDATAFRAMEWRITER._serialized_start = 51948
    _SPDATAFRAMEWRITER._serialized_end = 52429
    _SPDATAFRAMEWRITERSAVEMODE._serialized_start = 52431
    _SPDATAFRAMEWRITERSAVEMODE._serialized_end = 52486
    _SPDATAFRAMEWRITEROPTIONS._serialized_start = 52488
    _SPDATAFRAMEWRITEROPTIONS._serialized_end = 52542
    _SPDATAFRAMEWRITE._serialized_start = 52544
    _SPDATAFRAMEWRITE._serialized_end = 52663
    _SPWRITEFILE._serialized_start = 52666
    _SPWRITEFILE._serialized_end = 52892
    _SPWRITECSV._serialized_start = 52895
    _SPWRITECSV._serialized_end = 53197
    _SPWRITEJSON._serialized_start = 53200
    _SPWRITEJSON._serialized_end = 53503
    _SPWRITEPARQUET._serialized_start = 53506
    _SPWRITEPARQUET._serialized_end = 53812
    _SPWRITETABLE._serialized_start = 53815
    _SPWRITETABLE._serialized_end = 54177
    _SPWRITECOPYINTOLOCATION._serialized_start = 54180
    _SPWRITECOPYINTOLOCATION._serialized_end = 54607
    _SPDATAFRAMECREATEORREPLACEVIEW._serialized_start = 54610
    _SPDATAFRAMECREATEORREPLACEVIEW._serialized_end = 54837
    _SPDATAFRAMECREATEORREPLACEDYNAMICTABLE._serialized_start = 54840
    _SPDATAFRAMECREATEORREPLACEDYNAMICTABLE._serialized_end = 55090
    _SPDATAFRAMECOPYINTOTABLE._serialized_start = 55093
    _SPDATAFRAMECOPYINTOTABLE._serialized_end = 55532
    _SPDATAFRAMECACHERESULT._serialized_start = 55535
    _SPDATAFRAMECACHERESULT._serialized_end = 55676
    _SPDATAFRAMESTATAPPROXQUANTILE._serialized_start = 55679
    _SPDATAFRAMESTATAPPROXQUANTILE._serialized_end = 55862
    _SPDATAFRAMESTATCORR._serialized_start = 55865
    _SPDATAFRAMESTATCORR._serialized_end = 56043
    _SPDATAFRAMESTATCOV._serialized_start = 56046
    _SPDATAFRAMESTATCOV._serialized_end = 56223
    _SPDATAFRAMESTATCROSSTAB._serialized_start = 56226
    _SPDATAFRAMESTATCROSSTAB._serialized_end = 56408
    _SPDATAFRAMESTATSAMPLEBY._serialized_start = 56411
    _SPDATAFRAMESTATSAMPLEBY._serialized_end = 56567
    _SPRELATIONALGROUPEDDATAFRAMEEXPR._serialized_start = 56570
    _SPRELATIONALGROUPEDDATAFRAMEEXPR._serialized_end = 57295
    _SPRELATIONALGROUPEDDATAFRAMEREF._serialized_start = 57297
    _SPRELATIONALGROUPEDDATAFRAMEREF._serialized_end = 57385
    _SPRELATIONALGROUPEDDATAFRAMEAGG._serialized_start = 57388
    _SPRELATIONALGROUPEDDATAFRAMEAGG._serialized_end = 57544
    _SPRELATIONALGROUPEDDATAFRAMEBUILTIN._serialized_start = 57547
    _SPRELATIONALGROUPEDDATAFRAMEBUILTIN._serialized_end = 57724
    _SPRELATIONALGROUPEDDATAFRAMEAPPLYINPANDAS._serialized_start = 57727
    _SPRELATIONALGROUPEDDATAFRAMEAPPLYINPANDAS._serialized_end = 57973
    _SPRELATIONALGROUPEDDATAFRAMEPIVOT._serialized_start = 57976
    _SPRELATIONALGROUPEDDATAFRAMEPIVOT._serialized_end = 58202
    _SPROW._serialized_start = 58204
    _SPROW._serialized_end = 58298
    _EXPRARGLIST._serialized_start = 58300
    _EXPRARGLIST._serialized_end = 58356
    _SPDATAFRAMETYPE._serialized_start = 58358
    _SPDATAFRAMETYPE._serialized_end = 58416
    _SPGROUPEDDATAFRAMETYPE._serialized_start = 58418
    _SPGROUPEDDATAFRAMETYPE._serialized_end = 58488
    _SPWINDOWTYPE._serialized_start = 58490
    _SPWINDOWTYPE._serialized_end = 58504
    _SPCOLEXPRTYPE._serialized_start = 58506
    _SPCOLEXPRTYPE._serialized_end = 58545
    _HASSRCPOSITION._serialized_start = 58548
    _HASSRCPOSITION._serialized_end = 69918
    _STMT._serialized_start = 69920
    _STMT._serialized_end = 69995
    _ASSIGN._serialized_start = 69997
    _ASSIGN._serialized_end = 70117
    _EVAL._serialized_start = 70119
    _EVAL._serialized_end = 70166
    _TYPE._serialized_start = 70169
    _TYPE._serialized_end = 71129
    _UNKNOWNTYPE._serialized_start = 71131
    _UNKNOWNTYPE._serialized_end = 71144
    _ANYTYPE._serialized_start = 71146
    _ANYTYPE._serialized_end = 71155
    _SCALARTYPE._serialized_start = 71158
    _SCALARTYPE._serialized_end = 71459
    _NUMERICTYPE._serialized_start = 71462
    _NUMERICTYPE._serialized_end = 71644
    _NUMBERTYPE._serialized_start = 71646
    _NUMBERTYPE._serialized_end = 71658
    _NOTHINGTYPE._serialized_start = 71660
    _NOTHINGTYPE._serialized_end = 71673
    _UNITTYPE._serialized_start = 71675
    _UNITTYPE._serialized_end = 71685
    _BOOLTYPE._serialized_start = 71687
    _BOOLTYPE._serialized_end = 71697
    _INT32TYPE._serialized_start = 71699
    _INT32TYPE._serialized_end = 71710
    _INT64TYPE._serialized_start = 71712
    _INT64TYPE._serialized_end = 71723
    _FLOAT64TYPE._serialized_start = 71725
    _FLOAT64TYPE._serialized_end = 71738
    _STRINGTYPE._serialized_start = 71740
    _STRINGTYPE._serialized_end = 71752
    _PDREPRTYPE._serialized_start = 71754
    _PDREPRTYPE._serialized_end = 71766
    _FNTYPE._serialized_start = 71768
    _FNTYPE._serialized_end = 71827
    _OPTIONTYPE._serialized_start = 71829
    _OPTIONTYPE._serialized_end = 71865
    _TUPLETYPE._serialized_start = 71867
    _TUPLETYPE._serialized_end = 71902
    _LISTTYPE._serialized_start = 71904
    _LISTTYPE._serialized_end = 71938
    _MAPTYPE._serialized_start = 71940
    _MAPTYPE._serialized_end = 71993
    _TYVAR._serialized_start = 71995
    _TYVAR._serialized_end = 72014
# @@protoc_insertion_point(module_scope)
