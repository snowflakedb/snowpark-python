# This is copied from original daily_precommit.yml with one change: only run Snowpark pandas tests

name: Daily Snowpark pandas API test
on:
  schedule:
    # 9 AM UTC
    - cron: "0 9 * * *"
  workflow_dispatch:
      inputs:
        logLevel:
          default: warning
          description: "Log level"
          required: true
        tags:
          description: "Test scenario tags"

jobs:
  lint:
    name: Check linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Display Python version
        run: python -c "import sys; import os; print(\"\n\".join(os.environ[\"PATH\"].split(os.pathsep))); print(sys.version); print(sys.executable);"
      - name: Upgrade setuptools and pip
        run: python -m pip install -U setuptools pip
      - name: Install protoc
        shell: bash
        run: .github/scripts/install_protoc.sh
      - name: Install tox
        run: python -m pip install tox
      - name: Run fix_lint
        run: python -m tox -e fix_lint

  build:
    needs: lint
    name: Build Wheel File
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install protoc
        shell: bash
        run: .github/scripts/install_protoc.sh
      - name: Upgrade setuptools and pip
        run: python -m pip install -U setuptools pip wheel
      - name: Generate wheel
        run: python -m pip wheel -v -w dist --no-deps .
      - name: Show wheels generated
        run: ls -lh dist
      - uses: actions/upload-artifact@v4
        with:
          include-hidden-files: true
          name: wheel
          path: dist/


  test-disable-sql-simplifier: # Will be removed after sql simplifier is stable and no option to opt out.
    name: Test Disable SQL Simplifier modin-${{ matrix.os.download_name }}-${{ matrix.python-version }}-${{ matrix.cloud-provider }}
    needs: build
    runs-on: ${{ matrix.os.image_name }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - image_name: windows-latest-64-cores
            download_name: windows
        python-version: ["3.11"]
        cloud-provider: [azure]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Decrypt parameters.py
        shell: bash
        run: .github/scripts/decrypt_parameters.sh
        env:
          PARAMETER_PASSWORD: ${{ secrets.PARAMETER_PASSWORD }}
          CLOUD_PROVIDER: ${{ matrix.cloud-provider }}
      - name: Install protoc
        shell: bash
        run: .github/scripts/install_protoc.sh
      - name: Download wheel(s)
        uses: actions/download-artifact@v4
        with:
          name: wheel
          path: dist
      - name: Show wheels downloaded
        run: ls -lh dist
        shell: bash
      - name: Upgrade setuptools, pip and wheel
        run: python -m pip install -U setuptools pip wheel
      - name: Install tox
        run: python -m pip install tox
      - if: ${{ contains('macos', matrix.os.download_name) }}
        name: Run Snowpark pandas API doctests
        run: python -m tox -e "py${PYTHON_VERSION}-doctest-snowparkpandasdoctest-modin-ci"
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}
          cloud_provider: ${{ matrix.cloud-provider }}
          PYTEST_ADDOPTS: --color=yes --tb=short --disable_sql_simplifier
          TOX_PARALLEL_NO_SPINNER: 1
        shell: bash
      - name: Run Snowpark pandas API tests (excluding doctests)
        run: python -m tox -e "py${PYTHON_VERSION/\./}-snowparkpandasnotdoctest-modin-ci"
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}
          cloud_provider: ${{ matrix.cloud-provider }}
          PYTEST_ADDOPTS: --color=yes --tb=short --disable_sql_simplifier
          TOX_PARALLEL_NO_SPINNER: 1
        shell: bash
      - name: Combine coverages
        run: python -m tox -e coverage --skip-missing-interpreters false
        shell: bash
        env:
          SNOWFLAKE_IS_PYTHON_RUNTIME_TEST: 1
      - uses: actions/upload-artifact@v4
        with:
          include-hidden-files: true
          name: coverage_${{ matrix.os.download_name }}-${{ matrix.python-version }}-${{ matrix.cloud-provider }}-disable-sql-simplifier
          path: |
            .tox/.coverage
            .tox/coverage.xml

  doc:
    needs: lint
    name: Build Doc
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Upgrade setuptools and pip
        run: python -m pip install -U setuptools pip
      - name: Install tox
        run: python -m pip install tox
      - name: Install protoc
        shell: bash
        run: .github/scripts/install_protoc.sh
      - name: Build document
        run: python -m tox -e docs
      - name: Upload html files
        uses: actions/upload-artifact@v4
        with:
          include-hidden-files: true
          name: docs
          path: .tox/docs_out
