## TEST CASE

df = session.create_dataframe(
    [
        (1, 10000, "JAN"),
        (1, 400, "JAN"),
        (2, 4500, "JAN"),
        (2, 35000, "JAN"),
        (1, 5000, "FEB"),
        (1, 3000, "FEB"),
        (2, 200, "FEB"),
    ],
    schema=["k", "t", "mo"],
)

df1 = df.pivot("mo", ["JAN", "FEB"]).sum("t").sort("k")

df2 = df.pivot("mo", values=["JAN", "FEB"], default_on_null="Nothing").sum("t").sort("k")

## EXPECTED UNPARSER OUTPUT

df = session.create_dataframe([(1, 10000, "JAN"), (1, 400, "JAN"), (2, 4500, "JAN"), (2, 35000, "JAN"), (1, 5000, "FEB"), (1, 3000, "FEB"), (2, 200, "FEB")], schema=["k", "t", "mo"])

df1 = df.pivot("mo", values=["JAN", "FEB"], default_on_null=None)

df1 = df1.sum("t")

df1 = df1.sort("k")

df2 = df.pivot("mo", values=["JAN", "FEB"], default_on_null="Nothing")

df2 = df2.sum("t")

df2 = df2.sort("k")

## EXPECTED ENCODED AST

CrcICrQICqUI+gWhCAr0BwrxBwqNAZoNiQEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg/EiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg/EAESIsICHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKD8QkE4SJPoMIQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKD8SA0pBTgqNAZoNiQEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg/EiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg/EAESIsICHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKD8QkAMSJPoMIQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKD8SA0pBTgqNAZoNiQEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg/EiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg/EAISIsICHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKD8QlCMSJPoMIQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKD8SA0pBTgqOAZoNigEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg/EiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg/EAISI8ICIAoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKD8QuJECEiT6DCEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg/EgNKQU4KjQGaDYkBChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoPxIhwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoPxABEiLCAh8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg/EIgnEiT6DCEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg/EgNGRUIKjQGaDYkBChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoPxIhwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoPxABEiLCAh8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg/ELgXEiT6DCEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg/EgNGRUIKjQGaDYkBChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoPxIhwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoPxACEiLCAh8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg/EMgBEiT6DCEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg/EgNGRUISDAoKCgFrCgF0CgJtbxoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKD8SBAoCZGYYASICCAEK8wEK8AEK4AHCCNwBCh+SAxwKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShMEgeCAgQKAggBGiP6DCAKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShMEgJtbyIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEwqbxJtCmvSAmgKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShMEiT6DCEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShMEgNKQU4SJPoMIQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEwSA0ZFQhIFCgNkZjEYAiICCAIKZQpjClTKC1EKA3N1bRImCiL6DB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShMEgF0EAEaBlIECgIIAiIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEwSBQoDZGYxGAMiAggDCl8KXQpOmglLEiL6DB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShMEgFrGAEiB4ICBAoCCAMqGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShMEgUKA2RmMRgEIgIIBAr8AQr5AQrpAcII5QEKKPoMJQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKE4SB05vdGhpbmcSB4ICBAoCCAEaI/oMIAoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKE4SAm1vIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoTipvEm0Ka9ICaAoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKE4SJPoMIQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKE4SA0pBThIk+gwhChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoThIDRkVCEgUKA2RmMhgFIgIIBQplCmMKVMoLUQoDc3VtEiYKIvoMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKE4SAXQQARoGUgQKAggFIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoThIFCgNkZjIYBiICCAYKXwpdCk6aCUsSIvoMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKE4SAWsYASIHggIECgIIBioaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKE4SBQoDZGYyGAciAggHEAEaERIPCg0KBWZpbmFsEAMYCSAUIgQQARgX
