## TEST CASE

df = session.create_dataframe(
    [
        (1, 10000, "JAN"),
        (1, 400, "JAN"),
        (2, 4500, "JAN"),
        (2, 35000, "JAN"),
        (1, 5000, "FEB"),
        (1, 3000, "FEB"),
        (2, 200, "FEB"),
    ],
    schema=["k", "t", "mo"],
)

df1 = df.pivot("mo", ["JAN", "FEB"]).sum("t").sort("k")

df2 = df.pivot("mo", values=["JAN", "FEB"], default_on_null="Nothing").sum("t").sort("k")

## EXPECTED UNPARSER OUTPUT

df = session.create_dataframe([(1, 10000, "JAN"), (1, 400, "JAN"), (2, 4500, "JAN"), (2, 35000, "JAN"), (1, 5000, "FEB"), (1, 3000, "FEB"), (2, 200, "FEB")], schema=["k", "t", "mo"])

df1 = df.pivot("mo", values=["JAN", "FEB"], default_on_null=None)

df1 = df1.sum("t")

df1 = df1.sort("k")

df2 = df.pivot("mo", values=["JAN", "FEB"], default_on_null="Nothing")

df2 = df2.sum("t")

df2 = df2.sort("k")

## EXPECTED ENCODED AST

CrcICrQICqUIygWhCAr0BwrxBwqNAYoMiQEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEiGSAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEAESIpICHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoQkE4SJOILIQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoSA0pBTgqNAYoMiQEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEiGSAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEAESIpICHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoQkAMSJOILIQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoSA0pBTgqNAYoMiQEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEiGSAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEAISIpICHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoQlCMSJOILIQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoSA0pBTgqOAYoMigEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEiGSAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEAISI5ICIAoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoQuJECEiTiCyEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEgNKQU4KjQGKDIkBChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWhIhkgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWhABEiKSAh8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEIgnEiTiCyEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEgNGRUIKjQGKDIkBChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWhIhkgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWhABEiKSAh8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaELgXEiTiCyEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEgNGRUIKjQGKDIkBChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWhIhkgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWhACEiKSAh8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEMgBEiTiCyEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEgNGRUISDAoKCgFrCgF0CgJtbxoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoSBAoCZGYYASICCAEK8wEK8AEK4AGaCNwBCh/iAhwKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShnEgeKAgQKAggBGiPiCyAKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShnEgJtbyIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGcqbxJtCmuiAmgKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShnEiTiCyEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShnEgNKQU4SJOILIQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGcSA0ZFQhIFCgNkZjEYAiICCAIKZQpjClTqClEKA3N1bRImCiLiCx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShnEgF0EAEaBlIECgIIAiIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGcSBQoDZGYxGAMiAggDCl8KXQpO8ghLEiLiCx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShnEgFrGAEiB4oCBAoCCAMqGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShnEgUKA2RmMRgEIgIIBAr8AQr5AQrpAZoI5QEKKOILJQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGkSB05vdGhpbmcSB4oCBAoCCAEaI+ILIAoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGkSAm1vIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaSpvEm0Ka6ICaAoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGkSJOILIQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGkSA0pBThIk4gshChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaRIDRkVCEgUKA2RmMhgFIgIIBQplCmMKVOoKUQoDc3VtEiYKIuILHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGkSAXQQARoGUgQKAggFIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaRIFCgNkZjIYBiICCAYKXwpdCk7yCEsSIuILHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGkSAWsYASIHigIECgIIBioaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGkSBQoDZGYyGAciAggHEAEaERIPCg0KBWZpbmFsEAMYCSATIgQQARgV
