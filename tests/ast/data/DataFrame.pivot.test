## TEST CASE

df = session.create_dataframe(
    [
        (1, 10000, "JAN"),
        (1, 400, "JAN"),
        (2, 4500, "JAN"),
        (2, 35000, "JAN"),
        (1, 5000, "FEB"),
        (1, 3000, "FEB"),
        (2, 200, "FEB"),
    ],
    schema=["k", "t", "mo"],
)

df1 = df.pivot("mo", ["JAN", "FEB"]).sum("t").sort("k")

df2 = df.pivot("mo", values=["JAN", "FEB"], default_on_null="Nothing").sum("t").sort("k")

## EXPECTED UNPARSER OUTPUT

df = session.create_dataframe([(1, 10000, "JAN"), (1, 400, "JAN"), (2, 4500, "JAN"), (2, 35000, "JAN"), (1, 5000, "FEB"), (1, 3000, "FEB"), (2, 200, "FEB")], schema=["k", "t", "mo"])

df1 = df.pivot("mo", values=["JAN", "FEB"], default_on_null=None)

df1 = df1.sum("t")

df1 = df1.sort("k")

df2 = df.pivot("mo", values=["JAN", "FEB"], default_on_null="Nothing")

df2 = df2.sum("t")

df2 = df2.sort("k")

## EXPECTED ENCODED AST

CrcICrQICqUI0gWhCAr0BwrxBwqNAbIMiQEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEiGSAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEAESIpICHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoQkE4SJIoMIQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoSA0pBTgqNAbIMiQEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEiGSAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEAESIpICHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoQkAMSJIoMIQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoSA0pBTgqNAbIMiQEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEiGSAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEAISIpICHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoQlCMSJIoMIQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoSA0pBTgqOAbIMigEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEiGSAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEAISI5ICIAoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoQuJECEiSKDCEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEgNKQU4KjQGyDIkBChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWhIhkgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWhABEiKSAh8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEIgnEiSKDCEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEgNGRUIKjQGyDIkBChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWhIhkgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWhABEiKSAh8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaELgXEiSKDCEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEgNGRUIKjQGyDIkBChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWhIhkgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWhACEiKSAh8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEMgBEiSKDCEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEgNGRUISDAoKCgFrCgF0CgJtbxoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoSBAoCZGYYASICCAEK8wEK8AEK4AGiCNwBCh/iAhwKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShnEgeKAgQKAggBGiOKDCAKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShnEgJtbyIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGcqbxJtCmuiAmgKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShnEiSKDCEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShnEgNKQU4SJIoMIQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGcSA0ZFQhIFCgNkZjEYAiICCAIKZQpjClSSC1EKA3N1bRImCiKKDB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShnEgF0EAEaBlIECgIIAiIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGcSBQoDZGYxGAMiAggDCl8KXQpO+ghLEiKKDB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShnEgFrGAEiB4oCBAoCCAMqGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShnEgUKA2RmMRgEIgIIBAr8AQr5AQrpAaII5QEKKIoMJQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGkSB05vdGhpbmcSB4oCBAoCCAEaI4oMIAoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGkSAm1vIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaSpvEm0Ka6ICaAoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGkSJIoMIQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGkSA0pBThIkigwhChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaRIDRkVCEgUKA2RmMhgFIgIIBQplCmMKVJILUQoDc3VtEiYKIooMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGkSAXQQARoGUgQKAggFIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaRIFCgNkZjIYBiICCAYKXwpdCk76CEsSIooMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGkSAWsYASIHigIECgIIBioaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGkSBQoDZGYyGAciAggHEAEaERIPCg0KBWZpbmFsEAMYCSAUIgQQARgV
