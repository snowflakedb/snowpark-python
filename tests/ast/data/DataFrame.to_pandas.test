## TEST CASE

df = session.table(tables.table1)

df.to_pandas()

df.to_pandas(block=False)

df.to_pandas(statement_params={"SF_PARTNER": "FAKE_PARTNER"})

df.to_pandas(statement_params={"SF_PARTNER": "FAKE_PARTNER"}, block=False)

## EXPECTED UNPARSER OUTPUT

df = session.table("table1")

df.to_pandas()

df.to_pandas(block=False)

df.to_pandas(statement_params={"SF_PARTNER": "FAKE_PARTNER"})

df.to_pandas(statement_params={"SF_PARTNER": "FAKE_PARTNER"}, block=False)

## EXPECTED ENCODED AST

interned_value_table {
  string_values {
    key: -1
  }
  string_values {
    key: 2
    value: "SRC_POSITION_TEST_MODE"
  }
}
body {
  assign {
    expr {
      sp_table {
        name {
          name {
            sp_name_flat {
              name: "table1"
            }
          }
        }
        src {
          end_column: 41
          end_line: 25
          file: 2
          start_column: 13
          start_line: 25
        }
        variant {
          sp_session_table: true
        }
      }
    }
    symbol {
      value: "df"
    }
    uid: 1
    var_id {
      bitfield1: 1
    }
  }
}
body {
  assign {
    expr {
      sp_dataframe_to_pandas {
        block: true
        id {
          bitfield1: 1
        }
        src {
          end_column: 22
          end_line: 27
          file: 2
          start_column: 8
          start_line: 27
        }
      }
    }
    symbol {
    }
    uid: 2
    var_id {
      bitfield1: 2
    }
  }
}
body {
  eval {
    uid: 3
    var_id {
      bitfield1: 2
    }
  }
}
body {
  assign {
    expr {
      sp_dataframe_to_pandas {
        id {
          bitfield1: 1
        }
        src {
          end_column: 33
          end_line: 29
          file: 2
          start_column: 8
          start_line: 29
        }
      }
    }
    symbol {
    }
    uid: 4
    var_id {
      bitfield1: 4
    }
  }
}
body {
  eval {
    uid: 5
    var_id {
      bitfield1: 4
    }
  }
}
body {
  assign {
    expr {
      sp_dataframe_to_pandas {
        block: true
        id {
          bitfield1: 1
        }
        src {
          end_column: 69
          end_line: 31
          file: 2
          start_column: 8
          start_line: 31
        }
        statement_params {
          _1: "SF_PARTNER"
          _2: "FAKE_PARTNER"
        }
      }
    }
    symbol {
    }
    uid: 6
    var_id {
      bitfield1: 6
    }
  }
}
body {
  eval {
    uid: 7
    var_id {
      bitfield1: 6
    }
  }
}
body {
  assign {
    expr {
      sp_dataframe_to_pandas {
        id {
          bitfield1: 1
        }
        src {
          end_column: 82
          end_line: 33
          file: 2
          start_column: 8
          start_line: 33
        }
        statement_params {
          _1: "SF_PARTNER"
          _2: "FAKE_PARTNER"
        }
      }
    }
    symbol {
    }
    uid: 8
    var_id {
      bitfield1: 8
    }
  }
}
body {
  eval {
    uid: 9
    var_id {
      bitfield1: 8
    }
  }
}
client_ast_version: 1
client_language {
  python_language {
    version {
      label: "final"
      major: 3
      minor: 9
      patch: 1
    }
  }
}
client_version {
  major: 1
  minor: 26
}
