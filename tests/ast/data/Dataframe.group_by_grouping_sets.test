## TEST CASE

from snowflake.snowpark.relational_grouped_dataframe import GroupingSets

df1 = session.table("test_table")

df2 = df1.group_by_grouping_sets(GroupingSets(col("a")))

df3 = df1.group_by_grouping_sets(GroupingSets([col("a")]))

df4 = df1.group_by_grouping_sets(GroupingSets([col("a")], [col("b")]))

df5 = df1.group_by_grouping_sets(GroupingSets([col("a"), col("b")], [col("c")]))

g1 = GroupingSets([col("a")], [col("b")])

df6 = df1.group_by_grouping_sets(g1)

g2 = GroupingSets([col("a") , col("b")], [col("c"), col("d")])

df7 = df1.group_by_grouping_sets(g2)

g3 = GroupingSets([col("a"), col("b")])

df8 = df1.group_by_grouping_sets(g3)

g4 = GroupingSets(col("a"), col("b"))

df9 = df1.group_by_grouping_sets(g4)

## EXPECTED UNPARSER OUTPUT

df1 = session.table("test_table")

df2 = df1.group_by_grouping_sets(GroupingSets(col("a")))

df3 = df1.group_by_grouping_sets(GroupingSets([col("a")]))

df4 = df1.group_by_grouping_sets(GroupingSets([col("a")], [col("b")]))

df5 = df1.group_by_grouping_sets(GroupingSets([col("a"), col("b")], [col("c")]))

df6 = df1.group_by_grouping_sets(GroupingSets([col("a")], [col("b")]))

df7 = df1.group_by_grouping_sets(GroupingSets([col("a"), col("b")], [col("c"), col("d")]))

df8 = df1.group_by_grouping_sets(GroupingSets([col("a"), col("b")]))

df9 = df1.group_by_grouping_sets(GroupingSets(col("a"), col("b")))

## EXPECTED ENCODED AST

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Tl9URVNUX01PREUgDShmEn16ewotCisKBwoFCgNjb2wSIAgvEGYaFlNSQ19QT1NJVElPTl9URVNUX01PREUgJyhmGij6CyUKIAgvEGYaFlNSQ19QT1NJVElPTl9URVNUX01PREUgJyhmEgFiIiAILxBmGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFICcoZhABEiAIMRBmGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA0oZhogCCwQaBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAOKGggARIFCgNkZjYYBiICCAYKvAUKuQUKqQWqB6UFCgeKAgQKAggBEvUECtAECqQCogKgAgogCEYQahoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSANKGoSfXp7Ci0KKwoHCgUKA2NvbBIgCCMQahoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAbKGoaKPoLJQogCCMQahoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAbKGoSAWEiIAgjEGoaFlNSQ19QT1NJVElPTl9URVNUX01PREUgGyhqEn16ewotCisKBwoFCgNjb2wSIAguEGoaFlNSQ19QT1NJVElPTl9URVNUX01PREUgJihqGij6CyUKIAguEGoaFlNSQ19QT1NJVElPTl9URVNUX01PREUgJihqEgFiIiAILhBqGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFICYoagqkAqICoAIKIAhGEGoaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDShqEn16ewotCisKBwoFCgNjb2wSIAg6EGoaFlNSQ19QT1NJVElPTl9URVNUX01PREUgMihqGij6CyUKIAg6EGoaFlNSQ19QT1NJVElPTl9URVNUX01PREUgMihqEgFjIiAIOhBqGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIDIoahJ9ensKLQorCgcKBQoDY29sEiAIRBBqGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIDwoahoo+gslCiAIRBBqGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIDwoahIBZCIgCEQQahoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSA8KGoQARIgCEYQahoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSANKGoaIAgsEGwaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDihsIAESBQoDZGY3GAciAggHCuoCCucCCtcCqgfTAgoHigIECgIIARKjAgr+AQp9ensKLQorCgcKBQoDY29sEiAIIxBuGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIBsobhoo+gslCiAIIxBuGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIBsobhIBYSIgCCMQbhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAbKG4KfXp7Ci0KKwoHCgUKA2NvbBIgCC0QbhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAlKG4aKPoLJQogCC0QbhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAlKG4SAWIiIAgtEG4aFlNSQ19QT1NJVElPTl9URVNUX01PREUgJShuEiAILxBuGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA0obhogCCwQcBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAOKHAgARIFCgNkZjgYCCICCAgK7AIK6QIK2QKqB9UCCgeKAgQKAggBEqUCCoACCn16ewotCisKBwoFCgNjb2wSIAgiEHIaFlNSQ19QT1NJVElPTl9URVNUX01PREUgGihyGij6CyUKIAgiEHIaFlNSQ19QT1NJVElPTl9URVNUX01PREUgGihyEgFhIiAIIhByGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIBoocgp9ensKLQorCgcKBQoDY29sEiAILBByGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFICQochoo+gslCiAILBByGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFICQochIBYiIgCCwQchoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAkKHIQARIgCC0QchoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSANKHIaIAgsEHQaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDih0IAESBQoDZGY5GAkiAggJEAEaERIPCg0KBWZpbmFsEAMYCyAJIgQQARgV
