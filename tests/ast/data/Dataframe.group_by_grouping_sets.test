## TEST CASE

from snowflake.snowpark.relational_grouped_dataframe import GroupingSets

df1 = session.table("test_table")

df2 = df1.group_by_grouping_sets(GroupingSets(col("a")))

df3 = df1.group_by_grouping_sets(GroupingSets([col("a")]))

df4 = df1.group_by_grouping_sets(GroupingSets([col("a")], [col("b")]))

df5 = df1.group_by_grouping_sets(GroupingSets([col("a"), col("b")], [col("c")]))

g1 = GroupingSets([col("a")], [col("b")])

df6 = df1.group_by_grouping_sets(g1)

g2 = GroupingSets([col("a") , col("b")], [col("c"), col("d")])

df7 = df1.group_by_grouping_sets(g2)

g3 = GroupingSets([col("a"), col("b")])

df8 = df1.group_by_grouping_sets(g3)

g4 = GroupingSets(col("a"), col("b"))

df9 = df1.group_by_grouping_sets(g4)

## EXPECTED UNPARSER OUTPUT

df1 = session.table("test_table")

df2 = df1.group_by_grouping_sets(GroupingSets(col("a")))

df3 = df1.group_by_grouping_sets(GroupingSets([col("a")]))

df4 = df1.group_by_grouping_sets(GroupingSets([col("a")], [col("b")]))

df5 = df1.group_by_grouping_sets(GroupingSets([col("a"), col("b")], [col("c")]))

df6 = df1.group_by_grouping_sets(GroupingSets([col("a")], [col("b")]))

df7 = df1.group_by_grouping_sets(GroupingSets([col("a"), col("b")], [col("c"), col("d")]))

df8 = df1.group_by_grouping_sets(GroupingSets([col("a"), col("b")]))

df9 = df1.group_by_grouping_sets(GroupingSets(col("a"), col("b")))

## EXPECTED ENCODED AST

CkQKQgozogswEg4KDAoKdGVzdF90YWJsZRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFYiAggBEgUKA2RmMRgdIgIIHQrOAQrLAQq7AaIHtwEKB4oCBAoCCB0SjQEKbwpremkKJwolCgcKBQoDY29sEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWBoi6gsfChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWBIBYSIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFgQARIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFgaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShYIAESBQoDZGYyGB4iAggeCswBCskBCrkBoge1AQoHigIECgIIHRKLAQptCmt6aQonCiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaGiLqCx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEgFhIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWhIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaIAESBQoDZGYzGB8iAggfCoIDCv8CCu8CogfrAgoHigIECgIIHRLBAgqiAgqNAaICiQEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShcEmt6aQonCiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShcGiLqCx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShcEgFhIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXAqNAaICiQEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShcEmt6aQonCiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShcGiLqCx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShcEgFiIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXBABEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFwgARIFCgNkZjQYICICCCAK7wMK7AMK3AOiB9gDCgeKAgQKAggdEq4DCo8DCvoBogL2AQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF4Sa3ppCicKJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF4aIuoLHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF4SAWEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSheEmt6aQonCiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSheGiLqCx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSheEgFiIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXgqNAaICiQEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSheEmt6aQonCiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSheGiLqCx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSheEgFjIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXhABEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXhoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF4gARIFCgNkZjUYISICCCEKggMK/wIK7wKiB+sCCgeKAgQKAggdEsECCqICCo0BogKJAQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGASa3ppCicKJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGAaIuoLHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGASAWEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShgCo0BogKJAQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGASa3ppCicKJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGAaIuoLHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGASAWIiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShgEAESGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShgGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYiABEgUKA2RmNhgiIgIIIgrcBArZBArJBKIHxQQKB4oCBAoCCB0SmwQK/AMK+gGiAvYBChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoZBJremkKJwolCgcKBQoDY29sEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoZBoi6gsfChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoZBIBYSIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGQSa3ppCicKJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGQaIuoLHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGQSAWIiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShkCvoBogL2AQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGQSa3ppCicKJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGQaIuoLHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGQSAWMiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShkEmt6aQonCiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShkGiLqCx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShkEgFkIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoZBABEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoZBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGYgARIFCgNkZjcYIyICCCMKugIKtwIKpwKiB6MCCgeKAgQKAggdEvkBCtoBCmt6aQonCiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShoGiLqCx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShoEgFhIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaApremkKJwolCgcKBQoDY29sEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaBoi6gsfChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaBIBYiIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGgSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShoGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaiABEgUKA2RmOBgkIgIIJAq8Agq5AgqpAqIHpQIKB4oCBAoCCB0S+wEK3AEKa3ppCicKJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGwaIuoLHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGwSAWEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShsCmt6aQonCiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShsGiLqCx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShsEgFiIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUobBABEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUobBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKG4gARIFCgNkZjkYJSICCCUQARoREg8KDQoFZmluYWwQAxgJIBMiBBABGBU=
