## TEST CASE

from snowflake.snowpark.relational_grouped_dataframe import GroupingSets

df1 = session.table("test_table")

df2 = df1.group_by_grouping_sets(GroupingSets(col("a")))

df3 = df1.group_by_grouping_sets(GroupingSets([col("a")]))

df4 = df1.group_by_grouping_sets(GroupingSets([col("a")], [col("b")]))

df5 = df1.group_by_grouping_sets(GroupingSets([col("a"), col("b")], [col("c")]))

g1 = GroupingSets([col("a")], [col("b")])

df6 = df1.group_by_grouping_sets(g1)

g2 = GroupingSets([col("a") , col("b")], [col("c"), col("d")])

df7 = df1.group_by_grouping_sets(g2)

g3 = GroupingSets([col("a"), col("b")])

df8 = df1.group_by_grouping_sets(g3)

g4 = GroupingSets(col("a"), col("b"))

df9 = df1.group_by_grouping_sets(g4)

## EXPECTED UNPARSER OUTPUT

df1 = session.table("test_table")

df2 = df1.group_by_grouping_sets(GroupingSets(col("a")))

df3 = df1.group_by_grouping_sets(GroupingSets([col("a")]))

df4 = df1.group_by_grouping_sets(GroupingSets([col("a")], [col("b")]))

df5 = df1.group_by_grouping_sets(GroupingSets([col("a"), col("b")], [col("c")]))

df6 = df1.group_by_grouping_sets(GroupingSets([col("a")], [col("b")]))

df7 = df1.group_by_grouping_sets(GroupingSets([col("a"), col("b")], [col("c"), col("d")]))

df8 = df1.group_by_grouping_sets(GroupingSets([col("a"), col("b")]))

df9 = df1.group_by_grouping_sets(GroupingSets(col("a"), col("b")))

## EXPECTED ENCODED AST

CkQKQgozsgswEg4KDAoKdGVzdF90YWJsZRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFwiAggBEgUKA2RmMRgBIgIIAQrOAQrLAQq7AaoHtwEKB5ICBAoCCAESjQEKbwpremkKJwolCgcKBQoDY29sEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXhoi+gsfChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXhIBYSIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF4QARIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF4aGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSheIAESBQoDZGYyGAIiAggCCswBCskBCrkBqge1AQoHkgIECgIIARKLAQptCmt6aQonCiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShgGiL6Cx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShgEgFhIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGAaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShgIAESBQoDZGYzGAMiAggDCoIDCv8CCu8CqgfrAgoHkgIECgIIARLBAgqiAgqNAaICiQEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShiEmt6aQonCiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShiGiL6Cx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShiEgFhIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYgqNAaICiQEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShiEmt6aQonCiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShiGiL6Cx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShiEgFiIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYhABEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYhoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGIgARIFCgNkZjQYBCICCAQK7wMK7AMK3AOqB9gDCgeSAgQKAggBEq4DCo8DCvoBogL2AQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGQSa3ppCicKJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGQaIvoLHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGQSAWEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShkEmt6aQonCiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShkGiL6Cx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShkEgFiIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoZAqNAaICiQEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShkEmt6aQonCiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShkGiL6Cx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShkEgFjIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoZBABEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoZBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGQgARIFCgNkZjUYBSICCAUKggMK/wIK7wKqB+sCCgeSAgQKAggBEsECCqICCo0BogKJAQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGYSa3ppCicKJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGYaIvoLHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGYSAWEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShmCo0BogKJAQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGYSa3ppCicKJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGYaIvoLHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGYSAWIiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShmEAESGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShmGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaCABEgUKA2RmNhgGIgIIBgrcBArZBArJBKoHxQQKB5ICBAoCCAESmwQK/AMK+gGiAvYBChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoahJremkKJwolCgcKBQoDY29sEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoahoi+gsfChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoahIBYSIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGoSa3ppCicKJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGoaIvoLHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGoSAWIiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShqCvoBogL2AQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGoSa3ppCicKJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGoaIvoLHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGoSAWMiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShqEmt6aQonCiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShqGiL6Cx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShqEgFkIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoahABEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoahoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGwgARIFCgNkZjcYByICCAcKugIKtwIKpwKqB6MCCgeSAgQKAggBEvkBCtoBCmt6aQonCiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShuGiL6Cx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShuEgFhIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUobgpremkKJwolCgcKBQoDY29sEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUobhoi+gsfChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUobhIBYiIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKG4SGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShuGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUocCABEgUKA2RmOBgIIgIICAq8Agq5AgqpAqoHpQIKB5ICBAoCCAES+wEK3AEKa3ppCicKJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKHIaIvoLHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKHISAWEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShyCmt6aQonCiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShyGiL6Cx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShyEgFiIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUochABEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUochoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKHQgARIFCgNkZjkYCSICCAkQARoREg8KDQoFZmluYWwQAxgJIBMiBBABGBU=
