## TEST CASE

data = [
    ["2023-01-01", 101, 200],
    ["2023-01-02", 101, 100],
    ["2023-01-03", 101, 300],
    ["2023-01-04", 102, 250],
]

df = session.create_dataframe(data).to_df(
    "ORDERDATE", "PRODUCTKEY", "SALESAMOUNT"
)

df2 = df.with_column("HALF_AMOUNT", df["SALESAMOUNT"] / 2)

moving_agg_res = df.analytics.moving_agg(
    aggs={"SALESAMOUNT": ["SUM", "AVG"]},
    window_sizes=[2, 3],
    order_by=["ORDERDATE"],
    group_by=["PRODUCTKEY"],
)

moving_agg_res2 = df2.analytics.moving_agg(
    aggs={"SALESAMOUNT": ["SUM"], "HALF_AMOUNT": ["MAX"]},
    window_sizes=[2, 3],
    order_by=["ORDERDATE"],
    group_by=["PRODUCTKEY"],
)

cumulative_agg_res = df.analytics.cumulative_agg(
    aggs={"SALESAMOUNT": ["SUM", "MIN", "MAX"]},
    group_by=["PRODUCTKEY"],
    order_by=["ORDERDATE"],
    is_forward=True
)

compute_lag_res = df.analytics.compute_lag(
    cols=["SALESAMOUNT"],
    lags=[1, 2],
    order_by=["ORDERDATE"],
    group_by=["PRODUCTKEY"],
)

compute_lead_res = df.analytics.compute_lead(
    cols=["SALESAMOUNT"],
    leads=[1, 2],
    order_by=["ORDERDATE"],
    group_by=["PRODUCTKEY"],
)

df = df.with_column("ORDERDATE", to_timestamp(df["ORDERDATE"]))

def custom_formatter(input_col, agg, window):
    return f"{agg}_{input_col}_{window}"

time_series_agg_res = df.analytics.time_series_agg(
    time_col="ORDERDATE",
    aggs={"SALESAMOUNT": ["SUM", "MAX"]},
    windows=["1D", "-1D"],
    group_by=["PRODUCTKEY"],
    sliding_interval="12H",
    col_formatter=custom_formatter,
)

## EXPECTED UNPARSER OUTPUT

df = session.create_dataframe([["2023-01-01", 101, 200], ["2023-01-02", 101, 100], ["2023-01-03", 101, 300], ["2023-01-04", 102, 250]])

df = df.to_df("ORDERDATE", "PRODUCTKEY", "SALESAMOUNT")

df2 = df.with_column("HALF_AMOUNT", df["SALESAMOUNT"] / 2)

moving_agg_res = df.analytics.moving_agg(aggs={"SALESAMOUNT": ["SUM", "AVG"]}, window_sizes=[2, 3], order_by=["ORDERDATE"], group_by=["PRODUCTKEY"], formatted_col_names=["SALESAMOUNT_SUM_2", "SALESAMOUNT_AVG_2", "SALESAMOUNT_SUM_3", "SALESAMOUNT_AVG_3"])

moving_agg_res2 = df2.analytics.moving_agg(aggs={"SALESAMOUNT": ["SUM"], "HALF_AMOUNT": ["MAX"]}, window_sizes=[2, 3], order_by=["ORDERDATE"], group_by=["PRODUCTKEY"], formatted_col_names=["SALESAMOUNT_SUM_2", "SALESAMOUNT_SUM_3", "HALF_AMOUNT_MAX_2", "HALF_AMOUNT_MAX_3"])

cumulative_agg_res = df.analytics.cumulative_agg(aggs={"SALESAMOUNT": ["SUM", "MIN", "MAX"]}, order_by=["ORDERDATE"], group_by=["PRODUCTKEY"], is_forward=True, formatted_col_names=["SALESAMOUNT_SUM", "SALESAMOUNT_MIN", "SALESAMOUNT_MAX"])

compute_lag_res = df.analytics.compute_lag(cols=["SALESAMOUNT"], lags=[1, 2], order_by=["ORDERDATE"], group_by=["PRODUCTKEY"], formatted_col_names=["SALESAMOUNT_LAG_1", "SALESAMOUNT_LAG_2"])

compute_lead_res = df.analytics.compute_lead(cols=["SALESAMOUNT"], leads=[1, 2], order_by=["ORDERDATE"], group_by=["PRODUCTKEY"], formatted_col_names=["SALESAMOUNT_LEAD_1", "SALESAMOUNT_LEAD_2"])

df = df.with_column("ORDERDATE", to_timestamp(df["ORDERDATE"]))

time_series_agg_res = df.analytics.time_series_agg(time_col="ORDERDATE", aggs={"SALESAMOUNT": ["SUM", "MAX"]}, windows=["1D", "-1D"], group_by=["PRODUCTKEY"], sliding_interval="12H", formatted_col_names=["SUM_SALESAMOUNT_1D", "MAX_SALESAMOUNT_1D", "SUM_SALESAMOUNT_-1D", "MAX_SALESAMOUNT_-1D"])

## EXPECTED ENCODED AST

{
  "body": [
    {
      "assign": {
        "expr": {
          "sp_create_dataframe": {
            "data": {
              "sp_dataframe_data__list": {
                "vs": [
                  {
                    "list_val": {
                      "src": {
                        "file": "SRC_POSITION_TEST_MODE",
                        "start_line": "97"
                      },
                      "vs": [
                        {
                          "string_val": {
                            "src": {
                              "file": "SRC_POSITION_TEST_MODE",
                              "start_line": "97"
                            },
                            "v": "2023-01-01"
                          }
                        },
                        {
                          "int64_val": {
                            "src": {
                              "file": "SRC_POSITION_TEST_MODE",
                              "start_line": "97"
                            },
                            "v": "101"
                          }
                        },
                        {
                          "int64_val": {
                            "src": {
                              "file": "SRC_POSITION_TEST_MODE",
                              "start_line": "97"
                            },
                            "v": "200"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "list_val": {
                      "src": {
                        "file": "SRC_POSITION_TEST_MODE",
                        "start_line": "97"
                      },
                      "vs": [
                        {
                          "string_val": {
                            "src": {
                              "file": "SRC_POSITION_TEST_MODE",
                              "start_line": "97"
                            },
                            "v": "2023-01-02"
                          }
                        },
                        {
                          "int64_val": {
                            "src": {
                              "file": "SRC_POSITION_TEST_MODE",
                              "start_line": "97"
                            },
                            "v": "101"
                          }
                        },
                        {
                          "int64_val": {
                            "src": {
                              "file": "SRC_POSITION_TEST_MODE",
                              "start_line": "97"
                            },
                            "v": "100"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "list_val": {
                      "src": {
                        "file": "SRC_POSITION_TEST_MODE",
                        "start_line": "97"
                      },
                      "vs": [
                        {
                          "string_val": {
                            "src": {
                              "file": "SRC_POSITION_TEST_MODE",
                              "start_line": "97"
                            },
                            "v": "2023-01-03"
                          }
                        },
                        {
                          "int64_val": {
                            "src": {
                              "file": "SRC_POSITION_TEST_MODE",
                              "start_line": "97"
                            },
                            "v": "101"
                          }
                        },
                        {
                          "int64_val": {
                            "src": {
                              "file": "SRC_POSITION_TEST_MODE",
                              "start_line": "97"
                            },
                            "v": "300"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "list_val": {
                      "src": {
                        "file": "SRC_POSITION_TEST_MODE",
                        "start_line": "97"
                      },
                      "vs": [
                        {
                          "string_val": {
                            "src": {
                              "file": "SRC_POSITION_TEST_MODE",
                              "start_line": "97"
                            },
                            "v": "2023-01-04"
                          }
                        },
                        {
                          "int64_val": {
                            "src": {
                              "file": "SRC_POSITION_TEST_MODE",
                              "start_line": "97"
                            },
                            "v": "102"
                          }
                        },
                        {
                          "int64_val": {
                            "src": {
                              "file": "SRC_POSITION_TEST_MODE",
                              "start_line": "97"
                            },
                            "v": "250"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            "src": {
              "file": "SRC_POSITION_TEST_MODE",
              "start_line": "97"
            }
          }
        },
        "symbol": "df",
        "uid": "1",
        "var_id": {
          "bitfield1": "1"
        }
      }
    },
    {
      "assign": {
        "expr": {
          "sp_dataframe_to_df": {
            "col_names": [
              "ORDERDATE",
              "PRODUCTKEY",
              "SALESAMOUNT"
            ],
            "df": {
              "sp_dataframe_ref": {
                "id": {
                  "bitfield1": "1"
                }
              }
            },
            "src": {
              "file": "SRC_POSITION_TEST_MODE",
              "start_line": "97"
            },
            "variadic": true
          }
        },
        "symbol": "df",
        "uid": "2",
        "var_id": {
          "bitfield1": "2"
        }
      }
    },
    {
      "assign": {
        "expr": {
          "sp_dataframe_with_column": {
            "col": {
              "div": {
                "lhs": {
                  "sp_dataframe_col": {
                    "col_name": "SALESAMOUNT",
                    "df": {
                      "sp_dataframe_ref": {
                        "id": {
                          "bitfield1": "2"
                        }
                      }
                    },
                    "src": {
                      "file": "SRC_POSITION_TEST_MODE",
                      "start_line": "101"
                    }
                  }
                },
                "rhs": {
                  "int64_val": {
                    "src": {
                      "file": "SRC_POSITION_TEST_MODE",
                      "start_line": "101"
                    },
                    "v": "2"
                  }
                },
                "src": {
                  "file": "SRC_POSITION_TEST_MODE",
                  "start_line": "101"
                }
              }
            },
            "col_name": "HALF_AMOUNT",
            "df": {
              "sp_dataframe_ref": {
                "id": {
                  "bitfield1": "2"
                }
              }
            },
            "src": {
              "file": "SRC_POSITION_TEST_MODE",
              "start_line": "101"
            }
          }
        },
        "symbol": "df2",
        "uid": "3",
        "var_id": {
          "bitfield1": "3"
        }
      }
    },
    {
      "assign": {
        "expr": {
          "sp_dataframe_analytics_moving_agg": {
            "aggs": [
              {
                "_1": "SALESAMOUNT",
                "_2": [
                  "SUM",
                  "AVG"
                ]
              }
            ],
            "df": {
              "sp_dataframe_ref": {
                "id": {
                  "bitfield1": "2"
                }
              }
            },
            "formatted_col_names": [
              "SALESAMOUNT_SUM_2",
              "SALESAMOUNT_AVG_2",
              "SALESAMOUNT_SUM_3",
              "SALESAMOUNT_AVG_3"
            ],
            "group_by": [
              "PRODUCTKEY"
            ],
            "order_by": [
              "ORDERDATE"
            ],
            "src": {
              "file": "SRC_POSITION_TEST_MODE",
              "start_line": "103"
            },
            "window_sizes": [
              "2",
              "3"
            ]
          }
        },
        "symbol": "moving_agg_res",
        "uid": "4",
        "var_id": {
          "bitfield1": "4"
        }
      }
    },
    {
      "assign": {
        "expr": {
          "sp_dataframe_analytics_moving_agg": {
            "aggs": [
              {
                "_1": "SALESAMOUNT",
                "_2": [
                  "SUM"
                ]
              },
              {
                "_1": "HALF_AMOUNT",
                "_2": [
                  "MAX"
                ]
              }
            ],
            "df": {
              "sp_dataframe_ref": {
                "id": {
                  "bitfield1": "3"
                }
              }
            },
            "formatted_col_names": [
              "SALESAMOUNT_SUM_2",
              "SALESAMOUNT_SUM_3",
              "HALF_AMOUNT_MAX_2",
              "HALF_AMOUNT_MAX_3"
            ],
            "group_by": [
              "PRODUCTKEY"
            ],
            "order_by": [
              "ORDERDATE"
            ],
            "src": {
              "file": "SRC_POSITION_TEST_MODE",
              "start_line": "110"
            },
            "window_sizes": [
              "2",
              "3"
            ]
          }
        },
        "symbol": "moving_agg_res2",
        "uid": "5",
        "var_id": {
          "bitfield1": "5"
        }
      }
    },
    {
      "assign": {
        "expr": {
          "sp_dataframe_analytics_cumulative_agg": {
            "aggs": [
              {
                "_1": "SALESAMOUNT",
                "_2": [
                  "SUM",
                  "MIN",
                  "MAX"
                ]
              }
            ],
            "df": {
              "sp_dataframe_ref": {
                "id": {
                  "bitfield1": "2"
                }
              }
            },
            "formatted_col_names": [
              "SALESAMOUNT_SUM",
              "SALESAMOUNT_MIN",
              "SALESAMOUNT_MAX"
            ],
            "group_by": [
              "PRODUCTKEY"
            ],
            "is_forward": true,
            "order_by": [
              "ORDERDATE"
            ],
            "src": {
              "file": "SRC_POSITION_TEST_MODE",
              "start_line": "117"
            }
          }
        },
        "symbol": "cumulative_agg_res",
        "uid": "6",
        "var_id": {
          "bitfield1": "6"
        }
      }
    },
    {
      "assign": {
        "expr": {
          "sp_dataframe_analytics_compute_lag": {
            "cols": [
              {
                "string_val": {
                  "src": {
                    "file": "SRC_POSITION_TEST_MODE",
                    "start_line": "124"
                  },
                  "v": "SALESAMOUNT"
                }
              }
            ],
            "df": {
              "sp_dataframe_ref": {
                "id": {
                  "bitfield1": "2"
                }
              }
            },
            "formatted_col_names": [
              "SALESAMOUNT_LAG_1",
              "SALESAMOUNT_LAG_2"
            ],
            "group_by": [
              "PRODUCTKEY"
            ],
            "lags": [
              "1",
              "2"
            ],
            "order_by": [
              "ORDERDATE"
            ],
            "src": {
              "file": "SRC_POSITION_TEST_MODE",
              "start_line": "124"
            }
          }
        },
        "symbol": "compute_lag_res",
        "uid": "7",
        "var_id": {
          "bitfield1": "7"
        }
      }
    },
    {
      "assign": {
        "expr": {
          "sp_dataframe_analytics_compute_lead": {
            "cols": [
              {
                "string_val": {
                  "src": {
                    "file": "SRC_POSITION_TEST_MODE",
                    "start_line": "131"
                  },
                  "v": "SALESAMOUNT"
                }
              }
            ],
            "df": {
              "sp_dataframe_ref": {
                "id": {
                  "bitfield1": "2"
                }
              }
            },
            "formatted_col_names": [
              "SALESAMOUNT_LEAD_1",
              "SALESAMOUNT_LEAD_2"
            ],
            "group_by": [
              "PRODUCTKEY"
            ],
            "leads": [
              "1",
              "2"
            ],
            "order_by": [
              "ORDERDATE"
            ],
            "src": {
              "file": "SRC_POSITION_TEST_MODE",
              "start_line": "131"
            }
          }
        },
        "symbol": "compute_lead_res",
        "uid": "8",
        "var_id": {
          "bitfield1": "8"
        }
      }
    },
    {
      "assign": {
        "expr": {
          "sp_dataframe_with_column": {
            "col": {
              "apply_expr": {
                "fn": {
                  "builtin_fn": {
                    "name": {
                      "fn_name_flat": {
                        "name": "to_timestamp"
                      }
                    }
                  }
                },
                "pos_args": [
                  {
                    "sp_dataframe_col": {
                      "col_name": "ORDERDATE",
                      "df": {
                        "sp_dataframe_ref": {
                          "id": {
                            "bitfield1": "2"
                          }
                        }
                      },
                      "src": {
                        "file": "SRC_POSITION_TEST_MODE",
                        "start_line": "138"
                      }
                    }
                  }
                ],
                "src": {
                  "file": "SRC_POSITION_TEST_MODE",
                  "start_line": "138"
                }
              }
            },
            "col_name": "ORDERDATE",
            "df": {
              "sp_dataframe_ref": {
                "id": {
                  "bitfield1": "2"
                }
              }
            },
            "src": {
              "file": "SRC_POSITION_TEST_MODE",
              "start_line": "138"
            }
          }
        },
        "symbol": "df",
        "uid": "9",
        "var_id": {
          "bitfield1": "9"
        }
      }
    },
    {
      "assign": {
        "expr": {
          "sp_dataframe_analytics_time_series_agg": {
            "aggs": [
              {
                "_1": "SALESAMOUNT",
                "_2": [
                  "SUM",
                  "MAX"
                ]
              }
            ],
            "df": {
              "sp_dataframe_ref": {
                "id": {
                  "bitfield1": "9"
                }
              }
            },
            "formatted_col_names": [
              "SUM_SALESAMOUNT_1D",
              "MAX_SALESAMOUNT_1D",
              "SUM_SALESAMOUNT_-1D",
              "MAX_SALESAMOUNT_-1D"
            ],
            "group_by": [
              "PRODUCTKEY"
            ],
            "sliding_interval": "12H",
            "src": {
              "file": "SRC_POSITION_TEST_MODE",
              "start_line": "143"
            },
            "time_col": "ORDERDATE",
            "windows": [
              "1D",
              "-1D"
            ]
          }
        },
        "symbol": "time_series_agg_res",
        "uid": "10",
        "var_id": {
          "bitfield1": "10"
        }
      }
    }
  ],
  "client_ast_version": "1",
  "client_language": {
    "python_language": {
      "version": {
        "label": "final",
        "major": "3",
        "minor": "9",
        "patch": "20"
      }
    }
  },
  "client_version": {
    "major": "1",
    "minor": "23"
  }
}
