## TEST CASE

df1 = session.table(tables.df1_table)

df2 = session.table(tables.df2_table)

df3 = df1.union(df2)

df4 = df1.union_all(df2)

df1 = session.table(tables.df3_table)

df2 = session.table(tables.df4_table)

df5 = df1.union_by_name(df2)

df6 = df1.union_all_by_name(df2)

df7 = df1.union_by_name(df2, allow_missing_columns=True)

df8 = df1.union_all_by_name(df2, allow_missing_columns=True)

## EXPECTED UNPARSER OUTPUT

df1 = session.table("df1")

df2 = session.table("df2")

df3 = df1.union(df2)

df4 = df1.union_all(df2)

df1 = session.table("df3")

df2 = session.table("df4")

df5 = df1.union_by_name(df2)

df6 = df1.union_all_by_name(df2)

df7 = df1.union_by_name(df2, allow_missing_columns=True)

df8 = df1.union_all_by_name(df2, allow_missing_columns=True)

## EXPECTED ENCODED AST

interned_value_table {
  string_values {
    key: -1
  }
  string_values {
    key: 2
    value: "SRC_POSITION_TEST_MODE"
  }
}
body {
  bind {
    expr {
      table {
        name {
          name {
            name_flat {
              name: "df1"
            }
          }
        }
        src {
          end_column: 45
          end_line: 25
          file: 2
          start_column: 14
          start_line: 25
        }
        variant {
          session_table: true
        }
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
      value: "df1"
    }
    uid: 1
  }
}
body {
  bind {
    expr {
      table {
        name {
          name {
            name_flat {
              name: "df2"
            }
          }
        }
        src {
          end_column: 45
          end_line: 27
          file: 2
          start_column: 14
          start_line: 27
        }
        variant {
          session_table: true
        }
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
      value: "df2"
    }
    uid: 2
  }
}
body {
  bind {
    expr {
      dataframe_union {
        df {
          dataframe_ref {
            id: 1
          }
        }
        other {
          dataframe_ref {
            id: 2
          }
        }
        src {
          end_column: 28
          end_line: 29
          file: 2
          start_column: 14
          start_line: 29
        }
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
      value: "df3"
    }
    uid: 3
  }
}
body {
  bind {
    expr {
      dataframe_union {
        all: true
        df {
          dataframe_ref {
            id: 1
          }
        }
        other {
          dataframe_ref {
            id: 2
          }
        }
        src {
          end_column: 32
          end_line: 31
          file: 2
          start_column: 14
          start_line: 31
        }
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
      value: "df4"
    }
    uid: 4
  }
}
body {
  bind {
    expr {
      table {
        name {
          name {
            name_flat {
              name: "df3"
            }
          }
        }
        src {
          end_column: 45
          end_line: 33
          file: 2
          start_column: 14
          start_line: 33
        }
        variant {
          session_table: true
        }
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
      value: "df1"
    }
    uid: 5
  }
}
body {
  bind {
    expr {
      table {
        name {
          name {
            name_flat {
              name: "df4"
            }
          }
        }
        src {
          end_column: 45
          end_line: 35
          file: 2
          start_column: 14
          start_line: 35
        }
        variant {
          session_table: true
        }
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
      value: "df2"
    }
    uid: 6
  }
}
body {
  bind {
    expr {
      dataframe_union {
        by_name: true
        df {
          dataframe_ref {
            id: 5
          }
        }
        other {
          dataframe_ref {
            id: 6
          }
        }
        src {
          end_column: 36
          end_line: 37
          file: 2
          start_column: 14
          start_line: 37
        }
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
      value: "df5"
    }
    uid: 7
  }
}
body {
  bind {
    expr {
      dataframe_union {
        all: true
        by_name: true
        df {
          dataframe_ref {
            id: 5
          }
        }
        other {
          dataframe_ref {
            id: 6
          }
        }
        src {
          end_column: 40
          end_line: 39
          file: 2
          start_column: 14
          start_line: 39
        }
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
      value: "df6"
    }
    uid: 8
  }
}
body {
  bind {
    expr {
      dataframe_union {
        allow_missing_columns: true
        by_name: true
        df {
          dataframe_ref {
            id: 5
          }
        }
        other {
          dataframe_ref {
            id: 6
          }
        }
        src {
          end_column: 64
          end_line: 41
          file: 2
          start_column: 14
          start_line: 41
        }
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
      value: "df7"
    }
    uid: 9
  }
}
body {
  bind {
    expr {
      dataframe_union {
        all: true
        allow_missing_columns: true
        by_name: true
        df {
          dataframe_ref {
            id: 5
          }
        }
        other {
          dataframe_ref {
            id: 6
          }
        }
        src {
          end_column: 68
          end_line: 43
          file: 2
          start_column: 14
          start_line: 43
        }
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
      value: "df8"
    }
    uid: 10
  }
}
client_ast_version: 1
client_language {
  python_language {
    version {
      label: "final"
      major: 3
      minor: 9
      patch: 1
    }
  }
}
client_version {
  major: 1
  minor: 30
}
id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
