## TEST CASE

df = session.table(tables.table1)

df.select(df.STR, df["STR"]).collect()

df[["STR", "STR"]].collect()

## EXPECTED UNPARSER OUTPUT

df = session.table("table1")

df.select(df["STR"], df["STR"]).collect()

df.select([col("STR"), col("STR")]).collect()

## EXPECTED ENCODED AST

body {
  assign {
    expr {
      sp_table {
        name {
          sp_table_name_flat {
            name: "table1"
          }
        }
        src {
          file: "SRC_POSITION_TEST_MODE"
          start_line: 25
        }
        variant {
          sp_session_table: true
        }
      }
    }
    symbol {
      value: "df"
    }
    uid: 1
    var_id {
      bitfield1: 1
    }
  }
}
body {
  assign {
    expr {
      sp_dataframe_select__columns {
        cols {
          sp_dataframe_col {
            col_name: "STR"
            df {
              sp_dataframe_ref {
                id {
                  bitfield1: 1
                }
              }
            }
            src {
              file: "SRC_POSITION_TEST_MODE"
              start_line: 27
            }
          }
        }
        cols {
          sp_dataframe_col {
            col_name: "STR"
            df {
              sp_dataframe_ref {
                id {
                  bitfield1: 1
                }
              }
            }
            src {
              file: "SRC_POSITION_TEST_MODE"
              start_line: 27
            }
          }
        }
        df {
          sp_dataframe_ref {
            id {
              bitfield1: 1
            }
          }
        }
        src {
          file: "SRC_POSITION_TEST_MODE"
          start_line: 27
        }
        variadic: true
      }
    }
    symbol {
    }
    uid: 2
    var_id {
      bitfield1: 2
    }
  }
}
body {
  assign {
    expr {
      sp_dataframe_collect {
        block: true
        case_sensitive: true
        id {
          bitfield1: 2
        }
        src {
          file: "SRC_POSITION_TEST_MODE"
          start_line: 27
        }
      }
    }
    symbol {
    }
    uid: 3
    var_id {
      bitfield1: 3
    }
  }
}
body {
  eval {
    uid: 4
    var_id {
      bitfield1: 3
    }
  }
}
body {
  assign {
    expr {
      sp_dataframe_select__columns {
        cols {
          apply_expr {
            fn {
              builtin_fn {
                name {
                  fn_name_flat {
                    name: "col"
                  }
                }
              }
            }
            pos_args {
              string_val {
                src {
                  file: "SRC_POSITION_TEST_MODE"
                  start_line: 29
                }
                v: "STR"
              }
            }
            src {
              file: "SRC_POSITION_TEST_MODE"
              start_line: 29
            }
          }
        }
        cols {
          apply_expr {
            fn {
              builtin_fn {
                name {
                  fn_name_flat {
                    name: "col"
                  }
                }
              }
            }
            pos_args {
              string_val {
                src {
                  file: "SRC_POSITION_TEST_MODE"
                  start_line: 29
                }
                v: "STR"
              }
            }
            src {
              file: "SRC_POSITION_TEST_MODE"
              start_line: 29
            }
          }
        }
        df {
          sp_dataframe_ref {
            id {
              bitfield1: 1
            }
          }
        }
        src {
          file: "SRC_POSITION_TEST_MODE"
          start_line: 29
        }
      }
    }
    symbol {
    }
    uid: 5
    var_id {
      bitfield1: 5
    }
  }
}
body {
  assign {
    expr {
      sp_dataframe_collect {
        block: true
        case_sensitive: true
        id {
          bitfield1: 5
        }
        src {
          file: "SRC_POSITION_TEST_MODE"
          start_line: 29
        }
      }
    }
    symbol {
    }
    uid: 6
    var_id {
      bitfield1: 6
    }
  }
}
body {
  eval {
    uid: 7
    var_id {
      bitfield1: 6
    }
  }
}
client_ast_version: 1
client_language {
  python_language {
    version {
      label: "final"
      major: 3
      minor: 9
      patch: 1
    }
  }
}
client_version {
  major: 1
  minor: 25
}
