## TEST CASE

df = session.table(tables.table1)

df = df.select(col("A").try_cast("null"))

df = df.select(col("A").try_cast("binary"))

df = df.select(col("A").try_cast("boolean"))

df = df.select(col("A").try_cast("date"))

df = df.select(col("A").try_cast("string"))

df = df.select(col("A").try_cast("byte"))

df = df.select(col("A").try_cast("short"))

df = df.select(col("A").try_cast("integer"))

df = df.select(col("A").try_cast("long"))

df = df.select(col("A").try_cast("float"))

df = df.select(col("A").try_cast("double"))

df = df.select(col("A").try_cast("timestamp"))

df = df.select(col("A").try_cast("time"))

df = df.select(col("A").try_cast("array"))

df = df.select(col("A").try_cast("map"))

df = df.select(col("A").try_cast(VectorType(float, 42)))

df = df.select(col("A").try_cast("struct"))

df = df.select(col("A").try_cast("variant"))

df = df.select(col("A").try_cast("geography"))

df = df.select(col("A").try_cast("geometry"))

df = df.select(col("A").try_cast("int"))

df = df.select(col("A").try_cast("smallint"))

df = df.select(col("A").try_cast("byteint"))

df = df.select(col("A").try_cast("bigint"))

df = df.select(col("A").try_cast("number"))

df = df.select(col("A").try_cast("numeric"))

df = df.select(col("A").try_cast("object"))


## EXPECTED UNPARSER OUTPUT

df = session.table("table1")

df = df.select(col("A").try_cast(NullType()))

df = df.select(col("A").try_cast(BinaryType()))

df = df.select(col("A").try_cast(BooleanType()))

df = df.select(col("A").try_cast(DateType()))

df = df.select(col("A").try_cast(StringType()))

df = df.select(col("A").try_cast(ByteType()))

df = df.select(col("A").try_cast(ShortType()))

df = df.select(col("A").try_cast(IntegerType()))

df = df.select(col("A").try_cast(LongType()))

df = df.select(col("A").try_cast(FloatType()))

df = df.select(col("A").try_cast(DoubleType()))

df = df.select(col("A").try_cast(TimestampType()))

df = df.select(col("A").try_cast(TimeType()))

df = df.select(col("A").try_cast(ArrayType(StringType(), structured=False)))

df = df.select(col("A").try_cast(MapType(StringType(), StringType(), structured=False)))

df = df.select(col("A").try_cast(VectorType(FloatType(), 42)))

df = df.select(col("A").try_cast(StructType([], structured=False)))

df = df.select(col("A").try_cast(VariantType()))

df = df.select(col("A").try_cast(GeographyType()))

df = df.select(col("A").try_cast(GeometryType()))

df = df.select(col("A").try_cast(IntegerType()))

df = df.select(col("A").try_cast(ShortType()))

df = df.select(col("A").try_cast(ByteType()))

df = df.select(col("A").try_cast(LongType()))

df = df.select(col("A").try_cast(DecimalType(38, 0)))

df = df.select(col("A").try_cast(DecimalType(38, 0)))

df = df.select(col("A").try_cast(MapType(StringType(), StringType(), structured=False)))

## EXPECTED ENCODED AST

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
