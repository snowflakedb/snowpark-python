## TEST CASE

df = session.table(tables.table1)

# Single weight means returning the dataframe itself.

df, = df.random_split([0.7])

weights = [0.1, 0.2, 0.3]

df1, df2, df3 = df.random_split(weights)

# One more time, with different symbol order.

df3, df1, df2 = df.random_split(weights, seed=24)

df1.select(col("NUM") > lit(10)).collect()

t = df.random_split([0.1, 0.2, 0.3], 24)

t[0].collect()

## EXPECTED UNPARSER OUTPUT

df = session.table("table1")

res1 = df.random_split([0.7], None)

res2 = df.random_split([0.1, 0.2, 0.3], None)

df1 = res2[0]

df2 = res2[1]

df3 = res2[2]

res3 = df.random_split([0.1, 0.2, 0.3], 24)

df3 = res3[0]

df1 = res3[1]

df2 = res3[2]

df1.select(col("NUM") > lit(10)).collect()

df = session.table("table1")

t = df.random_split([0.1, 0.2, 0.3], 24)

res7 = t[1]

res8 = t[2]

t[0].collect()

## EXPECTED ENCODED AST

interned_value_table {
  string_values {
    key: -1
  }
  string_values {
    key: 2
    value: "SRC_POSITION_TEST_MODE"
  }
}
body {
  bind {
    expr {
      table {
        name {
          name {
            name_flat {
              name: "table1"
            }
          }
        }
        src {
          end_column: 41
          end_line: 25
          file: 2
          start_column: 13
          start_line: 25
        }
        variant {
          session_table: true
        }
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
      value: "df"
    }
    uid: 1
  }
}
body {
  bind {
    expr {
      dataframe_random_split {
        df {
          dataframe_ref {
            id: 1
          }
        }
        src {
          end_column: 36
          end_line: 29
          file: 2
          start_column: 14
          start_line: 29
        }
        weights: 0.7
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
    }
    uid: 2
  }
}
body {
  bind {
    expr {
      dataframe_random_split {
        df {
          dataframe_ref {
            id: 1
          }
        }
        src {
          end_column: 48
          end_line: 33
          file: 2
          start_column: 24
          start_line: 33
        }
        weights: 0.1
        weights: 0.2
        weights: 0.3
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
    }
    uid: 3
  }
}
body {
  bind {
    expr {
      object_get_item {
        args {
          int64_val {
            src {
              end_column: 48
              end_line: 33
              file: 2
              start_column: 24
              start_line: 33
            }
          }
        }
        obj: 3
        src {
          end_column: 48
          end_line: 33
          file: 2
          start_column: 24
          start_line: 33
        }
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
      value: "df1"
    }
    uid: 4
  }
}
body {
  bind {
    expr {
      object_get_item {
        args {
          int64_val {
            src {
              end_column: 48
              end_line: 33
              file: 2
              start_column: 24
              start_line: 33
            }
            v: 1
          }
        }
        obj: 3
        src {
          end_column: 48
          end_line: 33
          file: 2
          start_column: 24
          start_line: 33
        }
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
      value: "df2"
    }
    uid: 5
  }
}
body {
  bind {
    expr {
      object_get_item {
        args {
          int64_val {
            src {
              end_column: 48
              end_line: 33
              file: 2
              start_column: 24
              start_line: 33
            }
            v: 2
          }
        }
        obj: 3
        src {
          end_column: 48
          end_line: 33
          file: 2
          start_column: 24
          start_line: 33
        }
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
      value: "df3"
    }
    uid: 6
  }
}
body {
  bind {
    expr {
      dataframe_random_split {
        df {
          dataframe_ref {
            id: 1
          }
        }
        seed {
          value: 24
        }
        src {
          end_column: 57
          end_line: 37
          file: 2
          start_column: 24
          start_line: 37
        }
        weights: 0.1
        weights: 0.2
        weights: 0.3
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
    }
    uid: 7
  }
}
body {
  bind {
    expr {
      object_get_item {
        args {
          int64_val {
            src {
              end_column: 57
              end_line: 37
              file: 2
              start_column: 24
              start_line: 37
            }
          }
        }
        obj: 7
        src {
          end_column: 57
          end_line: 37
          file: 2
          start_column: 24
          start_line: 37
        }
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
      value: "df3"
    }
    uid: 8
  }
}
body {
  bind {
    expr {
      object_get_item {
        args {
          int64_val {
            src {
              end_column: 57
              end_line: 37
              file: 2
              start_column: 24
              start_line: 37
            }
            v: 1
          }
        }
        obj: 7
        src {
          end_column: 57
          end_line: 37
          file: 2
          start_column: 24
          start_line: 37
        }
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
      value: "df1"
    }
    uid: 9
  }
}
body {
  bind {
    expr {
      object_get_item {
        args {
          int64_val {
            src {
              end_column: 57
              end_line: 37
              file: 2
              start_column: 24
              start_line: 37
            }
            v: 2
          }
        }
        obj: 7
        src {
          end_column: 57
          end_line: 37
          file: 2
          start_column: 24
          start_line: 37
        }
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
      value: "df2"
    }
    uid: 10
  }
}
body {
  bind {
    expr {
      dataframe_select {
        cols {
          args {
            gt {
              lhs {
                apply_expr {
                  fn {
                    builtin_fn {
                      name {
                        name {
                          name_flat {
                            name: "col"
                          }
                        }
                      }
                    }
                  }
                  pos_args {
                    string_val {
                      src {
                        end_column: 29
                        end_line: 39
                        file: 2
                        start_column: 19
                        start_line: 39
                      }
                      v: "NUM"
                    }
                  }
                  src {
                    end_column: 29
                    end_line: 39
                    file: 2
                    start_column: 19
                    start_line: 39
                  }
                }
              }
              rhs {
                apply_expr {
                  fn {
                    builtin_fn {
                      name {
                        name {
                          name_flat {
                            name: "lit"
                          }
                        }
                      }
                    }
                  }
                  pos_args {
                    int64_val {
                      src {
                        end_column: 39
                        end_line: 39
                        file: 2
                        start_column: 32
                        start_line: 39
                      }
                      v: 10
                    }
                  }
                  src {
                    end_column: 39
                    end_line: 39
                    file: 2
                    start_column: 32
                    start_line: 39
                  }
                }
              }
              src {
                end_column: 39
                end_line: 39
                file: 2
                start_column: 19
                start_line: 39
              }
            }
          }
          variadic: true
        }
        df {
          dataframe_ref {
            id: 9
          }
        }
        src {
          end_column: 40
          end_line: 39
          file: 2
          start_column: 8
          start_line: 39
        }
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
    }
    uid: 11
  }
}
body {
  bind {
    expr {
      dataframe_collect {
        block: true
        case_sensitive: true
        df {
          dataframe_ref {
            id: 11
          }
        }
        src {
          end_column: 50
          end_line: 39
          file: 2
          start_column: 8
          start_line: 39
        }
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
    }
    uid: 12
  }
}
body {
  eval {
    bind_id: 12
  }
}
body {
  bind {
    expr {
      table {
        name {
          name {
            name_flat {
              name: "table1"
            }
          }
        }
        src {
          end_column: 41
          end_line: 25
          file: 2
          start_column: 13
          start_line: 25
        }
        variant {
          session_table: true
        }
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
      value: "df"
    }
    uid: 1
  }
}
body {
  bind {
    expr {
      dataframe_random_split {
        df {
          dataframe_ref {
            id: 1
          }
        }
        seed {
          value: 24
        }
        src {
          end_column: 48
          end_line: 41
          file: 2
          start_column: 12
          start_line: 41
        }
        weights: 0.1
        weights: 0.2
        weights: 0.3
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
      value: "t"
    }
    uid: 13
  }
}
body {
  bind {
    expr {
      object_get_item {
        args {
          int64_val {
            src {
              end_column: 48
              end_line: 41
              file: 2
              start_column: 12
              start_line: 41
            }
          }
        }
        obj: 13
        src {
          end_column: 48
          end_line: 41
          file: 2
          start_column: 12
          start_line: 41
        }
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
    }
    uid: 14
  }
}
body {
  bind {
    expr {
      object_get_item {
        args {
          int64_val {
            src {
              end_column: 48
              end_line: 41
              file: 2
              start_column: 12
              start_line: 41
            }
            v: 1
          }
        }
        obj: 13
        src {
          end_column: 48
          end_line: 41
          file: 2
          start_column: 12
          start_line: 41
        }
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
    }
    uid: 15
  }
}
body {
  bind {
    expr {
      object_get_item {
        args {
          int64_val {
            src {
              end_column: 48
              end_line: 41
              file: 2
              start_column: 12
              start_line: 41
            }
            v: 2
          }
        }
        obj: 13
        src {
          end_column: 48
          end_line: 41
          file: 2
          start_column: 12
          start_line: 41
        }
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
    }
    uid: 16
  }
}
body {
  bind {
    expr {
      dataframe_collect {
        block: true
        case_sensitive: true
        df {
          dataframe_ref {
            id: 14
          }
        }
        src {
          end_column: 22
          end_line: 43
          file: 2
          start_column: 8
          start_line: 43
        }
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
    }
    uid: 17
  }
}
body {
  eval {
    bind_id: 17
  }
}
client_ast_version: 1
client_language {
  python_language {
    version {
      label: "final"
      major: 3
      minor: 9
      patch: 1
    }
  }
}
client_version {
  major: 1
  minor: 31
}
id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
