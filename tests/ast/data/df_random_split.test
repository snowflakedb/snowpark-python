## TEST CASE

df = session.table(tables.table1)

# Single weight means returning the dataframe itself.

# df, = df.random_split([0.7])

weights = [0.1, 0.2, 0.3]

df1, df2, df3 = df.random_split(weights)

# One more time, with different symbol order.

df3, df1, df2 = df.random_split(weights, seed=24)

df1.select(col("NUM") > lit(10)).collect()

t = df.random_split([0.1, 0.2, 0.3], 24)

t[0].collect()

## EXPECTED UNPARSER OUTPUT

df = session.table("table1")

res1 = df.random_split([0.1, 0.2, 0.3], None)

df1 = res1[0]

df2 = res1[1]

df3 = res1[2]

res2 = df.random_split([0.1, 0.2, 0.3], 24)

df3 = res2[0]

df1 = res2[1]

df2 = res2[2]

df1.select(col("NUM") > lit(10)).collect()

t = df.random_split([0.1, 0.2, 0.3], 24)

res6 = t[1]

res7 = t[2]

t[0].collect()

## EXPECTED ENCODED AST

Cj8KPQovggwsEgoKCAoGdGFibGUxGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoUCICCAESBAoCZGYYASICCAEKTgpMCkLKCD8KB4ICBAoCCAEaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShYKhiamZmZmZm5P5qZmZmZmck/MzMzMzMz0z8SABgCIgIIAgpVClMKRJoDQQofwgIcChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWBICCAIaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShYEgUKA2RmMRgDIgIIAwpXClUKRpoDQwohwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWBABEgIIAhoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFgSBQoDZGYyGAQiAggEClcKVQpGmgNDCiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShYEAISAggCGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWBIFCgNkZjMYBSICCAUKUgpQCkbKCEMKB4ICBAoCCAESAggYGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXCoYmpmZmZmZuT+amZmZmZnJPzMzMzMzM9M/EgAYBiICCAYKVQpTCkSaA0EKH8ICHAoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFwSAggGGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXBIFCgNkZjMYByICCAcKVwpVCkaaA0MKIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFwQARICCAYaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShcEgUKA2RmMRgIIgIICApXClUKRpoDQwohwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXBACEgIIBhoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFwSBQoDZGYyGAkiAggJCoECCv4BCvMBggnvAQrFAZoCwQEKUpIBTwoLGgkKBwoFCgNjb2waJPoMIQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF4SA05VTSIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF4ST5IBTAoLGgkKBwoFCgNsaXQaIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF4QCiIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF4aGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSheEgeCAgQKAggIGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXiABEgAYCiICCAoKMwoxCifSBiQIARABGgIICjIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF4SABgLIgIICwoIEgYIDBICCAsQARoREg8KDQoFZmluYWwQAxgJIBMiBBABGBc=
ClUKUwpGyghDCgeCAgQKAggBEgIIGBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGAqGJqZmZmZmbk/mpmZmZmZyT8zMzMzMzPTPxIDCgF0GA0iAggNClAKTgpEmgNBCh/CAhwKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShgEgIIDRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGASABgOIgIIDgpSClAKRpoDQwohwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYBABEgIIDRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGASABgPIgIIDwpSClAKRpoDQwohwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYBACEgIIDRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGASABgQIgIIEAozCjEKJ9IGJAgBEAEaAggOMhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYhIAGBEiAggRCggSBggSEgIIERABGhESDwoNCgVmaW5hbBADGAkgEyIEEAEYFw==
EAEaERIPCg0KBWZpbmFsEAMYCSATIgQQARgX
