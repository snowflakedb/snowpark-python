## TEST CASE

df = session.table(tables.table1)

# Single weight means returning the dataframe itself.

# df, = df.random_split([0.7])

weights = [0.1, 0.2, 0.3]

df1, df2, df3 = df.random_split(weights)

# One more time, with different symbol order.

df3, df1, df2 = df.random_split(weights, seed=24)

df1.select(col("NUM") > lit(10)).collect()

t = df.random_split([0.1, 0.2, 0.3], 24)

t[0].collect()

## EXPECTED UNPARSER OUTPUT

df = session.table("table1")

res1 = df.random_split([0.1, 0.2, 0.3], None)

df1 = res1[0]

df2 = res1[1]

df3 = res1[2]

res2 = df.random_split([0.1, 0.2, 0.3], 24)

df3 = res2[0]

df1 = res2[1]

df2 = res2[2]

df1.select(col("NUM") > lit(10)).collect()

t = df.random_split([0.1, 0.2, 0.3], 24)

res6 = t[1]

res7 = t[2]

t[0].collect()

## EXPECTED ENCODED AST

Cj8KPQovggwsEgoKCAoGdGFibGUxGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoPyICCAESBAoCZGYYASICCAEKTgpMCkLKCD8KB4ICBAoCCAEaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShHKhiamZmZmZm5P5qZmZmZmck/MzMzMzMz0z8SABgCIgIIAgpVClMKRJoDQQofwgIcChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoRxICCAIaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShHEgUKA2RmMRgDIgIIAwpXClUKRpoDQwohwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoRxABEgIIAhoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEcSBQoDZGYyGAQiAggEClcKVQpGmgNDCiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShHEAISAggCGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoRxIFCgNkZjMYBSICCAUKUgpQCkbKCEMKB4ICBAoCCAESAggYGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoSyoYmpmZmZmZuT+amZmZmZnJPzMzMzMzM9M/EgAYBiICCAYKVQpTCkSaA0EKH8ICHAoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEsSAggGGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoSxIFCgNkZjMYByICCAcKVwpVCkaaA0MKIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEsQARICCAYaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShLEgUKA2RmMRgIIgIICApXClUKRpoDQwohwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoSxACEgIIBhoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEsSBQoDZGYyGAkiAggJCoECCv4BCvMBggnvAQrFAZoCwQEKUpIBTwoLGgkKBwoFCgNjb2waJPoMIQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKE0SA05VTSIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKE0ST5IBTAoLGgkKBwoFCgNsaXQaIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKE0QCiIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKE0aGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShNEgeCAgQKAggIGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoTSABEgAYCiICCAoKMwoxCifSBiQIARABGgIICjIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKE0SABgLIgIICwoIEgYIDBICCAsQARoREg8KDQoFZmluYWwQAxgJIBQiBBABGBc=
ClUKUwpGyghDCgeCAgQKAggBEgIIGBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKE8qGJqZmZmZmbk/mpmZmZmZyT8zMzMzMzPTPxIDCgF0GA0iAggNClAKTgpEmgNBCh/CAhwKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShPEgIIDRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKE8SABgOIgIIDgpSClAKRpoDQwohwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoTxABEgIIDRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKE8SABgPIgIIDwpSClAKRpoDQwohwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoTxACEgIIDRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKE8SABgQIgIIEAozCjEKJ9IGJAgBEAEaAggOMhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoURIAGBEiAggRCggSBggSEgIIERABGhESDwoNCgVmaW5hbBADGAkgFCIEEAEYFw==
EAEaERIPCg0KBWZpbmFsEAMYCSAUIgQQARgX
