## TEST CASE

df = session.table("test_table")

# Single weight means returning the dataframe itself.

# df, = df.random_split([0.7])

weights = [0.1, 0.2, 0.3]

df1, df2, df3 = df.random_split(weights)

# One more time, with different symbol order.

df3, df1, df2 = df.random_split(weights, seed=24)

df1.select(col("NUM") > lit(10)).collect()

t = df.random_split([0.1, 0.2, 0.3], 24)

t[0].collect()

## EXPECTED UNPARSER OUTPUT

df = session.table("test_table")

res1 = df.random_split([0.1, 0.2, 0.3], None)

df1 = res1[0]

df2 = res1[1]

df3 = res1[2]

res2 = df.random_split([0.1, 0.2, 0.3], 24)

df3 = res2[0]

df1 = res2[1]

df2 = res2[2]

df1.select(col("NUM") > lit(10)).collect()

t = df.random_split([0.1, 0.2, 0.3], 24)

res6 = t[1]

res7 = t[2]

t[0].collect()

## EXPECTED ENCODED AST

CkMKQQoz4gswEg4KDAoKdGVzdF90YWJsZRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoiAggBEgQKAmRmGAEiAggBCk4KTApCwgg/CgeCAgQKAggBGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYioYmpmZmZmZuT+amZmZmZnJPzMzMzMzM9M/EgAYAiICCAIKVQpTCkSSA0EKH7oCHAoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGISAggCGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYhIFCgNkZjEYAyICCAMKVwpVCkaSA0MKIboCHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGIQARICCAIaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShiEgUKA2RmMhgEIgIIBApXClUKRpIDQwohugIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYhACEgIIAhoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGISBQoDZGYzGAUiAggFClIKUApGwghDCgeCAgQKAggBEgIIGBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGYqGJqZmZmZmbk/mpmZmZmZyT8zMzMzMzPTPxIAGAYiAggGClUKUwpEkgNBCh+6AhwKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShmEgIIBhoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGYSBQoDZGYzGAciAggHClcKVQpGkgNDCiG6Ah4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShmEAESAggGGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoZhIFCgNkZjEYCCICCAgKVwpVCkaSA0MKIboCHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGYQAhICCAYaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShmEgUKA2RmMhgJIgIICQq5Agq2AgqrAvoIpwIK/QGSAvkBCm6KAWsKJxolCgcKBQoDY29sEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaBoksgwhChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaBIDTlVNIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaBJrigFoCicaJQoHCgUKA2xpdBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGgaIboCHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGgQCiIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGgaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShoEgeCAgQKAggIGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaCABEgAYCiICCAoKMwoxCifKBiQIARABGgIICjIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGgSABgLIgIICwoIEgYIDBICCAsQARoREg8KDQoFZmluYWwQAxgJIBIiBhABGBYgAQ==
ClUKUwpGwghDCgeCAgQKAggBEgIIGBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGoqGJqZmZmZmbk/mpmZmZmZyT8zMzMzMzPTPxIDCgF0GA0iAggNClAKTgpEkgNBCh+6AhwKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShqEgIIDRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGoSABgOIgIIDgpSClAKRpIDQwohugIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoahABEgIIDRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGoSABgPIgIIDwpSClAKRpIDQwohugIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoahACEgIIDRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGoSABgQIgIIEAozCjEKJ8oGJAgBEAEaAggOMhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUobBIAGBEiAggRCggSBggSEgIIERABGhESDwoNCgVmaW5hbBADGAkgEiIGEAEYFiAB
EAEaERIPCg0KBWZpbmFsEAMYCSASIgYQARgWIAE=
