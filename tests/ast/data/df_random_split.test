## TEST CASE

df = session.table("test_table")

# Single weight means returning the dataframe itself.

# df, = df.random_split([0.7])

weights = [0.1, 0.2, 0.3]

df1, df2, df3 = df.random_split(weights)

# One more time, with different symbol order.

df3, df1, df2 = df.random_split(weights, seed=24)

df1.select(col("NUM") > lit(10)).collect()

t = df.random_split([0.1, 0.2, 0.3], 24)

t[0].collect()

## EXPECTED UNPARSER OUTPUT



## EXPECTED ENCODED AST

CkMKQQozwgswEg4KDAoKdGVzdF90YWJsZRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoiAggBEgQKAmRmGAEiAggBCk4KTApCwgg/CgeCAgQKAggBGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYioYmpmZmZmZuT+amZmZmZnJPzMzMzMzM9M/EgAYAiICCAIKVQpTCkSKA0EKH7ICHAoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGISAggCGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYhIFCgNkZjEYAyICCAMKVwpVCkaKA0MKIbICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGIQARICCAIaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShiEgUKA2RmMhgEIgIIBApXClUKRooDQwohsgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYhACEgIIAhoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGISBQoDZGYzGAUiAggFClIKUApGwghDCgeCAgQKAggBEgIIGBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGYqGJqZmZmZmbk/mpmZmZmZyT8zMzMzMzPTPxIAGAYiAggGClUKUwpEigNBCh+yAhwKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShmEgIIBhoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGYSBQoDZGYzGAciAggHClcKVQpGigNDCiGyAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShmEAESAggGGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoZhIFCgNkZjEYCCICCAgKVwpVCkaKA0MKIbICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGYQAhICCAYaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShmEgUKA2RmMhgJIgIICQq5Agq2AgqrAvoIpwIK/QGKAvkBCm6KAWsKJxolCgcKBQoDY29sEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaBokggwhChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaBIDTlVNIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaBJrigFoCicaJQoHCgUKA2xpdBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGgaIbICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGgQCiIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGgaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShoEgeCAgQKAggIGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaCABEgAYCiICCAoKMwoxCifKBiQIARABGgIICjIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGgSABgLIgIICwoIEgYIDBICCAsQARoREg8KDQoFZmluYWwQAxgJIBMiBBABGBU=
ClUKUwpGwghDCgeCAgQKAggBEgIIGBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGoqGJqZmZmZmbk/mpmZmZmZyT8zMzMzMzPTPxIDCgF0GA0iAggNClAKTgpEigNBCh+yAhwKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShqEgIIDRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGoSABgOIgIIDgpSClAKRooDQwohsgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoahABEgIIDRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGoSABgPIgIIDwpSClAKRooDQwohsgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoahACEgIIDRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGoSABgQIgIIEAozCjEKJ8oGJAgBEAEaAggOMhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUobBIAGBEiAggRCggSBggSEgIIERABGhESDwoNCgVmaW5hbBADGAkgEyIEEAEYFQ==
EAEaERIPCg0KBWZpbmFsEAMYCSATIgQQARgV
