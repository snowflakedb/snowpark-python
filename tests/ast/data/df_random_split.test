## TEST CASE

df = session.table("test_table")

# Single weight means returning the dataframe itself.

# df, = df.random_split([0.7])

weights = [0.1, 0.2, 0.3]

df1, df2, df3 = df.random_split(weights)

# One more time, with different symbol order.

df3, df1, df2 = df.random_split(weights, seed=24)

df1.select(col("NUM") > lit(10)).collect()

t = df.random_split([0.1, 0.2, 0.3], 24)

t[0].collect()

## EXPECTED UNPARSER OUTPUT

df = session.table("test_table")

res1 = df.random_split([0.1, 0.2, 0.3], None)

df1 = res1[0]

df2 = res1[1]

df3 = res1[2]

res2 = df.random_split([0.1, 0.2, 0.3], 24)

df3 = res2[0]

df1 = res2[1]

df2 = res2[2]

df1.select(col("NUM") > lit(10)).collect()

t = df.random_split([0.1, 0.2, 0.3], 24)

res6 = t[1]

res7 = t[2]

t[0].collect()

## EXPECTED ENCODED AST

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
EAEaERIPCg0KBWZpbmFsEAMYCyAJIgQQARgV
