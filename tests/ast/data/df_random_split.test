## TEST CASE

df = session.table("test_table")

# Single weight means returning the dataframe itself.

# df, = df.random_split([0.7])

weights = [0.1, 0.2, 0.3]

df1, df2, df3 = df.random_split(weights)

# One more time, with different symbol order.

df3, df1, df2 = df.random_split(weights, seed=24)

df1.select(col("NUM") > lit(10)).collect()

t = df.random_split([0.1, 0.2, 0.3], 24)

t[0].collect()

## EXPECTED UNPARSER OUTPUT

df = session.table("test_table")

res1 = df.random_split([0.1, 0.2, 0.3], None)

df1 = res1[0]

df2 = res1[1]

df3 = res1[2]

res2 = df.random_split([0.1, 0.2, 0.3], 24)

df3 = res2[0]

df1 = res2[1]

df2 = res2[2]

df1.select(col("NUM") > lit(10)).collect()

t = df.random_split([0.1, 0.2, 0.3], 24)

res6 = t[1]

res7 = t[2]

t[0].collect()

## EXPECTED ENCODED AST

CkMKQQozggwwEg4KDAoKdGVzdF90YWJsZRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoiAggBEgQKAmRmGAEiAggBCk4KTApCygg/CgeCAgQKAggBGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYioYmpmZmZmZuT+amZmZmZnJPzMzMzMzM9M/EgAYAiICCAIKVQpTCkSaA0EKH8ICHAoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGISAggCGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYhIFCgNkZjEYAyICCAMKVwpVCkaaA0MKIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGIQARICCAIaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShiEgUKA2RmMhgEIgIIBApXClUKRpoDQwohwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYhACEgIIAhoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGISBQoDZGYzGAUiAggFClIKUApGyghDCgeCAgQKAggBEgIIGBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGYqGJqZmZmZmbk/mpmZmZmZyT8zMzMzMzPTPxIAGAYiAggGClUKUwpEmgNBCh/CAhwKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShmEgIIBhoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGYSBQoDZGYzGAciAggHClcKVQpGmgNDCiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShmEAESAggGGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoZhIFCgNkZjEYCCICCAgKVwpVCkaaA0MKIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGYQAhICCAYaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShmEgUKA2RmMhgJIgIICQqBAgr+AQrzAYIJ7wEKxQGaAsEBClKSAU8KCxoJCgcKBQoDY29sGiT6DCEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShoEgNOVU0iGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShoEk+SAUwKCxoJCgcKBQoDbGl0GiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShoEAoiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShoGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaBIHggIECgIICBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGggARIAGAoiAggKCjMKMQon0gYkCAEQARoCCAoyGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShoEgAYCyICCAsKCBIGCAwSAggLEAEaERIPCg0KBWZpbmFsEAMYCSAUIgQQARgX
ClUKUwpGyghDCgeCAgQKAggBEgIIGBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGoqGJqZmZmZmbk/mpmZmZmZyT8zMzMzMzPTPxIDCgF0GA0iAggNClAKTgpEmgNBCh/CAhwKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShqEgIIDRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGoSABgOIgIIDgpSClAKRpoDQwohwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoahABEgIIDRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGoSABgPIgIIDwpSClAKRpoDQwohwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoahACEgIIDRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGoSABgQIgIIEAozCjEKJ9IGJAgBEAEaAggOMhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUobBIAGBEiAggRCggSBggSEgIIERABGhESDwoNCgVmaW5hbBADGAkgFCIEEAEYFw==
EAEaERIPCg0KBWZpbmFsEAMYCSAUIgQQARgX
