## TEST CASE

import pandas as pd

df = pd.DataFrame([[1, 2, 3], [4, 5, 6]])

ans = session.write_pandas(df, tables.table1)

ans2 = session.write_pandas(df, "test", schema="a", database="b", chunk_size=7, compression="brotli", on_error="ignore", parallel=10, quote_identifiers=False, auto_create_table=True, create_temp_table=True, overwrite=True, table_type="temp", random=90)

## EXPECTED UNPARSER OUTPUT

ans = session.write_pandas(pandas.DataFrame(<not shown>)), "table1")

ans2 = session.write_pandas(pandas.DataFrame(<not shown>)), "test", database="b", schema="a", chunk_size=7, compression="brotli", on_error="ignore", parallel=10, quote_identifiers=False, auto_create_table=True, create_temp_table=True, overwrite=True, table_type="temporary", random=90)

## EXPECTED ENCODED AST

<<<<<<< HEAD
CmsKaQpa2gxXGgRnemlwKhISEAoOCgwKCgoIInRhYmxlMSI6D2Fib3J0X3N0YXRlbWVudEgEUAFaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgdYgoKCAoGdGFibGUxEgUKA2FucxgBIgIIAQqsAQqpAQqYAdoMlAEIARICCAcaBmJyb3RsaSABKhISEAoOCgwKCgoIYi5hLnRlc3QyKwoGcmFuZG9tEiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgfEFo6Bmlnbm9yZUABSApaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgfYg4SDAoBYgoBYQoEdGVzdGoJdGVtcG9yYXJ5EgYKBGFuczIYAiICCAIQARoREg8KDQoFZmluYWwQAxgJIBIiBBABGBc=
=======
{
  "body": [
    {
      "assign": {
        "expr": {
          "sp_write_pandas": {
            "compression": "gzip",
            "df": {
              "sp_dataframe_data__pandas": {
                "v": {
                  "temp_table": {
                    "sp_table_name_flat": {
                      "name": "\"test_table\""
                    }
                  }
                }
              }
            },
            "on_error": "abort_statement",
            "parallel": "4",
            "quote_identifiers": true,
            "src": {
              "file": "SRC_POSITION_TEST_MODE",
              "start_line": "94"
            },
            "table_name": {
              "sp_table_name_flat": {
                "name": "test_table"
              }
            }
          }
        },
        "symbol": "ans",
        "uid": "1",
        "var_id": {
          "bitfield1": "1"
        }
      }
    },
    {
      "assign": {
        "expr": {
          "sp_write_pandas": {
            "auto_create_table": true,
            "chunk_size": "7",
            "compression": "brotli",
            "create_temp_table": true,
            "df": {
              "sp_dataframe_data__pandas": {
                "v": {
                  "temp_table": {
                    "sp_table_name_flat": {
                      "name": "b.a.test"
                    }
                  }
                }
              }
            },
            "kwargs": [
              {
                "_1": "random",
                "_2": {
                  "int64_val": {
                    "src": {
                      "file": "SRC_POSITION_TEST_MODE",
                      "start_line": "96"
                    },
                    "v": "90"
                  }
                }
              }
            ],
            "on_error": "ignore",
            "overwrite": true,
            "parallel": "10",
            "src": {
              "file": "SRC_POSITION_TEST_MODE",
              "start_line": "96"
            },
            "table_name": {
              "sp_table_name_structured": {
                "name": [
                  "b",
                  "a",
                  "test"
                ]
              }
            },
            "table_type": "temporary"
          }
        },
        "symbol": "ans2",
        "uid": "2",
        "var_id": {
          "bitfield1": "2"
        }
      }
    }
  ],
  "client_ast_version": "1",
  "client_language": {
    "python_language": {
      "version": {
        "label": "final",
        "major": "3",
        "minor": "9",
        "patch": "20"
      }
    }
  },
  "client_version": {
    "major": "1",
    "minor": "23"
  }
}
>>>>>>> 66d50cff3 (SNOW-1738538 Update expectation files to json ast output so more stable & readable)
