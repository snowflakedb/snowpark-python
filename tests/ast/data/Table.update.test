## TEST CASE

df = Table(tables.table1, session)

df.update({})

df.update({"b": 0})

df.update({"b": 1, "c": df.num})

df.update({"b": 2}, df["num"] == 1)

source_df = session.create_dataframe([1, 2, 3, 4], schema=["a"])

df.update({"b": 3}, df["num"] == source_df.a, source_df)

df.update({"b": 4}, df["num"] == source_df["a"], source_df, block=False)

df.update({"b": 5}, df["num"] == source_df["a"], source_df, block=False, statement_params={"SF_PARTNER": "FAKE_PARTNER"})

## EXPECTED UNPARSER OUTPUT

df = Table("table1", session)

df.update({})

df.update({"b": 0})

df.update({"b": 1, "c": df["num"]})

df.update({"b": 2}, condition=(df["num"] == 1))

source_df = session.create_dataframe([1, 2, 3, 4], schema=["a"])

df.update({"b": 3}, condition=(df["num"] == source_df["a"]), source=source_df)

df.update({"b": 4}, condition=(df["num"] == source_df["a"]), source=source_df, block=False)

df.update({"b": 5}, condition=(df["num"] == source_df["a"]), source=source_df, statement_params={"SF_PARTNER": "FAKE_PARTNER"}, block=False)

## EXPECTED ENCODED AST

<<<<<<< HEAD
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
EAEaERIPCg0KBWZpbmFsEAMYCSASIgQQARgX
=======
{
  "body": [
    {
      "assign": {
        "expr": {
          "sp_table": {
            "name": {
              "sp_table_name_flat": {
                "name": "test_table"
              }
            },
            "src": {
              "file": "SRC_POSITION_TEST_MODE",
              "start_line": "90"
            },
            "variant": {
              "sp_table_init": true
            }
          }
        },
        "symbol": "df",
        "uid": "1",
        "var_id": {
          "bitfield1": "1"
        }
      }
    },
    {
      "assign": {
        "expr": {
          "sp_table_update": {
            "block": true,
            "id": {
              "bitfield1": "1"
            },
            "src": {
              "file": "SRC_POSITION_TEST_MODE",
              "start_line": "92"
            }
          }
        },
        "symbol": "",
        "uid": "2",
        "var_id": {
          "bitfield1": "2"
        }
      }
    },
    {
      "eval": {
        "uid": "3",
        "var_id": {
          "bitfield1": "2"
        }
      }
    }
  ],
  "client_ast_version": "1",
  "client_language": {
    "python_language": {
      "version": {
        "label": "final",
        "major": "3",
        "minor": "9",
        "patch": "20"
      }
    }
  },
  "client_version": {
    "major": "1",
    "minor": "23"
  }
}
>>>>>>> 66d50cff3 (SNOW-1738538 Update expectation files to json ast output so more stable & readable)
