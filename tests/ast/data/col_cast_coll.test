## TEST CASE

df = session.table("test_table")

df = df.select(col("A").cast("string(42)"))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.NTZ)))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.LTZ)))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.TZ)))

df = df.select(col("A").cast(ArrayType(GeometryType(), structured=True)))

df = df.select(col("A").cast(MapType(GeographyType(), VariantType(), structured=True)))

df = df.select(col("A").cast(VectorType(int, 64)))

df = df.select(col("A").cast(StructType([
    StructField(ColumnIdentifier("test1"), StringType(), nullable=False),
    StructField("test2", IntegerType(), nullable=True),
    StructField(ColumnIdentifier("test3"), ArrayType(LongType())),
    StructField("test4", MapType(DecimalType(42, 23), VectorType("float", 64)))
], structured=True)))

## EXPECTED UNPARSER OUTPUT

df = session.table("test_table")

df = df.select(col("A").cast(StringType(42)))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.NTZ)))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.LTZ)))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.TZ)))

df = df.select(col("A").cast(ArrayType(GeometryType(), structured=True)))

df = df.select(col("A").cast(MapType(GeographyType(), VariantType(), structured=True)))

df = df.select(col("A").cast(VectorType(IntegerType(), 64)))

df = df.select(col("A").cast(StructType([StructField("test1", StringType(), nullable=False), StructField("test2", IntegerType(), nullable=True), StructField("test3", ArrayType(LongType(), structured=False), nullable=True), StructField("test4", MapType(DecimalType(42, 23), VectorType(FloatType(), 64), structured=False), nullable=True)], structured=True)))

## EXPECTED ENCODED AST

CkkKRwo58gs2Eg4KDAoKdGVzdF90YWJsZRogCCgQWhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSANKFoiAggBEgQKAmRmGAEiAggBCvUBCvIBCuMBignfAQqvAdoEqwEKfooBewotIisKBwoFCgNjb2wSIAgfEFwaFlNSQ19QT1NJVElPTl9URVNUX01PREUgFyhcGijCDCUKIAgfEFwaFlNSQ19QT1NJVElPTl9URVNUX01PREUgFyhcEgFBIiAIHxBcGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIBcoXBIgCDIQXBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAXKFwaB5oBBAoCCCoSB4ICBAoCCAEaIAgzEFwaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDShcIAESBAoCZGYYAiICCAIK9QEK8gEK4wGKCd8BCq8B2gSrAQp+igF7Ci0iKwoHCgUKA2NvbBIgCB8QXhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAXKF4aKMIMJQogCB8QXhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAXKF4SAUEiIAgfEF4aFlNSQ19QT1NJVElPTl9URVNUX01PREUgFyheEiAIShBeGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIBcoXhoHugEECgIYARIHggIECgIIAhogCEsQXhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSANKF4gARIECgJkZhgDIgIIAwr1AQryAQrjAYoJ3wEKrwHaBKsBCn6KAXsKLSIrCgcKBQoDY29sEiAIHxBgGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIBcoYBoowgwlCiAIHxBgGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIBcoYBIBQSIgCB8QYBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAXKGASIAhKEGAaFlNSQ19QT1NJVElPTl9URVNUX01PREUgFyhgGge6AQQKAhABEgeCAgQKAggDGiAISxBgGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA0oYCABEgQKAmRmGAQiAggECvUBCvIBCuMBignfAQqvAdoEqwEKfooBewotIisKBwoFCgNjb2wSIAgfEGIaFlNSQ19QT1NJVElPTl9URVNUX01PREUgFyhiGijCDCUKIAgfEGIaFlNSQ19QT1NJVElPTl9URVNUX01PREUgFyhiEgFBIiAIHxBiGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIBcoYhIgCEkQYhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAXKGIaB7oBBAoCIAESB4ICBAoCCAQaIAhKEGIaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDShiIAESBAoCZGYYBSICCAUK9gEK8wEK5AGKCeABCrAB2gSsAQp+igF7Ci0iKwoHCgUKA2NvbBIgCB8QZBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAXKGQaKMIMJQogCB8QZBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAXKGQSAUEiIAgfEGQaFlNSQ19QT1NJVElPTl9URVNUX01PREUgFyhkEiAIUBBkGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIBcoZBoICgYIARICWAESB4ICBAoCCAUaIAhREGQaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDShkIAESBAoCZGYYBiICCAYK+wEK+AEK6QGKCeUBCrUB2gSxAQp+igF7Ci0iKwoHCgUKA2NvbBIgCB8QZhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAXKGYaKMIMJQogCB8QZhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAXKGYSAUEiIAgfEGYaFlNSQ19QT1NJVElPTl9URVNUX01PREUgFyhmEiAIXhBmGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIBcoZhoNcgsKAlABEAEaA8ABARIHggIECgIIBhogCF8QZhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSANKGYgARIECgJkZhgHIgIIBwr3AQr0AQrlAYoJ4QEKsQHaBK0BCn6KAXsKLSIrCgcKBQoDY29sEiAIHxBoGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIBcoaBoowgwlCiAIHxBoGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIBcoaBIBQSIgCB8QaBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAXKGgSIAg5EGgaFlNSQ19QT1NJVElPTl9URVNUX01PREUgFyhoGgnKAQYIQBICYAESB4ICBAoCCAcaIAg6EGgaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDShoIAESBAoCZGYYCCICCAgKzwIKzAIKvQKKCbkCCokC2gSFAgp+igF7Ci0iKwoHCgUKA2NvbBIgCB8QahoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAXKGoaKMIMJQogCB8QahoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAXKGoSAUEiIAgfEGoaFlNSQ19QT1NJVElPTl9URVNUX01PREUgFyhqEiAIHBBvGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIBcoahphqgFeChAKBwoFdGVzdDESBZoBAgoACg8KBwoFdGVzdDISAmABGAEKEwoHCgV0ZXN0MxIGCgQSAmgBGAEKIgoHCgV0ZXN0NBIVchMKBjoECCoQFxoJygEGCEASAkgBGAEQARIHggIECgIICBogCB0QbxoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSANKGogARIECgJkZhgJIgIICRABGhESDwoNCgVmaW5hbBADGAsgCSIEEAEYFQ==
