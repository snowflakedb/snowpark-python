## TEST CASE

df = session.table(tables.table1)

df = df.select(col("A").cast("string(42)"))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.NTZ)))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.LTZ)))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.TZ)))

df = df.select(col("A").cast(ArrayType(GeometryType(), structured=True)))

df = df.select(col("A").cast(MapType(GeographyType(), VariantType(), structured=True)))

df = df.select(col("A").cast(VectorType(int, 64)))

df = df.select(col("A").cast(StructType([
    StructField(ColumnIdentifier("test1"), StringType(), nullable=False),
    StructField("test2", IntegerType(), nullable=True),
    StructField(ColumnIdentifier("test3"), ArrayType(LongType())),
    StructField("test4", MapType(DecimalType(42, 23), VectorType("float", 64)))
], structured=True)))

## EXPECTED UNPARSER OUTPUT

df = session.table("table1")

df = df.select(col("A").cast(StringType(42)))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.NTZ)))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.LTZ)))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.TZ)))

df = df.select(col("A").cast(ArrayType(GeometryType(), structured=True)))

df = df.select(col("A").cast(MapType(GeographyType(), VariantType(), structured=True)))

df = df.select(col("A").cast(VectorType(IntegerType(), 64)))

df = df.select(col("A").cast(StructType([StructField("test1", StringType(), nullable=False), StructField("test2", IntegerType(), nullable=True), StructField("test3", ArrayType(LongType(), structured=False), nullable=True), StructField("test4", MapType(DecimalType(42, 23), VectorType(FloatType(), 64), structured=False), nullable=True)], structured=True)))

## EXPECTED ENCODED AST

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
