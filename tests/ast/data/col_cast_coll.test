## TEST CASE

df = session.table("test_table")

df = df.select(col("A").cast("string(42)"))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.NTZ)))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.LTZ)))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.TZ)))

df = df.select(col("A").cast(ArrayType(GeometryType(), structured=True)))

df = df.select(col("A").cast(MapType(GeographyType(), VariantType(), structured=True)))

df = df.select(col("A").cast(VectorType(int, 64)))

df = df.select(col("A").cast(StructType([
    StructField(ColumnIdentifier("test1"), StringType(), nullable=False),
    StructField("test2", IntegerType(), nullable=True),
    StructField(ColumnIdentifier("test3"), ArrayType(LongType())),
    StructField("test4", MapType(DecimalType(42, 23), VectorType("float", 64)))
], structured=True)))

## EXPECTED UNPARSER OUTPUT

df = session.table("test_table")

df = df.select(col("A").cast(StringType(42)))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.NTZ)))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.LTZ)))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.TZ)))

df = df.select(col("A").cast(ArrayType(GeometryType(), structured=True)))

df = df.select(col("A").cast(MapType(GeographyType(), VariantType(), structured=True)))

df = df.select(col("A").cast(VectorType(IntegerType(), 64)))

df = df.select(col("A").cast(StructType([StructField("test1", StringType(), nullable=False), StructField("test2", IntegerType(), nullable=True), StructField("test3", ArrayType(LongType(), structured=False), nullable=True), StructField("test4", MapType(DecimalType(42, 23), VectorType(FloatType(), 64), structured=False), nullable=True)], structured=True)))

## EXPECTED ENCODED AST

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
