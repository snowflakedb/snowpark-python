## TEST CASE

df = session.table(tables.table1)

df = df.select(col("A").cast("string(42)"))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.NTZ)))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.LTZ)))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.TZ)))

df = df.select(col("A").cast(ArrayType(GeometryType(), structured=True)))

df = df.select(col("A").cast(MapType(GeographyType(), VariantType(), structured=True)))

df = df.select(col("A").cast(VectorType(int, 64)))

df = df.select(col("A").cast(StructType([
    StructField(ColumnIdentifier("test1"), StringType(), nullable=False),
    StructField("test2", IntegerType(), nullable=True),
    StructField(ColumnIdentifier("test3"), ArrayType(LongType())),
    StructField("test4", MapType(DecimalType(42, 23), VectorType("float", 64)))
], structured=True)))

## EXPECTED UNPARSER OUTPUT

df = session.table("table1")

df = df.select(col("A").cast(StringType(42)))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.NTZ)))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.LTZ)))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.TZ)))

df = df.select(col("A").cast(ArrayType(GeometryType(), structured=True)))

df = df.select(col("A").cast(MapType(GeographyType(), VariantType(), structured=True)))

df = df.select(col("A").cast(VectorType(IntegerType(), 64)))

df = df.select(col("A").cast(StructType([StructField("test1", StringType(), nullable=False), StructField("test2", IntegerType(), nullable=True), StructField("test3", ArrayType(LongType(), structured=False), nullable=True), StructField("test4", MapType(DecimalType(42, 23), VectorType(FloatType(), 64), structured=False), nullable=True)], structured=True)))

## EXPECTED ENCODED AST

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
