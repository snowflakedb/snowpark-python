## TEST CASE

df = session.table("test_table")

df = df.select(col("A").cast("string(42)"))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.NTZ)))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.LTZ)))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.TZ)))

df = df.select(col("A").cast(ArrayType(GeometryType(), structured=True)))

df = df.select(col("A").cast(MapType(GeographyType(), VariantType(), structured=True)))

df = df.select(col("A").cast(VectorType(int, 64)))

df = df.select(col("A").cast(StructType([
    StructField(ColumnIdentifier("test1"), StringType(), nullable=False),
    StructField("test2", IntegerType(), nullable=True),
    StructField(ColumnIdentifier("test3"), ArrayType(LongType())),
    StructField("test4", MapType(DecimalType(42, 23), VectorType("float", 64)))
], structured=True)))

## EXPECTED UNPARSER OUTPUT

df = session.table("test_table")

df = df.select(col("A").cast(StringType(42)))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.NTZ)))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.LTZ)))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.TZ)))

df = df.select(col("A").cast(ArrayType(GeometryType(), structured=True)))

df = df.select(col("A").cast(MapType(GeographyType(), VariantType(), structured=True)))

df = df.select(col("A").cast(VectorType(IntegerType(), 64)))

df = df.select(col("A").cast(StructType([StructField("test1", StringType(), nullable=False), StructField("test2", IntegerType(), nullable=True), StructField("test3", ArrayType(LongType(), structured=False), nullable=True), StructField("test4", MapType(DecimalType(42, 23), VectorType(FloatType(), 64), structured=False), nullable=True)], structured=True)))

## EXPECTED ENCODED AST

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
