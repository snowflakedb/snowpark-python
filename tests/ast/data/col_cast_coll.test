## TEST CASE

df = session.table(tables.table1)

df = df.select(col("A").cast("string(42)"))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.NTZ)))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.LTZ)))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.TZ)))

df = df.select(col("A").cast(ArrayType(GeometryType(), structured=True)))

df = df.select(col("A").cast(MapType(GeographyType(), VariantType(), structured=True)))

df = df.select(col("A").cast(VectorType(int, 64)))

df = df.select(col("A").cast(StructType([
    StructField(ColumnIdentifier("test1"), StringType(), nullable=False),
    StructField("test2", IntegerType(), nullable=True),
    StructField(ColumnIdentifier("test3"), ArrayType(LongType())),
    StructField("test4", MapType(DecimalType(42, 23), VectorType("float", 64)))
], structured=True)))

## EXPECTED UNPARSER OUTPUT

df = session.table("table1")

df = df.select(col("A").cast(StringType(42)))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.NTZ)))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.LTZ)))

df = df.select(col("A").cast(TimestampType(TimestampTimeZone.TZ)))

df = df.select(col("A").cast(ArrayType(GeometryType(), structured=True)))

df = df.select(col("A").cast(MapType(GeographyType(), VariantType(), structured=True)))

df = df.select(col("A").cast(VectorType(IntegerType(), 64)))

df = df.select(col("A").cast(StructType([StructField("test1", StringType(), nullable=False), StructField("test2", IntegerType(), nullable=True), StructField("test3", ArrayType(LongType(), structured=False), nullable=True), StructField("test4", MapType(DecimalType(42, 23), VectorType(FloatType(), 64), structured=False), nullable=True)], structured=True)))

## EXPECTED ENCODED AST

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
