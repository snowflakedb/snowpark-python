## TEST CASE

df1 = session.create_dataframe([['A', 1, 15, 3.21],
                               ['A', 2, 16, 3.22],
                               ['B', 1, 17, 3.23],
                               ['B', 2, 18, 4.23]],
                              schema=["c1", "c2", "c3", "c4"])
df2 = session.create_dataframe([['A', 1, 14, 3.19],
                                ['B', 2, 16, 3.04]],
                               schema=["c1", "c2", "c3", "c4"])

df1.join(df2, on=(df1.c1 == df2.c1) & (df1.c2 == df2.c2), how="asof",
         match_condition=(df1.c3 >= df2.c3), lsuffix="_L", rsuffix="_R") \
         .order_by("C1_L", "C2_L").collect()

## EXPECTED UNPARSER OUTPUT



## EXPECTED ENCODED AST

CqkGCqYGCpYG8gWSBgrfBQrcBQq0AcICsAEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEiKCDB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEgFBEiGyAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEAESIbICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoQDxIo8gElChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWhGuR+F6FK4JQAq0AcICsAEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEiKCDB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEgFBEiGyAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEAISIbICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoQEBIo8gElChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWhHD9Shcj8IJQAq0AcICsAEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEiKCDB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEgFCEiGyAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEAESIbICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoQERIo8gElChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWhHXo3A9CtcJQAq0AcICsAEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEiKCDB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEgFCEiGyAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEAISIbICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoQEhIo8gElChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWhHsUbgehesQQBISChAKAmMxCgJjMgoCYzMKAmM0GhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWhIFCgNkZjEYASICCAEKuwMKuAMKqAPyBaQDCvECCu4CCrQBwgKwAQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF8SIoIMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF8SAUESIbICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF8QARIhsgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXxAOEijyASUKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShfEYXrUbgehQlACrQBwgKwAQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF8SIoIMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF8SAUISIbICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF8QAhIhsgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXxAQEijyASUKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShfEVK4HoXrUQhAEhIKEAoCYzEKAmMyCgJjMwoCYzQaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShfEgUKA2RmMhgCIgIIAgrqAwrnAwrcA+oH2AMKmgKCAZYCCnvqAXgKLMIGKQoCYzESB4ICBAoCCAEaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShjEizCBikKAmMxEgeCAgQKAggCGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYxoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGMSe+oBeAoswgYpCgJjMhIHggIECgIIARoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGMSLMIGKQoCYzISB4ICBAoCCAIaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShjGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYxoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGMSAggBGgeCAgQKAggBIgQKAl9MKnuCAngKLMIGKQoCYzMSB4ICBAoCCAEaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShkEizCBikKAmMzEgeCAgQKAggCGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoZBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGQyB4ICBAoCCAI6BAoCX1JCGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShjEgAYAyICCAMKhQEKggEKeJIJdRIlggwiChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYxIEQzFfTBIlggwiChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYxIEQzJfTBgBIgeCAgQKAggDKhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYxIAGAQiAggECjMKMQonygYkCAEQARoCCAQyGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShjEgAYBSICCAUKCBIGCAYSAggFEAEaERIPCg0KBWZpbmFsEAMYCSATIgQQARgV
EAEaERIPCg0KBWZpbmFsEAMYCSATIgQQARgV
