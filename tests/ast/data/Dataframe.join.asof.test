## TEST CASE

df1 = session.create_dataframe([['A', 1, 15, 3.21],
                               ['A', 2, 16, 3.22],
                               ['B', 1, 17, 3.23],
                               ['B', 2, 18, 4.23]],
                              schema=["c1", "c2", "c3", "c4"])
df2 = session.create_dataframe([['A', 1, 14, 3.19],
                                ['B', 2, 16, 3.04]],
                               schema=["c1", "c2", "c3", "c4"])

df1.join(df2, on=(df1.c1 == df2.c1) & (df1.c2 == df2.c2), how="asof",
         match_condition=(df1.c3 >= df2.c3), lsuffix="_L", rsuffix="_R") \
         .order_by("C1_L", "C2_L").collect()

## EXPECTED UNPARSER OUTPUT

df1 = session.create_dataframe([["A", 1, 15, 3.21], ["A", 2, 16, 3.22], ["B", 1, 17, 3.23], ["B", 2, 18, 4.23]], schema=["c1", "c2", "c3", "c4"])

df2 = session.create_dataframe([["A", 1, 14, 3.19], ["B", 2, 16, 3.04]], schema=["c1", "c2", "c3", "c4"])

df1.join(df2, on=(df1["c1"] == df2["c1"]) & (df1["c2"] == df2["c2"]), how="asof", lsuffix="_L", rsuffix="_R", match_condition=df1["c3"] >= df2["c3"]).sort("C1_L", "C2_L").collect()

## EXPECTED ENCODED AST

CqkGCqYGCpYG0gWSBgrfBQrcBQq0AaICsAEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEiLyCx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEgFBEiGSAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEAESIZICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoQDxIo4gElChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWhGuR+F6FK4JQAq0AaICsAEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEiLyCx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEgFBEiGSAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEAISIZICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoQEBIo4gElChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWhHD9Shcj8IJQAq0AaICsAEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEiLyCx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEgFCEiGSAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEAESIZICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoQERIo4gElChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWhHXo3A9CtcJQAq0AaICsAEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEiLyCx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEgFCEiGSAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEAISIZICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoQEhIo4gElChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWhHsUbgehesQQBISChAKAmMxCgJjMgoCYzMKAmM0GhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWhIFCgNkZjEYASICCAEKuwMKuAMKqAPSBaQDCvECCu4CCrQBogKwAQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF8SIvILHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF8SAUESIZICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF8QARIhkgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXxAOEijiASUKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShfEYXrUbgehQlACrQBogKwAQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF8SIvILHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF8SAUISIZICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF8QAhIhkgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXxAQEijiASUKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShfEVK4HoXrUQhAEhIKEAoCYzEKAmMyCgJjMwoCYzQaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShfEgUKA2RmMhgCIgIIAgrpAwrmAwrbA8oH1wMKmQJylgIKe9oBeAosogYpCgJjMRIHigIECgIIARoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGMSLKIGKQoCYzESB4oCBAoCCAIaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShjGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYxJ72gF4CiyiBikKAmMyEgeKAgQKAggBGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYxIsogYpCgJjMhIHigIECgIIAhoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGMaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShjGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYxICCAEaB4oCBAoCCAEiBAoCX0wqe/IBeAosogYpCgJjMxIHigIECgIIARoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGQSLKIGKQoCYzMSB4oCBAoCCAIaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShkGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoZDIHigIECgIIAjoECgJfUkIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGMSABgDIgIIAwqFAQqCAQp4+gh1EiXyCyIKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShjEgRDMV9MEiXyCyIKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShjEgRDMl9MGAEiB4oCBAoCCAMqGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShjEgAYBCICCAQKMwoxCieqBiQIARABGgIIBDIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGMSABgFIgIIBQoIEgYIBhICCAUQARoREg8KDQoFZmluYWwQAxgIIBMiBBABGBU=
EAEaERIPCg0KBWZpbmFsEAMYCCATIgQQARgV
