## TEST CASE

df1 = session.create_dataframe([['A', 1, 15, 3.21],
                               ['A', 2, 16, 3.22],
                               ['B', 1, 17, 3.23],
                               ['B', 2, 18, 4.23]],
                              schema=["c1", "c2", "c3", "c4"])
df2 = session.create_dataframe([['A', 1, 14, 3.19],
                                ['B', 2, 16, 3.04]],
                               schema=["c1", "c2", "c3", "c4"])

df1.join(df2, on=(df1.c1 == df2.c1) & (df1.c2 == df2.c2), how="asof",
         match_condition=(df1.c3 >= df2.c3), lsuffix="_L", rsuffix="_R") \
         .order_by("C1_L", "C2_L").collect()

## EXPECTED UNPARSER OUTPUT

df1 = session.create_dataframe([["A", 1, 15, 3.21], ["A", 2, 16, 3.22], ["B", 1, 17, 3.23], ["B", 2, 18, 4.23]], schema=["c1", "c2", "c3", "c4"])

df2 = session.create_dataframe([["A", 1, 14, 3.19], ["B", 2, 16, 3.04]], schema=["c1", "c2", "c3", "c4"])

df1.join(df2, on=(df1["c1"] == df2["c1"]) & (df1["c2"] == df2["c2"]), how="asof", lsuffix="_L", rsuffix="_R", match_condition=df1["c3"] >= df2["c3"]).sort("C1_L", "C2_L").collect()

## EXPECTED ENCODED AST

CqkGCqYGCpYG+gWSBgrfBQrcBQq0AdICsAEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg/EiL6DB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg/EgFBEiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg/EAESIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKD8QDxIoggIlChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoPxGuR+F6FK4JQAq0AdICsAEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg/EiL6DB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg/EgFBEiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg/EAISIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKD8QEBIoggIlChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoPxHD9Shcj8IJQAq0AdICsAEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg/EiL6DB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg/EgFCEiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg/EAESIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKD8QERIoggIlChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoPxHXo3A9CtcJQAq0AdICsAEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg/EiL6DB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg/EgFCEiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg/EAISIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKD8QEhIoggIlChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoPxHsUbgehesQQBISChAKAmMxCgJjMgoCYzMKAmM0GhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoPxIFCgNkZjEYASICCAEKuwMKuAMKqAP6BaQDCvECCu4CCrQB0gKwAQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEQSIvoMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEQSAUESIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEQQARIhwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoRBAOEiiCAiUKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShEEYXrUbgehQlACrQB0gKwAQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEQSIvoMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEQSAUISIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEQQAhIhwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoRBAQEiiCAiUKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShEEVK4HoXrUQhAEhIKEAoCYzEKAmMyCgJjMwoCYzQaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShEEgUKA2RmMhgCIgIIAgrqAwrnAwrcA/IH2AMKmgKKAZYCCnv6AXgKLMoGKQoCYzESB4ICBAoCCAEaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShIEizKBikKAmMxEgeCAgQKAggCGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoSBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEgSe/oBeAosygYpCgJjMhIHggIECgIIARoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEgSLMoGKQoCYzISB4ICBAoCCAIaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShIGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoSBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEgSAggBGgeCAgQKAggBIgQKAl9MKnuSAngKLMoGKQoCYzMSB4ICBAoCCAEaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShJEizKBikKAmMzEgeCAgQKAggCGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoSRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEkyB4ICBAoCCAI6BAoCX1JCGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShIEgAYAyICCAMKhQEKggEKeJoJdRIl+gwiChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoSBIEQzFfTBIl+gwiChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoSBIEQzJfTBgBIgeCAgQKAggDKhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoSBIAGAQiAggECjMKMQon0gYkCAEQARoCCAQyGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShIEgAYBSICCAUKCBIGCAYSAggFEAEaERIPCg0KBWZpbmFsEAMYCSAUIgQQARgX
EAEaERIPCg0KBWZpbmFsEAMYCSAUIgQQARgX
