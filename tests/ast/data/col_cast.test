## TEST CASE

df = session.table("test_table")

df = df.select(col("A").cast("null"))

df = df.select(col("A").cast("binary"))

df = df.select(col("A").cast("boolean"))

df = df.select(col("A").cast("date"))

df = df.select(col("A").cast("string"))

df = df.select(col("A").cast("byte"))

df = df.select(col("A").cast("short"))

df = df.select(col("A").cast("integer"))

df = df.select(col("A").cast("long"))

df = df.select(col("A").cast("float"))

df = df.select(col("A").cast("double"))

df = df.select(col("A").cast("timestamp"))

df = df.select(col("A").cast("time"))

df = df.select(col("A").cast("array"))

df = df.select(col("A").cast("map"))

df = df.select(col("A").cast(VectorType(float, 42)))

df = df.select(col("A").cast("struct"))

df = df.select(col("A").cast("variant"))

df = df.select(col("A").cast("geography"))

df = df.select(col("A").cast("geometry"))

df = df.select(col("A").cast("int"))

df = df.select(col("A").cast("smallint"))

df = df.select(col("A").cast("byteint"))

df = df.select(col("A").cast("bigint"))

df = df.select(col("A").cast("number"))

df = df.select(col("A").cast("numeric"))

df = df.select(col("A").cast("object"))


## EXPECTED ENCODED AST

CkMKQQozogswEg4KDAoKdGVzdF90YWJsZRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFQiAggBEgQKAmRmGB0iAggdCtEBCs4BCr8B4gi7AQqRAaIEjQEKa3ppCicKJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFYaIuoLHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFYSAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShWEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoVhoCeAESB4oCBAoCCB0aGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShWIAESBAoCZGYYHiICCB4K0QEKzgEKvwHiCLsBCpEBogSNAQpremkKJwolCgcKBQoDY29sEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWBoi6gsfChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWBIBQSIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFgSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShYGgIQARIHigIECgIIHhoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFggARIECgJkZhgfIgIIHwrRAQrOAQq/AeIIuwEKkQGiBI0BCmt6aQonCiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaGiLqCx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEgFBIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWhIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoaAhgBEgeKAgQKAggfGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWiABEgQKAmRmGCAiAgggCtEBCs4BCr8B4gi7AQqRAaIEjQEKa3ppCicKJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFwaIuoLHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFwSAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShcEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXBoCMAESB4oCBAoCCCAaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShcIAESBAoCZGYYISICCCEK1AEK0QEKwgHiCL4BCpQBogSQAQpremkKJwolCgcKBQoDY29sEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXhoi6gsfChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXhIBQSIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF4SGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSheGgWKAQIKABIHigIECgIIIRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF4gARIECgJkZhgiIgIIIgrRAQrOAQq/AeIIuwEKkQGiBI0BCmt6aQonCiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShgGiLqCx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShgEgFBIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGAaAiABEgeKAgQKAggiGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYCABEgQKAmRmGCMiAggjCtIBCs8BCsAB4gi8AQqSAaIEjgEKa3ppCicKJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGIaIuoLHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGISAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShiEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYhoDgAEBEgeKAgQKAggjGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYiABEgQKAmRmGCQiAggkCtEBCs4BCr8B4gi7AQqRAaIEjQEKa3ppCicKJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGQaIuoLHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGQSAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShkEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoZBoCYAESB4oCBAoCCCQaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShkIAESBAoCZGYYJSICCCUK0QEKzgEKvwHiCLsBCpEBogSNAQpremkKJwolCgcKBQoDY29sEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoZhoi6gsfChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoZhIBQSIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGYSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShmGgJoARIHigIECgIIJRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGYgARIECgJkZhgmIgIIJgrRAQrOAQq/AeIIuwEKkQGiBI0BCmt6aQonCiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShoGiLqCx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShoEgFBIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGgaAkgBEgeKAgQKAggmGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaCABEgQKAmRmGCciAggnCtEBCs4BCr8B4gi7AQqRAaIEjQEKa3ppCicKJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGoaIuoLHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGoSAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShqEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoahoCQAESB4oCBAoCCCcaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShqIAESBAoCZGYYKCICCCgK1gEK0wEKxAHiCMABCpYBogSSAQpremkKJwolCgcKBQoDY29sEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUobBoi6gsfChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUobBIBQSIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGwSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShsGgeqAQQKAggBEgeKAgQKAggoGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUobCABEgQKAmRmGCkiAggpCtIBCs8BCsAB4gi8AQqSAaIEjgEKa3ppCicKJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKG4aIuoLHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKG4SAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShuEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUobhoDoAEBEgeKAgQKAggpGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUobiABEgQKAmRmGCoiAggqCtgBCtUBCsYB4gjCAQqYAaIElAEKa3ppCicKJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKHAaIuoLHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKHASAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShwEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUocBoJCgcSBYoBAgoAEgeKAgQKAggqGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUocCABEgQKAmRmGCsiAggrCt8BCtwBCs0B4gjJAQqfAaIEmwEKa3ppCicKJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKHIaIuoLHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKHISAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShyEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUochoQcg4KBYoBAgoAGgWKAQIKABIHigIECgIIKxoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKHIgARIECgJkZhgsIgIILArYAQrVAQrGAeIIwgEKmAGiBJQBCmt6aQonCiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSh0GiLqCx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSh0EgFBIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUodBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKHQaCboBBggqEgJIARIHigIECgIILBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKHQgARIECgJkZhgtIgIILQrSAQrPAQrAAeIIvAEKkgGiBI4BCmt6aQonCiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSh2GiLqCx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSh2EgFBIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUodhIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKHYaA5oBABIHigIECgIILRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKHYgARIECgJkZhguIgIILgrSAQrPAQrAAeIIvAEKkgGiBI4BCmt6aQonCiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSh4GiLqCx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSh4EgFBIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoeBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKHgaA7ABARIHigIECgIILhoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKHggARIECgJkZhgvIgIILwrRAQrOAQq/AeIIuwEKkQGiBI0BCmt6aQonCiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSh6GiLqCx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSh6EgFBIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoehIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKHoaAlABEgeKAgQKAggvGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoeiABEgQKAmRmGDAiAggwCtEBCs4BCr8B4gi7AQqRAaIEjQEKa3ppCicKJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKHwaIuoLHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKHwSAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSh8EhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUofBoCWAESB4oCBAoCCDAaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSh8IAESBAoCZGYYMSICCDEK0QEKzgEKvwHiCLsBCpEBogSNAQpremkKJwolCgcKBQoDY29sEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUofhoi6gsfChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUofhIBQSIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKH4SGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSh+GgJgARIHigIECgIIMRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKH4gARIECgJkZhgyIgIIMgrXAQrUAQrFAeIIwQEKlgGiBJIBCm56bAooCiYKBwoFCgNjb2wSGxoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSiAARoj6gsgChsaFlNSQ19QT1NJVElPTl9URVNUX01PREUogAESAUEiGxoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSiAARIbGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKIABGgOAAQESB4oCBAoCCDIaGxoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSiAASABEgQKAmRmGDMiAggzCtYBCtMBCsQB4gjAAQqVAaIEkQEKbnpsCigKJgoHCgUKA2NvbBIbGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKIIBGiPqCyAKGxoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSiCARIBQSIbGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKIIBEhsaFlNSQ19QT1NJVElPTl9URVNUX01PREUoggEaAiABEgeKAgQKAggzGhsaFlNSQ19QT1NJVElPTl9URVNUX01PREUoggEgARIECgJkZhg0IgIINArWAQrTAQrEAeIIwAEKlQGiBJEBCm56bAooCiYKBwoFCgNjb2wSGxoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSiEARoj6gsgChsaFlNSQ19QT1NJVElPTl9URVNUX01PREUohAESAUEiGxoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSiEARIbGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKIQBGgJoARIHigIECgIINBobGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKIQBIAESBAoCZGYYNSICCDUK2AEK1QEKxgHiCMIBCpcBogSTAQpuemwKKAomCgcKBQoDY29sEhsaFlNSQ19QT1NJVElPTl9URVNUX01PREUohgEaI+oLIAobGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKIYBEgFBIhsaFlNSQ19QT1NJVElPTl9URVNUX01PREUohgESGxoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSiGARoEOgIIJhIHigIECgIINRobGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKIYBIAESBAoCZGYYNiICCDYK2AEK1QEKxgHiCMIBCpcBogSTAQpuemwKKAomCgcKBQoDY29sEhsaFlNSQ19QT1NJVElPTl9URVNUX01PREUoiAEaI+oLIAobGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKIgBEgFBIhsaFlNSQ19QT1NJVElPTl9URVNUX01PREUoiAESGxoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSiIARoEOgIIJhIHigIECgIINhobGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKIgBIAESBAoCZGYYNyICCDcK5AEK4QEK0gHiCM4BCqMBogSfAQpuemwKKAomCgcKBQoDY29sEhsaFlNSQ19QT1NJVElPTl9URVNUX01PREUoigEaI+oLIAobGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKIoBEgFBIhsaFlNSQ19QT1NJVElPTl9URVNUX01PREUoigESGxoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSiKARoQcg4KBYoBAgoAGgWKAQIKABIHigIECgIINxobGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKIoBIAESBAoCZGYYOCICCDgQARoREg8KDQoFZmluYWwQAxgIIBMiBBABGBU=

## EXPECTED UNPARSER OUTPUT

df = session.table("test_table")

df = df.select(col("A").cast(NullType()))

df = df.select(col("A").cast(BinaryType()))

df = df.select(col("A").cast(BooleanType()))

df = df.select(col("A").cast(DateType()))

df = df.select(col("A").cast(StringType()))

df = df.select(col("A").cast(ByteType()))

df = df.select(col("A").cast(ShortType()))

df = df.select(col("A").cast(IntegerType()))

df = df.select(col("A").cast(LongType()))

df = df.select(col("A").cast(FloatType()))

df = df.select(col("A").cast(DoubleType()))

df = df.select(col("A").cast(TimestampType()))

df = df.select(col("A").cast(TimeType()))

df = df.select(col("A").cast(ArrayType(StringType(), structured=False)))

df = df.select(col("A").cast(MapType(StringType(), StringType(), structured=False)))

df = df.select(col("A").cast(VectorType(FloatType(), 42)))

df = df.select(col("A").cast(StructType([], structured=False)))

df = df.select(col("A").cast(VariantType()))

df = df.select(col("A").cast(GeographyType()))

df = df.select(col("A").cast(GeometryType()))

df = df.select(col("A").cast(IntegerType()))

df = df.select(col("A").cast(ShortType()))

df = df.select(col("A").cast(ByteType()))

df = df.select(col("A").cast(LongType()))

df = df.select(col("A").cast(DecimalType(38, 0)))

df = df.select(col("A").cast(DecimalType(38, 0)))

df = df.select(col("A").cast(MapType(StringType(), StringType(), structured=False)))
