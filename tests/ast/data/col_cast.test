## TEST CASE

df = session.table(tables.table1)

df = df.select(col("A").cast("null"))

df = df.select(col("A").cast("binary"))

df = df.select(col("A").cast("boolean"))

df = df.select(col("A").cast("date"))

df = df.select(col("A").cast("string"))

df = df.select(col("A").cast("byte"))

df = df.select(col("A").cast("short"))

df = df.select(col("A").cast("integer"))

df = df.select(col("A").cast("long"))

df = df.select(col("A").cast("float"))

df = df.select(col("A").cast("double"))

df = df.select(col("A").cast("timestamp"))

df = df.select(col("A").cast("time"))

df = df.select(col("A").cast("array"))

df = df.select(col("A").cast("map"))

df = df.select(col("A").cast(VectorType(float, 42)))

df = df.select(col("A").cast("struct"))

df = df.select(col("A").cast("variant"))

df = df.select(col("A").cast("geography"))

df = df.select(col("A").cast("geometry"))

df = df.select(col("A").cast("int"))

df = df.select(col("A").cast("smallint"))

df = df.select(col("A").cast("byteint"))

df = df.select(col("A").cast("bigint"))

df = df.select(col("A").cast("number"))

df = df.select(col("A").cast("numeric"))

df = df.select(col("A").cast("object"))


## EXPECTED UNPARSER OUTPUT

df = session.table("table1")

df = df.select(col("A").cast(NullType()))

df = df.select(col("A").cast(BinaryType()))

df = df.select(col("A").cast(BooleanType()))

df = df.select(col("A").cast(DateType()))

df = df.select(col("A").cast(StringType()))

df = df.select(col("A").cast(ByteType()))

df = df.select(col("A").cast(ShortType()))

df = df.select(col("A").cast(IntegerType()))

df = df.select(col("A").cast(LongType()))

df = df.select(col("A").cast(FloatType()))

df = df.select(col("A").cast(DoubleType()))

df = df.select(col("A").cast(TimestampType()))

df = df.select(col("A").cast(TimeType()))

df = df.select(col("A").cast(ArrayType(StringType(), structured=False)))

df = df.select(col("A").cast(MapType(StringType(), StringType(), structured=False)))

df = df.select(col("A").cast(VectorType(FloatType(), 42)))

df = df.select(col("A").cast(StructType([], structured=False)))

df = df.select(col("A").cast(VariantType()))

df = df.select(col("A").cast(GeographyType()))

df = df.select(col("A").cast(GeometryType()))

df = df.select(col("A").cast(IntegerType()))

df = df.select(col("A").cast(ShortType()))

df = df.select(col("A").cast(ByteType()))

df = df.select(col("A").cast(LongType()))

df = df.select(col("A").cast(DecimalType(38, 0)))

df = df.select(col("A").cast(DecimalType(38, 0)))

df = df.select(col("A").cast(MapType(StringType(), StringType(), structured=False)))

## EXPECTED ENCODED AST

Cj8KPQovggwsEgoKCAoGdGFibGUxGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoGSICCAESBAoCZGYYASICCAEKtAEKsQEKogGCCZ4BCnXSBHIKUJIBTQoLGgkKBwoFCgNjb2waIvoMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKBsSAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgbEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoGxoCeAESB4ICBAoCCAEaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgbIAESBAoCZGYYAiICCAIKtAEKsQEKogGCCZ4BCnXSBHIKUJIBTQoLGgkKBwoFCgNjb2waIvoMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKB0SAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgdEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoHRoCEAESB4ICBAoCCAIaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgdIAESBAoCZGYYAyICCAMKtAEKsQEKogGCCZ4BCnXSBHIKUJIBTQoLGgkKBwoFCgNjb2waIvoMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKB8SAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgfEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoHxoCGAESB4ICBAoCCAMaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgfIAESBAoCZGYYBCICCAQKtAEKsQEKogGCCZ4BCnXSBHIKUJIBTQoLGgkKBwoFCgNjb2waIvoMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKCESAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSghEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoIRoCMAESB4ICBAoCCAQaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSghIAESBAoCZGYYBSICCAUKtwEKtAEKpQGCCaEBCnjSBHUKUJIBTQoLGgkKBwoFCgNjb2waIvoMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKCMSAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgjEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoIxoFmgECCgASB4ICBAoCCAUaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgjIAESBAoCZGYYBiICCAYKtAEKsQEKogGCCZ4BCnXSBHIKUJIBTQoLGgkKBwoFCgNjb2waIvoMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKCUSAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSglEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoJRoCIAESB4ICBAoCCAYaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSglIAESBAoCZGYYByICCAcKtQEKsgEKowGCCZ8BCnbSBHMKUJIBTQoLGgkKBwoFCgNjb2waIvoMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKCcSAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgnEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoJxoDkAEBEgeCAgQKAggHGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoJyABEgQKAmRmGAgiAggICrQBCrEBCqIBggmeAQp10gRyClCSAU0KCxoJCgcKBQoDY29sGiL6DB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgpEgFBIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoKRIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKCkaAmABEgeCAgQKAggIGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoKSABEgQKAmRmGAkiAggJCrQBCrEBCqIBggmeAQp10gRyClCSAU0KCxoJCgcKBQoDY29sGiL6DB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgrEgFBIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoKxIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKCsaAmgBEgeCAgQKAggJGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoKyABEgQKAmRmGAoiAggKCrQBCrEBCqIBggmeAQp10gRyClCSAU0KCxoJCgcKBQoDY29sGiL6DB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgtEgFBIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoLRIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKC0aAkgBEgeCAgQKAggKGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoLSABEgQKAmRmGAsiAggLCrQBCrEBCqIBggmeAQp10gRyClCSAU0KCxoJCgcKBQoDY29sGiL6DB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgvEgFBIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoLxIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKC8aAkABEgeCAgQKAggLGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoLyABEgQKAmRmGAwiAggMCrkBCrYBCqcBggmjAQp60gR3ClCSAU0KCxoJCgcKBQoDY29sGiL6DB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgxEgFBIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoMRIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKDEaB7oBBAoCCAESB4ICBAoCCAwaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgxIAESBAoCZGYYDSICCA0KtQEKsgEKowGCCZ8BCnbSBHMKUJIBTQoLGgkKBwoFCgNjb2waIvoMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKDMSAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgzEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoMxoDsAEBEgeCAgQKAggNGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoMyABEgQKAmRmGA4iAggOCrsBCrgBCqkBggmlAQp80gR5ClCSAU0KCxoJCgcKBQoDY29sGiL6DB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg1EgFBIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoNRIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKDUaCQoHEgWaAQIKABIHggIECgIIDhoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKDUgARIECgJkZhgPIgIIDwrEAQrBAQqyAYIJrgEKhAHSBIABClCSAU0KCxoJCgcKBQoDY29sGiL6DB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg3EgFBIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoNxIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKDcaEHIOCgWaAQIKABoFmgECCgASB4ICBAoCCA8aGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg3IAESBAoCZGYYECICCBAKuwEKuAEKqQGCCaUBCnzSBHkKUJIBTQoLGgkKBwoFCgNjb2waIvoMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKDkSAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg5EhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoORoJygEGCCoSAkgBEgeCAgQKAggQGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoOSABEgQKAmRmGBEiAggRCrUBCrIBCqMBggmfAQp20gRzClCSAU0KCxoJCgcKBQoDY29sGiL6DB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg7EgFBIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoOxIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKDsaA6oBABIHggIECgIIERoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKDsgARIECgJkZhgSIgIIEgq1AQqyAQqjAYIJnwEKdtIEcwpQkgFNCgsaCQoHCgUKA2NvbBoi+gwfChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoPRIBQSIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKD0SGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg9GgPAAQESB4ICBAoCCBIaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg9IAESBAoCZGYYEyICCBMKtAEKsQEKogGCCZ4BCnXSBHIKUJIBTQoLGgkKBwoFCgNjb2waIvoMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKD8SAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg/EhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoPxoCUAESB4ICBAoCCBMaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSg/IAESBAoCZGYYFCICCBQKtAEKsQEKogGCCZ4BCnXSBHIKUJIBTQoLGgkKBwoFCgNjb2waIvoMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEESAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShBEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoQRoCWAESB4ICBAoCCBQaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShBIAESBAoCZGYYFSICCBUKtAEKsQEKogGCCZ4BCnXSBHIKUJIBTQoLGgkKBwoFCgNjb2waIvoMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEMSAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShDEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoQxoCYAESB4ICBAoCCBUaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShDIAESBAoCZGYYFiICCBYKtQEKsgEKowGCCZ8BCnbSBHMKUJIBTQoLGgkKBwoFCgNjb2waIvoMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEUSAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShFEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoRRoDkAEBEgeCAgQKAggWGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoRSABEgQKAmRmGBciAggXCrQBCrEBCqIBggmeAQp10gRyClCSAU0KCxoJCgcKBQoDY29sGiL6DB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShHEgFBIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoRxIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEcaAiABEgeCAgQKAggXGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoRyABEgQKAmRmGBgiAggYCrQBCrEBCqIBggmeAQp10gRyClCSAU0KCxoJCgcKBQoDY29sGiL6DB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShJEgFBIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoSRIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEkaAmgBEgeCAgQKAggYGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoSSABEgQKAmRmGBkiAggZCrYBCrMBCqQBggmgAQp30gR0ClCSAU0KCxoJCgcKBQoDY29sGiL6DB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShLEgFBIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoSxIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEsaBDoCCCYSB4ICBAoCCBkaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShLIAESBAoCZGYYGiICCBoKtgEKswEKpAGCCaABCnfSBHQKUJIBTQoLGgkKBwoFCgNjb2waIvoMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKE0SAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShNEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoTRoEOgIIJhIHggIECgIIGhoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKE0gARIECgJkZhgbIgIIGwrEAQrBAQqyAYIJrgEKhAHSBIABClCSAU0KCxoJCgcKBQoDY29sGiL6DB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShPEgFBIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoTxIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKE8aEHIOCgWaAQIKABoFmgECCgASB4ICBAoCCBsaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShPIAESBAoCZGYYHCICCBwQARoREg8KDQoFZmluYWwQAxgJIBIiBBABGBc=
