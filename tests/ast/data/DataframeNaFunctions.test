## TEST CASE

df = session.table(tables.table1)

drop1 = df.na.drop()

drop2 = df.na.drop(how="all")

drop3 = df.na.drop(how="any", thresh=42)

drop4 = df.na.drop(subset="STR")

drop5 = df.na.drop(how="all", subset=["NUM", "STR"])

drop6 = df.na.drop(how="any", thresh=42, subset=["NUM"])

fill1 = df.na.fill(42)

fill2 = df.na.fill({"NUM": 42, "STR": "abc"})

fill3 = df.na.fill(42, subset="NUM")

fill4 = df.na.fill("def", subset=["STR"])

replace1 = df.na.replace({1: 10, "three": "trzy"})

replace2 = df.na.replace([1, 2], [10, 20])

replace3 = df.na.replace(1, 10, subset=["NUM"])

## EXPECTED UNPARSER OUTPUT

df = session.table("table1")

drop1 = df.na.drop("any")

drop2 = df.na.drop("all")

drop3 = df.na.drop("any", 42)

drop4 = df.na.drop("any", ["STR"])

drop5 = df.na.drop("all", ["NUM", "STR"])

drop6 = df.na.drop("any", 42, ["NUM"])

fill1 = df.na.fill(42)

fill2 = df.na.fill({"NUM": 42, "STR": "abc"})

fill3 = df.na.fill(42, ["NUM"])

fill4 = df.na.fill("def", ["STR"])

replace1 = df.na.replace({1: 10, "three": "trzy"}, None)

replace2 = df.na.replace([1, 2], [10, 20])

replace3 = df.na.replace(1, 10, ["NUM"])

## EXPECTED ENCODED AST

Cj8KPQovggwsEgoKCAoGdGFibGUxGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoRiICCAESBAoCZGYYASICCAEKQAo+Ci2aCCoKB4ICBAoCCAESA2FueRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEgSBwoFZHJvcDEYAiICCAIKQAo+Ci2aCCoKB4ICBAoCCAESA2FsbBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEoSBwoFZHJvcDIYAyICCAMKRApCCjGaCC4KB4ICBAoCCAESA2FueRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEwqAggqEgcKBWRyb3AzGAQiAggECkcKRQo0mggxCgeCAgQKAggBEgNhbnkaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShOIgUKA1NUUhIHCgVkcm9wNBgFIgIIBQpMCkoKOZoINgoHggIECgIIARIDYWxsGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoUCIKCgNOVU0KA1NUUhIHCgVkcm9wNRgGIgIIBgpLCkkKOJoINQoHggIECgIIARIDYW55GhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoUiIFCgNOVU0qAggqEgcKBWRyb3A2GAciAggHCl4KXApLqghICgeCAgQKAggBEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoVCIhwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoVBAqEgcKBWZpbGwxGAgiAggICpYBCpMBCoEBqgh+CgeCAgQKAggBEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoVipXCigKA05VTRIhwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoVhAqCisKA1NUUhIk+gwhChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoVhIDYWJjEgcKBWZpbGwyGAkiAggJCmUKYwpSqghPCgeCAgQKAggBEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWBoFCgNOVU0iIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFgQKhIHCgVmaWxsMxgKIgIICgpoCmYKVaoIUgoHggIECgIIARIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoaBQoDU1RSIiT6DCEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEgNkZWYSBwoFZmlsbDQYCyICCAsK/gEK+wEK5gGyCOIBCgeCAgQKAggBEpkBCkYKIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFwQARIhwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXBAKCk8KJvoMIwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFwSBXRocmVlEiX6DCIKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShcEgR0cnp5GhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXDofkgMcChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXBIKCghyZXBsYWNlMRgMIgIIDArRAQrOAQq5AbIItQEKB4ICBAoCCAEaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSheKkYKIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF4QAQohwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXhACQkYKIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF4QCgohwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXhAUEgoKCHJlcGxhY2UyGA0iAggNCowBCokBCnWyCHIKB4ICBAoCCAEaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShgIgUKA05VTTIhwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYBABOiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShgEAoSCgoIcmVwbGFjZTMYDiICCA4QARoREg8KDQoFZmluYWwQAxgJIBQiBBABGBc=
