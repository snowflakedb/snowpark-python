## TEST CASE

df = session.table("test_table")

drop1 = df.na.drop()

drop2 = df.na.drop(how="all")

drop3 = df.na.drop(how="any", thresh=42)

drop4 = df.na.drop(subset="STR")

drop5 = df.na.drop(how="all", subset=["NUM", "STR"])

drop6 = df.na.drop(how="any", thresh=42, subset=["NUM"])

fill1 = df.na.fill(42)

fill2 = df.na.fill({"NUM": 42, "STR": "abc"})

fill3 = df.na.fill(42, subset="NUM")

fill4 = df.na.fill("def", subset=["STR"])

replace1 = df.na.replace({1: 10, "three": "trzy"})

replace2 = df.na.replace([1, 2], [10, 20])

replace3 = df.na.replace(1, 10, subset=["NUM"])

## EXPECTED UNPARSER OUTPUT

df = session.table("test_table")

drop1 = df.na.drop("any")

drop2 = df.na.drop("all")

drop3 = df.na.drop("any", 42)

drop4 = df.na.drop("any", ["STR"])

drop5 = df.na.drop("all", ["NUM", "STR"])

drop6 = df.na.drop("any", 42, ["NUM"])

fill1 = df.na.fill(42)

fill2 = df.na.fill({"NUM": 42, "STR": "abc"}})

fill3 = df.na.fill(42, ["NUM"])

fill4 = df.na.fill("def", ["STR"])

replace1 = df.na.replace({1: 10, "three": "trzy"}, None)

replace2 = df.na.replace([1, 2], [10, 20])

replace3 = df.na.replace(1, 10, ["NUM"])

## EXPECTED ENCODED AST

CkMKQQozwgswEg4KDAoKdGVzdF90YWJsZRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoiAggBEgQKAmRmGAEiAggBCkAKPgot+gcqCgeKAgQKAggBEgNhbnkaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShcEgcKBWRyb3AxGAIiAggCCkAKPgot+gcqCgeKAgQKAggBEgNhbGwaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSheEgcKBWRyb3AyGAMiAggDCkQKQgox+gcuCgeKAgQKAggBEgNhbnkaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShgKgIIKhIHCgVkcm9wMxgEIgIIBApHCkUKNPoHMQoHigIECgIIARIDYW55GhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYiIFCgNTVFISBwoFZHJvcDQYBSICCAUKTApKCjn6BzYKB4oCBAoCCAESA2FsbBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGQiCgoDTlVNCgNTVFISBwoFZHJvcDUYBiICCAYKSwpJCjj6BzUKB4oCBAoCCAESA2FueRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGYiBQoDTlVNKgIIKhIHCgVkcm9wNhgHIgIIBwpeClwKS4oISAoHigIECgIIARIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGgiIZICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGgQKhIHCgVmaWxsMRgIIgIICAqWAQqTAQqBAYoIfgoHigIECgIIARIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGoqVwooCgNOVU0SIZICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGoQKgorCgNTVFISJIoMIQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGoSA2FiYxIHCgVmaWxsMhgJIgIICQplCmMKUooITwoHigIECgIIARIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGwaBQoDTlVNIiGSAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShsECoSBwoFZmlsbDMYCiICCAoKaApmClWKCFIKB4oCBAoCCAESGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShuGgUKA1NUUiIkigwhChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUobhIDZGVmEgcKBWZpbGw0GAsiAggLCv4BCvsBCuYBkgjiAQoHigIECgIIARKZAQpGCiGSAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShwEAESIZICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKHAQCgpPCiaKDCMKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShwEgV0aHJlZRIligwiChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUocBIEdHJ6eRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKHA6H+ICHAoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKHASCgoIcmVwbGFjZTEYDCICCAwK0QEKzgEKuQGSCLUBCgeKAgQKAggBGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUocipGCiGSAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShyEAEKIZICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKHIQAkJGCiGSAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShyEAoKIZICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKHIQFBIKCghyZXBsYWNlMhgNIgIIDQqMAQqJAQp1kghyCgeKAgQKAggBGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUodCIFCgNOVU0yIZICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKHQQATohkgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUodBAKEgoKCHJlcGxhY2UzGA4iAggOEAEaERIPCg0KBWZpbmFsEAMYCSAUIgQQARgV
