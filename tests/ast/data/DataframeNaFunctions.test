## TEST CASE

df = session.table(tables.table1)

drop1 = df.na.drop()

drop2 = df.na.drop(how="all")

drop3 = df.na.drop(how="any", thresh=42)

drop4 = df.na.drop(subset="STR")

drop5 = df.na.drop(how="all", subset=["NUM", "STR"])

drop6 = df.na.drop(how="any", thresh=42, subset=["NUM"])

fill1 = df.na.fill(42)

fill2 = df.na.fill({"NUM": 42, "STR": "abc"})

fill3 = df.na.fill(42, subset="NUM")

fill4 = df.na.fill("def", subset=["STR"])

replace1 = df.na.replace({1: 10, "three": "trzy"})

replace2 = df.na.replace([1, 2], [10, 20])

replace3 = df.na.replace(1, 10, subset=["NUM"])

## EXPECTED UNPARSER OUTPUT

df = session.table("table1")

drop1 = df.na.drop("any")

drop2 = df.na.drop("all")

drop3 = df.na.drop("any", 42)

drop4 = df.na.drop("any", ["STR"])

drop5 = df.na.drop("all", ["NUM", "STR"])

drop6 = df.na.drop("any", 42, ["NUM"])

fill1 = df.na.fill(42)

fill2 = df.na.fill({"NUM": 42, "STR": "abc"})

fill3 = df.na.fill(42, ["NUM"])

fill4 = df.na.fill("def", ["STR"])

replace1 = df.na.replace({1: 10, "three": "trzy"}, None)

replace2 = df.na.replace([1, 2], [10, 20])

replace3 = df.na.replace(1, 10, ["NUM"])

## EXPECTED ENCODED AST

Cj8KPQovggwsEgoKCAoGdGFibGUxGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoPyICCAESBAoCZGYYASICCAEKQAo+Ci2aCCoKB4ICBAoCCAESA2FueRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEESBwoFZHJvcDEYAiICCAIKQAo+Ci2aCCoKB4ICBAoCCAESA2FsbBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEMSBwoFZHJvcDIYAyICCAMKRApCCjGaCC4KB4ICBAoCCAESA2FueRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEUqAggqEgcKBWRyb3AzGAQiAggECkcKRQo0mggxCgeCAgQKAggBEgNhbnkaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShHIgUKA1NUUhIHCgVkcm9wNBgFIgIIBQpMCkoKOZoINgoHggIECgIIARIDYWxsGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoSSIKCgNOVU0KA1NUUhIHCgVkcm9wNRgGIgIIBgpLCkkKOJoINQoHggIECgIIARIDYW55GhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoSyIFCgNOVU0qAggqEgcKBWRyb3A2GAciAggHCl4KXApLqghICgeCAgQKAggBEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoTSIhwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoTRAqEgcKBWZpbGwxGAgiAggICpYBCpMBCoEBqgh+CgeCAgQKAggBEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoTypXCigKA05VTRIhwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoTxAqCisKA1NUUhIk+gwhChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoTxIDYWJjEgcKBWZpbGwyGAkiAggJCmUKYwpSqghPCgeCAgQKAggBEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoURoFCgNOVU0iIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFEQKhIHCgVmaWxsMxgKIgIICgpoCmYKVaoIUgoHggIECgIIARIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFMaBQoDU1RSIiT6DCEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShTEgNkZWYSBwoFZmlsbDQYCyICCAsK/gEK+wEK5gGyCOIBCgeCAgQKAggBEpkBCkYKIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFUQARIhwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoVRAKCk8KJvoMIwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFUSBXRocmVlEiX6DCIKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShVEgR0cnp5GhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoVTofkgMcChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoVRIKCghyZXBsYWNlMRgMIgIIDArRAQrOAQq5AbIItQEKB4ICBAoCCAEaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShXKkYKIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFcQAQohwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoVxACQkYKIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFcQCgohwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoVxAUEgoKCHJlcGxhY2UyGA0iAggNCowBCokBCnWyCHIKB4ICBAoCCAEaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShZIgUKA05VTTIhwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWRABOiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShZEAoSCgoIcmVwbGFjZTMYDiICCA4QARoREg8KDQoFZmluYWwQAxgJIBQiBBABGBc=
