## TEST CASE

from snowflake.snowpark import Row

from snowflake.snowpark.types import IntegerType, StringType, StructField

df = session.create_dataframe([Row(a=1, b=2, c=3), Row(c=4, a=2)])

df2 = session.create_dataframe([Row(1, 3, 2), Row(1, 2, 3), Row(3, 2, 1)])

df3 = session.create_dataframe([[1, 2], [3, 4]], schema=["a", "b"])

schema = StructType([StructField("a", IntegerType()), StructField("b", StringType())])

df4 = session.create_dataframe([[1, "snow"], [3, "flake"]], schema)

df5 = session.create_dataframe([1, 2, 3, 4], schema=["a"])

df6 = session.create_dataframe([[1, 2, 3, 4]], schema=["a", "b", "c", "d"])

df7 = session.create_dataframe([[1, 2], [3, 4]], schema=["a", "b"])

df8 = session.create_dataframe([Row(a=1, b=2, c=3, d=4)])

df9 = session.create_dataframe([{"a": 1}, {"b": 2}])

## EXPECTED UNPARSER OUTPUT

df = session.create_dataframe([Row(a=1, b=2, c=3), Row(c=4, a=2)])

df2 = session.create_dataframe([Row(1, 3, 2), Row(1, 2, 3), Row(3, 2, 1)])

df3 = session.create_dataframe([[1, 2], [3, 4]], schema=["a", "b"])

df4 = session.create_dataframe([[1, "snow"], [3, "flake"]], schema=StructType([StructField("a", IntegerType(), nullable=True), StructField("b", StringType(), nullable=True)], structured=False))

df5 = session.create_dataframe([1, 2, 3, 4], schema=["a"])

df6 = session.create_dataframe([[1, 2, 3, 4]], schema=["a", "b", "c", "d"])

df7 = session.create_dataframe([[1, 2], [3, 4]], schema=["a", "b"])

df8 = session.create_dataframe([Row(a=1, b=2, c=3, d=4)])

df9 = session.create_dataframe([{"a": 1}, {"b": 2}])

## EXPECTED ENCODED AST

Cr4CCrsCCqwC+gWoAgqJAgqGAgqUAeILkAEKCQoBYQoBYgoBYxIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKB0aIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKB0QARohwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoHRACGiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgdEAMKbeILagoGCgFjCgFhEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoHRohwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoHRAEGiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgdEAIaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgdEgQKAmRmGAEiAggBCt0DCtoDCsoD+gXGAwqnAwqkAwqJAeILhQESGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgfGiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgfEAEaIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKB8QAxohwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoHxACCokB4guFARIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKB8aIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKB8QARohwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoHxACGiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgfEAMKiQHiC4UBEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoHxohwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoHxADGiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgfEAIaIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKB8QARoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKB8SBQoDZGYyGAIiAggCCpECCo4CCv4B+gX6AQrRAQrOAQpl0gJiChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoIRIhwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoIRABEiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSghEAIKZdICYgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKCESIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKCEQAxIhwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoIRAEEggKBgoBYQoBYhoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKCESBQoDZGYzGAMiAggDCrMCCrACCqAC+gWcAgraAQrXAQpp0gJmChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoJRIhwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoJRABEiX6DCIKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSglEgRzbm93CmrSAmcKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSglEiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSglEAMSJvoMIwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKCUSBWZsYWtlEiESHwodCgsKAwoBYRICYAEYAQoOCgMKAWISBZoBAgoAGAEaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSglEgUKA2RmNBgEIgIIBArMAQrJAQq5AfoFtQEKjwEKjAEKIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKCcQAQohwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoJxACCiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgnEAMKIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKCcQBBIFCgMKAWEaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgnEgUKA2RmNRgFIgIIBQr4AQr1AQrlAfoF4QEKsgEKrwEKrAHSAqgBChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoKRIhwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoKRABEiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgpEAISIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKCkQAxIhwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoKRAEEg4KDAoBYQoBYgoBYwoBZBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKCkSBQoDZGY2GAYiAggGCpECCo4CCv4B+gX6AQrRAQrOAQpl0gJiChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoKxIhwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoKxABEiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgrEAIKZdICYgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKCsSIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKCsQAxIhwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoKxAEEggKBgoBYQoBYhoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKCsSBQoDZGY3GAciAggHCvYBCvMBCuMB+gXfAQrAAQq9AQq6AeILtgEKDAoBYQoBYgoBYwoBZBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKC0aIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKC0QARohwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoLRACGiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgtEAMaIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKC0QBBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKC0SBQoDZGY4GAgiAggICo0CCooCCvoB+gX2AQrXAQrUAQpokgRlCkcSIvoMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKC8SAWESIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKC8QARIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKC8KaJIEZQpHEiL6DB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgvEgFiEiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgvEAISGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgvGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoLxIFCgNkZjkYCSICCAkQARoREg8KDQoFZmluYWwQAxgJIBQiBBABGBc=
