## TEST CASE

from snowflake.snowpark import Row

from snowflake.snowpark.types import IntegerType, StringType, StructField

df = session.create_dataframe([Row(a=1, b=2, c=3), Row(c=4, a=2)])

df2 = session.create_dataframe([Row(1, 3, 2), Row(1, 2, 3), Row(3, 2, 1)])

df3 = session.create_dataframe([[1, 2], [3, 4]], schema=["a", "b"])

schema = StructType([StructField("a", IntegerType()), StructField("b", StringType())])

df4 = session.create_dataframe([[1, "snow"], [3, "flake"]], schema)

df5 = session.create_dataframe([1, 2, 3, 4], schema=["a"])

df6 = session.create_dataframe([[1, 2, 3, 4]], schema=["a", "b", "c", "d"])

df7 = session.create_dataframe([[1, 2], [3, 4]], schema=["a", "b"])

df8 = session.create_dataframe([Row(a=1, b=2, c=3, d=4)])

df9 = session.create_dataframe([{"a": 1}, {"b": 2}])

## EXPECTED UNPARSER OUTPUT

df = session.create_dataframe([Row(a=1, b=2, c=3), Row(c=4, a=2)])

df2 = session.create_dataframe([Row(1, 3, 2), Row(1, 2, 3), Row(3, 2, 1)])

df3 = session.create_dataframe([[1, 2], [3, 4]], schema=["a", "b"])

df4 = session.create_dataframe([[1, "snow"], [3, "flake"]], schema=StructType([StructField("a", IntegerType(), nullable=True), StructField("b", StringType(16777216), nullable=True)], structured=False))

df5 = session.create_dataframe([1, 2, 3, 4], schema=["a"])

df6 = session.create_dataframe([[1, 2, 3, 4]], schema=["a", "b", "c", "d"])

df7 = session.create_dataframe([[1, 2], [3, 4]], schema=["a", "b"])

df8 = session.create_dataframe([Row(a=1, b=2, c=3, d=4)])

df9 = session.create_dataframe([{"a": 1}, {"b": 2}])

## EXPECTED ENCODED AST

Cu4CCusCCtwCggbYAgqzAgqwAgqsAdILqAEKCQoBYQoBYgoBYxIgCEoQXhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSANKF4aJ8ICJAogCEoQXhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSANKF4QARonwgIkCiAIShBeGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA0oXhACGifCAiQKIAhKEF4aFlNSQ19QT1NJVElPTl9URVNUX01PREUgDSheEAMKf9ILfAoGCgFjCgFhEiAIShBeGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA0oXhonwgIkCiAIShBeGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA0oXhAEGifCAiQKIAhKEF4aFlNSQ19QT1NJVElPTl9URVNUX01PREUgDSheEAIaIAhKEF4aFlNSQ19QT1NJVElPTl9URVNUX01PREUgDSheEgQKAmRmGAEiAggBCqsECqgECpgEggaUBArvAwrsAwqhAdILnQESIAhSEGAaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDihgGifCAiQKIAhSEGAaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDihgEAEaJ8ICJAogCFIQYBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAOKGAQAxonwgIkCiAIUhBgGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA4oYBACCqEB0gudARIgCFIQYBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAOKGAaJ8ICJAogCFIQYBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAOKGAQARonwgIkCiAIUhBgGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA4oYBACGifCAiQKIAhSEGAaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDihgEAMKoQHSC50BEiAIUhBgGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA4oYBonwgIkCiAIUhBgGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA4oYBADGifCAiQKIAhSEGAaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDihgEAIaJ8ICJAogCFIQYBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAOKGAQARogCFIQYBoWU1JDX1BPU0lUSU9O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
