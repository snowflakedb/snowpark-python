## TEST CASE

from snowflake.snowpark import Row

from snowflake.snowpark.types import IntegerType, StringType, StructField

df = session.create_dataframe([Row(a=1, b=2, c=3), Row(c=4, a=2)])

df2 = session.create_dataframe([Row(1, 3, 2), Row(1, 2, 3), Row(3, 2, 1)])

df3 = session.create_dataframe([[1, 2], [3, 4]], schema=["a", "b"])

schema = StructType([StructField("a", IntegerType()), StructField("b", StringType())])

df4 = session.create_dataframe([[1, "snow"], [3, "flake"]], schema)

df5 = session.create_dataframe([1, 2, 3, 4], schema=["a"])

df6 = session.create_dataframe([[1, 2, 3, 4]], schema=["a", "b", "c", "d"])

df7 = session.create_dataframe([[1, 2], [3, 4]], schema=["a", "b"])

df8 = session.create_dataframe([Row(a=1, b=2, c=3, d=4)])

df9 = session.create_dataframe([{"a": 1}, {"b": 2}])

## EXPECTED UNPARSER OUTPUT

df = session.create_dataframe([Row(a=1, b=2, c=3), Row(c=4, a=2)])

df2 = session.create_dataframe([Row(1, 3, 2), Row(1, 2, 3), Row(3, 2, 1)])

df3 = session.create_dataframe([[1, 2], [3, 4]], schema=["a", "b"])

df4 = session.create_dataframe([[1, "snow"], [3, "flake"]], schema=StructType([StructField("a", IntegerType(), nullable=True), StructField("b", StringType(16777216), nullable=True)], structured=False))

df5 = session.create_dataframe([1, 2, 3, 4], schema=["a"])

df6 = session.create_dataframe([[1, 2, 3, 4]], schema=["a", "b", "c", "d"])

df7 = session.create_dataframe([[1, 2], [3, 4]], schema=["a", "b"])

df8 = session.create_dataframe([Row(a=1, b=2, c=3, d=4)])

df9 = session.create_dataframe([{"a": 1}, {"b": 2}])

## EXPECTED ENCODED AST

Cu4CCusCCtwC0gXYAgqzAgqwAgqsAaoLqAEKCQoBYQoBYgoBYxIgCEoQXhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSANKF4aJ5ICJAogCEoQXhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSANKF4QARonkgIkCiAIShBeGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA0oXhACGieSAiQKIAhKEF4aFlNSQ19QT1NJVElPTl9URVNUX01PREUgDSheEAMKf6oLfAoGCgFjCgFhEiAIShBeGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA0oXhonkgIkCiAIShBeGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA0oXhAEGieSAiQKIAhKEF4aFlNSQ19QT1NJVElPTl9URVNUX01PREUgDSheEAIaIAhKEF4aFlNSQ19QT1NJVElPTl9URVNUX01PREUgDSheEgQKAmRmGAEiAggBCqsECqgECpgE0gWUBArvAwrsAwqhAaoLnQESIAhSEGAaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDihgGieSAiQKIAhSEGAaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDihgEAEaJ5ICJAogCFIQYBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAOKGAQAxonkgIkCiAIUhBgGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA4oYBACCqEBqgudARIgCFIQYBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAOKGAaJ5ICJAogCFIQYBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAOKGAQARonkgIkCiAIUhBgGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA4oYBACGieSAiQKIAhSEGAaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDihgEAMKoQGqC50BEiAIUhBgGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA4oYBonkgIkCiAIUhBgGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA4oYBADGieSAiQKIAhSEGAaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDihgEAIaJ5ICJAogCFIQYBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAOKGAQARogCFIQYBoWU1JDX1BPU0lUSU9O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
