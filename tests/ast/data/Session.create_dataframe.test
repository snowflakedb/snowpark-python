## TEST CASE

from snowflake.snowpark import Row

from snowflake.snowpark.types import IntegerType, StringType, StructField

df = session.create_dataframe([Row(a=1, b=2, c=3), Row(c=4, a=2)])

df2 = session.create_dataframe([Row(1, 3, 2), Row(1, 2, 3), Row(3, 2, 1)])

df3 = session.create_dataframe([[1, 2], [3, 4]], schema=["a", "b"])

schema = StructType([StructField("a", IntegerType()), StructField("b", StringType())])

df4 = session.create_dataframe([[1, "snow"], [3, "flake"]], schema)

df5 = session.create_dataframe([1, 2, 3, 4], schema=["a"])

df6 = session.create_dataframe([[1, 2, 3, 4]], schema=["a", "b", "c", "d"])

df7 = session.create_dataframe([[1, 2], [3, 4]], schema=["a", "b"])

df8 = session.create_dataframe([Row(a=1, b=2, c=3, d=4)])

df9 = session.create_dataframe([{"a": 1}, {"b": 2}])

## EXPECTED UNPARSER OUTPUT

df = session.create_dataframe([Row(a=1, b=2, c=3), Row(c=4, a=2)])

df2 = session.create_dataframe([Row(1, 3, 2), Row(1, 2, 3), Row(3, 2, 1)])

df3 = session.create_dataframe([[1, 2], [3, 4]], schema=["a", "b"])

df4 = session.create_dataframe([[1, "snow"], [3, "flake"]], schema=StructType([StructField("a", IntegerType(), nullable=True), StructField("b", StringType(16777216), nullable=True)], structured=False))

df5 = session.create_dataframe([1, 2, 3, 4], schema=["a"])

df6 = session.create_dataframe([[1, 2, 3, 4]], schema=["a", "b", "c", "d"])

df7 = session.create_dataframe([[1, 2], [3, 4]], schema=["a", "b"])

df8 = session.create_dataframe([Row(a=1, b=2, c=3, d=4)])

df9 = session.create_dataframe([{"a": 1}, {"b": 2}])

## EXPECTED ENCODED AST

Cu4CCusCCtwCggbYAgqzAgqwAgqsAdILqAEKCQoBYQoBYgoBYxIgCEoQXhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSANKF4aJ8oCJAogCEoQXhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSANKF4QARonygIkCiAIShBeGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA0oXhACGifKAiQKIAhKEF4aFlNSQ19QT1NJVElPTl9URVNUX01PREUgDSheEAMKf9ILfAoGCgFjCgFhEiAIShBeGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA0oXhonygIkCiAIShBeGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA0oXhAEGifKAiQKIAhKEF4aFlNSQ19QT1NJVElPTl9URVNUX01PREUgDSheEAIaIAhKEF4aFlNSQ19QT1NJVElPTl9URVNUX01PREUgDSheEgQKAmRmGAEiAggBCqsECqgECpgEggaUBArvAwrsAwqhAdILnQESIAhSEGAaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDihgGifKAiQKIAhSEGAaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDihgEAEaJ8oCJAogCFIQYBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAOKGAQAxonygIkCiAIUhBgGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA4oYBACCqEB0gudARIgCFIQYBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAOKGAaJ8oCJAogCFIQYBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAOKGAQARonygIkCiAIUhBgGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA4oYBACGifKAiQKIAhSEGAaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDihgEAMKoQHSC50BEiAIUhBgGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA4oYBonygIkCiAIUhBgGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA4oYBADGifKAiQKIAhSEGAaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDihgEAIaJ8oCJAogCFIQYBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAOKGAQARogCFIQYBoWU1JDX1BPU0lUSU9O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
