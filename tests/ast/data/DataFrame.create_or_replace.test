## TEST CASE

df = session.table("test_table")

df.create_or_replace_view(["test_db", "test_schema", "test_view"], comment="foo")

df.create_or_replace_view("test_view", statement_params={"foo": "bar"})

df.create_or_replace_temp_view(["test_db", "test_schema", "test_view"], comment="foo")

df.create_or_replace_temp_view("test_view", statement_params={"foo": "bar"})

# TODO: remove the suppress check in `copy_into_table()`.
# session.file.put(local_file_name="test.json", stage_location="test", auto_compress=False)
# df2 = session.read.option("INFER_SCHEMA", True).json("@test/test.json")

df.copy_into_table(
    ["test_db", "test_schema", "test_table2"],
    files=["file1", "file2"],
    pattern="[A-Z]+",
    validation_mode="RETURN_ERRORS",
    target_columns=["n", "str"],
    transformations=[col("n") * 10, col("str")],
    format_type_options={"COMPRESSION": "GZIP", "RECORD_DELIMITER": "|"},
    statement_params={"foo": "bar"},
    force=True,
)

df3 = df.cache_result()

df4 = df.cache_result(statement_params={"foo": "bar"})

df.create_or_replace_dynamic_table("test_dyn_table", warehouse="test_wh", lag="1 hour", comment="foo")

## EXPECTED UNPARSER OUTPUT

df = session.table("test_table")

res1 = df.create_or_replace_view(["test_db", "test_schema", "test_view"], comment="foo")

res2 = df.create_or_replace_view("test_view", statement_params={"foo": "bar"})

res3 = df.create_or_replace_temp_view(["test_db", "test_schema", "test_view"], comment="foo")

res4 = df.create_or_replace_temp_view("test_view", statement_params={"foo": "bar"})

res5 = df.copy_into_table(["test_db", "test_schema", "test_table2"], files=["file1", "file2"], pattern="[A-Z]+", validation_mode="RETURN_ERRORS", target_columns=["n", "str"], transformations=[col("n") * 10, col("str")], format_type_options={"COMPRESSION": "GZIP", "RECORD_DELIMITER": "|"}, statement_params={"foo": "bar"}, force=True)

df3 = df.cache_result()

df4 = df.cache_result(statement_params={"foo": "bar"})

res6 = df.create_or_replace_dynamic_table("test_dyn_table", warehouse="test_wh", lag="1 hour", comment="foo")

## EXPECTED ENCODED AST

{
  "body": [
    {
      "assign": {
        "expr": {
          "sp_table": {
            "name": {
              "sp_table_name_flat": {
                "name": "test_table"
              }
            },
            "src": {
              "file": "SRC_POSITION_TEST_MODE",
              "start_line": "90"
            },
            "variant": {
              "sp_session_table": true
            }
          }
        },
        "symbol": "df",
        "uid": "1",
        "var_id": {
          "bitfield1": "1"
        }
      }
    },
    {
      "assign": {
        "expr": {
          "sp_dataframe_create_or_replace_view": {
            "comment": "foo",
            "df": {
              "sp_dataframe_ref": {
                "id": {
                  "bitfield1": "1"
                }
              }
            },
            "name": [
              "test_db",
              "test_schema",
              "test_view"
            ],
            "src": {
              "file": "SRC_POSITION_TEST_MODE",
              "start_line": "92"
            }
          }
        },
        "symbol": "",
        "uid": "2",
        "var_id": {
          "bitfield1": "2"
        }
      }
    },
    {
      "assign": {
        "expr": {
          "sp_dataframe_create_or_replace_view": {
            "df": {
              "sp_dataframe_ref": {
                "id": {
                  "bitfield1": "1"
                }
              }
            },
            "name": [
              "test_view"
            ],
            "src": {
              "file": "SRC_POSITION_TEST_MODE",
              "start_line": "94"
            },
            "statement_params": [
              {
                "_1": "foo",
                "_2": "bar"
              }
            ]
          }
        },
        "symbol": "",
        "uid": "3",
        "var_id": {
          "bitfield1": "3"
        }
      }
    },
    {
      "assign": {
        "expr": {
          "sp_dataframe_create_or_replace_view": {
            "comment": "foo",
            "df": {
              "sp_dataframe_ref": {
                "id": {
                  "bitfield1": "1"
                }
              }
            },
            "is_temp": true,
            "name": [
              "test_db",
              "test_schema",
              "test_view"
            ],
            "src": {
              "file": "SRC_POSITION_TEST_MODE",
              "start_line": "96"
            }
          }
        },
        "symbol": "",
        "uid": "4",
        "var_id": {
          "bitfield1": "4"
        }
      }
    },
    {
      "assign": {
        "expr": {
          "sp_dataframe_create_or_replace_view": {
            "df": {
              "sp_dataframe_ref": {
                "id": {
                  "bitfield1": "1"
                }
              }
            },
            "is_temp": true,
            "name": [
              "test_view"
            ],
            "src": {
              "file": "SRC_POSITION_TEST_MODE",
              "start_line": "98"
            },
            "statement_params": [
              {
                "_1": "foo",
                "_2": "bar"
              }
            ]
          }
        },
        "symbol": "",
        "uid": "5",
        "var_id": {
          "bitfield1": "5"
        }
      }
    },
    {
      "assign": {
        "expr": {
          "sp_dataframe_copy_into_table": {
            "copy_options": [
              {
                "_1": "force",
                "_2": {
                  "bool_val": {
                    "src": {
                      "file": "SRC_POSITION_TEST_MODE",
                      "start_line": "104"
                    },
                    "v": true
                  }
                }
              }
            ],
            "df": {
              "sp_dataframe_ref": {
                "id": {
                  "bitfield1": "1"
                }
              }
            },
            "files": [
              "file1",
              "file2"
            ],
            "format_type_options": [
              {
                "_1": "COMPRESSION",
                "_2": {
                  "string_val": {
                    "src": {
                      "file": "SRC_POSITION_TEST_MODE",
                      "start_line": "104"
                    },
                    "v": "GZIP"
                  }
                }
              },
              {
                "_1": "RECORD_DELIMITER",
                "_2": {
                  "string_val": {
                    "src": {
                      "file": "SRC_POSITION_TEST_MODE",
                      "start_line": "104"
                    },
                    "v": "|"
                  }
                }
              }
            ],
            "pattern": "[A-Z]+",
            "src": {
              "file": "SRC_POSITION_TEST_MODE",
              "start_line": "104"
            },
            "statement_params": [
              {
                "_1": "foo",
                "_2": "bar"
              }
            ],
            "table_name": [
              "test_db",
              "test_schema",
              "test_table2"
            ],
            "target_columns": [
              "n",
              "str"
            ],
            "transformations": [
              {
                "mul": {
                  "lhs": {
                    "apply_expr": {
                      "fn": {
                        "builtin_fn": {
                          "name": {
                            "fn_name_flat": {
                              "name": "col"
                            }
                          }
                        }
                      },
                      "pos_args": [
                        {
                          "string_val": {
                            "src": {
                              "file": "SRC_POSITION_TEST_MODE",
                              "start_line": "110"
                            },
                            "v": "n"
                          }
                        }
                      ],
                      "src": {
                        "file": "SRC_POSITION_TEST_MODE",
                        "start_line": "110"
                      }
                    }
                  },
                  "rhs": {
                    "int64_val": {
                      "src": {
                        "file": "SRC_POSITION_TEST_MODE",
                        "start_line": "110"
                      },
                      "v": "10"
                    }
                  },
                  "src": {
                    "file": "SRC_POSITION_TEST_MODE",
                    "start_line": "110"
                  }
                }
              },
              {
                "apply_expr": {
                  "fn": {
                    "builtin_fn": {
                      "name": {
                        "fn_name_flat": {
                          "name": "col"
                        }
                      }
                    }
                  },
                  "pos_args": [
                    {
                      "string_val": {
                        "src": {
                          "file": "SRC_POSITION_TEST_MODE",
                          "start_line": "110"
                        },
                        "v": "str"
                      }
                    }
                  ],
                  "src": {
                    "file": "SRC_POSITION_TEST_MODE",
                    "start_line": "110"
                  }
                }
              }
            ],
            "validation_mode": "RETURN_ERRORS"
          }
        },
        "symbol": "",
        "uid": "6",
        "var_id": {
          "bitfield1": "6"
        }
      }
    },
    {
      "assign": {
        "expr": {
          "sp_dataframe_cache_result": {
            "df": {
              "sp_dataframe_ref": {
                "id": {
                  "bitfield1": "1"
                }
              }
            },
            "src": {
              "file": "SRC_POSITION_TEST_MODE",
              "start_line": "116"
            }
          }
        },
        "symbol": "df3",
        "uid": "7",
        "var_id": {
          "bitfield1": "7"
        }
      }
    },
    {
      "assign": {
        "expr": {
          "sp_dataframe_cache_result": {
            "df": {
              "sp_dataframe_ref": {
                "id": {
                  "bitfield1": "1"
                }
              }
            },
            "src": {
              "file": "SRC_POSITION_TEST_MODE",
              "start_line": "118"
            },
            "statement_params": [
              {
                "_1": "foo",
                "_2": "bar"
              }
            ]
          }
        },
        "symbol": "df4",
        "uid": "8",
        "var_id": {
          "bitfield1": "8"
        }
      }
    },
    {
      "assign": {
        "expr": {
          "sp_dataframe_create_or_replace_dynamic_table": {
            "comment": "foo",
            "df": {
              "sp_dataframe_ref": {
                "id": {
                  "bitfield1": "1"
                }
              }
            },
            "lag": "1 hour",
            "name": [
              "test_dyn_table"
            ],
            "src": {
              "file": "SRC_POSITION_TEST_MODE",
              "start_line": "120"
            },
            "warehouse": "test_wh"
          }
        },
        "symbol": "",
        "uid": "9",
        "var_id": {
          "bitfield1": "9"
        }
      }
    }
  ],
  "client_ast_version": "1",
  "client_language": {
    "python_language": {
      "version": {
        "label": "final",
        "major": "3",
        "minor": "9",
        "patch": "20"
      }
    }
  },
  "client_version": {
    "major": "1",
    "minor": "23"
  }
}
