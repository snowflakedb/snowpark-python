## TEST CASE

df1 = session.create_dataframe(
    [
        [1, [1, 2, 3], {"Ashi Garami": "Single Leg X"}, "Kimura"],
        [2, [11, 22], {"Sankaku": "Triangle"}, "Coffee"],
    ],
    schema=["idx", "lists", "maps", "strs"],
)
df2 = df1.select(df1.idx, explode(df1.lists)).sort(col("idx"))

df3 = df1.select(explode("maps").as_("primo", "secundo")).sort(col("primo"))

df4 = session.create_dataframe(
    [
        [1, [1, 2, 3], {"Ashi Garami": ["X", "Leg Entanglement"]}, "Kimura"],
        [2, [11, 22], {"Sankaku": ["Triangle"]}, "Coffee"],
        [3, [], {}, "empty"],
    ],
    schema=["idx", "lists", "maps", "strs"],
)
df5 = (
    df4.select(df4.idx, flatten(df4.lists, outer=True))
    .select("idx", "value")
    .sort("idx")
)

df6 = (
    df.select(df.strs, flatten(df.maps, recursive=True))
    .select("strs", "key", "value")
    .where("key is not NULL")
    .sort("strs")
)

df7 = (
    df.select(df.strs, flatten(df.maps, recursive=True))
    .select("strs", "key", "value")
    .where("key is NULL")
    .sort("strs", "value")
)

## EXPECTED ENCODED AST

## EXPECTED UNPARSER OUTPUT
