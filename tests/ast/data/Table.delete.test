## TEST CASE

df = Table("test_table", session)

df.delete()

df = Table("test_table", session)

df.delete(block=False)

df = Table("test_table", session)

df.delete(block=False, statement_params={"SF_PARTNER": "FAKE_PARTNER"})

df = Table("test_table", session)

df.delete(df["num"] == 1)

df = Table("test_table", session)

source_df = session.create_dataframe([2, 3, 4, 5], schema=["a"])

df.delete(["num"] == source_df.a, source_df)

## EXPECTED UNPARSER OUTPUT

df = Table("test_table", session)

df.delete()

df = Table("test_table", session)

df.delete(block=False)

df = Table("test_table", session)

df.delete(statement_params={"SF_PARTNER": "FAKE_PARTNER"}, block=False)

df = Table("test_table", session)

df.delete(condition=df["num"] == 1)

df = Table("test_table", session)

source_df = session.create_dataframe([2, 3, 4, 5], schema=["a"])

df.delete(condition=source_df["a"] == ["num"], source=source_df)

## EXPECTED ENCODED AST

CkMKQQoz4gswEg4KDAoKdGVzdF90YWJsZRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoiAhABEgQKAmRmGAEiAggBCjEKLwol6gsiCAEaAggBKhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXBIAGAIiAggCCggSBggDEgIIAhABGhESDwoNCgVmaW5hbBADGAkgFCIEEAEYFw==
CkMKQQoz4gswEg4KDAoKdGVzdF90YWJsZRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF4iAhABEgQKAmRmGAQiAggECi8KLQoj6gsgGgIIBCoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGASABgFIgIIBQoIEgYIBhICCAUQARoREg8KDQoFZmluYWwQAxgJIBQiBBABGBc=
CkMKQQoz4gswEg4KDAoKdGVzdF90YWJsZRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGIiAhABEgQKAmRmGAciAggHCksKSQo/6gs8GgIIByoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGQyGgoKU0ZfUEFSVE5FUhIMRkFLRV9QQVJUTkVSEgAYCCICCAgKCBIGCAkSAggIEAEaERIPCg0KBWZpbmFsEAMYCSAUIgQQARgX
CkMKQQoz4gswEg4KDAoKdGVzdF90YWJsZRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGYiAhABEgQKAmRmGAoiAggKCqcBCqQBCpkB6guVAQgBEnHyAW4KLcIGKgoDbnVtEgeCAgQKAggKGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaBIhugIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaBABGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaBoCCAoqGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShoEgAYCyICCAsKCBIGCAwSAggLEAEaERIPCg0KBWZpbmFsEAMYCSAUIgQQARgX
CkMKQQoz4gswEg4KDAoKdGVzdF90YWJsZRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGoiAhABEgQKAmRmGA0iAggNCtIBCs8BCrkB8gW1AQqPAQqMAQohugIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUobBACCiG6Ah4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShsEAMKIboCHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGwQBAohugIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUobBAFEgUKAwoBYRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGwSCwoJc291cmNlX2RmGA4iAggOCtQBCtEBCsYB6gvCAQgBEpQB8gGQAQorwgYoCgFhEgeCAgQKAggOGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUobhJFygJCChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUobhIk2gwhChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUobhIDbnVtGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUobhoCCA0iB4ICBAoCCA4qGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShuEgAYDyICCA8KCBIGCBASAggPEAEaERIPCg0KBWZpbmFsEAMYCSAUIgQQARgX
EAEaERIPCg0KBWZpbmFsEAMYCSAUIgQQARgX
