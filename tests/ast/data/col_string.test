## TEST CASE

df = session.table("test_table")

df = df.select(col("A").like("test"))

df = df.select(col("A").regexp("test"))

df = df.select(col("A").startswith("test"))

df = df.select(col("A").endswith("test"))

df = df.select(col("A").substr(col("B"), col("C")))

df = df.select(col("A").collate("test"))

df = df.select(col("A").contains("test"))


## EXPECTED UNPARSER OUTPUT

df = session.table("test_table")

df = df.select(col("A").like("test"))

df = df.select(col("A").regexp("test"))

df = df.select(col("A").startswith("test"))

df = df.select(col("A").endswith("test"))

df = df.select(col("A").substr(col("B"), col("C")))

df = df.select(col("A").collate("test"))

df = df.select(col("A").contains("test"))

## EXPECTED ENCODED AST

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
