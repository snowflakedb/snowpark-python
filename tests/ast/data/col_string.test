## TEST CASE

df = session.table("test_table")

df = df.select(col("A").like("test"))

df = df.select(col("A").regexp("test"))

df = df.select(col("A").startswith("test"))

df = df.select(col("A").endswith("test"))

df = df.select(col("A").substr(col("B"), col("C")))

df = df.select(col("A").collate("test"))

df = df.select(col("A").contains("test"))


## EXPECTED UNPARSER OUTPUT

df = session.table("test_table")

df = df.select(col("A").like("test"))

df = df.select(col("A").regexp("test"))

df = df.select(col("A").startswith("test"))

df = df.select(col("A").endswith("test"))

df = df.select(col("A").substr(col("B"), col("C")))

df = df.select(col("A").collate("test"))

df = df.select(col("A").contains("test"))

## EXPECTED ENCODED AST

CkMKQQozwgswEg4KDAoKdGVzdF90YWJsZRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoiAggBEgQKAmRmGAEiAggBCvQBCvEBCuIB4gjeAQq0AaIFsAEKa3ppCicKJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFwaIooMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFwSAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShcEiWKDCIKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShcEgR0ZXN0GhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXBIHigIECgIIARoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFwgARIECgJkZhgCIgIIAgr0AQrxAQriAeII3gEKtAGqBbABCmt6aQonCiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSheGiKKDB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSheEgFBIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXholigwiChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXhIEdGVzdCIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF4SB4oCBAoCCAIaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSheIAESBAoCZGYYAyICCAMK9AEK8QEK4gHiCN4BCrQBsgWwAQpremkKJwolCgcKBQoDY29sEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYBoiigwfChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYBIBQSIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGASJYoMIgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGASBHRlc3QaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShgEgeKAgQKAggDGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYCABEgQKAmRmGAQiAggECvQBCvEBCuIB4gjeAQq0AZoFsAEKa3ppCicKJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGIaIooMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGISAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShiEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYholigwiChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYhIEdGVzdBIHigIECgIIBBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGIgARIECgJkZhgFIgIIBQqnAwqkAwqVA+IIkQMK5wK6BeMCCmt6aQonCiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShkGiKKDB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShkEgFBIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoZBJremkKJwolCgcKBQoDY29sEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoZBoiigwfChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoZBIBQyIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGQaa3ppCicKJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGQaIooMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGQSAUIiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShkIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoZBIHigIECgIIBRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGQgARIECgJkZhgGIgIIBgr0AQrxAQriAeII3gEKtAGKBbABCmt6aQonCiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShmGiKKDB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShmEgFBIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoZhIligwiChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoZhIEdGVzdBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGYSB4oCBAoCCAYaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShmIAESBAoCZGYYByICCAcK9AEK8QEK4gHiCN4BCrQBkgWwAQpremkKJwolCgcKBQoDY29sEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaBoiigwfChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaBIBQSIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGgSJYoMIgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGgSBHRlc3QaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShoEgeKAgQKAggHGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaCABEgQKAmRmGAgiAggIEAEaERIPCg0KBWZpbmFsEAMYCSAUIgQQARgV
