## TEST CASE

df = session.table(tables.table1)

df = df.select(col("A").like("test"))

df = df.select(col("A").regexp("test"))

df = df.select(col("A").startswith("test"))

df = df.select(col("A").endswith("test"))

df = df.select(col("A").substr(col("B"), col("C")))

df = df.select(col("A").collate("test"))

df = df.select(col("A").contains("test"))


## EXPECTED UNPARSER OUTPUT

df = session.table("table1")

df = df.select(col("A").like("test"))

df = df.select(col("A").regexp("test"))

df = df.select(col("A").startswith("test"))

df = df.select(col("A").endswith("test"))

df = df.select(col("A").substr(col("B"), col("C")))

df = df.select(col("A").collate("test"))

df = df.select(col("A").contains("test"))

## EXPECTED ENCODED AST

Cj8KPQovggwsEgoKCAoGdGFibGUxGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoRiICCAESBAoCZGYYASICCAEK2QEK1gEKxwGCCcMBCpkBygWVAQpQkgFNCgsaCQoHCgUKA2NvbBoi+gwfChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoSBIBQSIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEgSJfoMIgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEgSBHRlc3QaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShIEgeCAgQKAggBGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoSCABEgQKAmRmGAIiAggCCtkBCtYBCscBggnDAQqZAdIFlQEKUJIBTQoLGgkKBwoFCgNjb2waIvoMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEoSAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShKGiX6DCIKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShKEgR0ZXN0IhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoShIHggIECgIIAhoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEogARIECgJkZhgDIgIIAwrZAQrWAQrHAYIJwwEKmQHaBZUBClCSAU0KCxoJCgcKBQoDY29sGiL6DB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShMEgFBIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoTBIl+gwiChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoTBIEdGVzdBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEwSB4ICBAoCCAMaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShMIAESBAoCZGYYBCICCAQK2QEK1gEKxwGCCcMBCpkBwgWVAQpQkgFNCgsaCQoHCgUKA2NvbBoi+gwfChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoThIBQSIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKE4SGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShOGiX6DCIKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShOEgR0ZXN0EgeCAgQKAggEGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoTiABEgQKAmRmGAUiAggFCtYCCtMCCsQCggnAAgqWAuIFkgIKUJIBTQoLGgkKBwoFCgNjb2waIvoMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFASAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShQElCSAU0KCxoJCgcKBQoDY29sGiL6DB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShQEgFDIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoUBpQkgFNCgsaCQoHCgUKA2NvbBoi+gwfChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoUBIBQiIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFAiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShQEgeCAgQKAggFGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoUCABEgQKAmRmGAYiAggGCtkBCtYBCscBggnDAQqZAbIFlQEKUJIBTQoLGgkKBwoFCgNjb2waIvoMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFISAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShSEiX6DCIKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShSEgR0ZXN0GhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoUhIHggIECgIIBhoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFIgARIECgJkZhgHIgIIBwrZAQrWAQrHAYIJwwEKmQG6BZUBClCSAU0KCxoJCgcKBQoDY29sGiL6DB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShUEgFBIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoVBIl+gwiChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoVBIEdGVzdBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFQSB4ICBAoCCAcaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShUIAESBAoCZGYYCCICCAgQARoREg8KDQoFZmluYWwQAxgJIBQiBBABGBc=
