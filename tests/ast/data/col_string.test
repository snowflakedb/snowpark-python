## TEST CASE

df = session.table("test_table")

df = df.select(col("A").like("test"))

df = df.select(col("A").regexp("test"))

df = df.select(col("A").startswith("test"))

df = df.select(col("A").endswith("test"))

df = df.select(col("A").substr(col("B"), col("C")))

df = df.select(col("A").collate("test"))

df = df.select(col("A").contains("test"))


## EXPECTED UNPARSER OUTPUT

df = session.table("test_table")

df = df.select(col("A").like("test"))

df = df.select(col("A").regexp("test"))

df = df.select(col("A").startswith("test"))

df = df.select(col("A").endswith("test"))

df = df.select(col("A").substr(col("B"), col("C")))

df = df.select(col("A").collate("test"))

df = df.select(col("A").contains("test"))

## EXPECTED ENCODED AST

CkMKQQozogswEg4KDAoKdGVzdF90YWJsZRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFQiAggBEgQKAmRmGB0iAggdCvQBCvEBCuIB4gjeAQq0AZoFsAEKa3ppCicKJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFYaIuoLHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFYSAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShWEiXqCyIKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShWEgR0ZXN0GhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoVhIHigIECgIIHRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFYgARIECgJkZhgeIgIIHgr0AQrxAQriAeII3gEKtAGiBbABCmt6aQonCiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShYGiLqCx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShYEgFBIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWBol6gsiChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWBIEdGVzdCIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFgSB4oCBAoCCB4aGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShYIAESBAoCZGYYHyICCB8K9AEK8QEK4gHiCN4BCrQBqgWwAQpremkKJwolCgcKBQoDY29sEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWhoi6gsfChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWhIBQSIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoSJeoLIgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoSBHRlc3QaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShaEgeKAgQKAggfGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWiABEgQKAmRmGCAiAgggCvQBCvEBCuIB4gjeAQq0AZIFsAEKa3ppCicKJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFwaIuoLHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFwSAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShcEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXBol6gsiChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXBIEdGVzdBIHigIECgIIIBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFwgARIECgJkZhghIgIIIQqnAwqkAwqVA+IIkQMK5wKyBeMCCmt6aQonCiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSheGiLqCx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSheEgFBIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXhJremkKJwolCgcKBQoDY29sEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXhoi6gsfChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXhIBQyIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF4aa3ppCicKJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF4aIuoLHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF4SAUIiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSheIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXhIHigIECgIIIRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF4gARIECgJkZhgiIgIIIgr0AQrxAQriAeII3gEKtAGCBbABCmt6aQonCiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShgGiLqCx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShgEgFBIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYBIl6gsiChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYBIEdGVzdBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGASB4oCBAoCCCIaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShgIAESBAoCZGYYIyICCCMK9AEK8QEK4gHiCN4BCrQBigWwAQpremkKJwolCgcKBQoDY29sEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYhoi6gsfChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYhIBQSIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGISJeoLIgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGISBHRlc3QaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShiEgeKAgQKAggjGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYiABEgQKAmRmGCQiAggkEAEaERIPCg0KBWZpbmFsEAMYCSATIgQQARgV
