## TEST CASE

df = session.table("test_table")

df = df.select(col("A").like("test"))

df = df.select(col("A").regexp("test"))

df = df.select(col("A").startswith("test"))

df = df.select(col("A").endswith("test"))

df = df.select(col("A").substr(col("B"), col("C")))

df = df.select(col("A").collate("test"))

df = df.select(col("A").contains("test"))


## EXPECTED UNPARSER OUTPUT

df = session.table("test_table")

df = df.select(col("A").like("test"))

df = df.select(col("A").regexp("test"))

df = df.select(col("A").startswith("test"))

df = df.select(col("A").endswith("test"))

df = df.select(col("A").substr(col("B"), col("C")))

df = df.select(col("A").collate("test"))

df = df.select(col("A").contains("test"))

## EXPECTED ENCODED AST

CkMKQQoz4gswEg4KDAoKdGVzdF90YWJsZRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoiAggBEgQKAmRmGAEiAggBCvUBCvIBCuMB+gjfAQq1AcIFsQEKbIoBaQonGiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShcGiKyDB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShcEgFBIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXBIlsgwiChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXBIEdGVzdBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFwSB4ICBAoCCAEaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShcIAESBAoCZGYYAiICCAIK9QEK8gEK4wH6CN8BCrUBygWxAQpsigFpCicaJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF4aIrIMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF4SAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSheGiWyDCIKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSheEgR0ZXN0IhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXhIHggIECgIIAhoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF4gARIECgJkZhgDIgIIAwr1AQryAQrjAfoI3wEKtQHSBbEBCmyKAWkKJxolCgcKBQoDY29sEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYBoisgwfChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYBIBQSIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGASJbIMIgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGASBHRlc3QaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShgEgeCAgQKAggDGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYCABEgQKAmRmGAQiAggECvUBCvIBCuMB+gjfAQq1AboFsQEKbIoBaQonGiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShiGiKyDB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShiEgFBIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYhIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGIaJbIMIgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGISBHRlc3QSB4ICBAoCCAQaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShiIAESBAoCZGYYBSICCAUKqgMKpwMKmAP6CJQDCuoC2gXmAgpsigFpCicaJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGQaIrIMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGQSAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShkEmyKAWkKJxolCgcKBQoDY29sEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoZBoisgwfChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoZBIBQyIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGQabIoBaQonGiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShkGiKyDB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShkEgFCIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoZCIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGQSB4ICBAoCCAUaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShkIAESBAoCZGYYBiICCAYK9QEK8gEK4wH6CN8BCrUBqgWxAQpsigFpCicaJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGYaIrIMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGYSAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShmEiWyDCIKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShmEgR0ZXN0GhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoZhIHggIECgIIBhoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGYgARIECgJkZhgHIgIIBwr1AQryAQrjAfoI3wEKtQGyBbEBCmyKAWkKJxolCgcKBQoDY29sEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaBoisgwfChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaBIBQSIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGgSJbIMIgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGgSBHRlc3QaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShoEgeCAgQKAggHGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaCABEgQKAmRmGAgiAggIEAEaERIPCg0KBWZpbmFsEAMYCSASIgYQARgWIAE=
