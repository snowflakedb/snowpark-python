## TEST CASE

df = session.table("test_table")

df = df.select(col("A").like("test"))

df = df.select(col("A").regexp("test"))

df = df.select(col("A").startswith("test"))

df = df.select(col("A").endswith("test"))

df = df.select(col("A").substr(col("B"), col("C")))

df = df.select(col("A").collate("test"))

df = df.select(col("A").contains("test"))


## EXPECTED UNPARSER OUTPUT

df = session.table("test_table")

df = df.select(col("A").like("test"))

df = df.select(col("A").regexp("test"))

df = df.select(col("A").startswith("test"))

df = df.select(col("A").endswith("test"))

df = df.select(col("A").substr(col("B"), col("C")))

df = df.select(col("A").collate("test"))

df = df.select(col("A").contains("test"))

## EXPECTED ENCODED AST

CkMKQQozsgswEg4KDAoKdGVzdF90YWJsZRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoiAggBEgQKAmRmGAEiAggBCvQBCvEBCuIB6gjeAQq0AaIFsAEKa3ppCicKJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFwaIvoLHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFwSAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShcEiX6CyIKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShcEgR0ZXN0GhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXBIHkgIECgIIARoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFwgARIECgJkZhgCIgIIAgr0AQrxAQriAeoI3gEKtAGqBbABCmt6aQonCiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSheGiL6Cx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSheEgFBIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXhol+gsiChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXhIEdGVzdCIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF4SB5ICBAoCCAIaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSheIAESBAoCZGYYAyICCAMK9AEK8QEK4gHqCN4BCrQBsgWwAQpremkKJwolCgcKBQoDY29sEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYBoi+gsfChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYBIBQSIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGASJfoLIgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGASBHRlc3QaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShgEgeSAgQKAggDGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYCABEgQKAmRmGAQiAggECvQBCvEBCuIB6gjeAQq0AZoFsAEKa3ppCicKJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGIaIvoLHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGISAUEiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShiEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYhol+gsiChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYhIEdGVzdBIHkgIECgIIBBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGIgARIECgJkZhgFIgIIBQqnAwqkAwqVA+oIkQMK5wK6BeMCCmt6aQonCiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShkGiL6Cx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShkEgFBIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoZBJremkKJwolCgcKBQoDY29sEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoZBoi+gsfChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoZBIBQyIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGQaa3ppCicKJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGQaIvoLHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGQSAUIiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShkIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoZBIHkgIECgIIBRoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGQgARIECgJkZhgGIgIIBgr0AQrxAQriAeoI3gEKtAGKBbABCmt6aQonCiUKBwoFCgNjb2wSGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShmGiL6Cx8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShmEgFBIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoZhIl+gsiChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoZhIEdGVzdBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGYSB5ICBAoCCAYaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShmIAESBAoCZGYYByICCAcK9AEK8QEK4gHqCN4BCrQBkgWwAQpremkKJwolCgcKBQoDY29sEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaBoi+gsfChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaBIBQSIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGgSJfoLIgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGgSBHRlc3QaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShoEgeSAgQKAggHGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaCABEgQKAmRmGAgiAggIEAEaERIPCg0KBWZpbmFsEAMYCSATIgQQARgV
