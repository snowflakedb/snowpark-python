## TEST CASE

df = session.table("test_table")

df = df.select(col("A") == col("B"))

df = df.select(col("A") != col("B"))

df = df.select(col("A") > col("B"))

df = df.select(col("A") < col("B"))

df = df.select(col("A") >= col("B"))

df = df.select(col("A") <= col("B"))

df = df.select(col("A") + col("B"))

df = df.select(col("A") - col("B"))

df = df.select(col("A") * col("B"))

df = df.select(col("A") / col("B"))

df = df.select(col("A") % col("B"))

df = df.select(col("A") ** col("B"))

df = df.select(col("A") & col("B"))

df = df.select(col("A") | col("B"))


## EXPECTED UNPARSER OUTPUT

df = session.table("test_table")

df = df.select(col("A") == col("B"))

df = df.select(col("A") != col("B"))

df = df.select(col("A") > col("B"))

df = df.select(col("A") < col("B"))

df = df.select(col("A") >= col("B"))

df = df.select(col("A") <= col("B"))

df = df.select(col("A") + col("B"))

df = df.select(col("A") - col("B"))

df = df.select(col("A") * col("B"))

df = df.select(col("A") / col("B"))

df = df.select(col("A") % col("B"))

df = df.select(col("A") ** col("B"))

df = df.select(col("A") & col("B"))

df = df.select(col("A") | col("B"))

## EXPECTED ENCODED AST

CkkKRwo5sgs2Eg4KDAoKdGVzdF90YWJsZRogCCgQWhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSANKFoiAggBEgQKAmRmGAEiAggBCuoCCucCCtgC4gjUAgqkAtoBoAIKfXp7Ci0KKwoHCgUKA2NvbBIgCB8QXBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAXKFwaKPoLJQogCB8QXBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAXKFwSAUEiIAgfEFwaFlNSQ19QT1NJVElPTl9URVNUX01PREUgFyhcEn16ewotCisKBwoFCgNjb2wSIAgrEFwaFlNSQ19QT1NJVElPTl9URVNUX01PREUgIyhcGij6CyUKIAgrEFwaFlNSQ19QT1NJVElPTl9URVNUX01PREUgIyhcEgFCIiAIKxBcGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFICMoXBogCCsQXBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAXKFwSB4oCBAoCCAEaIAgsEFwaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDShcIAESBAoCZGYYAiICCAIK6gIK5wIK2ALiCNQCCqQCygKgAgp9ensKLQorCgcKBQoDY29sEiAIHxBeGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIBcoXhoo+gslCiAIHxBeGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIBcoXhIBQSIgCB8QXhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAXKF4SfXp7Ci0KKwoHCgUKA2NvbBIgCCsQXhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAjKF4aKPoLJQogCCsQXhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAjKF4SAUIiIAgrEF4aFlNSQ19QT1NJVElPTl9URVNUX01PREUgIyheGiAIKxBeGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIBcoXhIHigIECgIIAhogCCwQXhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSANKF4gARIECgJkZhgDIgIIAwrqAgrnAgrYAuII1AIKpAL6AaACCn16ewotCisKBwoFCgNjb2wSIAgfEGAaFlNSQ19QT1NJVElPTl9URVNUX01PREUgFyhgGij6CyUKIAgfEGAaFlNSQ19QT1NJVElPTl9URVNUX01PREUgFyhgEgFBIiAIHxBgGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIBcoYBJ9ensKLQorCgcKBQoDY29sEiAIKhBgGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFICIoYBoo+gslCiAIKhBgGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFICIoYBIBQiIgCCoQYBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAiKGAaIAgqEGAaFlNSQ19QT1NJVElPTl9URVNUX01PREUgFyhgEgeKAgQKAggDGiAIKxBgGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA0oYCABEgQKAmRmGAQiAggECuoCCucCCtgC4gjUAgqkAqoCoAIKfXp7Ci0KKwoHCgUKA2NvbBIgCB8QYhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAXKGIaKPoLJQogCB8QYhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAXKGISAUEiIAgfEGIaFlNSQ19QT1NJVElPTl9URVNUX01PREUgFyhiEn16ewotCisKBwoFCgNjb2wSIAgqEGIaFlNSQ19QT1NJVElPTl9URVNUX01PREUgIihiGij6CyUKIAgqEGIaFlNSQ19QT1NJVElPTl9URVNUX01PREUgIihiEgFCIiAIKhBiGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFICIoYhogCCoQYhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAXKGISB4oCBAoCCAQaIAgrEGIaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDShiIAESBAoCZGYYBSICCAUK6gIK5wIK2ALiCNQCCqQC8gGgAgp9ensKLQorCgcKBQoDY29sEiAIHxBkGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIBcoZBoo+gslCiAIHxBkGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIBcoZBIBQSIgCB8QZBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAXKGQSfXp7Ci0KKwoHCgUKA2NvbBIgCCsQZBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAjKGQaKPoLJQogCCsQZBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAjKGQSAUIiIAgrEGQaFlNSQ19QT1NJVElPTl9URVNUX01PREUgIyhkGiAIKxBkGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIBcoZBIHigIECgIIBRogCCwQZBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSANKGQgARIECgJkZhgGIgIIBgrqAgrnAgrYAuII1AIKpAKaAqACCn16ewotCisKBwoFCgNjb2wSIAgfEGYaFlNSQ19QT1NJVElPTl9URVNUX01PREUgFyhmGij6CyUKIAgfEGYaFlNSQ19QT1NJVElPTl9URVNUX01PREUgFyhmEgFBIiAIHxBmGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIBcoZhJ9ensKLQorCgcKBQoDY29sEiAIKxBmGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFICMoZhoo+gslCiAIKxBmGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFICMoZhIBQiIgCCsQZhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAjKGYaIAgrEGYaFlNSQ19QT1NJVElPTl9URVNUX01PREUgFyhmEgeKAgQKAggGGiAILBBmGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA0oZiABEgQKAmRmGAciAggHCukCCuYCCtcC4gjTAgqjAmqgAgp9ensKLQorCgcKBQoDY29sEiAIHxBoGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIBcoaBoo+gslCiAIHxBoGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIBcoaBIBQSIgCB8QaBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAXKGgSfXp7Ci0KKwoHCgUKA2NvbBIgCCoQaBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAiKGgaKPoLJQogCCoQaBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAiKGgSAUIiIAgqEGgaFlNSQ19QT1NJVElPTl9URVNUX01PREUgIihoGiAIKhBoGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIBcoaBIHigIECgIIBxogCCsQaBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSANKGggARIECgJkZhgIIgIICArqAgrnAgrYAuII1AIKpAKCDKACCn16ewotCisKBwoFCgNjb2wSIAgfEGoaFlNSQ19QT1NJVElPTl9URVNUX01PREUgFyhqGij6CyUKIAgfEGoaFlNSQ19QT1NJVElPTl9URVNUX01PREUgFyhqEgFBIiAIHxBqGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIBcoahJ9ensKLQorCgcKBQoDY29sEiAIKhBqGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFICIoahoo+gslCiAIKhBqGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFICIoahIBQiIgCCoQahoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAiKGoaIAgqEGoaFlNSQ19QT1NJVElPTl9URVNUX01PREUgFyhqEgeKAgQKAggIGiAIKxBqGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA0oaiABEgQKAmRmGAkiAggJCuoCCucCCtgC4gjUAgqkAroCoAIKfXp7Ci0KKwoHCgUKA2NvbBIgCB8QbBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAXKGwaKPoLJQogCB8QbBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAXKGwSAUEiIAgfEGwaFlNSQ19QT1NJVElPTl9URVNUX01PREUgFyhsEn16ewotCisKBwoFCgNjb2wSIAgqEGwaFlNSQ19QT1NJVElPTl9URVNUX01PREUgIihsGij6CyUKIAgqEGwaFlNSQ19QT1NJVElPTl9URVNUX01PREUgIihsEgFCIiAIKhBsGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFICIobBogCCoQbBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAXKGwSB4oCBAoCCAkaIAgrEGwaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDShsIAESBAoCZGYYCiICCAoK6gIK5wIK2ALiCNQCCqQC0gGgAgp9ensKLQorCgcKBQoDY29sEiAIHxBuGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIBcobhoo+gslCiAIHxBuGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIBcobhIBQSIgCB8QbhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAXKG4SfXp7Ci0KKwoHCgUKA2NvbBIgCCoQbhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAiKG4aKPoLJQogCCoQbhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAiKG4SAUIiIAgqEG4aFlNSQ19QT1NJVElPTl9URVNUX01PREUgIihuGiAIKhBuGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIBcobhIHigIECgIIChogCCsQbhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSANKG4gARIECgJkZhgLIgIICwrqAgrnAgrYAuII1AIKpAKyAqACCn16ewotCisKBwoFCgNjb2wSIAgfEHAaFlNSQ19QT1NJVElPTl9URVNUX01PREUgFyhwGij6CyUKIAgfEHAaFlNSQ19QT1NJVElPTl9URVNUX01PREUgFyhwEgFBIiAIHxBwGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIBcocBJ9ensKLQorCgcKBQoDY29sEiAIKhBwGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFICIocBoo+gslCiAIKhBwGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFICIocBIBQiIgCCoQcBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAiKHAaIAgqEHAaFlNSQ19QT1NJVElPTl9URVNUX01PREUgFyhwEgeKAgQKAggLGiAIKxBwGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA0ocCABEgQKAmRmGAwiAggMCuoCCucCCtgC4gjUAgqkArIDoAIKfXp7Ci0KKwoHCgUKA2NvbBIgCB8QchoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAXKHIaKPoLJQogCB8QchoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAXKHISAUEiIAgfEHIaFlNSQ19QT1NJVElPTl9URVNUX01PREUgFyhyEn16ewotCisKBwoFCgNjb2wSIAgrEHIaFlNSQ19QT1NJVElPTl9URVNUX01PREUgIyhyGij6CyUKIAgrEHIaFlNSQ19QT1NJVElPTl9URVNUX01PREUgIyhyEgFCIiAIKxByGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFICMochogCCsQchoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAXKHISB4oCBAoCCAwaIAgsEHIaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDShyIAESBAoCZGYYDSICCA0K6QIK5gIK1wLiCNMCCqMCcqACCn16ewotCisKBwoFCgNjb2wSIAgfEHQaFlNSQ19QT1NJVElPTl9URVNUX01PREUgFyh0Gij6CyUKIAgfEHQaFlNSQ19QT1NJVElPTl9URVNUX01PREUgFyh0EgFBIiAIHxB0GhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIBcodBJ9ensKLQorCgcKBQoDY29sEiAIKhB0GhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFICIodBoo+gslCiAIKhB0GhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFICIodBIBQiIgCCoQdBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAiKHQaIAgqEHQaFlNSQ19QT1NJVElPTl9URVNUX01PREUgFyh0EgeKAgQKAggNGiAIKxB0GhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA0odCABEgQKAmRmGA4iAggOCuoCCucCCtgC4gjUAgqkAvICoAIKfXp7Ci0KKwoHCgUKA2NvbBIgCB8QdhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAXKHYaKPoLJQogCB8QdhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAXKHYSAUEiIAgfEHYaFlNSQ19QT1NJVElPTl9URVNUX01PREUgFyh2En16ewotCisKBwoFCgNjb2wSIAgqEHYaFlNSQ19QT1NJVElPTl9URVNUX01PREUgIih2Gij6CyUKIAgqEHYaFlNSQ19QT1NJVElPTl9URVNUX01PREUgIih2EgFCIiAIKhB2GhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFICIodhogCCoQdhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAXKHYSB4oCBAoCCA4aIAgrEHYaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDSh2IAESBAoCZGYYDyICCA8QARoREg8KDQoFZmluYWwQAxgLIAkiBBABGBU=
