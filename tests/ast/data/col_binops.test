## TEST CASE

df = session.table("test_table")

df = df.select(col("A") == col("B"))

df = df.select(col("A") != col("B"))

df = df.select(col("A") > col("B"))

df = df.select(col("A") < col("B"))

df = df.select(col("A") >= col("B"))

df = df.select(col("A") <= col("B"))

df = df.select(col("A") + col("B"))

df = df.select(col("A") - col("B"))

df = df.select(col("A") * col("B"))

df = df.select(col("A") / col("B"))

df = df.select(col("A") % col("B"))

df = df.select(col("A") ** col("B"))

df = df.select(col("A") & col("B"))

df = df.select(col("A") | col("B"))


## EXPECTED UNPARSER OUTPUT

df = session.table("test_table")

df = df.select(col("A") == col("B"))

df = df.select(col("A") != col("B"))

df = df.select(col("A") > col("B"))

df = df.select(col("A") < col("B"))

df = df.select(col("A") >= col("B"))

df = df.select(col("A") <= col("B"))

df = df.select(col("A") + col("B"))

df = df.select(col("A") - col("B"))

df = df.select(col("A") * col("B"))

df = df.select(col("A") / col("B"))

df = df.select(col("A") % col("B"))

df = df.select(col("A") ** col("B"))

df = df.select(col("A") & col("B"))

df = df.select(col("A") | col("B"))

## EXPECTED ENCODED AST

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
