## TEST CASE

df = session.create_dataframe([(1, 1),(1, 2),(2, 1),(2, 2),(3, 1),(3, 2)], schema=["a", "b"])

df.group_by("a").median("b").collect()

df.group_by("a").function("avg")("b").collect()

df.group_by("a").count()

import pandas as pd

from snowflake.snowpark.types import StructType, StructField, StringType, FloatType

def convert(pandas_df):
    return pandas_df.assign(TEMP_F = lambda x: x.TEMP_C * 9 / 5 + 32)

df = session.createDataFrame([('SF', 21.0), ('SF', 17.5), ('SF', 24.0), ('NY', 30.9), ('NY', 33.6)],
        schema=['location', 'temp_c'])

df.group_by("location").apply_in_pandas(convert,
    output_schema=StructType([StructField("location", StringType()),
                              StructField("temp_c", FloatType()),
                              StructField("temp_f", FloatType())])).order_by("temp_c").collect()


df = session.create_dataframe([(1, 'A', 10000, 'JAN'), (1, 'B', 400, 'JAN'), (1, 'B', 5000, 'FEB')], schema=['empid', 'team', 'amount', 'month'])

# Does not work because __getitem__ is missing.
# df.group_by("empid").pivot("month", ['JAN', 'FEB']).sum("amount").sort(df["empid"]).show()

df.group_by("empid").pivot("month", ['JAN', 'FEB']).sum("amount").show()

df.group_by(["empid", "team"]).pivot("month").sum("amount").sort("empid", "team").show()

## EXPECTED UNPARSER OUTPUT

df = session.create_dataframe([(1, 1), (1, 2), (2, 1), (2, 2), (3, 1), (3, 2)], schema=["a", "b"])

df.group_by("a").median("b").collect()

df.group_by("a").avg("b").collect()

res8 = df.group_by("a").count()

df = session.create_dataframe([("SF", 21.0), ("SF", 17.5), ("SF", 24.0), ("NY", 30.9), ("NY", 33.6)], schema=["location", "temp_c"])

res10 = udtf(_ApplyInPandas, output_schema=StructType([StructField("location", StringType(), nullable=True), StructField("temp_c", FloatType(), nullable=True), StructField("temp_f", FloatType(), nullable=True)], structured=False), input_types=[StringType(16777216), DoubleType()])

df.group_by("location").apply_in_pandas(convert, StructType([StructField("location", StringType(), nullable=True), StructField("temp_c", FloatType(), nullable=True), StructField("temp_f", FloatType(), nullable=True)], structured=False), input_types=[StringType(16777216), DoubleType()], input_names=["LOCATION", "TEMP_C"]).sort("temp_c").collect()

df = session.create_dataframe([(1, "A", 10000, "JAN"), (1, "B", 400, "JAN"), (1, "B", 5000, "FEB")], schema=["empid", "team", "amount", "month"])

df.group_by("empid").pivot("month", values=["JAN", "FEB"]).sum("amount").show()

df.group_by(["empid", "team"]).pivot("month").sum("amount").sort("empid", "team").show()

## EXPECTED ENCODED AST

CqwFCqkFCpoF+gWWBQrtBArqBAplmg1iChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoUBIhwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoUBABEiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShQEAEKZZoNYgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFASIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFAQARIhwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoUBACCmWaDWIKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShQEiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShQEAISIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFAQAQplmg1iChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoUBIhwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoUBACEiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShQEAIKZZoNYgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFASIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFAQAxIhwgIeChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoUBABCmWaDWIKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShQEiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShQEAMSIcICHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFAQAhIICgYKAWEKAWIaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShQEgQKAmRmGAEiAggBClwKWgpQygdNCiYKIvoMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFISAWEQARIHggIECgIIARoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFISABgCIgIIAgpjCmEKV8oLVAoGbWVkaWFuEiYKIvoMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFISAWIQARoGUgQKAggCIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoUhIAGAMiAggDCjMKMQon0gYkCAEQARoCCAMyGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShSEgAYBCICCAQKCBIGCAUSAggEEAEaERIPCg0KBWZpbmFsEAMYCSATIgQQARgX
ClwKWgpQygdNCiYKIvoMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFQSAWEQARIHggIECgIIARoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFQSABgGIgIIBgpgCl4KVMoLUQoDYXZnEiYKIvoMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFQSAWIQARoGUgQKAggGIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoVBIAGAciAggHCjMKMQon0gYkCAEQARoCCAcyGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShUEgAYCCICCAgKCBIGCAkSAggIEAEaERIPCg0KBWZpbmFsEAMYCSATIgQQARgX
ClwKWgpQygdNCiYKIvoMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFYSAWEQARIHggIECgIIARoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFYSABgKIgIICgo6CjgKLsoLKwoFY291bnQaBlIECgIICiIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFYSABgLIgIICwr+BAr7BArsBPoF6AQKswQKsAQKbpoNawoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF8SI/oMIAoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF8SAlNGEiiCAiUKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShfEQAAAAAAADVACm6aDWsKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShfEiP6DCAKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShfEgJTRhIoggIlChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXxEAAAAAAIAxQApumg1rChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXxIj+gwgChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXxICU0YSKIICJQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF8RAAAAAAAAOEAKbpoNawoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF8SI/oMIAoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF8SAk5ZEiiCAiUKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShfEWZmZmZm5j5ACm6aDWsKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShfEiP6DCAKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShfEgJOWRIoggIlChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXxHNzMzMzMxAQBIUChIKCGxvY2F0aW9uCgZ0ZW1wX2MaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShfEgQKAmRmGAwiAggMCmMKYQpXygdUCi0KKfoMJgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGISCGxvY2F0aW9uEAESB4ICBAoCCAwaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShiEgAYDSICCA0KmQEKlgEKiwGyDYcBGhASDl9BcHBseUluUGFuZGFzOhAKCpoBBwoFCICAgAgKAkABWkISQAo+qgE7ChUKCgoIbG9jYXRpb24SBZoBAgoAGAEKEAoICgZ0ZW1wX2MSAkgBGAEKEAoICgZ0ZW1wX2YSAkgBGAFoBIoBGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShiEgAYDiICCA4KiAMKhQMK+gLCC/YCCgsIARIHY29udmVydBIGUgQKAggNGoABCgtpbnB1dF90eXBlcxJx0gJuChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYhIrugooCgqaAQcKBQiAgIAIEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYhIjugogCgJAARIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGIaggEKC2lucHV0X25hbWVzEnPSAnAKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShiEin6DCYKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShiEghMT0NBVElPThIn+gwkChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYhIGVEVNUF9DIjsKFQoKCghsb2NhdGlvbhIFmgECCgAYAQoQCggKBnRlbXBfYxICSAEYAQoQCggKBnRlbXBfZhICSAEYASoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGISABgPIgIIDwpfCl0KU5oJUBIn+gwkChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoYhIGdGVtcF9jGAEiB4ICBAoCCA8qGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShiEgAYECICCBAKMwoxCifSBiQIARABGgIIEDIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGISABgRIgIIEQoIEgYIEhICCBEQARoREg8KDQoFZmluYWwQAxgJIBMiBBABGBc=
CvQECvEECuIE+gXeBAqfBAqcBAqxAZoNrQEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShoEiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShoEAESIvoMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGgSAUESIsICHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGgQkE4SJPoMIQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGgSA0pBTgqxAZoNrQEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShoEiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShoEAESIvoMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGgSAUISIsICHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGgQkAMSJPoMIQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGgSA0pBTgqxAZoNrQEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShoEiHCAh4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShoEAESIvoMHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGgSAUISIsICHwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGgQiCcSJPoMIQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGgSA0ZFQhIeChwKBWVtcGlkCgR0ZWFtCgZhbW91bnQKBW1vbnRoGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaBIECgJkZhgTIgIIEwpgCl4KVMoHUQoqCib6DCMKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShtEgVlbXBpZBABEgeCAgQKAggTGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUobRIAGBQiAggUCs8BCswBCsEB0gu9ARIGUgQKAggUGib6DCMKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShtEgVtb250aCIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKG0qbxJtCmvSAmgKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShtEiT6DCEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShtEgNKQU4SJPoMIQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKG0SA0ZFQhIAGBUiAggVCmUKYwpZygtWCgNzdW0SKwon+gwkChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUobRIGYW1vdW50EAEaBlIECgIIFSIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKG0SABgWIgIIFgoTChEKB5IJBAoCCBYSABgXIgIIFwoIEgYIGBICCBcQARoREg8KDQoFZmluYWwQAxgJIBMiBBABGBc=
CoYBCoMBCnnKB3YKTwom+gwjChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUobxIFZW1waWQKJfoMIgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKG8SBHRlYW0SB4ICBAoCCBMaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShvEgAYGSICCBkKWwpZCk/SC0wSBlIECgIIGRom+gwjChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUobxIFbW9udGgiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShvEgAYGiICCBoKZQpjClnKC1YKA3N1bRIrCif6DCQKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShvEgZhbW91bnQQARoGUgQKAggaIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUobxIAGBsiAggbCoYBCoMBCnmaCXYSJvoMIwoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKG8SBWVtcGlkEiX6DCIKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShvEgR0ZWFtGAEiB4ICBAoCCBsqGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShvEgAYHCICCBwKEwoRCgeSCQQKAggcEgAYHSICCB0KCBIGCB4SAggdEAEaERIPCg0KBWZpbmFsEAMYCSATIgQQARgX
EAEaERIPCg0KBWZpbmFsEAMYCSATIgQQARgX
