## TEST CASE

from snowflake.snowpark.functions import col, udtf

from snowflake.snowpark.types import IntegerType, StructField, StructType

class PrimeSieve:
    def process(self, n):
        is_prime = [True] * (n + 1)
        is_prime[0] = False
        is_prime[1] = False
        p = 2
        while p * p <= n:
            if is_prime[p]:
                # set all multiples of p to False
                for i in range(p * p, n + 1, p):
                    is_prime[i] = False
            p += 1
        # yield all prime numbers
        for p in range(2, n + 1):
            if is_prime[p]:
                yield (p,)

prime_udtf = udtf(PrimeSieve, output_schema=StructType([StructField("number", IntegerType())]), input_types=[IntegerType()])

session.table_function(prime_udtf(lit(20))).collect()

@udtf(output_schema=["number"])
class sum_udtf:
    def process(self, a: int, b: int) -> Iterable[Tuple[int]]:
        yield (a + b, )

df = session.create_dataframe([[1, 2], [3, 4]], schema=["a", "b"])
df.with_column("total", sum_udtf(df.a, df.b)).sort(df.a).show()

class GeneratorUDTF:
    def process(self, n):
        for i in range(n):
            yield (i, )

generator_udtf = udtf(GeneratorUDTF, output_schema=StructType([StructField("number", IntegerType())]), input_types=[IntegerType()])

session.table_function(generator_udtf(lit(3))).collect()

# Test here that all arguments in udtf decorator are supported.
class Foo:
    def process(self, a, b) -> Iterable[Tuple[int, int]]:
        yield (a + b, 2)

foo = udtf(Foo,  output_schema= ["a", "b"],
           input_types= [IntegerType(), LongType()],
           name= "foo",
           is_permanent= True,
           stage_location="@",
           imports = ["numpy", ("seaborn", "sns")],
           packages = ["snowflake.snowpark"],
           replace = True,
           if_not_exists = False,
           parallel = 7,
           statement_params = {'a':'b'},
           strict = True,
           secure = True,
           force_inline_code=True,
           external_access_integrations = ["gs"],
           secrets = {'test':'verysecret'},
           immutable = True,
           comment = "fufufufu")

df = session.create_dataframe(
    [(1, "one o one", 10), (2, "twenty two", 20), (3, "thirty three", 30)]
)
df = df.to_df(["a", "b", "c"])

class TwoXUDTF:
    def process(self, n: int):
        yield (2 * n,)

twox_udtf = udtf(
    TwoXUDTF,
    output_schema=StructType([StructField("two_x", IntegerType())]),
    input_types=[IntegerType()],
)

df.select(twox_udtf("a")).collect()

class TwoXSixXUDTF:
    def process(self, n: int):
        yield (2 * n, 6 * n)

twoxsix_udtf = udtf(
    TwoXSixXUDTF,
    output_schema=StructType(
        [StructField("two_x", IntegerType()), StructField("six_x", IntegerType())]
    ),
    input_types=[IntegerType()],
)

df.select(df.a, twoxsix_udtf(df.a)).collect()

df.select("a", twoxsix_udtf("a").alias("double", "six_x"), "c").collect()

## EXPECTED UNPARSER OUTPUT

prime_udtf = udtf("PrimeSieve", output_schema=StructType([StructField("number", IntegerType(), nullable=True)], structured=False), input_types=[IntegerType()], copy_grants=False, _registered_object_name="\"MOCK_DATABASE\".\"MOCK_SCHEMA\".SNOWPARK_TEMP_TABLE_FUNCTION_xxx")

session.table_function(prime_udtf(lit(20))).collect()

df = session.create_dataframe([[1, 2], [3, 4]], schema=["a", "b"])

df.with_column("total", udtf("sum_udtf", output_schema=StructType([StructField("number", LongType(), nullable=True)], structured=False), input_types=[LongType(), LongType()], copy_grants=False, _registered_object_name="\"MOCK_DATABASE\".\"MOCK_SCHEMA\".SNOWPARK_TEMP_TABLE_FUNCTION_xxx")(df["a"], df["b"])).sort(df["a"]).show()

generator_udtf = udtf("GeneratorUDTF", output_schema=StructType([StructField("number", IntegerType(), nullable=True)], structured=False), input_types=[IntegerType()], copy_grants=False, _registered_object_name="\"MOCK_DATABASE\".\"MOCK_SCHEMA\".SNOWPARK_TEMP_TABLE_FUNCTION_xxx")

session.table_function(generator_udtf(lit(3))).collect()

foo = udtf("Foo", output_schema=StructType([StructField("a", LongType(), nullable=True), StructField("b", LongType(), nullable=True)], structured=False), input_types=[IntegerType(), LongType()], name="foo", is_permanent=True, stage_location="@", imports=["numpy", ["seaborn", "sns"]], packages=["snowflake.snowpark"], replace=True, parallel=7, statement_params={"a": "b"}, strict=True, secure=True, external_access_integrations=["gs"], secrets={"test": "verysecret"}, immutable=True, comment="fufufufu", copy_grants=False, force_inline_code=True, _registered_object_name="foo")

df = session.create_dataframe([(1, "one o one", 10), (2, "twenty two", 20), (3, "thirty three", 30)])

df = df.to_df(["a", "b", "c"])

twox_udtf = udtf("TwoXUDTF", output_schema=StructType([StructField("two_x", IntegerType(), nullable=True)], structured=False), input_types=[IntegerType()], copy_grants=False, _registered_object_name="\"MOCK_DATABASE\".\"MOCK_SCHEMA\".SNOWPARK_TEMP_TABLE_FUNCTION_xxx")

df.select((twox_udtf("a"))).collect()

twoxsix_udtf = udtf("TwoXSixXUDTF", output_schema=StructType([StructField("two_x", IntegerType(), nullable=True), StructField("six_x", IntegerType(), nullable=True)], structured=False), input_types=[IntegerType()], copy_grants=False, _registered_object_name="\"MOCK_DATABASE\".\"MOCK_SCHEMA\".SNOWPARK_TEMP_TABLE_FUNCTION_xxx")

df.select(df["a"], (twoxsix_udtf(df["a"]))).collect()

df.select(col("a"), (twoxsix_udtf("a").alias("double", "six_x")), col("c")).collect()

## EXPECTED ENCODED AST

body {
  assign {
    expr {
      udtf {
        handler {
          name: "PrimeSieve"
          object_name {
            sp_table_name_flat {
              name: "\"MOCK_DATABASE\".\"MOCK_SCHEMA\".SNOWPARK_TEMP_TABLE_FUNCTION_xxx"
            }
          }
        }
        input_types {
          list {
            sp_integer_type: true
          }
        }
        kwargs {
          _1: "copy_grants"
          _2 {
            bool_val {
              src {
                end_column: 132
                end_line: 46
                file: "SRC_POSITION_TEST_MODE"
                start_column: 21
                start_line: 46
              }
            }
          }
        }
        output_schema {
          udtf_schema__type {
            return_type {
              sp_struct_type {
                fields {
                  column_identifier {
                    name: "number"
                  }
                  data_type {
                    sp_integer_type: true
                  }
                  nullable: true
                }
              }
            }
          }
        }
        parallel: 4
        src {
          end_column: 132
          end_line: 46
          file: "SRC_POSITION_TEST_MODE"
          start_column: 21
          start_line: 46
        }
      }
    }
    symbol {
      value: "prime_udtf"
    }
    uid: 1
    var_id {
      bitfield1: 1
    }
  }
}
body {
  assign {
    expr {
      apply_expr {
        fn {
          sp_fn_ref {
            id {
              bitfield1: 1
            }
          }
        }
        pos_args {
          apply_expr {
            fn {
              builtin_fn {
                name {
                  fn_name_flat {
                    name: "lit"
                  }
                }
              }
            }
            pos_args {
              int64_val {
                src {
                  end_column: 49
                  end_line: 48
                  file: "SRC_POSITION_TEST_MODE"
                  start_column: 42
                  start_line: 48
                }
                v: 20
              }
            }
            src {
              end_column: 49
              end_line: 48
              file: "SRC_POSITION_TEST_MODE"
              start_column: 42
              start_line: 48
            }
          }
        }
        src {
          end_column: 50
          end_line: 48
          file: "SRC_POSITION_TEST_MODE"
          start_column: 31
          start_line: 48
        }
      }
    }
    symbol {
    }
    uid: 2
    var_id {
      bitfield1: 2
    }
  }
}
body {
  assign {
    expr {
      sp_session_table_function {
        fn {
          apply_expr {
            fn {
              indirect_table_fn_id_ref {
                id {
                  bitfield1: 2
                }
              }
            }
            src {
              end_column: 51
              end_line: 48
              file: "SRC_POSITION_TEST_MODE"
              start_column: 8
              start_line: 48
            }
          }
        }
        src {
          end_column: 51
          end_line: 48
          file: "SRC_POSITION_TEST_MODE"
          start_column: 8
          start_line: 48
        }
      }
    }
    symbol {
    }
    uid: 3
    var_id {
      bitfield1: 3
    }
  }
}
body {
  assign {
    expr {
      sp_dataframe_collect {
        block: true
        case_sensitive: true
        id {
          bitfield1: 3
        }
        src {
          end_column: 61
          end_line: 48
          file: "SRC_POSITION_TEST_MODE"
          start_column: 8
          start_line: 48
        }
      }
    }
    symbol {
    }
    uid: 4
    var_id {
      bitfield1: 4
    }
  }
}
body {
  eval {
    uid: 5
    var_id {
      bitfield1: 4
    }
  }
}
body {
  assign {
    expr {
      udtf {
        handler {
          id: 1
          name: "sum_udtf"
          object_name {
            sp_table_name_flat {
              name: "\"MOCK_DATABASE\".\"MOCK_SCHEMA\".SNOWPARK_TEMP_TABLE_FUNCTION_xxx"
            }
          }
        }
        input_types {
          list {
            sp_long_type: true
          }
          list {
            sp_long_type: true
          }
        }
        kwargs {
          _1: "copy_grants"
          _2 {
            bool_val {
              src {
                end_column: 39
                end_line: 50
                file: "SRC_POSITION_TEST_MODE"
                start_column: 9
                start_line: 50
              }
            }
          }
        }
        output_schema {
          udtf_schema__type {
            return_type {
              sp_struct_type {
                fields {
                  column_identifier {
                    name: "number"
                  }
                  data_type {
                    sp_long_type: true
                  }
                  nullable: true
                }
              }
            }
          }
        }
        parallel: 4
        src {
          end_column: 39
          end_line: 50
          file: "SRC_POSITION_TEST_MODE"
          start_column: 9
          start_line: 50
        }
      }
    }
    symbol {
    }
    uid: 6
    var_id {
      bitfield1: 6
    }
  }
}
body {
  assign {
    expr {
      sp_create_dataframe {
        data {
          sp_dataframe_data__list {
            vs {
              list_val {
                src {
                  end_column: 74
                  end_line: 55
                  file: "SRC_POSITION_TEST_MODE"
                  start_column: 13
                  start_line: 55
                }
                vs {
                  int64_val {
                    src {
                      end_column: 74
                      end_line: 55
                      file: "SRC_POSITION_TEST_MODE"
                      start_column: 13
                      start_line: 55
                    }
                    v: 1
                  }
                }
                vs {
                  int64_val {
                    src {
                      end_column: 74
                      end_line: 55
                      file: "SRC_POSITION_TEST_MODE"
                      start_column: 13
                      start_line: 55
                    }
                    v: 2
                  }
                }
              }
            }
            vs {
              list_val {
                src {
                  end_column: 74
                  end_line: 55
                  file: "SRC_POSITION_TEST_MODE"
                  start_column: 13
                  start_line: 55
                }
                vs {
                  int64_val {
                    src {
                      end_column: 74
                      end_line: 55
                      file: "SRC_POSITION_TEST_MODE"
                      start_column: 13
                      start_line: 55
                    }
                    v: 3
                  }
                }
                vs {
                  int64_val {
                    src {
                      end_column: 74
                      end_line: 55
                      file: "SRC_POSITION_TEST_MODE"
                      start_column: 13
                      start_line: 55
                    }
                    v: 4
                  }
                }
              }
            }
          }
        }
        schema {
          sp_dataframe_schema__list {
            vs: "a"
            vs: "b"
          }
        }
        src {
          end_column: 74
          end_line: 55
          file: "SRC_POSITION_TEST_MODE"
          start_column: 13
          start_line: 55
        }
      }
    }
    symbol {
      value: "df"
    }
    uid: 7
    var_id {
      bitfield1: 7
    }
  }
}
body {
  assign {
    expr {
      sp_dataframe_with_column {
        col {
          apply_expr {
            fn {
              sp_fn_ref {
                id {
                  bitfield1: 6
                }
              }
            }
            pos_args {
              sp_dataframe_col {
                col_name: "a"
                df {
                  sp_dataframe_ref {
                    id {
                      bitfield1: 7
                    }
                  }
                }
                src {
                  end_column: 45
                  end_line: 56
                  file: "SRC_POSITION_TEST_MODE"
                  start_column: 41
                  start_line: 56
                }
              }
            }
            pos_args {
              sp_dataframe_col {
                col_name: "b"
                df {
                  sp_dataframe_ref {
                    id {
                      bitfield1: 7
                    }
                  }
                }
                src {
                  end_column: 51
                  end_line: 56
                  file: "SRC_POSITION_TEST_MODE"
                  start_column: 47
                  start_line: 56
                }
              }
            }
            src {
              end_column: 52
              end_line: 56
              file: "SRC_POSITION_TEST_MODE"
              start_column: 32
              start_line: 56
            }
          }
        }
        col_name: "total"
        df {
          sp_dataframe_ref {
            id {
              bitfield1: 7
            }
          }
        }
        src {
          end_column: 53
          end_line: 56
          file: "SRC_POSITION_TEST_MODE"
          start_column: 8
          start_line: 56
        }
      }
    }
    symbol {
    }
    uid: 8
    var_id {
      bitfield1: 8
    }
  }
}
body {
  assign {
    expr {
      sp_dataframe_sort {
        cols {
          sp_dataframe_col {
            col_name: "a"
            df {
              sp_dataframe_ref {
                id {
                  bitfield1: 7
                }
              }
            }
            src {
              end_column: 63
              end_line: 56
              file: "SRC_POSITION_TEST_MODE"
              start_column: 59
              start_line: 56
            }
          }
        }
        cols_variadic: true
        df {
          sp_dataframe_ref {
            id {
              bitfield1: 8
            }
          }
        }
        src {
          end_column: 64
          end_line: 56
          file: "SRC_POSITION_TEST_MODE"
          start_column: 8
          start_line: 56
        }
      }
    }
    symbol {
    }
    uid: 9
    var_id {
      bitfield1: 9
    }
  }
}
body {
  assign {
    expr {
      sp_dataframe_show {
        id {
          bitfield1: 9
        }
      }
    }
    symbol {
    }
    uid: 10
    var_id {
      bitfield1: 10
    }
  }
}
body {
  eval {
    uid: 11
    var_id {
      bitfield1: 10
    }
  }
}
body {
  assign {
    expr {
      udtf {
        handler {
          id: 2
          name: "GeneratorUDTF"
          object_name {
            sp_table_name_flat {
              name: "\"MOCK_DATABASE\".\"MOCK_SCHEMA\".SNOWPARK_TEMP_TABLE_FUNCTION_xxx"
            }
          }
        }
        input_types {
          list {
            sp_integer_type: true
          }
        }
        kwargs {
          _1: "copy_grants"
          _2 {
            bool_val {
              src {
                end_column: 139
                end_line: 63
                file: "SRC_POSITION_TEST_MODE"
                start_column: 25
                start_line: 63
              }
            }
          }
        }
        output_schema {
          udtf_schema__type {
            return_type {
              sp_struct_type {
                fields {
                  column_identifier {
                    name: "number"
                  }
                  data_type {
                    sp_integer_type: true
                  }
                  nullable: true
                }
              }
            }
          }
        }
        parallel: 4
        src {
          end_column: 139
          end_line: 63
          file: "SRC_POSITION_TEST_MODE"
          start_column: 25
          start_line: 63
        }
      }
    }
    symbol {
      value: "generator_udtf"
    }
    uid: 12
    var_id {
      bitfield1: 12
    }
  }
}
body {
  assign {
    expr {
      apply_expr {
        fn {
          sp_fn_ref {
            id {
              bitfield1: 12
            }
          }
        }
        pos_args {
          apply_expr {
            fn {
              builtin_fn {
                name {
                  fn_name_flat {
                    name: "lit"
                  }
                }
              }
            }
            pos_args {
              int64_val {
                src {
                  end_column: 52
                  end_line: 65
                  file: "SRC_POSITION_TEST_MODE"
                  start_column: 46
                  start_line: 65
                }
                v: 3
              }
            }
            src {
              end_column: 52
              end_line: 65
              file: "SRC_POSITION_TEST_MODE"
              start_column: 46
              start_line: 65
            }
          }
        }
        src {
          end_column: 53
          end_line: 65
          file: "SRC_POSITION_TEST_MODE"
          start_column: 31
          start_line: 65
        }
      }
    }
    symbol {
    }
    uid: 13
    var_id {
      bitfield1: 13
    }
  }
}
body {
  assign {
    expr {
      sp_session_table_function {
        fn {
          apply_expr {
            fn {
              indirect_table_fn_id_ref {
                id {
                  bitfield1: 13
                }
              }
            }
            src {
              end_column: 54
              end_line: 65
              file: "SRC_POSITION_TEST_MODE"
              start_column: 8
              start_line: 65
            }
          }
        }
        src {
          end_column: 54
          end_line: 65
          file: "SRC_POSITION_TEST_MODE"
          start_column: 8
          start_line: 65
        }
      }
    }
    symbol {
    }
    uid: 14
    var_id {
      bitfield1: 14
    }
  }
}
body {
  assign {
    expr {
      sp_dataframe_collect {
        block: true
        case_sensitive: true
        id {
          bitfield1: 14
        }
        src {
          end_column: 64
          end_line: 65
          file: "SRC_POSITION_TEST_MODE"
          start_column: 8
          start_line: 65
        }
      }
    }
    symbol {
    }
    uid: 15
    var_id {
      bitfield1: 15
    }
  }
}
body {
  eval {
    uid: 16
    var_id {
      bitfield1: 15
    }
  }
}
body {
  assign {
    expr {
      udtf {
        comment {
          value: "fufufufu"
        }
        external_access_integrations: "gs"
        handler {
          id: 3
          name: "Foo"
          object_name {
            sp_table_name_flat {
              name: "foo"
            }
          }
        }
        immutable: true
        imports {
          sp_table_name_flat {
            name: "numpy"
          }
        }
        imports {
          sp_table_name_structured {
            name: "seaborn"
            name: "sns"
          }
        }
        input_types {
          list {
            sp_integer_type: true
          }
          list {
            sp_long_type: true
          }
        }
        is_permanent: true
        kwargs {
          _1: "copy_grants"
          _2 {
            bool_val {
              src {
                end_column: 40
                end_line: 89
                file: "SRC_POSITION_TEST_MODE"
                start_column: 14
                start_line: 72
              }
            }
          }
        }
        kwargs {
          _1: "force_inline_code"
          _2 {
            bool_val {
              src {
                end_column: 40
                end_line: 89
                file: "SRC_POSITION_TEST_MODE"
                start_column: 14
                start_line: 72
              }
              v: true
            }
          }
        }
        name {
          fn_name_flat {
            name: "foo"
          }
        }
        output_schema {
          udtf_schema__type {
            return_type {
              sp_struct_type {
                fields {
                  column_identifier {
                    name: "a"
                  }
                  data_type {
                    sp_long_type: true
                  }
                  nullable: true
                }
                fields {
                  column_identifier {
                    name: "b"
                  }
                  data_type {
                    sp_long_type: true
                  }
                  nullable: true
                }
              }
            }
          }
        }
        packages: "snowflake.snowpark"
        parallel: 7
        replace: true
        secrets {
          _1: "test"
          _2: "verysecret"
        }
        secure: true
        src {
          end_column: 40
          end_line: 89
          file: "SRC_POSITION_TEST_MODE"
          start_column: 14
          start_line: 72
        }
        stage_location: "@"
        statement_params {
          _1: "a"
          _2: "b"
        }
        strict: true
      }
    }
    symbol {
      value: "foo"
    }
    uid: 17
    var_id {
      bitfield1: 17
    }
  }
}
body {
  assign {
    expr {
      sp_create_dataframe {
        data {
          sp_dataframe_data__list {
            vs {
              tuple_val {
                src {
                  end_column: 9
                  end_line: 93
                  file: "SRC_POSITION_TEST_MODE"
                  start_column: 13
                  start_line: 91
                }
                vs {
                  int64_val {
                    src {
                      end_column: 9
                      end_line: 93
                      file: "SRC_POSITION_TEST_MODE"
                      start_column: 13
                      start_line: 91
                    }
                    v: 1
                  }
                }
                vs {
                  string_val {
                    src {
                      end_column: 9
                      end_line: 93
                      file: "SRC_POSITION_TEST_MODE"
                      start_column: 13
                      start_line: 91
                    }
                    v: "one o one"
                  }
                }
                vs {
                  int64_val {
                    src {
                      end_column: 9
                      end_line: 93
                      file: "SRC_POSITION_TEST_MODE"
                      start_column: 13
                      start_line: 91
                    }
                    v: 10
                  }
                }
              }
            }
            vs {
              tuple_val {
                src {
                  end_column: 9
                  end_line: 93
                  file: "SRC_POSITION_TEST_MODE"
                  start_column: 13
                  start_line: 91
                }
                vs {
                  int64_val {
                    src {
                      end_column: 9
                      end_line: 93
                      file: "SRC_POSITION_TEST_MODE"
                      start_column: 13
                      start_line: 91
                    }
                    v: 2
                  }
                }
                vs {
                  string_val {
                    src {
                      end_column: 9
                      end_line: 93
                      file: "SRC_POSITION_TEST_MODE"
                      start_column: 13
                      start_line: 91
                    }
                    v: "twenty two"
                  }
                }
                vs {
                  int64_val {
                    src {
                      end_column: 9
                      end_line: 93
                      file: "SRC_POSITION_TEST_MODE"
                      start_column: 13
                      start_line: 91
                    }
                    v: 20
                  }
                }
              }
            }
            vs {
              tuple_val {
                src {
                  end_column: 9
                  end_line: 93
                  file: "SRC_POSITION_TEST_MODE"
                  start_column: 13
                  start_line: 91
                }
                vs {
                  int64_val {
                    src {
                      end_column: 9
                      end_line: 93
                      file: "SRC_POSITION_TEST_MODE"
                      start_column: 13
                      start_line: 91
                    }
                    v: 3
                  }
                }
                vs {
                  string_val {
                    src {
                      end_column: 9
                      end_line: 93
                      file: "SRC_POSITION_TEST_MODE"
                      start_column: 13
                      start_line: 91
                    }
                    v: "thirty three"
                  }
                }
                vs {
                  int64_val {
                    src {
                      end_column: 9
                      end_line: 93
                      file: "SRC_POSITION_TEST_MODE"
                      start_column: 13
                      start_line: 91
                    }
                    v: 30
                  }
                }
              }
            }
          }
        }
        src {
          end_column: 9
          end_line: 93
          file: "SRC_POSITION_TEST_MODE"
          start_column: 13
          start_line: 91
        }
      }
    }
    symbol {
      value: "df"
    }
    uid: 18
    var_id {
      bitfield1: 18
    }
  }
}
body {
  assign {
    expr {
      sp_dataframe_to_df {
        col_names: "a"
        col_names: "b"
        col_names: "c"
        df {
          sp_dataframe_ref {
            id {
              bitfield1: 18
            }
          }
        }
        src {
          end_column: 38
          end_line: 94
          file: "SRC_POSITION_TEST_MODE"
          start_column: 13
          start_line: 94
        }
      }
    }
    symbol {
      value: "df"
    }
    uid: 19
    var_id {
      bitfield1: 19
    }
  }
}
body {
  assign {
    expr {
      udtf {
        handler {
          id: 4
          name: "TwoXUDTF"
          object_name {
            sp_table_name_flat {
              name: "\"MOCK_DATABASE\".\"MOCK_SCHEMA\".SNOWPARK_TEMP_TABLE_FUNCTION_xxx"
            }
          }
        }
        input_types {
          list {
            sp_integer_type: true
          }
        }
        kwargs {
          _1: "copy_grants"
          _2 {
            bool_val {
              src {
                end_column: 9
                end_line: 104
                file: "SRC_POSITION_TEST_MODE"
                start_column: 20
                start_line: 100
              }
            }
          }
        }
        output_schema {
          udtf_schema__type {
            return_type {
              sp_struct_type {
                fields {
                  column_identifier {
                    name: "two_x"
                  }
                  data_type {
                    sp_integer_type: true
                  }
                  nullable: true
                }
              }
            }
          }
        }
        parallel: 4
        src {
          end_column: 9
          end_line: 104
          file: "SRC_POSITION_TEST_MODE"
          start_column: 20
          start_line: 100
        }
      }
    }
    symbol {
      value: "twox_udtf"
    }
    uid: 20
    var_id {
      bitfield1: 20
    }
  }
}
body {
  assign {
    expr {
      apply_expr {
        fn {
          sp_fn_ref {
            id {
              bitfield1: 20
            }
          }
        }
        pos_args {
          string_val {
            src {
              end_column: 32
              end_line: 106
              file: "SRC_POSITION_TEST_MODE"
              start_column: 18
              start_line: 106
            }
            v: "a"
          }
        }
        src {
          end_column: 32
          end_line: 106
          file: "SRC_POSITION_TEST_MODE"
          start_column: 18
          start_line: 106
        }
      }
    }
    symbol {
    }
    uid: 21
    var_id {
      bitfield1: 21
    }
  }
}
body {
  assign {
    expr {
      sp_dataframe_select__columns {
        cols {
          apply_expr {
            fn {
              indirect_table_fn_id_ref {
                id {
                  bitfield1: 21
                }
              }
            }
            src {
              end_column: 33
              end_line: 106
              file: "SRC_POSITION_TEST_MODE"
              start_column: 8
              start_line: 106
            }
          }
        }
        df {
          sp_dataframe_ref {
            id {
              bitfield1: 19
            }
          }
        }
        src {
          end_column: 33
          end_line: 106
          file: "SRC_POSITION_TEST_MODE"
          start_column: 8
          start_line: 106
        }
        variadic: true
      }
    }
    symbol {
    }
    uid: 22
    var_id {
      bitfield1: 22
    }
  }
}
body {
  assign {
    expr {
      sp_dataframe_collect {
        block: true
        case_sensitive: true
        id {
          bitfield1: 22
        }
        src {
          end_column: 43
          end_line: 106
          file: "SRC_POSITION_TEST_MODE"
          start_column: 8
          start_line: 106
        }
      }
    }
    symbol {
    }
    uid: 23
    var_id {
      bitfield1: 23
    }
  }
}
body {
  eval {
    uid: 24
    var_id {
      bitfield1: 23
    }
  }
}
body {
  assign {
    expr {
      udtf {
        handler {
          id: 5
          name: "TwoXSixXUDTF"
          object_name {
            sp_table_name_flat {
              name: "\"MOCK_DATABASE\".\"MOCK_SCHEMA\".SNOWPARK_TEMP_TABLE_FUNCTION_xxx"
            }
          }
        }
        input_types {
          list {
            sp_integer_type: true
          }
        }
        kwargs {
          _1: "copy_grants"
          _2 {
            bool_val {
              src {
                end_column: 9
                end_line: 118
                file: "SRC_POSITION_TEST_MODE"
                start_column: 23
                start_line: 112
              }
            }
          }
        }
        output_schema {
          udtf_schema__type {
            return_type {
              sp_struct_type {
                fields {
                  column_identifier {
                    name: "two_x"
                  }
                  data_type {
                    sp_integer_type: true
                  }
                  nullable: true
                }
                fields {
                  column_identifier {
                    name: "six_x"
                  }
                  data_type {
                    sp_integer_type: true
                  }
                  nullable: true
                }
              }
            }
          }
        }
        parallel: 4
        src {
          end_column: 9
          end_line: 118
          file: "SRC_POSITION_TEST_MODE"
          start_column: 23
          start_line: 112
        }
      }
    }
    symbol {
      value: "twoxsix_udtf"
    }
    uid: 25
    var_id {
      bitfield1: 25
    }
  }
}
body {
  assign {
    expr {
      apply_expr {
        fn {
          sp_fn_ref {
            id {
              bitfield1: 25
            }
          }
        }
        pos_args {
          sp_dataframe_col {
            col_name: "a"
            df {
              sp_dataframe_ref {
                id {
                  bitfield1: 19
                }
              }
            }
            src {
              end_column: 41
              end_line: 120
              file: "SRC_POSITION_TEST_MODE"
              start_column: 37
              start_line: 120
            }
          }
        }
        src {
          end_column: 42
          end_line: 120
          file: "SRC_POSITION_TEST_MODE"
          start_column: 24
          start_line: 120
        }
      }
    }
    symbol {
    }
    uid: 26
    var_id {
      bitfield1: 26
    }
  }
}
body {
  assign {
    expr {
      sp_dataframe_select__columns {
        cols {
          sp_dataframe_col {
            col_name: "a"
            df {
              sp_dataframe_ref {
                id {
                  bitfield1: 19
                }
              }
            }
            src {
              end_column: 22
              end_line: 120
              file: "SRC_POSITION_TEST_MODE"
              start_column: 18
              start_line: 120
            }
          }
        }
        cols {
          apply_expr {
            fn {
              indirect_table_fn_id_ref {
                id {
                  bitfield1: 26
                }
              }
            }
            src {
              end_column: 43
              end_line: 120
              file: "SRC_POSITION_TEST_MODE"
              start_column: 8
              start_line: 120
            }
          }
        }
        df {
          sp_dataframe_ref {
            id {
              bitfield1: 19
            }
          }
        }
        src {
          end_column: 43
          end_line: 120
          file: "SRC_POSITION_TEST_MODE"
          start_column: 8
          start_line: 120
        }
        variadic: true
      }
    }
    symbol {
    }
    uid: 27
    var_id {
      bitfield1: 27
    }
  }
}
body {
  assign {
    expr {
      sp_dataframe_collect {
        block: true
        case_sensitive: true
        id {
          bitfield1: 27
        }
        src {
          end_column: 53
          end_line: 120
          file: "SRC_POSITION_TEST_MODE"
          start_column: 8
          start_line: 120
        }
      }
    }
    symbol {
    }
    uid: 28
    var_id {
      bitfield1: 28
    }
  }
}
body {
  eval {
    uid: 29
    var_id {
      bitfield1: 28
    }
  }
}
body {
  assign {
    expr {
      sp_table_fn_call_alias {
        aliases {
          args {
            string_val {
              src {
                end_column: 65
                end_line: 122
                file: "SRC_POSITION_TEST_MODE"
                start_column: 23
                start_line: 122
              }
              v: "double"
            }
          }
          args {
            string_val {
              src {
                end_column: 65
                end_line: 122
                file: "SRC_POSITION_TEST_MODE"
                start_column: 23
                start_line: 122
              }
              v: "six_x"
            }
          }
          variadic: true
        }
        lhs {
          apply_expr {
            fn {
              sp_fn_ref {
                id {
                  bitfield1: 25
                }
              }
            }
            pos_args {
              string_val {
                src {
                  end_column: 40
                  end_line: 122
                  file: "SRC_POSITION_TEST_MODE"
                  start_column: 23
                  start_line: 122
                }
                v: "a"
              }
            }
            src {
              end_column: 40
              end_line: 122
              file: "SRC_POSITION_TEST_MODE"
              start_column: 23
              start_line: 122
            }
          }
        }
        src {
          end_column: 65
          end_line: 122
          file: "SRC_POSITION_TEST_MODE"
          start_column: 23
          start_line: 122
        }
      }
    }
    symbol {
    }
    uid: 30
    var_id {
      bitfield1: 30
    }
  }
}
body {
  assign {
    expr {
      sp_dataframe_select__columns {
        cols {
          apply_expr {
            fn {
              builtin_fn {
                name {
                  fn_name_flat {
                    name: "col"
                  }
                }
              }
            }
            pos_args {
              string_val {
                src {
                  end_column: 71
                  end_line: 122
                  file: "SRC_POSITION_TEST_MODE"
                  start_column: 8
                  start_line: 122
                }
                v: "a"
              }
            }
            src {
              end_column: 71
              end_line: 122
              file: "SRC_POSITION_TEST_MODE"
              start_column: 8
              start_line: 122
            }
          }
        }
        cols {
          apply_expr {
            fn {
              indirect_table_fn_id_ref {
                id {
                  bitfield1: 30
                }
              }
            }
            src {
              end_column: 71
              end_line: 122
              file: "SRC_POSITION_TEST_MODE"
              start_column: 8
              start_line: 122
            }
          }
        }
        cols {
          apply_expr {
            fn {
              builtin_fn {
                name {
                  fn_name_flat {
                    name: "col"
                  }
                }
              }
            }
            pos_args {
              string_val {
                src {
                  end_column: 71
                  end_line: 122
                  file: "SRC_POSITION_TEST_MODE"
                  start_column: 8
                  start_line: 122
                }
                v: "c"
              }
            }
            src {
              end_column: 71
              end_line: 122
              file: "SRC_POSITION_TEST_MODE"
              start_column: 8
              start_line: 122
            }
          }
        }
        df {
          sp_dataframe_ref {
            id {
              bitfield1: 19
            }
          }
        }
        src {
          end_column: 71
          end_line: 122
          file: "SRC_POSITION_TEST_MODE"
          start_column: 8
          start_line: 122
        }
        variadic: true
      }
    }
    symbol {
    }
    uid: 31
    var_id {
      bitfield1: 31
    }
  }
}
body {
  assign {
    expr {
      sp_dataframe_collect {
        block: true
        case_sensitive: true
        id {
          bitfield1: 31
        }
        src {
          end_column: 81
          end_line: 122
          file: "SRC_POSITION_TEST_MODE"
          start_column: 8
          start_line: 122
        }
      }
    }
    symbol {
    }
    uid: 32
    var_id {
      bitfield1: 32
    }
  }
}
body {
  eval {
    uid: 33
    var_id {
      bitfield1: 32
    }
  }
}
client_ast_version: 1
client_language {
  python_language {
    version {
      label: "final"
      major: 3
      minor: 9
      patch: 1
    }
  }
}
client_version {
  major: 1
  minor: 25
}
