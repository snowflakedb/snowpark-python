## TEST CASE

df = Table(tables.table1, session)

df = df.select("STR", col("A"))

df1 = Table(tables.table1, session, time_travel_mode="at", offset=-3600)

df2 = Table(tables.table1, session, time_travel_mode="before", statement="01234567-abcd-1234-5678-123456789012")

df3 = Table(tables.table1, session, time_travel_mode="at", timestamp=datetime.datetime(2025, 1, 1, 1, 1, 1, 111))

df4 = Table(tables.table1, session, time_travel_mode="at", timestamp="2023-01-01 12:00:00", timestamp_type="TZ")

df5 = Table(tables.table1, session, time_travel_mode="before", timestamp="2023-01-01 12:00:00", timestamp_type=TimestampTimeZone.LTZ)

df6 = Table(tables.table1, session, time_travel_mode="at", stream="my_stream")

## EXPECTED UNPARSER OUTPUT

df = Table("table1", session)

df = df.select("STR", col("A"))

df1 = Table("table1", session, time_travel_mode="at", offset=-3600)

df2 = Table("table1", session, time_travel_mode="before", statement="01234567-abcd-1234-5678-123456789012")

df3 = Table("table1", session, time_travel_mode="at", timestamp=datetime.datetime(2025, 1, 1, 1, 1, 1, 111, tzinfo=datetime.timezone(datetime.timedelta(seconds=-18000), name="EST")))

df4 = Table("table1", session, time_travel_mode="at", timestamp="2023-01-01 12:00:00", timestamp_type="TZ")

df5 = Table("table1", session, time_travel_mode="before", timestamp="2023-01-01 12:00:00", timestamp_type="ltz")

df6 = Table("table1", session, time_travel_mode="at", stream="my_stream")

## EXPECTED ENCODED AST

interned_value_table {
  string_values {
    key: -1
  }
  string_values {
    key: 2
    value: "SRC_POSITION_TEST_MODE"
  }
}
body {
  bind {
    expr {
      table {
        name {
          name {
            name_flat {
              name: "table1"
            }
          }
        }
        src {
          end_column: 42
          end_line: 25
          file: 2
          start_column: 13
          start_line: 25
        }
        variant {
          table_init: true
        }
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
      value: "df"
    }
    uid: 1
  }
}
body {
  bind {
    expr {
      dataframe_select {
        cols {
          args {
            string_val {
              src {
                end_column: 39
                end_line: 27
                file: 2
                start_column: 13
                start_line: 27
              }
              v: "STR"
            }
          }
          args {
            apply_expr {
              fn {
                builtin_fn {
                  name {
                    name {
                      name_flat {
                        name: "col"
                      }
                    }
                  }
                }
              }
              pos_args {
                string_val {
                  src {
                    end_column: 38
                    end_line: 27
                    file: 2
                    start_column: 30
                    start_line: 27
                  }
                  v: "A"
                }
              }
              src {
                end_column: 38
                end_line: 27
                file: 2
                start_column: 30
                start_line: 27
              }
            }
          }
          variadic: true
        }
        df {
          dataframe_ref {
            id: 1
          }
        }
        src {
          end_column: 39
          end_line: 27
          file: 2
          start_column: 13
          start_line: 27
        }
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
      value: "df"
    }
    uid: 2
  }
}
body {
  bind {
    expr {
      table {
        name {
          name {
            name_flat {
              name: "table1"
            }
          }
        }
        offset {
          value: -3600
        }
        src {
          end_column: 80
          end_line: 29
          file: 2
          start_column: 14
          start_line: 29
        }
        time_travel_mode {
          value: "at"
        }
        variant {
          table_init: true
        }
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
      value: "df1"
    }
    uid: 3
  }
}
body {
  bind {
    expr {
      table {
        name {
          name {
            name_flat {
              name: "table1"
            }
          }
        }
        src {
          end_column: 120
          end_line: 31
          file: 2
          start_column: 14
          start_line: 31
        }
        statement {
          value: "01234567-abcd-1234-5678-123456789012"
        }
        time_travel_mode {
          value: "before"
        }
        variant {
          table_init: true
        }
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
      value: "df2"
    }
    uid: 4
  }
}
body {
  bind {
    expr {
      table {
        name {
          name {
            name_flat {
              name: "table1"
            }
          }
        }
        src {
          end_column: 121
          end_line: 33
          file: 2
          start_column: 14
          start_line: 33
        }
        time_travel_mode {
          value: "at"
        }
        timestamp {
          python_timestamp_val {
            day: 1
            hour: 1
            microsecond: 111
            minute: 1
            month: 1
            second: 1
            src {
              end_column: 121
              end_line: 33
              file: 2
              start_column: 14
              start_line: 33
            }
            tz {
              name {
                value: "EST"
              }
              offset_seconds: -18000
            }
            year: 2025
          }
        }
        variant {
          table_init: true
        }
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
      value: "df3"
    }
    uid: 5
  }
}
body {
  bind {
    expr {
      table {
        name {
          name {
            name_flat {
              name: "table1"
            }
          }
        }
        src {
          end_column: 120
          end_line: 35
          file: 2
          start_column: 14
          start_line: 35
        }
        time_travel_mode {
          value: "at"
        }
        timestamp {
          string_val {
            src {
              end_column: 120
              end_line: 35
              file: 2
              start_column: 14
              start_line: 35
            }
            v: "2023-01-01 12:00:00"
          }
        }
        timestamp_type {
          value: "TZ"
        }
        variant {
          table_init: true
        }
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
      value: "df4"
    }
    uid: 6
  }
}
body {
  bind {
    expr {
      table {
        name {
          name {
            name_flat {
              name: "table1"
            }
          }
        }
        src {
          end_column: 141
          end_line: 37
          file: 2
          start_column: 14
          start_line: 37
        }
        time_travel_mode {
          value: "before"
        }
        timestamp {
          string_val {
            src {
              end_column: 141
              end_line: 37
              file: 2
              start_column: 14
              start_line: 37
            }
            v: "2023-01-01 12:00:00"
          }
        }
        timestamp_type {
          value: "ltz"
        }
        variant {
          table_init: true
        }
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
      value: "df5"
    }
    uid: 7
  }
}
body {
  bind {
    expr {
      table {
        name {
          name {
            name_flat {
              name: "table1"
            }
          }
        }
        src {
          end_column: 86
          end_line: 39
          file: 2
          start_column: 14
          start_line: 39
        }
        stream {
          value: "my_stream"
        }
        time_travel_mode {
          value: "at"
        }
        variant {
          table_init: true
        }
      }
    }
    first_request_id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
    symbol {
      value: "df6"
    }
    uid: 8
  }
}
client_ast_version: 1
client_language {
  python_language {
    version {
      label: "final"
      major: 3
      minor: 9
      patch: 1
    }
  }
}
client_version {
  major: 1
  minor: 40
  patch: 1
}
id: "\003U\"\366q\366P\346\260\261?\234\303\254\316\353"
