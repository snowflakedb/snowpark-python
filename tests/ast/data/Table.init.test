## TEST CASE

df = Table(tables.table1, session)

df = df.select("STR", col("A"))

## EXPECTED UNPARSER OUTPUT

df = Table("table1", session)

df = df.select(col("STR"), col("A"))

## EXPECTED ENCODED AST

<<<<<<< HEAD
Cj8KPQovggwsEgoKCAoGdGFibGUxGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoGSICEAESBAoCZGYYASICCAEK4wEK4AEK0QGCCc0BClKSAU8KCxoJCgcKBQoDY29sGiT6DCEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgbEgNTVFIiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgbClCSAU0KCxoJCgcKBQoDY29sGiL6DB8KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSgbEgFBIhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoGxIHggIECgIIARoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKBsgARIECgJkZhgCIgIIAhABGhESDwoNCgVmaW5hbBADGAkgEiIEEAEYFw==
=======
{
  "body": [
    {
      "assign": {
        "expr": {
          "sp_table": {
            "name": {
              "sp_table_name_flat": {
                "name": "test_table"
              }
            },
            "src": {
              "file": "SRC_POSITION_TEST_MODE",
              "start_line": "90"
            },
            "variant": {
              "sp_table_init": true
            }
          }
        },
        "symbol": "df",
        "uid": "1",
        "var_id": {
          "bitfield1": "1"
        }
      }
    },
    {
      "assign": {
        "expr": {
          "sp_dataframe_select__columns": {
            "cols": [
              {
                "apply_expr": {
                  "fn": {
                    "builtin_fn": {
                      "name": {
                        "fn_name_flat": {
                          "name": "col"
                        }
                      }
                    }
                  },
                  "pos_args": [
                    {
                      "string_val": {
                        "src": {
                          "file": "SRC_POSITION_TEST_MODE",
                          "start_line": "92"
                        },
                        "v": "STR"
                      }
                    }
                  ],
                  "src": {
                    "file": "SRC_POSITION_TEST_MODE",
                    "start_line": "92"
                  }
                }
              },
              {
                "apply_expr": {
                  "fn": {
                    "builtin_fn": {
                      "name": {
                        "fn_name_flat": {
                          "name": "col"
                        }
                      }
                    }
                  },
                  "pos_args": [
                    {
                      "string_val": {
                        "src": {
                          "file": "SRC_POSITION_TEST_MODE",
                          "start_line": "92"
                        },
                        "v": "A"
                      }
                    }
                  ],
                  "src": {
                    "file": "SRC_POSITION_TEST_MODE",
                    "start_line": "92"
                  }
                }
              }
            ],
            "df": {
              "sp_dataframe_ref": {
                "id": {
                  "bitfield1": "1"
                }
              }
            },
            "src": {
              "file": "SRC_POSITION_TEST_MODE",
              "start_line": "92"
            },
            "variadic": true
          }
        },
        "symbol": "df",
        "uid": "2",
        "var_id": {
          "bitfield1": "2"
        }
      }
    }
  ],
  "client_ast_version": "1",
  "client_language": {
    "python_language": {
      "version": {
        "label": "final",
        "major": "3",
        "minor": "9",
        "patch": "20"
      }
    }
  },
  "client_version": {
    "major": "1",
    "minor": "23"
  }
}
>>>>>>> 66d50cff3 (SNOW-1738538 Update expectation files to json ast output so more stable & readable)
