## TEST CASE

df = session.table(["mock_database", "mock_schema", tables.table1])
df = df.select("num")

## EXPECTED UNPARSER OUTPUT

df = session.table(["mock_database", "mock_schema", "table1"])

df = df.select(col("num"))

## EXPECTED ENCODED AST

interned_value_table {
  string_values {
    key: -1
  }
  string_values {
    key: 2
    value: "SRC_POSITION_TEST_MODE"
  }
}
body {
  assign {
    expr {
      sp_table {
        name {
          name {
            sp_name_structured {
              name: "mock_database"
              name: "mock_schema"
              name: "table1"
            }
          }
        }
        src {
          end_column: 75
          end_line: 25
          file: 2
          start_column: 13
          start_line: 25
        }
        variant {
          sp_session_table: true
        }
      }
    }
    symbol {
      value: "df"
    }
    uid: 1
    var_id {
      bitfield1: 1
    }
  }
}
body {
  assign {
    expr {
      sp_dataframe_select__columns {
        cols {
          apply_expr {
            fn {
              builtin_fn {
                name {
                  name {
                    sp_name_flat {
                      name: "col"
                    }
                  }
                }
              }
            }
            pos_args {
              string_val {
                src {
                  end_column: 29
                  end_line: 26
                  file: 2
                  start_column: 13
                  start_line: 26
                }
                v: "num"
              }
            }
            src {
              end_column: 29
              end_line: 26
              file: 2
              start_column: 13
              start_line: 26
            }
          }
        }
        df {
          sp_dataframe_ref {
            id {
              bitfield1: 1
            }
          }
        }
        src {
          end_column: 29
          end_line: 26
          file: 2
          start_column: 13
          start_line: 26
        }
        variadic: true
      }
    }
    symbol {
      value: "df"
    }
    uid: 2
    var_id {
      bitfield1: 2
    }
  }
}
client_ast_version: 1
client_language {
  python_language {
    version {
      label: "final"
      major: 3
      minor: 9
      patch: 1
    }
  }
}
client_version {
  major: 1
  minor: 26
}
