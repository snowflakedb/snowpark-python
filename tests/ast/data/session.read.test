## TEST CASE

df1 = session.read.csv("resources/iris.csv")

df2 = session.read.json("resources/testJson.json")

df3 = session.read.avro("resources/test.avro")

df4 = session.read.parquet("resources/test.parquet")

df5 = session.read.xml("resources/test.xml")

df6 = session.read.orc("resources/test.orc")

df7 = session.read.option("INFER_SCHEMA", True).option("PARSE_HEADER", True).csv("testCSVheader.csv")

df8 = session.read.options({"INFER_SCHEMA": True, "PARSE_HEADER": True}).csv("testCSVheader.csv")

user_schema = StructType([StructField("a", IntegerType()), StructField("b", StringType()), StructField("c", FloatType())])

df9 = session.read.with_metadata(col("METADATA$FILE_ROW_NUMBER"), "METADATA$FILE_LAST_MODIFIED").schema(user_schema).csv("testCSVheader.csv")

## EXPECTED UNPARSER OUTPUT

df1 = session.read.csv("resources/iris.csv")

df2 = session.read.json("resources/testJson.json")

df3 = session.read.avro("resources/test.avro")

df4 = session.read.parquet("resources/test.parquet")

df5 = session.read.xml("resources/test.xml")

df6 = session.read.orc("resources/test.orc")

df7 = session.read.option("INFER_SCHEMA", True).option("PARSE_HEADER", True).csv("testCSVheader.csv")

df8 = session.read.options({"INFER_SCHEMA": True, "PARSE_HEADER": True}).csv("testCSVheader.csv")

df9 = session.read.with_metadata(col("METADATA$FILE_ROW_NUMBER"), "METADATA$FILE_LAST_MODIFIED").schema(StructType([StructField("a", IntegerType(), nullable=True), StructField("b", StringType(), nullable=True), StructField("c", FloatType(), nullable=True)], structured=False)).csv("testCSVheader.csv")

## EXPECTED ENCODED AST

CmQKYgpTsgpQChJyZXNvdXJjZXMvaXJpcy5jc3YSHgocChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWhoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFoSBQoDZGYxGAEiAggBCmkKZwpYugpVChdyZXNvdXJjZXMvdGVzdEpzb24uanNvbhIeChwKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShcGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXBIFCgNkZjIYAiICCAIKZQpjClSqClEKE3Jlc291cmNlcy90ZXN0LmF2cm8SHgocChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoXhoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKF4SBQoDZGYzGAMiAggDCmgKZgpXygpUChZyZXNvdXJjZXMvdGVzdC5wYXJxdWV0Eh4KHAoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGAaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShgEgUKA2RmNBgEIgIIBApkCmIKU9oKUAoScmVzb3VyY2VzL3Rlc3QueG1sEh4KHAoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGIaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShiEgUKA2RmNRgFIgIIBQpkCmIKU8IKUAoScmVzb3VyY2VzL3Rlc3Qub3JjEh4KHAoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGQaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShkEgUKA2RmNhgGIgIIBgqKAgqHAgr3AbIK8wEKEXRlc3RDU1ZoZWFkZXIuY3N2EsEBEr4BCgxQQVJTRV9IRUFERVISbxJtCgxJTkZFUl9TQ0hFTUESHgocChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoZhoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGYiIbIBHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGYQARoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGYiIbIBHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGYQARoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGYSBQoDZGY3GAciAggHCu4BCusBCtsBsgrXAQoRdGVzdENTVmhlYWRlci5jc3YSpQEaogEKMQoMSU5GRVJfU0NIRU1BEiGyAR4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShoEAEKMQoMUEFSU0VfSEVBREVSEiGyAR4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShoEAESHgocChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoaBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGgaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShoEgUKA2RmOBgIIgIICAqfAwqcAwqMA7IKiAMKEXRlc3RDU1ZoZWFkZXIuY3N2EtYCItMCCogCKoUCCsYBCoMBeoABCicKJQoHCgUKA2NvbBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGwaOeoLNgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGwSGE1FVEFEQVRBJEZJTEVfUk9XX05VTUJFUiIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGwKPOoLOQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGwSG01FVEFEQVRBJEZJTEVfTEFTVF9NT0RJRklFRBABEh4KHAoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGwaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShsEioKCwoDCgFhEgJgARgBCg4KAwoBYhIFmgECCgAYAQoLCgMKAWMSAkgBGAEaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShsGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUobBIFCgNkZjkYCSICCAkQARoREg8KDQoFZmluYWwQAxgIIBMiBBABGBU=
