## TEST CASE

df1 = session.read.csv("resources/iris.csv")

df2 = session.read.json("resources/testJson.json")

df3 = session.read.avro("resources/test.avro")

df4 = session.read.parquet("resources/test.parquet")

df5 = session.read.xml("resources/test.xml")

df6 = session.read.orc("resources/test.orc")

df7 = session.read.option("INFER_SCHEMA", True).option("PARSE_HEADER", True).csv("testCSVheader.csv")

df8 = session.read.options({"INFER_SCHEMA": True, "PARSE_HEADER": True}).csv("testCSVheader.csv")

user_schema = StructType([StructField("a", IntegerType()), StructField("b", StringType()), StructField("c", FloatType())])

df9 = session.read.with_metadata(col("METADATA$FILE_ROW_NUMBER"), "METADATA$FILE_LAST_MODIFIED").schema(user_schema).csv("testCSVheader.csv")

## EXPECTED UNPARSER OUTPUT

df1 = session.read.csv("resources/iris.csv")

df2 = session.read.json("resources/testJson.json")

df3 = session.read.avro("resources/test.avro")

df4 = session.read.parquet("resources/test.parquet")

df5 = session.read.xml("resources/test.xml")

df6 = session.read.orc("resources/test.orc")

df7 = session.read.option("INFER_SCHEMA", True).option("PARSE_HEADER", True).csv("testCSVheader.csv")

df8 = session.read.options({"INFER_SCHEMA": True, "PARSE_HEADER": True}).csv("testCSVheader.csv")

df9 = session.read.with_metadata(col("METADATA$FILE_ROW_NUMBER"), "METADATA$FILE_LAST_MODIFIED").schema(StructType([StructField("a", IntegerType(), nullable=True), StructField("b", StringType(), nullable=True), StructField("c", FloatType(), nullable=True)], structured=False)).csv("testCSVheader.csv")

## EXPECTED ENCODED AST

CmQKYgpTigtQChJyZXNvdXJjZXMvaXJpcy5jc3YSHgocChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoRhoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEYSBQoDZGYxGAEiAggBCmkKZwpYkgtVChdyZXNvdXJjZXMvdGVzdEpzb24uanNvbhIeChwKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShIGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoSBIFCgNkZjIYAiICCAIKZQpjClSCC1EKE3Jlc291cmNlcy90ZXN0LmF2cm8SHgocChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoShoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEoSBQoDZGYzGAMiAggDCmgKZgpXogtUChZyZXNvdXJjZXMvdGVzdC5wYXJxdWV0Eh4KHAoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKEwaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShMEgUKA2RmNBgEIgIIBApkCmIKU7ILUAoScmVzb3VyY2VzL3Rlc3QueG1sEh4KHAoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKE4aGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShOEgUKA2RmNRgFIgIIBQpkCmIKU5oLUAoScmVzb3VyY2VzL3Rlc3Qub3JjEh4KHAoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFAaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShQEgUKA2RmNhgGIgIIBgqKAgqHAgr3AYoL8wEKEXRlc3RDU1ZoZWFkZXIuY3N2EsEBEr4BCgxQQVJTRV9IRUFERVISbxJtCgxJTkZFUl9TQ0hFTUESHgocChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoUhoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFIiIcoBHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFIQARoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFIiIcoBHgoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFIQARoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFISBQoDZGY3GAciAggHCu4BCusBCtsBigvXAQoRdGVzdENTVmhlYWRlci5jc3YSpQEaogEKMQoMSU5GRVJfU0NIRU1BEiHKAR4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShUEAEKMQoMUEFSU0VfSEVBREVSEiHKAR4KGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShUEAESHgocChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoVBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFQaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShUEgUKA2RmOBgIIgIICAqCAwr/AgrvAooL6wIKEXRlc3RDU1ZoZWFkZXIuY3N2ErkCIrYCCusBKugBCqkBCmeSAWQKCxoJCgcKBQoDY29sGjn6DDYKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShYEhhNRVRBREFUQSRGSUxFX1JPV19OVU1CRVIiGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShYCjz6DDkKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShYEhtNRVRBREFUQSRGSUxFX0xBU1RfTU9ESUZJRUQQARIeChwKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShYGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWBIqCgsKAwoBYRICYAEYAQoOCgMKAWISBZoBAgoAGAEKCwoDCgFjEgJIARgBGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUoWBoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKFgSBQoDZGY5GAkiAggJEAEaERIPCg0KBWZpbmFsEAMYCSAUIgQQARgX
