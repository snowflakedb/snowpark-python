## TEST CASE

df1 = session.read.csv("resources/iris.csv")

df2 = session.read.json("resources/testJson.json")

df3 = session.read.avro("resources/test.avro")

df4 = session.read.parquet("resources/test.parquet")

df5 = session.read.xml("resources/test.xml")

df6 = session.read.orc("resources/test.orc")

df7 = session.read.option("INFER_SCHEMA", True).option("PARSE_HEADER", True).csv("testCSVheader.csv")

df8 = session.read.options({"INFER_SCHEMA": True, "PARSE_HEADER": True}).csv("testCSVheader.csv")

user_schema = StructType([StructField("a", IntegerType()), StructField("b", StringType()), StructField("c", FloatType())])

df9 = session.read.with_metadata(col("METADATA$FILE_ROW_NUMBER"), "METADATA$FILE_LAST_MODIFIED").schema(user_schema).csv("testCSVheader.csv")

## EXPECTED UNPARSER OUTPUT

df1 = session.read.csv("resources/iris.csv")

df2 = session.read.json("resources/testJson.json")

df3 = session.read.avro("resources/test.avro")

df4 = session.read.parquet("resources/test.parquet")

df5 = session.read.xml("resources/test.xml")

df6 = session.read.orc("resources/test.orc")

df7 = session.read.option("INFER_SCHEMA", True).option("PARSE_HEADER", True).csv("testCSVheader.csv")

df8 = session.read.options({"INFER_SCHEMA": True, "PARSE_HEADER": True}).csv("testCSVheader.csv")

df9 = session.read.with_metadata(col("METADATA$FILE_ROW_NUMBER"), "METADATA$FILE_LAST_MODIFIED").schema(StructType([StructField("a", IntegerType(), nullable=True), StructField("b", StringType(), nullable=True), StructField("c", FloatType(), nullable=True)], structured=False)).csv("testCSVheader.csv")

## EXPECTED ENCODED AST

CnAKbgpf+gpcChJyZXNvdXJjZXMvaXJpcy5jc3YSJAoiCiAIGhBaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA4oWhogCDQQWhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAOKFoSBQoDZGYxGAEiAggBCnUKcwpkggthChdyZXNvdXJjZXMvdGVzdEpzb24uanNvbhIkCiIKIAgaEFwaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDihcGiAIOhBcGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA4oXBIFCgNkZjIYAiICCAIKcQpvCmDyCl0KE3Jlc291cmNlcy90ZXN0LmF2cm8SJAoiCiAIGhBeGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA4oXhogCDYQXhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAOKF4SBQoDZGYzGAMiAggDCnQKcgpjkgtgChZyZXNvdXJjZXMvdGVzdC5wYXJxdWV0EiQKIgogCBoQYBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAOKGAaIAg8EGAaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDihgEgUKA2RmNBgEIgIIBApwCm4KX6ILXAoScmVzb3VyY2VzL3Rlc3QueG1sEiQKIgogCBoQYhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAOKGIaIAg0EGIaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDihiEgUKA2RmNRgFIgIIBQpwCm4KX4oLXAoScmVzb3VyY2VzL3Rlc3Qub3JjEiQKIgogCBoQZBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAOKGQaIAg0EGQaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDihkEgUKA2RmNhgGIgIIBgqvAgqsAgqcAvoKmAIKEXRlc3RDU1ZoZWFkZXIuY3N2EuABEt0BCgxQQVJTRV9IRUFERVISgQESfwoMSU5GRVJfU0NIRU1BEiQKIgogCBoQZhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAOKGYaIAg3EGYaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDihmIifCASQKIAg3EGYaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDihmEAEaIAhUEGYaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDihmIifCASQKIAhUEGYaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDihmEAEaIAhtEGYaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDihmEgUKA2RmNxgHIgIIBwqMAgqJAgr5AfoK9QEKEXRlc3RDU1ZoZWFkZXIuY3N2Er0BGroBCjcKDElORkVSX1NDSEVNQRInwgEkCiAIUBBoGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA4oaBABCjcKDFBBUlNFX0hFQURFUhInwgEkCiAIUBBoGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA4oaBABEiQKIgogCBoQaBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAOKGgaIAhQEGgaFlNSQ19QT1NJVElPTl9URVNUX01PREUgDihoGiAIaRBoGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA4oaBIFCgNkZjgYCCICCAgK0QMKzgMKvgP6CroDChF0ZXN0Q1NWaGVhZGVyLmNzdhKBAyL+AgqtAiqqAgrfAQqWAYoBkgEKLRorCgcKBQoDY29sEiAISBBsGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFICkobBo/ugw8CiAISBBsGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFICkobBIYTUVUQURBVEEkRklMRV9ST1dfTlVNQkVSIiAISBBsGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFICkobApCugw/CiAIaBBsGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA4obBIbTUVUQURBVEEkRklMRV9MQVNUX01PRElGSUVEEAESJAoiCiAIGhBsGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA4obBogCGgQbBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAOKGwSKgoLCgMKAWESAmABGAEKDgoDCgFiEgWaAQIKABgBCgsKAwoBYxICSAEYARogCHwQbBoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSAOKGwaIQiVARBsGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFIA4obBIFCgNkZjkYCSICCAkQARoREg8KDQoFZmluYWwQAxgLIAkiBBABGBU=
