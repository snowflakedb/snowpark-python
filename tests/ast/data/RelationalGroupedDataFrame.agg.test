## TEST CASE

df1 = session.table("test_table")

rgdf2 = df1.group_by("str")

df3 = rgdf2.agg()

df4 = rgdf2.agg(sum("num"))

df5 = rgdf2.agg([max("num")])

df6 = rgdf2.agg(sum("num"), max("num"))

df7 = rgdf2.agg([sum("num"), max("num")])

df8 = rgdf2.agg("num", "max")

df9 = rgdf2.agg(col("num"), "max")

df10 = rgdf2.agg([("num", "max"), [col("num"), "sum"]])

df11 = rgdf2.agg(sum("num"), ("num", "max"), max("num"), [col("num"), "sum"])

df12 = rgdf2.agg({})

df13 = rgdf2.agg({"num": "max"})

df14 = rgdf2.agg({"num": "max", "str": "sum"})

## EXPECTED UNPARSER OUTPUT

df1 = session.table("test_table")

rgdf2 = df1.group_by("str")

df3 = rgdf2.agg()

df4 = rgdf2.agg(sum(col("num")))

df5 = rgdf2.agg([max(col("num"))])

df6 = rgdf2.agg(sum(col("num")), max(col("num")))

df7 = rgdf2.agg([sum(col("num")), max(col("num"))])

df8 = rgdf2.agg(["num", "max"])

df9 = rgdf2.agg([col("num"), "max"])

df10 = rgdf2.agg([("num", "max"), [col("num"), "sum"]])

df11 = rgdf2.agg(sum(col("num")), ("num", "max"), max(col("num")), [col("num"), "sum"])

df12 = rgdf2.agg({})

df13 = rgdf2.agg({"num": "max"})

df14 = rgdf2.agg({"num": "max", "str": "sum"})

## EXPECTED ENCODED AST

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REUobBIDbWF4CpoB0gKWAQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGwSUpIBTwoLGgkKBwoFCgNjb2waJPoMIQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGwSA251bSIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGwSJPoMIQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKGwSA3N1bRIGUgQKAggCGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUobBIGCgRkZjEwGAoiAggKCtEECs4ECr0Eugu5BAqSBAqAAZIBfQoLGgkKBwoFCgNzdW0aUpIBTwoLGgkKBwoFCgNjb2waJPoMIQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKG4SA251bSIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKG4iGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShuCmuaDWgKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShuEiT6DCEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShuEgNudW0SJPoMIQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKG4SA21heAqAAZIBfQoLGgkKBwoFCgNtYXgaUpIBTwoLGgkKBwoFCgNjb2waJPoMIQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKG4SA251bSIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKG4iGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShuCpoB0gKWAQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKG4SUpIBTwoLGgkKBwoFCgNjb2waJPoMIQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKG4SA251bSIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKG4SJPoMIQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKG4SA3N1bRABEgZSBAoCCAIaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShuEgYKBGRmMTEYCyICCAsKXgpcCky6C0kKIwofkgQcEhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUocBABEgZSBAoCCAIaGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShwEgYKBGRmMTIYDCICCAwKrwEKrAEKmwG6C5cBCnEKbZIEagpMEiT6DCEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERShyEgNudW0SJPoMIQoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKHISA21heBIaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKHIQARIGUgQKAggCGhoaFlNSQ19QT1NJVElPTl9URVNUX01PREUochIGCgRkZjEzGA0iAggNCoACCv0BCuwBugvoAQrBAQq8AZIEuAEKTBIk+gwhChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUodBIDbnVtEiT6DCEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSh0EgNtYXgKTBIk+gwhChoaFlNSQ19QT1NJVElPTl9URVNUX01PREUodBIDc3RyEiT6DCEKGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSh0EgNzdW0SGhoWU1JDX1BPU0lUSU9OX1RFU1RfTU9ERSh0EAESBlIECgIIAhoaGhZTUkNfUE9TSVRJT05fVEVTVF9NT0RFKHQSBgoEZGYxNBgOIgIIDhABGhESDwoNCgVmaW5hbBADGAkgEiIEEAEYFw==
