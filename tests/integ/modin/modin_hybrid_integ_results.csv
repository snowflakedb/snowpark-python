,module,name,message,status
17,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[ndarray1-truediv],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
30,tests.integ.modin.frame.test_dtypes,test_nullable_extension[dataframe_input5-Int16-snowpark_dtype5-logical_dtype5],"AssertionError: assert Int16Dtype() == dtype('int64')
 +  where Int16Dtype() = 0       1\n1       2\n2    <NA>\ndtype: Int16.dtype",failed
32,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[ndarray1-rtruediv],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
35,tests.integ.modin.frame.test_dtypes,test_nullable_extension[dataframe_input6-UInt16-snowpark_dtype6-logical_dtype6],"AssertionError: assert UInt16Dtype() == dtype('int64')
 +  where UInt16Dtype() = 0       1\n1       2\n2    <NA>\ndtype: UInt16.dtype",failed
40,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--8-52879115],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
42,tests.integ.modin.frame.test_dtypes,test_nullable_extension[dataframe_input7-Int8-snowpark_dtype7-logical_dtype7],"AssertionError: assert Int8Dtype() == dtype('int64')
 +  where Int8Dtype() = 0       1\n1       2\n2    <NA>\ndtype: Int8.dtype",failed
48,tests.integ.modin.frame.test_dtypes,test_nullable_extension[dataframe_input8-UInt8-snowpark_dtype8-logical_dtype8],"AssertionError: assert UInt8Dtype() == dtype('int64')
 +  where UInt8Dtype() = 0       1\n1       2\n2    <NA>\ndtype: UInt8.dtype",failed
53,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[ndarray1-floordiv],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
55,tests.integ.modin.frame.test_dtypes,test_nullable_extension[dataframe_input9-Float32-snowpark_dtype9-logical_dtype9],"AssertionError: assert Float32Dtype() == dtype('float64')
 +  where Float32Dtype() = 0     1.0\n1     2.0\n2    <NA>\ndtype: Float32.dtype",failed
63,tests.integ.modin.frame.test_dtypes,test_nullable_extension[dataframe_input10-Float64-snowpark_dtype10-logical_dtype10],"AssertionError: assert Float64Dtype() == dtype('float64')
 +  where Float64Dtype() = 0     1.0\n1     2.0\n2    <NA>\ndtype: Float64.dtype",failed
64,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--8--9028751],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
69,tests.integ.modin.frame.test_dtypes,test_nullable_extension[dataframe_input11-Int64-snowpark_dtype11-logical_dtype11],"AssertionError: assert Int64Dtype() == dtype('int64')
 +  where Int64Dtype() = 0       1\n1       2\n2    <NA>\n3    <NA>\n4    <NA>\ndtype: Int64.dtype",failed
74,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[ndarray1-rfloordiv],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
76,tests.integ.modin.frame.test_dtypes,test_nullable_extension[dataframe_input12-Float64-snowpark_dtype12-logical_dtype12],"AssertionError: assert Float64Dtype() == dtype('float64')
 +  where Float64Dtype() = 0     1.0\n1     2.0\n2    <NA>\n3    <NA>\n4     NaN\n5    <NA>\ndtype: Float64.dtype",failed
88,tests.integ.modin.frame.test_dtypes,test_extended_float64_with_nan,AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
91,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-7-0],IndexError: positional indexers are out-of-bounds,failed
94,tests.integ.modin.frame.test_dtypes,test_float[dataframe_input0-input_dtype0-expected_dtype0-logical_dtype0],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    1.099609\n1    2.199219\n2    3.300781\ndtype: float16.dtype",failed
101,tests.integ.modin.frame.test_dtypes,test_float[dataframe_input1-input_dtype1-expected_dtype1-logical_dtype1],"AssertionError: assert dtype('float32') == dtype('float64')
 +  where dtype('float32') = 0    1.1\n1    2.2\n2    3.3\ndtype: float32.dtype",failed
118,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-7--3],IndexError: positional indexers are out-of-bounds,failed
124,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[ndarray1-mod],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
135,tests.integ.modin.frame.test_dtypes,test_string_explicit[dataframe_input0-string-index0],"AssertionError: assert string[python] == <class 'numpy.object_'>
 +  where string[python] = 0    a\n1    b\n2    c\ndtype: string.dtype
 +  and   <class 'numpy.object_'> = np.object_",failed
142,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[ndarray1-rmod],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
160,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[ndarray1-pow],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
164,tests.integ.modin.frame.test_dtypes,"test_time[dataframe_input2-datetime64[ns, America/Los_Angeles]-datetime64[ns, UTC-08:00]-datetime64[ns, UTC-08:00]]","AssertionError: assert datetime64[ns, America/Los_Angeles] == 'datetime64[ns, UTC-08:00]'
 +  where datetime64[ns, America/Los_Angeles] = 0   2017-12-15 19:02:35-08:00\n1   2017-12-15 19:02:35-08:00\ndtype: datetime64[ns, America/Los_Angeles].dtype",failed
166,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-7-4],IndexError: positional indexers are out-of-bounds,failed
170,tests.integ.modin.frame.test_dtypes,test_time[dataframe_input3-object-datetime64[ns]-datetime64[ns]],"AssertionError: assert dtype('O') == 'datetime64[ns]'
 +  where dtype('O') = 0    2017-12-16 03:02:35\n1    2017-12-16 03:02:35\n2                   None\ndtype: object.dtype",failed
175,tests.integ.modin.frame.test_dtypes,"test_time[dataframe_input4-object-datetime64[ns, UTC-08:00]-datetime64[ns, UTC-08:00]]","AssertionError: assert dtype('O') == 'datetime64[ns, UTC-08:00]'
 +  where dtype('O') = 0    2017-12-15 19:02:35-08:00\n1                         None\n2                          NaT\n3    2017-12-15 19:02:35-08:00\ndtype: object.dtype",failed
179,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[ndarray1-rpow],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
194,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-7--7],IndexError: positional indexers are out-of-bounds,failed
195,tests.integ.modin.frame.test_dtypes,test_object[dataframe_input0-snowpark_dtype0],AttributeError: 'DataFrame' object has no attribute 'get_snowflake_type',failed
199,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index1-add],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
206,tests.integ.modin.frame.test_dtypes,test_object[dataframe_input1-snowpark_dtype1],AttributeError: 'DataFrame' object has no attribute 'get_snowflake_type',failed
215,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index1-radd],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
218,tests.integ.modin.frame.test_dtypes,test_object[dataframe_input2-snowpark_dtype2],AttributeError: 'DataFrame' object has no attribute 'get_snowflake_type',failed
219,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-7-6],IndexError: positional indexers are out-of-bounds,failed
228,tests.integ.modin.frame.test_dtypes,test_empty[input_dtype0-expected_dtype0-snowpark_dtype0-to_pandas_dtype0],AttributeError: 'DataFrame' object has no attribute 'get_snowflake_type',failed
239,tests.integ.modin.frame.test_dtypes,test_empty[input_dtype1-expected_dtype1-snowpark_dtype1-to_pandas_dtype1],AttributeError: 'DataFrame' object has no attribute 'get_snowflake_type',failed
241,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-7--6],IndexError: positional indexers are out-of-bounds,failed
246,tests.integ.modin.test_apply_persist,test_apply_existing_udf,TypeError: test_apply_existing_udf.<locals>.dummy() got an unexpected keyword argument 'snowflake_udf_params',failed
254,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index1-sub],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
255,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-7--8],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
267,tests.integ.modin.test_apply_persist,test_apply_or_map_permanent_def[apply],TypeError: test_apply_or_map_permanent_def.<locals>.double() got an unexpected keyword argument 'snowflake_udf_params',failed
269,tests.integ.modin.frame.test_dtypes,test_empty[input_dtype2-expected_dtype2-snowpark_dtype2-to_pandas_dtype2],AttributeError: 'DataFrame' object has no attribute 'get_snowflake_type',failed
271,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index1-rsub],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
276,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-7-7],IndexError: positional indexers are out-of-bounds,failed
280,tests.integ.modin.frame.test_dtypes,test_empty[None-expected_dtype3-snowpark_dtype3-to_pandas_dtype3],AttributeError: 'DataFrame' object has no attribute 'get_snowflake_type',failed
286,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index1-mul],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
295,tests.integ.modin.test_apply_persist,test_apply_or_map_permanent_def[map],TypeError: test_apply_or_map_permanent_def.<locals>.double() got an unexpected keyword argument 'snowflake_udf_params',failed
298,tests.integ.modin.frame.test_dtypes,test_unsupported_dtype_raises[input_data0-category-category],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
303,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index1-rmul],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
304,tests.integ.modin.frame.test_dtypes,test_unsupported_dtype_raises[input_data1-category-category],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
309,tests.integ.modin.frame.test_dtypes,test_unsupported_dtype_raises[input_data2-None-period\\[s\\]],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
317,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index1-truediv],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
319,tests.integ.modin.frame.test_dtypes,test_str_float_type_with_nan[input_data0-None-expected_dtype0-snowpark_dtype0-to_pandas_dtype0],AttributeError: 'DataFrame' object has no attribute 'get_snowflake_type',failed
322,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-7-52879115],IndexError: positional indexers are out-of-bounds,failed
327,tests.integ.modin.frame.test_dtypes,test_str_float_type_with_nan[input_data1-input_dtype1-expected_dtype1-snowpark_dtype1-to_pandas_dtype1],AttributeError: 'DataFrame' object has no attribute 'get_snowflake_type',failed
331,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index1-rtruediv],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
335,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-7--9028751],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
338,tests.integ.modin.frame.test_dtypes,test_str_float_type_with_nan[input_data2-input_dtype2-expected_dtype2-snowpark_dtype2-to_pandas_dtype2],AttributeError: 'DataFrame' object has no attribute 'get_snowflake_type',failed
340,tests.integ.modin.test_apply_persist,test_apply_permanent_lambda,TypeError: test_apply_permanent_lambda.<locals>.<lambda>() got an unexpected keyword argument 'snowflake_udf_params',failed
355,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-52879115-0],IndexError: positional indexers are out-of-bounds,failed
365,tests.integ.modin.test_apply_persist,test_apply_named_udf_negative,TypeError: test_apply_named_udf_negative.<locals>.identity() got an unexpected keyword argument 'snowflake_udf_params',failed
372,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index1-floordiv],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
378,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-52879115--3],IndexError: positional indexers are out-of-bounds,failed
382,tests.integ.modin.test_to_numpy,test_variant_data_to_numpy[DataFrame],"AssertionError:
Arrays are not equal

Mismatched elements: 4 / 10 (40%)
 x: array([[1],
       [1.1],
       ['snow'],...
 y: array([[1],
       [1.1],
       ['snow'],...",failed
386,tests.integ.modin.test_to_numpy,test_variant_data_to_numpy[Series],"AssertionError:
Arrays are not equal

Mismatched elements: 4 / 10 (40%)
 x: array([1, 1.1, 'snow', b'snow', datetime.date(2023, 1, 1),
       datetime.time(1, 2, 3, 1), datetime.datetime(2023, 1, 1, 0, 0),
       list([1, 2]), {'snow': 'flake'}, None], dtype=object)
 y: array([1, 1.1, 'snow', '736e6f77', '2023-01-01', '01:02:03.000001',
       '2023-01-01T00:00:00', list([1, 2]), {'snow': 'flake'}, None],
      dtype=object)",failed
387,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index1-rfloordiv],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
391,tests.integ.modin.test_apply_persist,test_grouby_apply_permanent,TypeError: test_grouby_apply_permanent.<locals>.sum_plus_one() got an unexpected keyword argument 'snowflake_udf_params',failed
398,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-52879115-4],IndexError: positional indexers are out-of-bounds,failed
400,tests.integ.modin.test_to_numpy,test_to_numpy_copy_true_series,"AssertionError: assert 'has been ignored by Snowpark pandas' in ''
 +  where '' = <_pytest.logging.LogCaptureFixture object at 0x33ac1d960>.text",failed
404,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index1-mod],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
412,tests.integ.modin.test_to_numpy,test_to_numpy_warning,"AssertionError: assert 'The current operation leads to materialization and can be slow if the data is large!' in ''
 +  where '' = <_pytest.logging.LogCaptureFixture object at 0x33abf9d50>.text",failed
417,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index1-rmod],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
429,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index1-pow],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
437,tests.integ.modin.test_apply_persist,test_apply_immutable,TypeError: test_apply_immutable.<locals>.immutable_f() got an unexpected keyword argument 'snowflake_udf_params',failed
441,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-52879115--7],IndexError: positional indexers are out-of-bounds,failed
446,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index1-rpow],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
462,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-52879115-6],IndexError: positional indexers are out-of-bounds,failed
479,tests.integ.modin.test_unimplemented,test_unsupported_dataframe_methods[<lambda>-cumprod0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
483,tests.integ.modin.test_unimplemented,test_unsupported_dataframe_methods[<lambda>-cumprod1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
486,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-52879115--6],IndexError: positional indexers are out-of-bounds,failed
487,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index_with_name1-add],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
496,tests.integ.modin.test_unimplemented,test_unsupported_series_methods[<lambda>-transform],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
499,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-52879115--8],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
500,tests.integ.modin.test_unimplemented,test_unsupported_series_methods[<lambda>-cumprod],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
502,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index_with_name1-radd],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
509,tests.integ.modin.test_unimplemented,test_unsupported_dataframe_binary_methods[<lambda>-update],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
514,tests.integ.modin.test_unimplemented,test_unsupported_series_binary_methods[<lambda>-update],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
517,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index_with_name1-sub],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
520,tests.integ.modin.test_unimplemented,test_unsupported_str_methods[<lambda>-Series.rfind],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
526,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-52879115-7],IndexError: positional indexers are out-of-bounds,failed
554,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index_with_name1-rsub],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
570,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-52879115-52879115],IndexError: positional indexers are out-of-bounds,failed
585,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index_with_name1-mul],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
597,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index_with_name1-rmul],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
609,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-52879115--9028751],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
623,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--9028751-0],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
630,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index_with_name1-truediv],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
635,tests.integ.modin.test_unique,test_unique_series[native_series0],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
637,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--9028751--3],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
641,tests.integ.modin.test_unique,test_unique_series[native_series1],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
644,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index_with_name1-rtruediv],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
646,tests.integ.modin.test_unique,test_unique_series[native_series2],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
652,tests.integ.modin.test_unique,test_unique_series[native_series3],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
655,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--9028751-4],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
656,tests.integ.modin.test_unique,test_unique_series[native_series4],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
659,tests.integ.modin.test_unique,test_unique_series[native_series5],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
660,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index_with_name1-floordiv],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
663,tests.integ.modin.test_unique,test_unique_series[native_series6],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
668,tests.integ.modin.test_unique,test_unique_series[native_series7],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
671,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--9028751--7],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
675,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index_with_name1-rfloordiv],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
678,tests.integ.modin.test_unique,test_unique_series[native_series8],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
683,tests.integ.modin.test_unique,test_unique_series_reordered[native_series0],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
686,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--9028751-6],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
688,tests.integ.modin.test_unique,test_unique_series_reordered[native_series1],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
691,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index_with_name1-mod],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
694,tests.integ.modin.test_unique,test_unique_series_reordered[native_series2],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
699,tests.integ.modin.test_unique,test_unique_series_reordered[native_series3],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
701,tests.integ.modin.crosstab.test_crosstab,test_basic_crosstab_with_numpy_arrays[True],AttributeError: can't set attribute,failed
704,tests.integ.modin.test_unique,test_unique_series_reordered[native_series4],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
707,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index_with_name1-rmod],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
715,tests.integ.modin.crosstab.test_crosstab,test_basic_crosstab_with_numpy_arrays[False],AttributeError: can't set attribute,failed
724,tests.integ.modin.frame.test_align,test_align_basic_with_nulls_axis0[outer],AssertionError,failed
726,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--9028751--6],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
731,tests.integ.modin.test_unique,test_unique_series_reordered[native_series5],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
733,tests.integ.modin.frame.test_align,test_align_basic_with_nulls_axis0[inner],AssertionError,failed
737,tests.integ.modin.test_unique,test_unique_series_reordered[native_series6],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
740,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index_with_name1-pow],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
741,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--9028751--8],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
743,tests.integ.modin.test_unique,test_unique_series_reordered[native_series7],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
745,tests.integ.modin.frame.test_align,test_align_basic_with_nulls_axis0[left],AssertionError,failed
749,tests.integ.modin.test_unique,test_unique_series_reordered[native_series8],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
753,tests.integ.modin.test_unique,test_unique_index[index0],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
757,tests.integ.modin.frame.test_align,test_align_basic_with_nulls_axis0[right],AssertionError,failed
758,tests.integ.modin.crosstab.test_crosstab,test_basic_crosstab_with_series_objs_some_overlap[True],ValueError: All arrays must be of the same length,failed
759,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index_with_name1-rpow],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
762,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--9028751-7],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
765,tests.integ.modin.test_unique,test_unique_index[index1],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
769,tests.integ.modin.frame.test_align,test_align_frame_with_series_axis_negative[outer],Failed: DID NOT RAISE <class 'ValueError'>,failed
770,tests.integ.modin.test_unique,test_unique_index[index2],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
774,tests.integ.modin.test_unique,test_unique_index[index3],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
775,tests.integ.modin.frame.test_align,test_align_frame_with_series_axis_negative[inner],Failed: DID NOT RAISE <class 'ValueError'>,failed
777,tests.integ.modin.crosstab.test_crosstab,test_basic_crosstab_with_series_objs_some_overlap[False],ValueError: All arrays must be of the same length,failed
780,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--9028751-52879115],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
782,tests.integ.modin.test_unique,test_unique_index[index4],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
786,tests.integ.modin.frame.test_align,test_align_frame_with_series_axis_negative[left],Failed: DID NOT RAISE <class 'ValueError'>,failed
788,tests.integ.modin.test_unique,test_unique_index[index5],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
791,tests.integ.modin.crosstab.test_crosstab,test_basic_crosstab_with_series_objs_some_overlap_error[True],Failed: DID NOT RAISE <class 'Exception'>,failed
793,tests.integ.modin.test_unique,test_unique_index[index6],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
797,tests.integ.modin.frame.test_align,test_align_frame_with_series_axis_negative[right],Failed: DID NOT RAISE <class 'ValueError'>,failed
801,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--9028751--9028751],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
803,tests.integ.modin.test_unique,test_unique_index[index7],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
804,tests.integ.modin.crosstab.test_crosstab,test_basic_crosstab_with_series_objs_some_overlap_error[False],Failed: DID NOT RAISE <class 'Exception'>,failed
808,tests.integ.modin.test_unique,test_unique_ndarray[input_data0],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
809,tests.integ.modin.frame.test_align,test_align_frame_fill_value_negative,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
813,tests.integ.modin.test_unique,test_unique_ndarray[input_data1],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
818,tests.integ.modin.crosstab.test_crosstab,test_basic_crosstab_with_series_objs_no_overlap_error[True],Failed: DID NOT RAISE <class 'Exception'>,failed
819,tests.integ.modin.test_unique,test_unique_ndarray[input_data2],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
820,tests.integ.modin.test_unique,test_unique_timestamp_index[timestamp_index0],AssertionError,failed
825,tests.integ.modin.frame.test_align,test_level_negative[0-0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
826,tests.integ.modin.frame.test_iloc,test_df_iloc_set_ffill_na_values_negative,"ValueError: could not broadcast input array from shape (2, 2) into shape (3, 2)",failed
831,tests.integ.modin.test_unique,test_unique_list[input_data0],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
832,tests.integ.modin.frame.test_align,test_level_negative[0-1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
838,tests.integ.modin.test_unique,test_unique_list[input_data1],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
843,tests.integ.modin.test_unique,test_unique_list[input_data2],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
844,tests.integ.modin.frame.test_align,test_level_negative[1-0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
850,tests.integ.modin.test_unique,test_unique_list[input_data3],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
853,tests.integ.modin.frame.test_align,test_level_negative[1-1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
856,tests.integ.modin.crosstab.test_crosstab,test_basic_crosstab_with_series_objs_no_overlap_error[False],Failed: DID NOT RAISE <class 'Exception'>,failed
860,tests.integ.modin.test_unique,test_unique_list[input_data4],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
864,tests.integ.modin.frame.test_iloc,test_raise_set_cell_with_list_like_value_error,"ValueError: could not broadcast input array from shape (2,) into shape (1, 1)",failed
866,tests.integ.modin.frame.test_align,test_level_negative[None-0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
867,tests.integ.modin.test_unique,test_unique_list[input_data5],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
874,tests.integ.modin.test_unique,test_unique_list[input_data6],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
876,tests.integ.modin.crosstab.test_crosstab,test_basic_crosstab_with_df_and_series_objs_pandas_errors_columns[True],AssertionError: arrays and names must have the same length,failed
880,tests.integ.modin.frame.test_align,test_level_negative[None-1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
882,tests.integ.modin.test_unique,test_unique_tuple[input_data0],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
889,tests.integ.modin.test_unique,test_unique_tuple[input_data1],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
890,tests.integ.modin.frame.test_iloc,test_df_iloc_set_row_from_series[index1],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (50.0 %)
[index]: [0, 1]
[left]:  [1.0, nan]
[right]: [1, 1]",failed
892,tests.integ.modin.crosstab.test_crosstab,test_basic_crosstab_with_df_and_series_objs_pandas_errors_columns[False],AssertionError: arrays and names must have the same length,failed
897,tests.integ.modin.test_unique,test_unique_tuple[input_data2],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
904,tests.integ.modin.test_unique,test_unique_tuple[input_data3],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
907,tests.integ.modin.crosstab.test_crosstab,test_basic_crosstab_with_df_and_series_objs_pandas_errors_index[True],AssertionError: arrays and names must have the same length,failed
910,tests.integ.modin.test_unique,test_unique_tuple[input_data4],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
915,tests.integ.modin.frame.test_iloc,test_df_iloc_full_set_row_from_series[None-index0],"ValueError: could not broadcast input array from shape (2,) into shape (2, 3)",failed
917,tests.integ.modin.test_unique,test_unique_byte_array[input_data0],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
918,tests.integ.modin.frame.test_align,test_multiindex_negative[0],ValueError: cannot join with no overlapping index names,failed
923,tests.integ.modin.crosstab.test_crosstab,test_basic_crosstab_with_df_and_series_objs_pandas_errors_index[False],AssertionError: arrays and names must have the same length,failed
925,tests.integ.modin.test_unique,test_unique_byte_array[input_data1],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
927,tests.integ.modin.test_unique,test_unique_list_of_tuples,TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
931,tests.integ.modin.frame.test_align,test_multiindex_negative[1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
932,tests.integ.modin.test_unique,test_unique_list_of_lists,TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
946,tests.integ.modin.frame.test_iloc,test_df_iloc_full_set_row_from_series[None-index1],"ValueError: could not broadcast input array from shape (2,) into shape (2, 3)",failed
947,tests.integ.modin.test_unique,test_unique_list_of_invalid_objects_negative[input_data0-TestUniqueUserDefinedClass],AssertionError,failed
950,tests.integ.modin.crosstab.test_crosstab,test_margins[True],AttributeError: can't set attribute,failed
953,tests.integ.modin.test_unique,test_unique_list_of_invalid_objects_negative[input_data1-set],AssertionError,failed
957,tests.integ.modin.frame.test_equals,test_equals_numeric_variants[int8-int16-True],"AssertionError: assert False == True
 +  where False = <bound method DataFrame.equals of    col1\n0     1\n1     3>(   col1\n0     1\n1     3)
 +    where <bound method DataFrame.equals of    col1\n0     1\n1     3> =    col1\n0     1\n1     3.equals
 +      where    col1\n0     1\n1     3 = <class 'modin.pandas.dataframe.DataFrame'>(   col1\n0     1\n1     3)
 +        where <class 'modin.pandas.dataframe.DataFrame'> = pd.DataFrame
 +    and      col1\n0     1\n1     3 = <class 'modin.pandas.dataframe.DataFrame'>(   col1\n0     1\n1     3)
 +      where <class 'modin.pandas.dataframe.DataFrame'> = pd.DataFrame",failed
959,tests.integ.modin.test_unique,test_unique_list_of_invalid_objects_negative[input_data2-ndarray],AssertionError,failed
964,tests.integ.modin.crosstab.test_crosstab,test_margins[False],AttributeError: can't set attribute,failed
966,tests.integ.modin.frame.test_equals,test_equals_numeric_variants[int32-int16-True],"AssertionError: assert False == True
 +  where False = <bound method DataFrame.equals of    col1\n0     1\n1     3>(   col1\n0     1\n1     3)
 +    where <bound method DataFrame.equals of    col1\n0     1\n1     3> =    col1\n0     1\n1     3.equals
 +      where    col1\n0     1\n1     3 = <class 'modin.pandas.dataframe.DataFrame'>(   col1\n0     1\n1     3)
 +        where <class 'modin.pandas.dataframe.DataFrame'> = pd.DataFrame
 +    and      col1\n0     1\n1     3 = <class 'modin.pandas.dataframe.DataFrame'>(   col1\n0     1\n1     3)
 +      where <class 'modin.pandas.dataframe.DataFrame'> = pd.DataFrame",failed
967,tests.integ.modin.frame.test_iloc,test_df_iloc_full_set_row_from_series[None-index2],"ValueError: could not broadcast input array from shape (2,) into shape (2, 3)",failed
977,tests.integ.modin.frame.test_equals,test_equals_numeric_variants[float16-float32-True],"AssertionError: assert False == True
 +  where False = <bound method DataFrame.equals of    col1\n0   1.0\n1   3.0>(   col1\n0   1.0\n1   3.0)
 +    where <bound method DataFrame.equals of    col1\n0   1.0\n1   3.0> =    col1\n0   1.0\n1   3.0.equals
 +      where    col1\n0   1.0\n1   3.0 = <class 'modin.pandas.dataframe.DataFrame'>(   col1\n0   1.0\n1   3.0)
 +        where <class 'modin.pandas.dataframe.DataFrame'> = pd.DataFrame
 +    and      col1\n0   1.0\n1   3.0 = <class 'modin.pandas.dataframe.DataFrame'>(   col1\n0   1.0\n1   3.0)
 +      where <class 'modin.pandas.dataframe.DataFrame'> = pd.DataFrame",failed
980,tests.integ.modin.crosstab.test_crosstab,test_normalize[0-True],AttributeError: can't set attribute,failed
986,tests.integ.modin.frame.test_equals,test_equals_numeric_variants[float64-float32-True],"AssertionError: assert False == True
 +  where False = <bound method DataFrame.equals of    col1\n0   1.0\n1   3.0>(   col1\n0   1.0\n1   3.0)
 +    where <bound method DataFrame.equals of    col1\n0   1.0\n1   3.0> =    col1\n0   1.0\n1   3.0.equals
 +      where    col1\n0   1.0\n1   3.0 = <class 'modin.pandas.dataframe.DataFrame'>(   col1\n0   1.0\n1   3.0)
 +        where <class 'modin.pandas.dataframe.DataFrame'> = pd.DataFrame
 +    and      col1\n0   1.0\n1   3.0 = <class 'modin.pandas.dataframe.DataFrame'>(   col1\n0   1.0\n1   3.0)
 +      where <class 'modin.pandas.dataframe.DataFrame'> = pd.DataFrame",failed
988,tests.integ.modin.frame.test_iloc,test_df_iloc_full_set_row_from_series[columns1-index0],"ValueError: could not broadcast input array from shape (2,) into shape (2, 3)",failed
994,tests.integ.modin.crosstab.test_crosstab,test_normalize[0-False],AttributeError: can't set attribute,failed
997,tests.integ.modin.frame.test_align,test_multiindex_negative[None],ValueError: cannot join with no overlapping index names,failed
1005,tests.integ.modin.frame.test_iloc,test_df_iloc_full_set_row_from_series[columns1-index1],"ValueError: could not broadcast input array from shape (2,) into shape (2, 3)",failed
1009,tests.integ.modin.frame.test_align,test_align_frame_copy_negative,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1010,tests.integ.modin.crosstab.test_crosstab,test_normalize[1-True],AttributeError: can't set attribute,failed
1025,tests.integ.modin.frame.test_align,test_align_frame_deprecated_negative,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1041,tests.integ.modin.frame.test_iloc,test_df_iloc_full_set_row_from_series[columns1-index2],"ValueError: could not broadcast input array from shape (2,) into shape (2, 3)",failed
1049,tests.integ.modin.crosstab.test_crosstab,test_normalize[1-False],AttributeError: can't set attribute,failed
1053,tests.integ.modin.frame.test_iloc,test_df_iloc_efficient_sql[<lambda>0],IndexError: list index out of range,failed
1061,tests.integ.modin.frame.test_iloc,test_df_iloc_efficient_sql[<lambda>1],IndexError: list index out of range,failed
1064,tests.integ.modin.crosstab.test_crosstab,test_normalize[True-True],AttributeError: can't set attribute,failed
1071,tests.integ.modin.frame.test_iloc,test_df_iloc_efficient_sql[<lambda>2],IndexError: list index out of range,failed
1081,tests.integ.modin.crosstab.test_crosstab,test_normalize[True-False],AttributeError: can't set attribute,failed
1083,tests.integ.modin.frame.test_iloc,test_df_iloc_scalar_efficient_sql[<lambda>0],IndexError: list index out of range,failed
1092,tests.integ.modin.frame.test_iloc,test_df_iloc_scalar_efficient_sql[<lambda>1],IndexError: list index out of range,failed
1099,tests.integ.modin.crosstab.test_crosstab,test_normalize[all-True],AttributeError: can't set attribute,failed
1106,tests.integ.modin.frame.test_fillna,test_value_scalar_diff_type,Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
1116,tests.integ.modin.crosstab.test_crosstab,test_normalize[all-False],AttributeError: can't set attribute,failed
1134,tests.integ.modin.crosstab.test_crosstab,test_normalize[index-True],AttributeError: can't set attribute,failed
1148,tests.integ.modin.frame.test_info,test_info_verbose_true,"AssertionError: assert 'SnowflakeIndex' in 'RangeIndex: 3 entries, 0 to 2'",failed
1157,tests.integ.modin.frame.test_info,test_info_verbose_false,"AssertionError: assert 'SnowflakeIndex' in 'RangeIndex: 3 entries, 0 to 2'",failed
1166,tests.integ.modin.frame.test_info,test_info_counts_true,"AssertionError: assert 'SnowflakeIndex' in 'RangeIndex: 3 entries, 0 to 2'",failed
1177,tests.integ.modin.frame.test_info,test_info_counts_false,TypeError: got an unexpected keyword argument 'null_counts',failed
1186,tests.integ.modin.frame.test_info,test_info_SNOW_962607,"AssertionError: assert 'SnowflakeIndex' in 'RangeIndex: 3 entries, 0 to 2'",failed
1187,tests.integ.modin.crosstab.test_crosstab,test_normalize[index-False],AttributeError: can't set attribute,failed
1210,tests.integ.modin.crosstab.test_crosstab,test_normalize[columns-True],AttributeError: can't set attribute,failed
1233,tests.integ.modin.crosstab.test_crosstab,test_normalize[columns-False],AttributeError: can't set attribute,failed
1253,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_margins[0-True],AttributeError: can't set attribute,failed
1267,tests.integ.modin.frame.test_fillna,test_argument_negative,"AssertionError: Regex pattern did not match.
 Regex: ""Must specify a fill 'value' or 'method'.""
 Input: 'must specify a fill method or value'",failed
1274,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_margins[0-False],AttributeError: can't set attribute,failed
1298,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_margins[1-True],AttributeError: can't set attribute,failed
1319,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_margins[1-False],AttributeError: can't set attribute,failed
1358,tests.integ.modin.frame.test_insert,test_insert_one_to_many[native_value0],ValueError: cannot reindex on an axis with duplicate labels,failed
1371,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_margins[True-True],AttributeError: can't set attribute,failed
1389,tests.integ.modin.frame.test_all_any,test_all_float_not_implemented[True-data0-0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1395,tests.integ.modin.frame.test_all_any,test_all_float_not_implemented[True-data0-1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1396,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_margins[True-False],AttributeError: can't set attribute,failed
1401,tests.integ.modin.frame.test_all_any,test_all_float_not_implemented[True-data0-None],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1406,tests.integ.modin.frame.test_all_any,test_all_float_not_implemented[True-data1-0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1412,tests.integ.modin.frame.test_all_any,test_all_float_not_implemented[True-data1-1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1419,tests.integ.modin.frame.test_all_any,test_all_float_not_implemented[True-data1-None],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1420,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_margins[all-True],AttributeError: can't set attribute,failed
1425,tests.integ.modin.frame.test_all_any,test_all_float_not_implemented[False-data0-0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1432,tests.integ.modin.frame.test_all_any,test_all_float_not_implemented[False-data0-1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1435,tests.integ.modin.frame.test_all_any,test_all_float_not_implemented[False-data0-None],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1439,tests.integ.modin.frame.test_insert,test_insert_one_to_many[native_value1],ValueError: cannot reindex on an axis with duplicate labels,failed
1443,tests.integ.modin.frame.test_all_any,test_all_float_not_implemented[False-data1-0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1444,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_margins[all-False],AttributeError: can't set attribute,failed
1448,tests.integ.modin.frame.test_all_any,test_all_float_not_implemented[False-data1-1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1452,tests.integ.modin.frame.test_all_any,test_all_float_not_implemented[False-data1-None],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1456,tests.integ.modin.frame.test_all_any,test_any_float_not_implemented[True-data0-0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1461,tests.integ.modin.frame.test_all_any,test_any_float_not_implemented[True-data0-1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1465,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_margins[index-True],AttributeError: can't set attribute,failed
1467,tests.integ.modin.frame.test_all_any,test_any_float_not_implemented[True-data0-None],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1471,tests.integ.modin.frame.test_all_any,test_any_float_not_implemented[True-data1-0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1477,tests.integ.modin.frame.test_all_any,test_any_float_not_implemented[True-data1-1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1481,tests.integ.modin.frame.test_all_any,test_any_float_not_implemented[True-data1-None],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1484,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_margins[index-False],AttributeError: can't set attribute,failed
1487,tests.integ.modin.frame.test_insert,test_insert_one_to_many[native_value2],ValueError: cannot reindex on an axis with duplicate labels,failed
1488,tests.integ.modin.frame.test_all_any,test_any_float_not_implemented[False-data0-0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1492,tests.integ.modin.frame.test_all_any,test_any_float_not_implemented[False-data0-1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1498,tests.integ.modin.frame.test_all_any,test_any_float_not_implemented[False-data0-None],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1502,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_margins[columns-True],AttributeError: can't set attribute,failed
1504,tests.integ.modin.frame.test_all_any,test_any_float_not_implemented[False-data1-0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1510,tests.integ.modin.frame.test_all_any,test_any_float_not_implemented[False-data1-1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1516,tests.integ.modin.frame.test_all_any,test_any_float_not_implemented[False-data1-None],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1520,tests.integ.modin.frame.test_all_any,test_all_str_not_implemented[data0-0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1524,tests.integ.modin.frame.test_all_any,test_all_str_not_implemented[data0-1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1532,tests.integ.modin.frame.test_all_any,test_all_str_not_implemented[data0-None],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1536,tests.integ.modin.frame.test_all_any,test_any_str_not_implemented[data0-0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1542,tests.integ.modin.frame.test_all_any,test_any_str_not_implemented[data0-1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1546,tests.integ.modin.frame.test_all_any,test_any_str_not_implemented[data0-None],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1552,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_margins[columns-False],AttributeError: can't set attribute,failed
1567,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[median0-0-True],AttributeError: can't set attribute,failed
1568,tests.integ.modin.test_apply_snowflake_cortex_functions,test_apply_snowflake_cortex_negative[series_cortex_unsupported_function_complete],TypeError: complete() got multiple values for argument 'model',failed
1577,tests.integ.modin.frame.test_insert,test_insert_pandas_types_negative,Failed: DID NOT RAISE <class 'TypeError'>,failed
1581,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[median0-0-False],AttributeError: can't set attribute,failed
1600,tests.integ.modin.test_apply_snowflake_cortex_functions,test_apply_snowflake_cortex_negative[df_cortex_unsupported_function_complete],TypeError: complete() got multiple values for argument 'model',failed
1601,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[median0-1-True],AttributeError: can't set attribute,failed
1615,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[median0-1-False],AttributeError: can't set attribute,failed
1624,tests.integ.modin.frame.test_apply,test_axis_1_basic_types_without_type_hints[return_timedelta_scalar],[XPASS(strict)] SNOW-1619940,failed
1629,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[median0-index-True],AttributeError: can't set attribute,failed
1644,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[median0-index-False],AttributeError: can't set attribute,failed
1646,tests.integ.modin.frame.test_insert,test_insert_duplicate_label,"ValueError: cannot insert col1, already exists",failed
1677,tests.integ.modin.frame.test_insert,test_insert_loc_negative[1],AssertionError: Snowpark pandas Exception '<=' not supported between instances of 'int' and 'str' doesn't match pandas Exception loc must be int,failed
1678,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series[floordiv-rhs2-lhs0],AttributeError: 'bool' object has no attribute 'any',failed
1682,tests.integ.modin.frame.test_fillna,test_df_fillna_method_with_type_coercion_errors_for_variant_column_negative,TODO SNOW-1489309 investigate why it starts to work now on qa,xfailed
1685,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[median0-columns-True],AttributeError: can't set attribute,failed
1688,tests.integ.modin.frame.test_apply,test_axis_1_basic_types_without_type_hints[apply_on_frame_with_timedelta_data_columns_returns_int],[XPASS(strict)] ,failed
1689,tests.integ.modin.frame.test_fillna,test_df_fillna_method_with_type_coercion_casts_all_as_bool_negative,"AssertionError: DataFrame.iloc[:, 1] (column name=""D"") are different

DataFrame.iloc[:, 1] (column name=""D"") values are different (25.0 %)
[index]: [0, 1, 2, 3]
[left]:  [False, 4.0, True, <NA>]
[right]: [False, True, True, None]
At positional index 1, first diff: 4.0 != True",failed
1697,tests.integ.modin.frame.test_fillna,test_df_fillna_timestamp_no_numeric_with_nans,"[XPASS(strict)] Pandas will replace the np.nan in a timestamp column with 0, and upcast the dtype",failed
1701,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[median0-columns-False],AttributeError: can't set attribute,failed
1702,tests.integ.modin.frame.test_apply,test_axis_1_basic_types_with_type_hints[return_timedelta_scalar],[XPASS(strict)] SNOW-1619940,failed
1703,tests.integ.modin.frame.test_insert,test_insert_multiindex_array_like_and_scalar[value4-1],ValueError: Length of values (1) does not match length of index (4),failed
1714,tests.integ.modin.binary.test_timedelta,test_datetime_timedelta_scalar_divide_by_numeric_dataframe,"AssertionError: Attributes of DataFrame.iloc[:, 0] (column name=""0"") are different

Attribute ""dtype"" are different
[left]:  timedelta64[us]
[right]: timedelta64[ns]",failed
1715,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[median1-0-True],AttributeError: can't set attribute,failed
1723,tests.integ.modin.frame.test_insert,test_insert_empty_multiindex_frame[value0],"ValueError: Buffer dtype mismatch, expected 'Python object' but got 'long'",failed
1724,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[median1-0-False],AttributeError: can't set attribute,failed
1727,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series[floordiv-rhs2-lhs1],AttributeError: 'bool' object has no attribute 'any',failed
1734,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[median1-1-True],AttributeError: can't set attribute,failed
1740,tests.integ.modin.frame.test_insert,test_insert_empty_multiindex_frame[value1],"ValueError: Buffer dtype mismatch, expected 'Python object' but got 'long'",failed
1742,tests.integ.modin.frame.test_apply,test_axis_1_basic_types_with_type_hints[apply_on_frame_with_timedelta_data_columns_returns_int],[XPASS(strict)] ,failed
1746,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[median1-1-False],AttributeError: can't set attribute,failed
1751,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series[floordiv-rhs2-lhs2],AttributeError: 'bool' object has no attribute 'any',failed
1760,tests.integ.modin.frame.test_apply,test_frame_with_timedelta_index,[XPASS(strict)] ,failed
1761,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[median1-index-True],AttributeError: can't set attribute,failed
1773,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series[floordiv-rhs2-lhs3],AttributeError: 'bool' object has no attribute 'any',failed
1776,tests.integ.modin.frame.test_insert,test_insert_empty_multiindex_frame[value2],"ValueError: Buffer dtype mismatch, expected 'Python object' but got 'long'",failed
1778,tests.integ.modin.frame.test_apply,test_axis_1_date_time_timestamp_type[data0-<lambda>-expected_result0],AttributeError: Can only use .dt accessor with datetimelike values,failed
1784,tests.integ.modin.frame.test_insert,test_insert_multiindex_dict_negative,"AssertionError: Regex pattern did not match.
 Regex: 'Number of index levels of inserted column are different from frame index'
 Input: 'Length of values (3) does not match length of index (4)'",failed
1786,tests.integ.modin.frame.test_apply,test_axis_1_date_time_timestamp_type[data1-<lambda>-expected_result1],"AssertionError: DataFrame.iloc[:, 1] (column name=""1"") are different

DataFrame.iloc[:, 1] (column name=""1"") values are different (50.0 %)
[index]: [0, 1]
[left]:  [None, 2021-01-09]
[right]: [NaT, 2021-01-09]
At positional index 0, first diff: None != NaT",failed
1790,tests.integ.modin.frame.test_filter,test_filtering_with_self_not_implemented[<lambda>0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1791,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[median1-index-False],AttributeError: can't set attribute,failed
1793,tests.integ.modin.test_apply_snowpark_python_functions,test_apply_sin,"TypeError: 'SIN' expected Column or str, got: <class 'pandas.core.series.Series'>",failed
1795,tests.integ.modin.frame.test_filter,test_filtering_with_self_not_implemented[<lambda>1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1804,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[median1-columns-True],AttributeError: can't set attribute,failed
1810,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_tuple_key_list[item_values0-row_pos0-col_pos0],"AssertionError: DataFrame.iloc[:, 2] (column name=""C"") are different

DataFrame.iloc[:, 2] (column name=""C"") values are different (25.0 %)
[index]: [0, 1, 2, 3]
[left]:  [7, 10, 100, 100]
[right]: [7, 10, 100, 16]",failed
1816,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[median1-columns-False],AttributeError: can't set attribute,failed
1820,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_tuple_key_list[item_values0-row_pos1-col_pos1],"AssertionError: DataFrame.iloc[:, 1] (column name=""B"") are different

DataFrame.iloc[:, 1] (column name=""B"") values are different (50.0 %)
[index]: [0, 1, 2, 3]
[left]:  [6, 99, 99, 99]
[right]: [6, 99, 12, 15]",failed
1822,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series[floordiv-rhs3-lhs0],AttributeError: 'bool' object has no attribute 'any',failed
1826,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_tuple_key_list[item_values0-row_pos2-col_pos2],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (50.0 %)
[index]: [0, 1, 2, 3]
[left]:  [5, 101, 101, 101]
[right]: [5, 101, 11, 14]",failed
1828,tests.integ.modin.frame.test_apply,test_axis_1_date_time_timestamp_type[data2-<lambda>-expected_result2],AttributeError: Can only use .dt accessor with datetimelike values,failed
1830,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[count-0-True],AttributeError: can't set attribute,failed
1833,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_tuple_key_list[item_values0-row_pos3-col_pos3],"AssertionError: DataFrame.iloc[:, 1] (column name=""B"") are different

DataFrame.iloc[:, 1] (column name=""B"") values are different (50.0 %)
[index]: [0, 1, 2, 3]
[left]:  [6, 99, 99, 99]
[right]: [6, 9, 12, 99]",failed
1834,tests.integ.modin.frame.test_insert,test_insert_index_num_levels_mismatch_negative[df_index0-value_index0],TypeError: incompatible index of inserted column with frame index,failed
1837,tests.integ.modin.frame.test_apply,test_axis_1_date_time_timestamp_type[data3-<lambda>-expected_result3],"AssertionError: DataFrame.iloc[:, 0] (column name=""0"") are different

DataFrame.iloc[:, 0] (column name=""0"") values are different (100.0 %)
[index]: [0, 1]
[left]:  [01:02:03, 01:02:03.000001]
[right]: [0 days 01:02:03, 0 days 01:02:03.000001]
At positional index 0, first diff: 01:02:03 != 0 days 01:02:03",failed
1838,tests.integ.modin.frame.test_filter,test_filtering_df_with_other_df_unaligned_index,pandas.errors.IndexingError: Unalignable boolean Series provided as indexer (index of the boolean Series and of the indexed object do not match).,failed
1842,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_tuple_key_list[item_values0-row_pos4-col_pos4],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (50.0 %)
[index]: [0, 1, 2, 3]
[left]:  [100, 8, 100, 100]
[right]: [5, 8, 100, 14]",failed
1843,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[count-0-False],AttributeError: can't set attribute,failed
1846,tests.integ.modin.frame.test_apply,test_axis_1_date_time_timestamp_type[data4-<lambda>-expected_result4],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1]
[left]:  [UTC, UTC]
[right]: [UTC, UTC]
At positional index 0, first diff: UTC != UTC",failed
1848,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series[floordiv-rhs3-lhs1],AttributeError: 'bool' object has no attribute 'any',failed
1851,tests.integ.modin.frame.test_apply,test_axis_1_date_time_timestamp_type[data5-<lambda>-expected_result5],"AssertionError: DataFrame.iloc[:, 1] (column name=""1"") are different

DataFrame.iloc[:, 1] (column name=""1"") values are different (50.0 %)
[index]: [0, 1]
[left]:  [NaT, 2023-01-01 01:02:03+00:00]
[right]: [None, 2023-01-01 01:02:03+00:00]
At positional index 0, first diff: NaT != None",failed
1853,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[count-1-True],AttributeError: can't set attribute,failed
1861,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_tuple_key_list[item_values0-row_pos5-col_pos5],"AssertionError: DataFrame.iloc[:, 1] (column name=""B"") are different

DataFrame.iloc[:, 1] (column name=""B"") values are different (50.0 %)
[index]: [0, 1, 2, 3]
[left]:  [101, 9, 101, 101]
[right]: [101, 9, 12, 15]",failed
1865,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series[floordiv-rhs3-lhs2],AttributeError: 'bool' object has no attribute 'any',failed
1869,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_tuple_key_list[123-row_pos0-col_pos0],"AssertionError: DataFrame.iloc[:, 2] (column name=""C"") are different

DataFrame.iloc[:, 2] (column name=""C"") values are different (25.0 %)
[index]: [0, 1, 2, 3]
[left]:  [7, 10, 123, 123]
[right]: [7, 10, 123, 16]",failed
1877,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_tuple_key_list[123-row_pos1-col_pos1],"AssertionError: DataFrame.iloc[:, 1] (column name=""B"") are different

DataFrame.iloc[:, 1] (column name=""B"") values are different (50.0 %)
[index]: [0, 1, 2, 3]
[left]:  [6, 123, 123, 123]
[right]: [6, 123, 12, 15]",failed
1881,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[count-1-False],AttributeError: can't set attribute,failed
1882,tests.integ.modin.frame.test_insert,test_insert_index_num_levels_mismatch_negative[df_index1-value_index1],AssertionError: Length of new_levels (3) must be <= self.nlevels (2),failed
1886,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_tuple_key_list[123-row_pos2-col_pos2],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (50.0 %)
[index]: [0, 1, 2, 3]
[left]:  [5, 123, 123, 123]
[right]: [5, 123, 11, 14]",failed
1887,tests.integ.modin.test_apply_snowpark_python_functions,test_apply_log10,"TypeError: 'LOG' expected Column or str, got: <class 'pandas.core.series.Series'>",failed
1889,tests.integ.modin.frame.test_apply,test_axis_1_return_not_json_serializable_label,Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
1895,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_tuple_key_list[123-row_pos3-col_pos3],"AssertionError: DataFrame.iloc[:, 1] (column name=""B"") are different

DataFrame.iloc[:, 1] (column name=""B"") values are different (50.0 %)
[index]: [0, 1, 2, 3]
[left]:  [6, 123, 123, 123]
[right]: [6, 9, 12, 123]",failed
1896,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[count-index-True],AttributeError: can't set attribute,failed
1897,tests.integ.modin.frame.test_apply,test_axis_1_apply_args_kwargs,AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
1900,tests.integ.modin.frame.test_first_last_valid_index,test_first_and_last_valid_multiindex_dataframe[index0],"ValueError: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().",failed
1902,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_tuple_key_list[123-row_pos4-col_pos4],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (50.0 %)
[index]: [0, 1, 2, 3]
[left]:  [123, 8, 123, 123]
[right]: [5, 8, 123, 14]",failed
1903,tests.integ.modin.frame.test_apply,test_result_type[reduce],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1906,tests.integ.modin.frame.test_first_last_valid_index,test_first_and_last_valid_multiindex_dataframe[index1],"ValueError: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().",failed
1907,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[count-index-False],AttributeError: can't set attribute,failed
1909,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_tuple_key_list[123-row_pos5-col_pos5],"AssertionError: DataFrame.iloc[:, 1] (column name=""B"") are different

DataFrame.iloc[:, 1] (column name=""B"") values are different (50.0 %)
[index]: [0, 1, 2, 3]
[left]:  [123, 9, 123, 123]
[right]: [123, 9, 12, 15]",failed
1910,tests.integ.modin.frame.test_apply,test_result_type[expand],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1913,tests.integ.modin.frame.test_first_last_valid_index,test_first_and_last_valid_multiindex_dataframe[index2],"ValueError: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().",failed
1915,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_tuple_key_list_different_behavior[row_pos0-col_pos0-91-native_item0],"AssertionError: DataFrame.iloc[:, 2] (column name=""C"") are different

DataFrame.iloc[:, 2] (column name=""C"") values are different (25.0 %)
[index]: [0, 1, 2, 3]
[left]:  [7, 10, 13, 91]
[right]: [7, 10, 13, 16]",failed
1916,tests.integ.modin.frame.test_apply,test_result_type[broadcast],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1917,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series[floordiv-rhs3-lhs3],AttributeError: 'bool' object has no attribute 'any',failed
1919,tests.integ.modin.frame.test_insert,test_insert_index_num_levels_mismatch_negative[df_index2-value_index2],TypeError: incompatible index of inserted column with frame index,failed
1920,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[count-columns-True],AttributeError: can't set attribute,failed
1922,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_tuple_key_list_different_behavior[row_pos1-col_pos1-item_values1-native_item1],"AssertionError: DataFrame.iloc[:, 2] (column name=""C"") are different

DataFrame.iloc[:, 2] (column name=""C"") values are different (25.0 %)
[index]: [0, 1, 2, 3]
[left]:  [7, 10, 13, 92]
[right]: [7, 10, 13, 16]",failed
1923,tests.integ.modin.frame.test_apply,test_axis_1_apply_args_kwargs_with_snowpandas_object,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
1926,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[truediv-rhs0-lhs0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
1932,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[truediv-rhs0-lhs1],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
1933,tests.integ.modin.frame.test_first_last_valid_index,test_first_and_last_valid_multiindex_dataframe[index3],"ValueError: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().",failed
1934,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[count-columns-False],AttributeError: can't set attribute,failed
1938,tests.integ.modin.frame.test_first_last_valid_index,test_first_and_last_valid_none_float64_multiindex_dataframe[data0],"ValueError: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().",failed
1942,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[mean0-0-True],AttributeError: can't set attribute,failed
1943,tests.integ.modin.frame.test_first_last_valid_index,test_first_and_last_valid_none_float64_multiindex_dataframe[data1],"ValueError: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().",failed
1945,tests.integ.modin.frame.test_insert,test_insert_index_num_levels_mismatch_negative[df_index3-value_index3],AssertionError: Length of new_levels (3) must be <= self.nlevels (2),failed
1949,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_df_col_df_key_set_coordinates[row_pos0-df-col_pos0-df],"ValueError: Buffer has wrong number of dimensions (expected 1, got 2)",failed
1950,tests.integ.modin.frame.test_first_last_valid_index,test_first_and_last_valid_nested_multiindex_series,"ValueError: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().",failed
1951,tests.integ.modin.frame.test_insert,test_insert_index_num_levels_mismatch_negative[df_index4-value_index4],Failed: DID NOT RAISE <class 'ValueError'>,failed
1955,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[mean0-0-False],AttributeError: can't set attribute,failed
1956,tests.integ.modin.frame.test_insert,test_insert_index_num_levels_mismatch_negative[df_index5-value_index5],Failed: DID NOT RAISE <class 'ValueError'>,failed
1959,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[truediv-rhs0-lhs2],ZeroDivisionError: float division by zero,failed
1962,tests.integ.modin.frame.test_insert,test_insert_index_type_mismatch[df_index0-value_index0-expected_index0],"AssertionError: DataFrame.index are different

DataFrame.index values are different (100.0 %)
[left]:  Index(['1', '2', '3'], dtype='object')
[right]: Index([1.0, 2.0, 3.0], dtype='float64')
At positional index 0, first diff: 1 != 1.0",failed
1968,tests.integ.modin.frame.test_insert,test_insert_index_type_mismatch[df_index1-value_index1-expected_index1],TypeError: boolean value of NA is ambiguous,failed
1971,tests.integ.modin.frame.test_apply,test_axis_1_multi_index_column_labels_different_levels_negative,AssertionError: exception type <class 'ValueError'> does not match with expected type <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
1973,tests.integ.modin.frame.test_insert,test_insert_index_type_mismatch[df_index2-value_index2-expected_index2],TypeError: boolean value of NA is ambiguous,failed
1976,tests.integ.modin.frame.test_apply,test_apply_variant_json_null,"assert [True, True, True, False] == [False, True, True, False]
  At index 0 diff: True != False
  Full diff:
  - [False, True, True, False]
  + [True, True, True, False]",failed
1978,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[truediv-rhs0-lhs3],ZeroDivisionError: float division by zero,failed
1980,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[mean0-1-True],AttributeError: can't set attribute,failed
1982,tests.integ.modin.frame.test_apply,test_apply_bug_1650918[data0-<lambda>],[XPASS(strict)] SNOW-1650918: Apply on dataframe data columns containing NULL fails with invalid arguments to udtf function,failed
1985,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[truediv-rhs0-lhs4],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
1986,tests.integ.modin.frame.test_apply,test_apply_bug_1650918[data1-<lambda>],[XPASS(strict)] SNOW-1650918: Apply on dataframe data columns containing NULL fails with invalid arguments to udtf function,failed
1989,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_df_col_df_key_set_coordinates[row_pos1-df-col_pos1-df],"ValueError: Buffer has wrong number of dimensions (expected 1, got 2)",failed
1990,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[mean0-1-False],AttributeError: can't set attribute,failed
1994,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[truediv-rhs1-lhs0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
1997,tests.integ.modin.test_apply_snowpark_python_functions,test_apply_trunc_default_scale,"TypeError: 'TRUNC' expected Column or str, got: <class 'pandas.core.series.Series'>",failed
2004,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[mean0-index-True],AttributeError: can't set attribute,failed
2005,tests.integ.modin.binary.test_binary_not_implemented,test_binary_op_xor[<lambda>0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
2006,tests.integ.modin.frame.test_apply,test_basic_dataframe_transform[data2-exp-None],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
2008,tests.integ.modin.binary.test_binary_not_implemented,test_binary_op_xor[<lambda>1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
2012,tests.integ.modin.binary.test_binary_not_implemented,test_binary_op_dot[<lambda>-DataFrame0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
2015,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[mean0-index-False],AttributeError: can't set attribute,failed
2016,tests.integ.modin.binary.test_binary_not_implemented,test_binary_op_dot[<lambda>-Series0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
2020,tests.integ.modin.binary.test_binary_not_implemented,test_binary_op_dot[<lambda>-Series1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
2021,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[truediv-rhs1-lhs1],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2022,tests.integ.modin.frame.test_apply,test_basic_dataframe_transform[data5-sqrt-None],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
2023,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_df_col_df_key_set_coordinates[row_pos2-df-col_pos2-df],"ValueError: Buffer has wrong number of dimensions (expected 1, got 2)",failed
2025,tests.integ.modin.binary.test_binary_not_implemented,test_binary_op_dot[<lambda>-DataFrame1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
2026,tests.integ.modin.frame.test_insert,test_insert_multiple_null,ValueError: cannot reindex on an axis with duplicate labels,failed
2030,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[mean0-columns-True],AttributeError: can't set attribute,failed
2033,tests.integ.modin.frame.test_apply,test_basic_dataframe_transform[data7-log-None],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
2041,tests.integ.modin.frame.test_apply,test_basic_dataframe_transform[data9-square-None],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
2042,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[mean0-columns-False],AttributeError: can't set attribute,failed
2050,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[truediv-rhs1-lhs2],ZeroDivisionError: float division by zero,failed
2052,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_df_col_df_key_set_coordinates[row_pos3-df-col_pos3-tuple],"ValueError: Buffer has wrong number of dimensions (expected 1, got 2)",failed
2057,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[mean1-0-True],AttributeError: can't set attribute,failed
2075,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[truediv-rhs1-lhs3],ZeroDivisionError: float division by zero,failed
2082,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[truediv-rhs1-lhs4],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2084,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[mean1-0-False],AttributeError: can't set attribute,failed
2091,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[truediv-rhs2-lhs0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2097,tests.integ.modin.test_apply_snowpark_python_functions,test_apply_trunc_scale[-1],"TypeError: 'TRUNC' expected Column or str, got: <class 'pandas.core.series.Series'>",failed
2100,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[mean1-1-True],AttributeError: can't set attribute,failed
2101,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_df_col_df_key_set_coordinates[row_pos4-df-col_pos4-na],"ValueError: Buffer has wrong number of dimensions (expected 1, got 2)",failed
2102,tests.integ.modin.frame.test_apply,test_dataframe_transform_invalid_function_name_negative,AttributeError: 'mxyzptlk' is not a valid function for 'DataFrame' object,failed
2103,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[truediv-rhs2-lhs1],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2113,tests.integ.modin.frame.test_apply,test_dataframe_transform_invalid_types_negative[1],"AssertionError: Regex pattern did not match.
 Regex: 'object is not callable'
 Input: ""One of the passed functions has an invalid type: <class 'int'>: 1, only callable or string is acceptable.""",failed
2118,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[mean1-1-False],AttributeError: can't set attribute,failed
2126,tests.integ.modin.frame.test_apply,test_dataframe_transform_invalid_types_negative[2.5],"AssertionError: Regex pattern did not match.
 Regex: 'object is not callable'
 Input: ""One of the passed functions has an invalid type: <class 'float'>: 2.5, only callable or string is acceptable.""",failed
2133,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[mean1-index-True],AttributeError: can't set attribute,failed
2135,tests.integ.modin.frame.test_apply,test_dataframe_transform_invalid_types_negative[True],"AssertionError: Regex pattern did not match.
 Regex: 'object is not callable'
 Input: ""One of the passed functions has an invalid type: <class 'bool'>: True, only callable or string is acceptable.""",failed
2137,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_df_col_df_key_set_coordinates[row_pos5-tuple-col_pos5-df],"ValueError: Buffer has wrong number of dimensions (expected 1, got 2)",failed
2144,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[mean1-index-False],AttributeError: can't set attribute,failed
2154,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[truediv-rhs2-lhs2],ZeroDivisionError: float division by zero,failed
2156,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[mean1-columns-True],AttributeError: can't set attribute,failed
2160,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_df_col_df_key_set_coordinates[row_pos6-na-col_pos6-df],"ValueError: Buffer has wrong number of dimensions (expected 1, got 2)",failed
2171,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[mean1-columns-False],AttributeError: can't set attribute,failed
2178,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_series_rhs_dataframe_mismatch_pandas[row_pos0-col_pos0-snow_item0-native_item0],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (75.0 %)
[index]: [0, 1, 2, 3]
[left]:  [nan, nan, 11.0, nan]
[right]: [95, 92, 11, 98]",failed
2183,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[truediv-rhs2-lhs3],ZeroDivisionError: float division by zero,failed
2191,tests.integ.modin.frame.test_insert,test_insert_into_empty_dataframe_index_dtype_mismatch,Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2192,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[truediv-rhs2-lhs4],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2197,tests.integ.modin.test_apply_snowpark_python_functions,test_apply_trunc_scale[0],"TypeError: 'TRUNC' expected Column or str, got: <class 'pandas.core.series.Series'>",failed
2200,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[truediv-rhs3-lhs0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2203,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[min0-0-True],AttributeError: can't set attribute,failed
2207,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_method_number_scalar_negative[<lambda>0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2208,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_series_rhs_dataframe_mismatch_pandas[row_pos2-col_pos2-snow_item2-native_item2],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (75.0 %)
[index]: [0, 1, 2, 3]
[left]:  [5.0, nan, nan, nan]
[right]: [5, 92, 95, 95]",failed
2210,tests.integ.modin.frame.test_getitem,test_df_getitem_with_boolean_list_like[key4],TypeError: unhashable type: 'Index',failed
2213,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[truediv-rhs3-lhs1],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2215,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_method_number_scalar_negative[<lambda>1],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2218,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[min0-0-False],AttributeError: can't set attribute,failed
2220,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_method_number_scalar_negative[<lambda>2],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2224,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_method_number_scalar_negative[<lambda>3],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2228,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_method_number_scalar_negative[<lambda>4],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2231,tests.integ.modin.frame.test_getitem,test_df_getitem_with_boolean_list_like[key5],ValueError: Item wrong length 1 instead of 7.,failed
2234,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_method_number_scalar_negative[<lambda>5],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2235,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[min0-1-True],AttributeError: can't set attribute,failed
2238,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_method_number_scalar_negative[<lambda>6],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2240,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[truediv-rhs3-lhs2],ZeroDivisionError: float division by zero,failed
2244,tests.integ.modin.binary.test_binary_op,test_binary_pow_scalar_different_from_pandas,"AssertionError: Attributes of Series are different

Attribute ""dtype"" are different
[left]:  int64
[right]: float64",failed
2246,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_series_rhs_dataframe_mismatch_pandas[row_pos3-col_pos3-snow_item3-native_item3],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (75.0 %)
[index]: [0, 1, 2, 3]
[left]:  [5.0, nan, nan, nan]
[right]: [5, 95, 98, 92]",failed
2248,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[min0-1-False],AttributeError: can't set attribute,failed
2255,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[min0-index-True],AttributeError: can't set attribute,failed
2259,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_series_rhs_dataframe_mismatch_pandas[row_pos4-col_pos4-snow_item4-native_item4],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (100.0 %)
[index]: [0, 1, 2, 3]
[left]:  [nan, nan, nan, nan]
[right]: [91, 92, 93, 93]",failed
2263,tests.integ.modin.frame.test_getitem,test_df_getitem_with_boolean_list_like[key6],ValueError: Item wrong length 8 instead of 7.,failed
2267,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[min0-index-False],AttributeError: can't set attribute,failed
2274,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_series_rhs_dataframe_mismatch_pandas[row_pos5-col_pos5-snow_item5-native_item5],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (50.0 %)
[index]: [0, 1, 2, 3]
[left]:  [nan, nan, 11.0, 14.0]
[right]: [91, 92, 11, 14]",failed
2280,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[truediv-rhs3-lhs3],ZeroDivisionError: float division by zero,failed
2284,tests.integ.modin.test_apply_snowpark_python_functions,test_apply_trunc_scale[1],"TypeError: 'TRUNC' expected Column or str, got: <class 'pandas.core.series.Series'>",failed
2288,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[truediv-rhs3-lhs4],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2290,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_series_rhs_dataframe_mismatch_pandas[row_pos6-col_pos6-snow_item6-native_item6],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (50.0 %)
[index]: [0, 1, 2, 3]
[left]:  [nan, 8.0, nan, 14.0]
[right]: [91, 8, 92, 14]",failed
2291,tests.integ.modin.frame.test_getitem,test_df_getitem_with_boolean_list_like[key7],TypeError: unhashable type: 'Index',failed
2294,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[min0-columns-True],AttributeError: can't set attribute,failed
2295,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[floordiv-rhs0-lhs0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2301,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[floordiv-rhs0-lhs1],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2306,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[min0-columns-False],AttributeError: can't set attribute,failed
2307,tests.integ.modin.frame.test_getitem,test_df_getitem_with_boolean_list_like[key8],ValueError: Item wrong length 0 instead of 7.,failed
2313,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_series_rhs_dataframe_mismatch_pandas[row_pos7-col_pos7-snow_item7-native_item7],IndexError: index 4 is out of bounds for axis 0 with size 4,failed
2319,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[min1-0-True],AttributeError: can't set attribute,failed
2324,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[floordiv-rhs0-lhs2],ZeroDivisionError: float floor division by zero,failed
2327,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_series_rhs_dataframe_mismatch_pandas[row_pos8-col_pos8-snow_item8-native_item8],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (75.0 %)
[index]: [0, 1, 2, 3]
[left]:  [5.0, nan, nan, nan]
[right]: [5, 8, 11, 14]",failed
2330,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[min1-0-False],AttributeError: can't set attribute,failed
2335,tests.integ.modin.frame.test_apply,test_with_duplicates_negative,ValueError: cannot reindex on an axis with duplicate labels,failed
2341,tests.integ.modin.frame.test_getitem,test_df_getitem_with_string_list_like[key1],TypeError: unhashable type: 'Index',failed
2346,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[min1-1-True],AttributeError: can't set attribute,failed
2356,tests.integ.modin.frame.test_apply,test_apply_axis_1_with_if_where_duplicates_not_executed[data0-1],TypeError: test_apply_axis_1_with_if_where_duplicates_not_executed.<locals>.foo() got an unexpected keyword argument 'snowpark_pandas_partition_size',failed
2357,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_method_string_scalar_negative[<lambda>0],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2359,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[min1-1-False],AttributeError: can't set attribute,failed
2361,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_method_string_scalar_negative[<lambda>1],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2366,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_method_array_scalar,Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2369,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[min1-index-True],AttributeError: can't set attribute,failed
2370,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[floordiv-rhs0-lhs3],ZeroDivisionError: float floor division by zero,failed
2375,tests.integ.modin.frame.test_getitem,test_df_getitem_with_int_list_like[key1],TypeError: unhashable type: 'Index',failed
2376,tests.integ.modin.frame.test_apply,test_apply_axis_1_with_if_where_duplicates_not_executed[data0-2],TypeError: test_apply_axis_1_with_if_where_duplicates_not_executed.<locals>.foo() got an unexpected keyword argument 'snowpark_pandas_partition_size',failed
2380,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[floordiv-rhs0-lhs4],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2387,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[floordiv-rhs1-lhs0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2392,tests.integ.modin.test_apply_snowpark_python_functions,test_apply_trunc_scale[2],"TypeError: 'TRUNC' expected Column or str, got: <class 'pandas.core.series.Series'>",failed
2396,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[floordiv-rhs1-lhs1],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2404,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[min1-index-False],AttributeError: can't set attribute,failed
2418,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[min1-columns-True],AttributeError: can't set attribute,failed
2420,tests.integ.modin.frame.test_apply,test_apply_axis_1_with_if_where_duplicates_not_executed[data1-1],TypeError: test_apply_axis_1_with_if_where_duplicates_not_executed.<locals>.foo() got an unexpected keyword argument 'snowpark_pandas_partition_size',failed
2424,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[floordiv-rhs1-lhs2],ZeroDivisionError: float floor division by zero,failed
2429,tests.integ.modin.frame.test_insert,test_insert_multiindex_column[columns4-insert_label2],ValueError: Item must have length equal to number of levels.,failed
2431,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[min1-columns-False],AttributeError: can't set attribute,failed
2437,tests.integ.modin.binary.test_binary_op,test_binary_method_numpy_and_pandas_type_scalar[data3-scalars3],"assert [False, False, False, False] == [None, None, None, None]
  At index 0 diff: False != None
  Full diff:
  - [None, None, None, None]
  + [False, False, False, False]",failed
2439,tests.integ.modin.frame.test_apply,test_apply_axis_1_with_if_where_duplicates_not_executed[data1-2],TypeError: test_apply_axis_1_with_if_where_duplicates_not_executed.<locals>.foo() got an unexpected keyword argument 'snowpark_pandas_partition_size',failed
2443,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[amin-0-True],AttributeError: can't set attribute,failed
2448,tests.integ.modin.frame.test_insert,test_insert_multiindex_column[columns4-insert_label3],ValueError: Item must have length equal to number of levels.,failed
2455,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[floordiv-rhs1-lhs3],ZeroDivisionError: float floor division by zero,failed
2457,tests.integ.modin.frame.test_apply,test_numpy_integers_in_return_values_snow_1227264[return_value1],"[XPASS(strict)] SNOW-1229760: un-json-serializable np.int64 is nested inside the non-series return value, so we don't find the np.int64 or convert it to int",failed
2467,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[floordiv-rhs1-lhs4],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2470,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[amin-0-False],AttributeError: can't set attribute,failed
2475,tests.integ.modin.frame.test_apply,test_apply_axis_1_frame_with_column_of_all_nulls_snow_1233832[None],[XPASS(strict)] SNOW-1233832,failed
2488,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[amin-1-True],AttributeError: can't set attribute,failed
2503,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[floordiv-rhs2-lhs0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2504,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[amin-1-False],AttributeError: can't set attribute,failed
2512,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[floordiv-rhs2-lhs1],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2537,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[amin-index-True],AttributeError: can't set attribute,failed
2542,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[floordiv-rhs2-lhs2],ZeroDivisionError: float floor division by zero,failed
2552,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[amin-index-False],AttributeError: can't set attribute,failed
2559,tests.integ.modin.test_apply_snowpark_python_functions,test_apply_log_base,TypeError: log() got multiple values for argument 'base',failed
2567,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[amin-columns-True],AttributeError: can't set attribute,failed
2570,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_series_rhs_scalar[row_pos17-col_pos17-item_value17],ValueError: setting an array element with a sequence.,failed
2575,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[floordiv-rhs2-lhs3],ZeroDivisionError: float floor division by zero,failed
2585,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[amin-columns-False],AttributeError: can't set attribute,failed
2586,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[floordiv-rhs2-lhs4],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2594,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[floordiv-rhs3-lhs0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2600,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[max0-0-True],AttributeError: can't set attribute,failed
2603,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[floordiv-rhs3-lhs1],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2616,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[max0-0-False],AttributeError: can't set attribute,failed
2627,tests.integ.modin.frame.test_insert,test_insert_with_unique_and_duplicate_index_values[index_values0-other_index_values0-False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['INDEX']",failed
2629,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[max0-1-True],AttributeError: can't set attribute,failed
2649,tests.integ.modin.frame.test_insert,test_insert_with_unique_and_duplicate_index_values[index_values1-other_index_values1-False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['INDEX']",failed
2653,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[floordiv-rhs3-lhs2],ZeroDivisionError: float floor division by zero,failed
2661,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[max0-1-False],AttributeError: can't set attribute,failed
2667,tests.integ.modin.test_apply_snowpark_python_functions,test_apply_pass_base_as_column,"TypeError: 'LOG' expected Column or str, got: <class 'pandas.core.series.Series'>",failed
2668,tests.integ.modin.frame.test_insert,test_insert_with_unique_and_duplicate_index_values[index_values2-other_index_values2-False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['INDEX']",failed
2673,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[max0-index-True],AttributeError: can't set attribute,failed
2676,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_series_empty_keys[item0-row_key1-col_key1],"ValueError: could not broadcast input array from shape (2,) into shape (2, 0)",failed
2681,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[floordiv-rhs3-lhs3],ZeroDivisionError: float floor division by zero,failed
2684,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[max0-index-False],AttributeError: can't set attribute,failed
2689,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_division_between_series_div_by_zero_negative[floordiv-rhs3-lhs4],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2694,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_ops_between_series_with_booleans_negative[add-rhs0-lhs0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2696,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[max0-columns-True],AttributeError: can't set attribute,failed
2702,tests.integ.modin.frame.test_insert,test_insert_with_unique_and_duplicate_index_values[index_values3-other_index_values3-False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['INDEX']",failed
2704,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_ops_between_series_with_booleans_negative[add-rhs1-lhs0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2710,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[max0-columns-False],AttributeError: can't set attribute,failed
2713,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_ops_between_series_with_booleans_negative[add-rhs2-lhs0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2716,tests.integ.modin.test_apply_snowpark_python_functions,test_apply_snowpark_python_function_not_implemented,"TypeError: 'DESC' expected Column or str, got: <class 'int'>",failed
2722,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_ops_between_series_with_booleans_negative[radd-rhs0-lhs0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2724,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[max1-0-True],AttributeError: can't set attribute,failed
2732,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_ops_between_series_with_booleans_negative[radd-rhs1-lhs0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2738,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_ops_between_series_with_booleans_negative[radd-rhs2-lhs0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2739,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[max1-0-False],AttributeError: can't set attribute,failed
2745,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_ops_between_series_with_booleans_negative[sub-rhs0-lhs0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2751,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_ops_between_series_with_booleans_negative[sub-rhs1-lhs0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2753,tests.integ.modin.frame.test_insert,test_insert_with_unique_and_duplicate_index_values[index_values4-other_index_values4-True],ValueError: cannot reindex on an axis with duplicate labels,failed
2757,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_series_empty_keys[item1-row_key1-col_key1],"ValueError: could not broadcast input array from shape (2,) into shape (2, 0)",failed
2760,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_ops_between_series_with_booleans_negative[sub-rhs2-lhs0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2770,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[max1-1-True],AttributeError: can't set attribute,failed
2773,tests.integ.modin.frame.test_insert,test_insert_with_unique_and_duplicate_index_values[index_values5-other_index_values5-False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['INDEX']",failed
2781,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[max1-1-False],AttributeError: can't set attribute,failed
2787,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_ops_between_series_with_booleans_negative[rsub-rhs0-lhs0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2791,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_empty_df[row_key0-col_key0-item0],AssertionError: cannot find the length of the indexer,failed
2794,tests.integ.modin.frame.test_insert,test_insert_with_unique_and_duplicate_index_values[index_values6-other_index_values6-False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['INDEX']",failed
2795,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[max1-index-True],AttributeError: can't set attribute,failed
2796,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_ops_between_series_with_booleans_negative[rsub-rhs1-lhs0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2798,tests.integ.modin.frame.test_head_tail,test_head_tail[1],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
2802,tests.integ.modin.binary.test_binary_op,test_binary_comparison_between_non_supported_types[gt-data0-s],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2805,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_ops_between_series_with_booleans_negative[rsub-rhs2-lhs0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2806,tests.integ.modin.binary.test_binary_op,test_binary_comparison_between_non_supported_types[gt-data1-s],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2807,tests.integ.modin.frame.test_head_tail,test_head_tail[None],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
2808,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[max1-index-False],AttributeError: can't set attribute,failed
2810,tests.integ.modin.binary.test_binary_op,test_binary_comparison_between_non_supported_types[gt-data2-s],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2813,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_ops_between_series_with_booleans_negative[mul-rhs0-lhs0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2814,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_empty_df[row_key1-col_key1-item1],AssertionError: cannot find the length of the indexer,failed
2815,tests.integ.modin.frame.test_head_tail,test_head_tail[0],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
2818,tests.integ.modin.frame.test_insert,test_insert_with_unique_and_duplicate_index_values[index_values7-other_index_values7-False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['INDEX']",failed
2819,tests.integ.modin.binary.test_binary_op,test_binary_comparison_between_non_supported_types[gt-data3-s],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2821,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[max1-columns-True],AttributeError: can't set attribute,failed
2822,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_ops_between_series_with_booleans_negative[mul-rhs1-lhs0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2824,tests.integ.modin.binary.test_binary_op,test_binary_comparison_between_non_supported_types[gt-data4-1672560000.0],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2826,tests.integ.modin.frame.test_head_tail,test_head_tail[-1],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
2828,tests.integ.modin.binary.test_binary_op,test_binary_comparison_between_non_supported_types[ge-data0-s],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2830,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_ops_between_series_with_booleans_negative[mul-rhs2-lhs0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2833,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[max1-columns-False],AttributeError: can't set attribute,failed
2834,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_empty_df[row_key2-col_key2-item2],AssertionError: cannot find the length of the indexer,failed
2835,tests.integ.modin.frame.test_head_tail,test_head_tail[-10],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
2836,tests.integ.modin.binary.test_binary_op,test_binary_comparison_between_non_supported_types[ge-data1-s],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2839,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_ops_between_series_with_booleans_negative[rmul-rhs0-lhs0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2840,tests.integ.modin.binary.test_binary_op,test_binary_comparison_between_non_supported_types[ge-data2-s],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2843,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_ops_between_series_with_booleans_negative[rmul-rhs1-lhs0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2844,tests.integ.modin.frame.test_head_tail,test_head_tail[5],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
2845,tests.integ.modin.binary.test_binary_op,test_binary_comparison_between_non_supported_types[ge-data3-s],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2846,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[amax-0-True],AttributeError: can't set attribute,failed
2850,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_ops_between_series_with_booleans_negative[rmul-rhs2-lhs0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2851,tests.integ.modin.binary.test_binary_op,test_binary_comparison_between_non_supported_types[ge-data4-1672560000.0],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2852,tests.integ.modin.frame.test_head_tail,test_head_tail[10],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
2853,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_empty_df[row_key3-col_key3-item3],AssertionError: cannot find the length of the indexer,failed
2858,tests.integ.modin.binary.test_binary_op,test_binary_comparison_between_non_supported_types[lt-data0-s],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2861,tests.integ.modin.frame.test_head_tail,test_empty_dataframe[1],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
2862,tests.integ.modin.frame.test_insert,test_insert_with_unique_and_duplicate_index_values[index_values8-other_index_values8-True],ValueError: cannot reindex on an axis with duplicate labels,failed
2863,tests.integ.modin.binary.test_binary_op,test_binary_comparison_between_non_supported_types[lt-data1-s],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2867,tests.integ.modin.binary.test_binary_op,test_binary_comparison_between_non_supported_types[lt-data2-s],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2868,tests.integ.modin.frame.test_head_tail,test_empty_dataframe[None],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
2870,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_empty_df[row_key4-col_key4-item4],AssertionError: cannot find the length of the indexer,failed
2871,tests.integ.modin.binary.test_binary_op,test_binary_comparison_between_non_supported_types[lt-data3-s],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2875,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_ops_between_series_with_booleans_negative[truediv-rhs0-lhs0],ZeroDivisionError: division by zero,failed
2876,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[amax-0-False],AttributeError: can't set attribute,failed
2877,tests.integ.modin.binary.test_binary_op,test_binary_comparison_between_non_supported_types[lt-data4-1672560000.0],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2880,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_ops_between_series_with_booleans_negative[truediv-rhs1-lhs0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2884,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[amax-1-True],AttributeError: can't set attribute,failed
2885,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_ops_between_series_with_booleans_negative[truediv-rhs2-lhs0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2887,tests.integ.modin.frame.test_head_tail,test_empty_dataframe[0],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
2892,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[amax-1-False],AttributeError: can't set attribute,failed
2893,tests.integ.modin.frame.test_head_tail,test_empty_dataframe[-1],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
2895,tests.integ.modin.binary.test_binary_op,test_binary_comparison_between_non_supported_types[le-data0-s],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2899,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_empty_df[row_key5-col_key5-item5],AssertionError: cannot find the length of the indexer,failed
2901,tests.integ.modin.frame.test_head_tail,test_empty_dataframe[-10],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
2907,tests.integ.modin.binary.test_binary_op,test_binary_comparison_between_non_supported_types[le-data1-s],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2916,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[amax-index-True],AttributeError: can't set attribute,failed
2918,tests.integ.modin.frame.test_head_tail,test_empty_dataframe[5],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
2920,tests.integ.modin.binary.test_binary_op,test_binary_comparison_between_non_supported_types[le-data2-s],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2925,tests.integ.modin.frame.test_insert,test_insert_with_unique_and_duplicate_index_values[index_values9-other_index_values9-True],ValueError: cannot reindex on an axis with duplicate labels,failed
2933,tests.integ.modin.binary.test_binary_op,test_binary_comparison_between_non_supported_types[le-data3-s],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2934,tests.integ.modin.frame.test_head_tail,test_empty_dataframe[10],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
2936,tests.integ.modin.test_concat,test_concat_mixed_objs[1-inner],"AssertionError: DataFrame.columns are different

DataFrame.columns values are different (50.0 %)
[left]:  Index([0, 0], dtype='int64')
[right]: RangeIndex(start=0, stop=2, step=1)
At positional index 1, first diff: 0 != 1",failed
2937,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_empty_df[row_key6-col_key6-item6],AssertionError: cannot find the length of the indexer,failed
2938,tests.integ.modin.binary.test_binary_op,test_binary_comparison_between_non_supported_types[le-data4-1672560000.0],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
2939,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[amax-index-False],AttributeError: can't set attribute,failed
2940,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_ops_between_series_with_booleans_negative[rtruediv-rhs0-lhs0],ZeroDivisionError: division by zero,failed
2941,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive0-sub],[XPASS(strict)] SNOW-1646604,failed
2942,tests.integ.modin.test_concat,test_concat_mixed_objs[1-outer],"AssertionError: DataFrame.columns are different

DataFrame.columns values are different (50.0 %)
[left]:  Index([0, 0], dtype='int64')
[right]: RangeIndex(start=0, stop=2, step=1)
At positional index 1, first diff: 0 != 1",failed
2944,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive0-add],[XPASS(strict)] SNOW-1646604,failed
2947,tests.integ.modin.test_concat,test_concat_series_names_axis1[None-None-expected_columns0],"AssertionError: DataFrame.columns are different

DataFrame.columns values are different (50.0 %)
[left]:  Index([0, 0], dtype='int64')
[right]: RangeIndex(start=0, stop=2, step=1)
At positional index 1, first diff: 0 != 1",failed
2949,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive0-div],[XPASS(strict)] SNOW-1646604,failed
2954,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive0-truediv],[XPASS(strict)] SNOW-1646604,failed
2957,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[amax-columns-True],AttributeError: can't set attribute,failed
2958,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_none_df[row_key0-col_key0-item0],"AssertionError: DataFrame.iloc[:, 0] (column name=""0"") are different

DataFrame.iloc[:, 0] (column name=""0"") values are different (100.0 %)
[index]: [0, 1]
[left]:  [11, 33]
[right]: [33, 11]",failed
2959,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive0-eq],[XPASS(strict)] SNOW-1646604,failed
2961,tests.integ.modin.test_concat,test_concat_series_names_axis0[foo-None-None],AttributeError: 'DataFrame' object has no attribute 'dtype'. Did you mean: 'dtypes'?,failed
2962,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive0-ne],[XPASS(strict)] SNOW-1646604,failed
2964,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_ops_between_series_with_booleans_negative[rtruediv-rhs1-lhs0],ZeroDivisionError: float division by zero,failed
2965,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive1-sub],[XPASS(strict)] SNOW-1646604,failed
2968,tests.integ.modin.test_concat,test_concat_series_names_axis0[None-bar-None],AttributeError: 'DataFrame' object has no attribute 'dtype'. Did you mean: 'dtypes'?,failed
2969,tests.integ.modin.frame.test_insert,test_insert_with_unique_and_duplicate_index_values[index_values10-other_index_values10-True],ValueError: cannot reindex on an axis with duplicate labels,failed
2970,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive1-add],[XPASS(strict)] SNOW-1646604,failed
2972,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[amax-columns-False],AttributeError: can't set attribute,failed
2973,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive1-div],[XPASS(strict)] SNOW-1646604,failed
2974,tests.integ.modin.test_concat,test_concat_series_names_axis0[foo-bar-None],AttributeError: 'DataFrame' object has no attribute 'dtype'. Did you mean: 'dtypes'?,failed
2977,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive1-truediv],[XPASS(strict)] SNOW-1646604,failed
2979,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive1-eq],[XPASS(strict)] SNOW-1646604,failed
2983,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive1-ne],[XPASS(strict)] SNOW-1646604,failed
2984,tests.integ.modin.test_concat,test_concat_native_object_negative[obj0],"AssertionError: Regex pattern did not match.
 Regex: ""<class 'pandas.core.frame.DataFrame'> is not supported as 'value' argument. Please convert this to Snowpark pandas objects by calling modin.pandas.Series\\(\\)/DataFrame\\(\\)""
 Input: 'first argument must be an iterable of pandas objects, you passed an object of type ""DataFrame""'",failed
2985,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive2-sub],[XPASS(strict)] SNOW-1646604,failed
2986,tests.integ.modin.test_concat,test_concat_native_object_negative[obj1],"AssertionError: Regex pattern did not match.
 Regex: ""<class 'pandas.core.series.Series'> is not supported as 'value' argument. Please convert this to Snowpark pandas objects by calling modin.pandas.Series\\(\\)/DataFrame\\(\\)""
 Input: 'first argument must be an iterable of pandas objects, you passed an object of type ""Series""'",failed
2987,tests.integ.modin.test_concat,test_concat_invalid_type_negative,AssertionError: exception type <class 'ValueError'> does not match with expected type <class 'TypeError'>,failed
2989,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive2-add],[XPASS(strict)] SNOW-1646604,failed
2995,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_none_df[row_key1-col_key1-item1],ValueError: Length of values (1) does not match length of index (2),failed
2997,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive2-div],[XPASS(strict)] SNOW-1646604,failed
3001,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_ops_between_series_with_booleans_negative[rtruediv-rhs2-lhs0],ZeroDivisionError: float division by zero,failed
3002,tests.integ.modin.binary.test_binary_op,test_binary_logic_operations_between_series_and_list_like[index-__or__],"ValueError: Unable to coerce to Series, length must be 1: given 6",failed
3003,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive2-truediv],[XPASS(strict)] SNOW-1646604,failed
3004,tests.integ.modin.test_concat,test_concat_multiindex_columns_axis1[columns19-columns29-expected_cols9],"AssertionError: Index are different

Index classes are different
[left]:  MultiIndex([(1, 2),
            (1, 2)],
           )
[right]: Index([(1, 2), (1, 2, 3)], dtype='object')",failed
3007,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive2-eq],[XPASS(strict)] SNOW-1646604,failed
3008,tests.integ.modin.test_concat,test_concat_multiindex_columns_axis1[columns112-columns212-expected_cols12],"AssertionError: Index are different

Index classes are different
[left]:  MultiIndex([(1, 2),
            (1, 2)],
           )
[right]: Index([(1, 2), (1, 2, 3)], dtype='object')",failed
3011,tests.integ.modin.test_concat,test_concat_multiindex_row_labels_axis0[index11-index21-expected_index1-2],"assert [1, (1, 2)] == [1, [1, 2]]
  At index 1 diff: (1, 2) != [1, 2]
  Full diff:
  - [1, [1, 2]]
  ?     ^     -
  + [1, (1, 2)]
  ?     ^    +",failed
3013,tests.integ.modin.test_concat,test_concat_multiindex_row_labels_axis0[index12-index22-expected_index2-2],"assert [1, (1,)] == [1, 1]
  At index 1 diff: (1,) != 1
  Full diff:
  - [1, 1]
  + [1, (1,)]
  ?     + ++",failed
3014,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[sum0-0-True],AttributeError: can't set attribute,failed
3015,tests.integ.modin.test_concat,test_concat_multiindex_row_labels_axis0[index13-index23-expected_index3-3],"assert [1, (1, 2)] == [1, [1, 2]]
  At index 1 diff: (1, 2) != [1, 2]
  Full diff:
  - [1, [1, 2]]
  ?     ^     -
  + [1, (1, 2)]
  ?     ^    +",failed
3016,tests.integ.modin.test_concat,test_concat_multiindex_row_labels_axis0[index14-index24-expected_index4-2],"assert [(1, 2), (1,)] == [[1, 2], 1]
  At index 0 diff: (1, 2) != [1, 2]
  Full diff:
  - [[1, 2], 1]
  + [(1, 2), (1,)]",failed
3018,tests.integ.modin.test_concat,test_concat_multiindex_row_labels_axis0[index15-index25-expected_index5-3],"assert [(1, 2), (1, 2)] == [[1, 2], [1, 2]]
  At index 0 diff: (1, 2) != [1, 2]
  Full diff:
  - [[1, 2], [1, 2]]
  ?  ^    ^  ^     -
  + [(1, 2), (1, 2)]
  ?  ^    ^  ^    +",failed
3019,tests.integ.modin.test_concat,test_concat_multiindex_row_labels_axis0[index16-index26-expected_index6-4],"assert [(1, 2), (1, 2, 3)] == [[1, 2], [1, 2, 3]]
  At index 0 diff: (1, 2) != [1, 2]
  Full diff:
  - [[1, 2], [1, 2, 3]]
  ?  ^    ^  ^        -
  + [(1, 2), (1, 2, 3)]
  ?  ^    ^  ^       +",failed
3021,tests.integ.modin.binary.test_binary_op,test_binary_logic_operations_between_series_and_list_like[index-__ror__],"ValueError: Unable to coerce to Series, length must be 1: given 6",failed
3022,tests.integ.modin.test_concat,test_concat_multiindex_row_labels_axis0[index17-index27-expected_index7-3],"assert [(1, 2), 1] == [[1, 2], 1]
  At index 0 diff: (1, 2) != [1, 2]
  Full diff:
  - [[1, 2], 1]
  ?  ^    ^
  + [(1, 2), 1]
  ?  ^    ^",failed
3023,tests.integ.modin.test_concat,test_concat_multiindex_row_labels_axis0[index18-index28-expected_index8-3],"AssertionError: assert True == False
 +  where True = isinstance(MultiIndex([(1, 2),\n            (1, 2)],\n           ), MultiIndex)
 +  and   False = isinstance(Index([(1, 2), (1, 2)], dtype='object'), MultiIndex)",failed
3026,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_none_df[row_key3-col_key3-item3],"AssertionError: DataFrame.iloc[:, 1] (column name=""1"") are different

DataFrame.iloc[:, 1] (column name=""1"") values are different (50.0 %)
[index]: [0, 1]
[left]:  [<NA>, <NA>]
[right]: [None, 99]
At positional index 1, first diff: <NA> != 99",failed
3027,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[sum0-0-False],AttributeError: can't set attribute,failed
3028,tests.integ.modin.test_concat,test_concat_multiindex_row_labels_axis0[index19-index29-expected_index9-3],"AssertionError: assert True == False
 +  where True = isinstance(MultiIndex([(1, 2),\n            (1, 2)],\n           ), MultiIndex)
 +  and   False = isinstance(Index([(1, 2), (1, 2, 3)], dtype='object'), MultiIndex)",failed
3029,tests.integ.modin.test_concat,test_concat_multiindex_row_labels_axis0[index110-index210-expected_index10-3],"assert [(1, 2), (1,)] == [[1, 2], 1]
  At index 0 diff: (1, 2) != [1, 2]
  Full diff:
  - [[1, 2], 1]
  + [(1, 2), (1,)]",failed
3032,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive2-ne],[XPASS(strict)] SNOW-1646604,failed
3033,tests.integ.modin.test_concat,test_concat_multiindex_row_labels_axis0[index112-index212-expected_index12-5],"AssertionError: assert True == False
 +  where True = isinstance(MultiIndex([(1, 2),\n            (1, 2)],\n           ), MultiIndex)
 +  and   False = isinstance(Index([(1, 2), (1, 2, 3)], dtype='object'), MultiIndex)",failed
3036,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive3-sub],[XPASS(strict)] SNOW-1646604,failed
3037,tests.integ.modin.test_concat,test_concat_multiindex_row_labels_axis1[index11-index21-expected_index1-3],"assert [1, (1,)] == [1]
  Left contains one more item: (1,)
  Full diff:
  - [1]
  + [1, (1,)]",failed
3039,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive3-add],[XPASS(strict)] SNOW-1646604,failed
3040,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[sum0-1-True],AttributeError: can't set attribute,failed
3043,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive3-div],[XPASS(strict)] SNOW-1646604,failed
3044,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_types_df[row_key0-col_key0-item0],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (25.0 %)
[index]: [0, 1, 2, 3]
[left]:  [nan, 2.0, 3.0, 4.0]
[right]: [99, 2, 3, 4]",failed
3046,tests.integ.modin.frame.test_insert,test_insert_with_unique_and_duplicate_index_values[index_values11-other_index_values11-True],ValueError: cannot reindex on an axis with duplicate labels,failed
3047,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive3-truediv],[XPASS(strict)] SNOW-1646604,failed
3049,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_ops_between_series_with_booleans_negative[floordiv-rhs0-lhs0],ZeroDivisionError: integer division or modulo by zero,failed
3050,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive3-eq],[XPASS(strict)] SNOW-1646604,failed
3053,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive3-ne],[XPASS(strict)] SNOW-1646604,failed
3054,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[sum0-1-False],AttributeError: can't set attribute,failed
3057,tests.integ.modin.test_concat,test_concat_multiindex_row_labels_axis1[index12-index22-expected_index2-4],"assert [(1, 2)] == [[1, 2]]
  At index 0 diff: (1, 2) != [1, 2]
  Full diff:
  - [[1, 2]]
  ?  ^     -
  + [(1, 2)]
  ?  ^    +",failed
3058,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive4-sub],[XPASS(strict)] SNOW-1646604,failed
3060,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_types_df[row_key1-col_key1-item1],"AssertionError: DataFrame.iloc[:, 1] (column name=""B"") are different

DataFrame.iloc[:, 1] (column name=""B"") values are different (25.0 %)
[index]: [0, 1, 2, 3]
[left]:  [True, <NA>, True, False]
[right]: [True, True, True, False]",failed
3061,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive4-add],[XPASS(strict)] SNOW-1646604,failed
3063,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive4-div],[XPASS(strict)] SNOW-1646604,failed
3064,tests.integ.modin.binary.test_binary_op,test_binary_logic_operations_between_series_and_list_like[index-__and__],"ValueError: Unable to coerce to Series, length must be 1: given 6",failed
3066,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[sum0-index-True],AttributeError: can't set attribute,failed
3067,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive4-truediv],[XPASS(strict)] SNOW-1646604,failed
3070,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive4-eq],[XPASS(strict)] SNOW-1646604,failed
3072,tests.integ.modin.test_concat,test_concat_multiindex_row_labels_axis1[index13-index23-expected_index3-5],AssertionError: Length of new_levels (3) must be <= self.nlevels (2),failed
3073,tests.integ.modin.test_concat,test_concat_multiindex_row_labels_axis1[index14-index24-expected_index4-4],"AssertionError: assert True == False
 +  where True = isinstance(MultiIndex([(1, 2)],\n           ), MultiIndex)
 +  and   False = isinstance(Index([(1, 2)], dtype='object'), MultiIndex)",failed
3074,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive4-ne],[XPASS(strict)] SNOW-1646604,failed
3075,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_types_df[row_key2-col_key2-item2],"AssertionError: DataFrame.iloc[:, 2] (column name=""C"") are different

DataFrame.iloc[:, 2] (column name=""C"") values are different (25.0 %)
[index]: [0, 1, 2, 3]
[left]:  [1.5, 3.14159, nan, 123.45]
[right]: [1.5, 3.14159, 101.101, 123.45]
At positional index 2, first diff: nan != 101.101",failed
3077,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_ops_between_series_with_booleans_negative[floordiv-rhs1-lhs0],TypeError: '<' not supported between instances of 'NoneType' and 'int',failed
3078,tests.integ.modin.test_concat,test_concat_multiindex_row_labels_axis1[index15-index25-expected_index5-4],"AssertionError: assert True == False
 +  where True = isinstance(MultiIndex([(1, 2)],\n           ), MultiIndex)
 +  and   False = isinstance(Index([(1, 2), (1, 2, 3)], dtype='object'), MultiIndex)",failed
3080,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive5-sub],[XPASS(strict)] SNOW-1646604,failed
3081,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[sum0-index-False],AttributeError: can't set attribute,failed
3083,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive5-add],[XPASS(strict)] SNOW-1646604,failed
3087,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive5-div],[XPASS(strict)] SNOW-1646604,failed
3088,tests.integ.modin.binary.test_binary_op,test_binary_logic_operations_between_series_and_list_like[index-__rand__],"ValueError: Unable to coerce to Series, length must be 1: given 6",failed
3090,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive5-truediv],[XPASS(strict)] SNOW-1646604,failed
3091,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_types_df[row_key3-col_key3-item3],TypeError: boolean value of NA is ambiguous,failed
3092,tests.integ.modin.test_concat,test_concat_multiindex_row_labels_axis1[index17-index27-expected_index7-6],AssertionError: Length of new_levels (3) must be <= self.nlevels (2),failed
3093,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[sum0-columns-True],AttributeError: can't set attribute,failed
3095,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive5-eq],[XPASS(strict)] SNOW-1646604,failed
3096,tests.integ.modin.test_concat,test_concat_multiindex_row_labels_axis1_negative[index10-index20],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
3097,tests.integ.modin.test_concat,test_concat_multiindex_row_labels_axis1_negative[index11-index21],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
3099,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive5-ne],[XPASS(strict)] SNOW-1646604,failed
3102,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive6-sub],[XPASS(strict)] SNOW-1646604,failed
3105,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive6-add],[XPASS(strict)] SNOW-1646604,failed
3106,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_ops_between_series_with_booleans_negative[floordiv-rhs2-lhs0],AttributeError: 'bool' object has no attribute 'any',failed
3108,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive6-div],[XPASS(strict)] SNOW-1646604,failed
3109,tests.integ.modin.binary.test_binary_op,test_binary_logic_operations_between_series_and_list_like[index_with_name-__or__],"ValueError: Unable to coerce to Series, length must be 1: given 6",failed
3112,tests.integ.modin.test_concat,test_concat_multiindex_row_labels_axis1_negative[index12-index22],IndexError: tuple index out of range,failed
3115,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive6-truediv],[XPASS(strict)] SNOW-1646604,failed
3119,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive6-eq],[XPASS(strict)] SNOW-1646604,failed
3122,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive6-ne],[XPASS(strict)] SNOW-1646604,failed
3125,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive7-sub],[XPASS(strict)] SNOW-1646604,failed
3128,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[sum0-columns-False],AttributeError: can't set attribute,failed
3131,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive7-add],[XPASS(strict)] SNOW-1646604,failed
3135,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive7-div],[XPASS(strict)] SNOW-1646604,failed
3138,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive7-truediv],[XPASS(strict)] SNOW-1646604,failed
3140,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[sum1-0-True],AttributeError: can't set attribute,failed
3145,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive7-eq],[XPASS(strict)] SNOW-1646604,failed
3147,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive7-ne],[XPASS(strict)] SNOW-1646604,failed
3149,tests.integ.modin.test_concat,test_concat_multiindex_row_labels_axis1_negative[index13-index23],"NotImplementedError: Can only union MultiIndex with MultiIndex or Index of tuples, try mi.to_flat_index().union(other) instead.",failed
3151,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive8-sub],[XPASS(strict)] SNOW-1646604,failed
3154,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive8-add],[XPASS(strict)] SNOW-1646604,failed
3159,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[sum1-0-False],AttributeError: can't set attribute,failed
3160,tests.integ.modin.binary.test_binary_op,test_binary_logic_operations_between_series_and_list_like[index_with_name-__ror__],"ValueError: Unable to coerce to Series, length must be 1: given 6",failed
3162,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive8-div],[XPASS(strict)] SNOW-1646604,failed
3165,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_ops_between_series_with_booleans_negative[rfloordiv-rhs0-lhs0],ZeroDivisionError: integer division or modulo by zero,failed
3166,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive8-truediv],[XPASS(strict)] SNOW-1646604,failed
3169,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive8-eq],[XPASS(strict)] SNOW-1646604,failed
3173,tests.integ.modin.binary.test_timedelta,test_string_series_with_timedelta_scalar[timedelta_scalar_positive8-ne],[XPASS(strict)] SNOW-1646604,failed
3174,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[sum1-1-True],AttributeError: can't set attribute,failed
3178,tests.integ.modin.test_concat,test_concat_multiindex_row_labels_axis1_negative[index14-index24],AssertionError: Length of new_levels (2) must be <= self.nlevels (1),failed
3179,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_types_df[row_key9-col_key9-item9],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (100.0 %)
[index]: [0, 1, 2, 3]
[left]:  [nan, nan, nan, nan]
[right]: [99, 99, 99, 99]",failed
3193,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[sum1-1-False],AttributeError: can't set attribute,failed
3197,tests.integ.modin.binary.test_binary_op,test_binary_logic_operations_between_series_and_list_like[index_with_name-__and__],"ValueError: Unable to coerce to Series, length must be 1: given 6",failed
3198,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_ops_between_series_with_booleans_negative[rfloordiv-rhs1-lhs0],ZeroDivisionError: float floor division by zero,failed
3204,tests.integ.modin.test_concat,test_concat_multiindex_columns_axis0[columns14-columns24-expected_cols4],IndexError: tuple index out of range,failed
3206,tests.integ.modin.frame.test_iat,test_iat_neg[0-IndexingError],Failed: DID NOT RAISE <class 'pandas.errors.IndexingError'>,failed
3211,tests.integ.modin.frame.test_iat,test_iat_neg[key1-IndexingError],Failed: DID NOT RAISE <class 'pandas.errors.IndexingError'>,failed
3212,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[sum1-index-True],AttributeError: can't set attribute,failed
3216,tests.integ.modin.frame.test_iat,test_iat_neg[key2-IndexingError],"TypeError: int() argument must be a string, a bytes-like object or a real number, not 'dict'",failed
3222,tests.integ.modin.test_concat,test_concat_multiindex_columns_axis0[columns16-columns26-expected_cols6],AssertionError: Length of new_levels (3) must be <= self.nlevels (2),failed
3223,tests.integ.modin.binary.test_binary_op,test_binary_logic_operations_between_series_and_list_like[index_with_name-__rand__],"ValueError: Unable to coerce to Series, length must be 1: given 6",failed
3224,tests.integ.modin.frame.test_iat,test_iat_neg[a-IndexingError],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
3225,tests.integ.modin.binary.test_binary_op,test_arithmetic_binary_ops_between_series_with_booleans_negative[rfloordiv-rhs2-lhs0],ZeroDivisionError: float floor division by zero,failed
3227,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_types_df[row_key10-col_key10-item10],"AssertionError: DataFrame.iloc[:, 1] (column name=""B"") are different

DataFrame.iloc[:, 1] (column name=""B"") values are different (50.0 %)
[index]: [0, 1, 2, 3]
[left]:  [True, <NA>, <NA>, False]
[right]: [True, True, False, False]",failed
3229,tests.integ.modin.frame.test_iat,test_iat_neg[key4-IndexingError],Failed: DID NOT RAISE <class 'pandas.errors.IndexingError'>,failed
3233,tests.integ.modin.frame.test_iat,test_iat_neg[key5-IndexingError],Failed: DID NOT RAISE <class 'pandas.errors.IndexingError'>,failed
3237,tests.integ.modin.test_concat,test_concat_multiindex_columns_axis0[columns17-columns27-expected_cols7],"NotImplementedError: Can only union MultiIndex with MultiIndex or Index of tuples, try mi.to_flat_index().union(other) instead.",failed
3239,tests.integ.modin.binary.test_binary_op,test_binary_logic_operations_between_df_and_list_like[list-__or__],"ValueError: Unable to coerce to Series, length must be 2: given 3",failed
3241,tests.integ.modin.frame.test_iat,test_iat_neg[key6-IndexingError],"TypeError: int() argument must be a string, a bytes-like object or a real number, not 'dict'",failed
3245,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[sum1-index-False],AttributeError: can't set attribute,failed
3246,tests.integ.modin.frame.test_iat,test_iat_neg[key7-KeyError],Failed: DID NOT RAISE <class 'KeyError'>,failed
3249,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_series_out_of_bounds_keys[row_key0-col_key0],IndexError: index -5 is out of bounds for axis 0 with size 4,failed
3252,tests.integ.modin.frame.test_iat,test_iat_neg[key8-KeyError],"TypeError: int() argument must be a string, a bytes-like object or a real number, not 'dict'",failed
3253,tests.integ.modin.binary.test_binary_op,test_binary_logic_operations_between_df_and_list_like[list-__ror__],"ValueError: Unable to coerce to Series, length must be 2: given 3",failed
3258,tests.integ.modin.frame.test_iat,test_iat_neg[key9-KeyError],Failed: DID NOT RAISE <class 'KeyError'>,failed
3260,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[sum1-columns-True],AttributeError: can't set attribute,failed
3262,tests.integ.modin.test_concat,test_concat_multiindex_columns_axis0[columns19-columns29-expected_cols9],"AssertionError: Index are different

Index classes are different
[left]:  MultiIndex([(1, 2)],
           )
[right]: Index([(1, 2), (1, 2, 3)], dtype='object')",failed
3264,tests.integ.modin.frame.test_iat,test_iat_neg[key10-IndexError],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
3267,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_series_out_of_bounds_keys[row_key1-col_key1],IndexError: index 8 is out of bounds for axis 0 with size 4,failed
3274,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[sum1-columns-False],AttributeError: can't set attribute,failed
3275,tests.integ.modin.binary.test_binary_op,test_other_with_native_pandas_object_raises[truediv],ZeroDivisionError: division by zero,failed
3278,tests.integ.modin.frame.test_iat,test_raise_set_cell_with_list_like_value_error,"ValueError: could not broadcast input array from shape (2,) into shape (1, 1)",failed
3284,tests.integ.modin.test_concat,test_concat_multiindex_columns_axis0[columns110-columns210-expected_cols10],AssertionError: Length of new_levels (2) must be <= self.nlevels (1),failed
3287,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[sum2-0-True],AttributeError: can't set attribute,failed
3288,tests.integ.modin.binary.test_binary_op,test_binary_logic_operations_between_df_and_list_like[list-__and__],"ValueError: Unable to coerce to Series, length must be 2: given 3",failed
3289,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_series_out_of_bounds_keys[row_key2-col_key2],IndexError: index 6 is out of bounds for axis 0 with size 4,failed
3299,tests.integ.modin.binary.test_binary_op,test_binary_logic_operations_between_df_and_list_like[list-__rand__],"ValueError: Unable to coerce to Series, length must be 2: given 3",failed
3300,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[sum2-0-False],AttributeError: can't set attribute,failed
3301,tests.integ.modin.binary.test_binary_op,test_other_with_native_pandas_object_raises[rtruediv],ZeroDivisionError: division by zero,failed
3302,tests.integ.modin.test_concat,test_concat_multiindex_columns_axis0[columns112-columns212-expected_cols12],AssertionError: Length of new_levels (3) must be <= self.nlevels (2),failed
3312,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_series_out_of_bounds_keys[row_key3-col_key3],IndexError: index -10 is out of bounds for axis 0 with size 4,failed
3315,tests.integ.modin.frame.test_interchange_protocol,test_allow_copy_false[TestingDf.MIXED_TYPE],"assert 13765117808 != 13765117808
 +  where 13765117808 = <function TestDataFrame.test_allow_copy_false.<locals>.get_buffer_memory_pointer at 0x33c13d120>(<pandas.core.interchange.dataframe.PandasDataFrameXchg object at 0x338f40a60>)
 +  and   13765117808 = <function TestDataFrame.test_allow_copy_false.<locals>.get_buffer_memory_pointer at 0x33c13d120>(<pandas.core.interchange.dataframe.PandasDataFrameXchg object at 0x33e5d4460>)",failed
3316,tests.integ.modin.binary.test_binary_op,test_binary_logic_operations_between_df_and_list_like[ndarray-__or__],"ValueError: Unable to coerce to Series, length must be 2: given 3",failed
3317,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[sum2-1-True],AttributeError: can't set attribute,failed
3322,tests.integ.modin.test_concat,test_concat_with_keys[0-keys3],"ValueError: Length mismatch: Expected axis has 9 elements, new values have 6 elements",failed
3325,tests.integ.modin.binary.test_binary_op,test_binary_logic_operations_between_df_and_list_like[ndarray-__ror__],"ValueError: Unable to coerce to Series, length must be 2: given 3",failed
3326,tests.integ.modin.binary.test_binary_op,test_other_with_native_pandas_object_raises[floordiv],ZeroDivisionError: integer division or modulo by zero,failed
3327,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[sum2-1-False],AttributeError: can't set attribute,failed
3328,tests.integ.modin.binary.test_timedelta,test_numeric_dataframe_with_timedelta_list_like[mul],TypeError: Cannot do operation with improper dtypes,failed
3335,tests.integ.modin.binary.test_timedelta,test_numeric_dataframe_with_timedelta_list_like[rmul],TypeError: Cannot do operation with improper dtypes,failed
3336,tests.integ.modin.binary.test_binary_op,test_binary_logic_operations_between_df_and_list_like[ndarray-__and__],"ValueError: Unable to coerce to Series, length must be 2: given 3",failed
3340,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_series_float_keys[row_pos0-col_pos0],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
3346,tests.integ.modin.binary.test_timedelta,test_numeric_dataframe_with_timedelta_list_like[rdiv],TypeError: Cannot do operation with improper dtypes,failed
3347,tests.integ.modin.test_concat,test_concat_with_keys[0-keys4],"ValueError: Length mismatch: Expected axis has 9 elements, new values have 6 elements",failed
3349,tests.integ.modin.binary.test_binary_op,test_binary_logic_operations_between_df_and_list_like[ndarray-__rand__],"ValueError: Unable to coerce to Series, length must be 2: given 3",failed
3353,tests.integ.modin.test_concat,test_concat_with_keys[0-keys5],"AssertionError: DataFrame.index are different

DataFrame.index levels are different
[left]:  2, MultiIndex([(('x', 1), 3),
            (('x', 1), 1),
            (('x', 1), 2),
            (('y', 2), 2),
            (('y', 2), 0),
            (('y', 2), 3),
            (('y', 2), 4),
            (('z', 3), 0),
            (('z', 3), 1)],
           )
[right]: 3, MultiIndex([('x', 1, 3),
            ('x', 1, 1),
            ('x', 1, 2),
            ('y', 2, 2),
            ('y', 2, 0),
            ('y', 2, 3),
            ('y', 2, 4),
            ('z', 3, 0),
            ('z', 3, 1)],
           )",failed
3355,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[sum2-index-True],AttributeError: can't set attribute,failed
3361,tests.integ.modin.binary.test_timedelta,test_numeric_dataframe_with_timedelta_list_like[rtruediv],TypeError: Cannot do operation with improper dtypes,failed
3362,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_series_float_keys[row_pos1-col_pos1],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
3364,tests.integ.modin.binary.test_binary_op,test_binary_logic_operations_between_df_and_list_like[index-__or__],"ValueError: Unable to coerce to Series, length must be 2: given 3",failed
3367,tests.integ.modin.binary.test_binary_op,test_other_with_native_pandas_object_raises[rfloordiv],ZeroDivisionError: integer division or modulo by zero,failed
3370,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[sum2-index-False],AttributeError: can't set attribute,failed
3373,tests.integ.modin.frame.test_idxmax_idxmin,test_idxmax_idxmin_df[True-0-idxmax-data9-index9],reason: Snowpark pandas returns a Series with None whereas pandas throws a ValueError,xfailed
3375,tests.integ.modin.binary.test_timedelta,test_numeric_dataframe_with_timedelta_list_like[rfloordiv],TypeError: Cannot do operation with improper dtypes,failed
3376,tests.integ.modin.test_concat,test_concat_with_keys[1-keys3],"ValueError: Length mismatch: Expected axis has 7 elements, new values have 4 elements",failed
3378,tests.integ.modin.binary.test_binary_op,test_binary_logic_operations_between_df_and_list_like[index-__ror__],"ValueError: Unable to coerce to Series, length must be 2: given 3",failed
3380,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_series_float_keys[row_pos2-col_pos2],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
3382,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[sum2-columns-True],AttributeError: can't set attribute,failed
3384,tests.integ.modin.binary.test_timedelta,test_numeric_dataframe_with_timedelta_list_like[rmod],TypeError: Cannot do operation with improper dtypes,failed
3387,tests.integ.modin.binary.test_binary_op,test_binary_logic_operations_between_df_and_list_like[index-__and__],"ValueError: Unable to coerce to Series, length must be 2: given 3",failed
3388,tests.integ.modin.test_concat,test_concat_with_keys[1-keys4],"ValueError: Length mismatch: Expected axis has 7 elements, new values have 4 elements",failed
3390,tests.integ.modin.binary.test_binary_op,test_other_with_native_pandas_object_raises[mod],ZeroDivisionError: integer division or modulo by zero,failed
3391,tests.integ.modin.test_concat,test_concat_with_keys[1-keys5],"AssertionError: DataFrame.columns are different

DataFrame.columns levels are different
[left]:  2, MultiIndex([(('x', 1), 'C'),
            (('x', 1), 'A'),
            (('x', 1), 'D'),
            (('y', 2), 'P'),
            (('y', 2), 'A'),
            (('y', 2), 'C'),
            (('z', 3),   0)],
           )
[right]: 3, MultiIndex([('x', 1, 'C'),
            ('x', 1, 'A'),
            ('x', 1, 'D'),
            ('y', 2, 'P'),
            ('y', 2, 'A'),
            ('y', 2, 'C'),
            ('z', 3,   0)],
           )",failed
3395,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_series_float_keys[row_pos3-col_pos3],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
3397,tests.integ.modin.crosstab.test_crosstab,test_normalize_margins_and_values[sum2-columns-False],AttributeError: can't set attribute,failed
3401,tests.integ.modin.binary.test_timedelta,test_numeric_dataframe_with_timedelta_list_like[eq],TypeError: Cannot do operation with improper dtypes,failed
3405,tests.integ.modin.crosstab.test_crosstab,test_margins_and_values[median0-True],AttributeError: can't set attribute,failed
3407,tests.integ.modin.test_concat,test_concat_same_frame_with_keys[0-keys3],"ValueError: Length mismatch: Expected axis has 6 elements, new values have 3 elements",failed
3409,tests.integ.modin.binary.test_binary_op,test_other_with_native_pandas_object_raises[rmod],ZeroDivisionError: integer division or modulo by zero,failed
3411,tests.integ.modin.frame.test_idxmax_idxmin,test_idxmax_idxmin_df[True-0-idxmax-data10-index10],AttributeError: 'NativeQueryCompiler' object has no attribute 'set_columns',failed
3413,tests.integ.modin.binary.test_binary_op,test_binary_logic_operations_between_df_and_list_like[index-__rand__],"ValueError: Unable to coerce to Series, length must be 2: given 3",failed
3416,tests.integ.modin.binary.test_binary_op,test_other_with_native_pandas_object_raises[pow],Failed: DID NOT RAISE <class 'TypeError'>,failed
3417,tests.integ.modin.crosstab.test_crosstab,test_margins_and_values[median0-False],AttributeError: can't set attribute,failed
3420,tests.integ.modin.binary.test_binary_op,test_other_with_native_pandas_object_raises[rpow],Failed: DID NOT RAISE <class 'TypeError'>,failed
3426,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_series_float_keys[row_pos4-col_pos4],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
3427,tests.integ.modin.binary.test_binary_op,test_other_with_native_pandas_object_raises[__or__],Failed: DID NOT RAISE <class 'TypeError'>,failed
3429,tests.integ.modin.test_concat,test_concat_same_frame_with_keys[0-keys4],"AssertionError: DataFrame.index are different

DataFrame.index levels are different
[left]:  2, MultiIndex([(('x', 1), 3),
            (('x', 1), 1),
            (('x', 1), 2),
            (('y', 2), 3),
            (('y', 2), 1),
            (('y', 2), 2)],
           names=[None, 'left_i'])
[right]: 3, MultiIndex([('x', 1, 3),
            ('x', 1, 1),
            ('x', 1, 2),
            ('y', 2, 3),
            ('y', 2, 1),
            ('y', 2, 2)],
           names=[None, None, 'left_i'])",failed
3430,tests.integ.modin.binary.test_timedelta,test_numeric_dataframe_with_timedelta_list_like[ne],TypeError: Cannot do operation with improper dtypes,failed
3431,tests.integ.modin.binary.test_binary_op,test_binary_logic_operations_between_df_and_list_like[index_with_name-__or__],"ValueError: Unable to coerce to Series, length must be 2: given 3",failed
3433,tests.integ.modin.crosstab.test_crosstab,test_margins_and_values[median1-True],AttributeError: can't set attribute,failed
3437,tests.integ.modin.binary.test_binary_op,test_other_with_native_pandas_object_raises[__ror__],Failed: DID NOT RAISE <class 'TypeError'>,failed
3441,tests.integ.modin.binary.test_binary_op,test_other_with_native_pandas_object_raises[__and__],Failed: DID NOT RAISE <class 'TypeError'>,failed
3445,tests.integ.modin.binary.test_binary_op,test_binary_logic_operations_between_df_and_list_like[index_with_name-__ror__],"ValueError: Unable to coerce to Series, length must be 2: given 3",failed
3447,tests.integ.modin.frame.test_idxmax_idxmin,test_idxmax_idxmin_df[True-0-idxmin-data9-index9],reason: Snowpark pandas returns a Series with None whereas pandas throws a ValueError,xfailed
3448,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_series_float_keys[row_pos5-col_pos5],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
3449,tests.integ.modin.binary.test_binary_op,test_other_with_native_pandas_object_raises[__rand__],Failed: DID NOT RAISE <class 'TypeError'>,failed
3451,tests.integ.modin.test_concat,test_concat_same_frame_with_keys[1-keys3],"ValueError: Length mismatch: Expected axis has 6 elements, new values have 3 elements",failed
3453,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_constant_float_keys_negative[1.2-na-0-na],AssertionError: exception type <class 'ValueError'> does not match with expected type <class 'IndexError'>,failed
3454,tests.integ.modin.binary.test_binary_op,test_other_with_native_pandas_object_raises[add],Failed: DID NOT RAISE <class 'TypeError'>,failed
3456,tests.integ.modin.test_concat,test_concat_same_frame_with_keys[1-keys4],"AssertionError: DataFrame.columns are different

DataFrame.columns levels are different
[left]:  2, MultiIndex([(('x', 1), 'C'),
            (('x', 1), 'A'),
            (('x', 1), 'D'),
            (('y', 2), 'C'),
            (('y', 2), 'A'),
            (('y', 2), 'D')],
           )
[right]: 3, MultiIndex([('x', 1, 'C'),
            ('x', 1, 'A'),
            ('x', 1, 'D'),
            ('y', 2, 'C'),
            ('y', 2, 'A'),
            ('y', 2, 'D')],
           )",failed
3460,tests.integ.modin.binary.test_binary_op,test_binary_logic_operations_between_df_and_list_like[index_with_name-__and__],"ValueError: Unable to coerce to Series, length must be 2: given 3",failed
3461,tests.integ.modin.binary.test_binary_op,test_other_with_native_pandas_object_raises[radd],Failed: DID NOT RAISE <class 'TypeError'>,failed
3462,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_constant_float_keys_negative[0-na-2.5-na],AssertionError: exception type <class 'ValueError'> does not match with expected type <class 'IndexError'>,failed
3464,tests.integ.modin.test_concat,test_concat_multiindex_columns_with_keys_axis1[keys1-2],"AssertionError: DataFrame.columns are different

DataFrame.columns levels are different
[left]:  3, MultiIndex([(('x', 1), 'C', 'C'),
            (('x', 1), 'A', 'A'),
            (('x', 1), 'D', 'D'),
            (('y', 2), 'P', 'P'),
            (('y', 2), 'A', 'A'),
            (('y', 2), 'C', 'C')],
           )
[right]: 4, MultiIndex([('x', 1, 'C', 'C'),
            ('x', 1, 'A', 'A'),
            ('x', 1, 'D', 'D'),
            ('y', 2, 'P', 'P'),
            ('y', 2, 'A', 'A'),
            ('y', 2, 'C', 'C')],
           )",failed
3466,tests.integ.modin.test_concat,test_concat_multiindex_columns_with_keys_axis1[keys1-3],"AssertionError: DataFrame.columns are different

DataFrame.columns levels are different
[left]:  4, MultiIndex([(('x', 1), 'C', 'C', 'C'),
            (('x', 1), 'A', 'A', 'A'),
            (('x', 1), 'D', 'D', 'D'),
            (('y', 2), 'P', 'P', 'P'),
            (('y', 2), 'A', 'A', 'A'),
            (('y', 2), 'C', 'C', 'C')],
           )
[right]: 5, MultiIndex([('x', 1, 'C', 'C', 'C'),
            ('x', 1, 'A', 'A', 'A'),
            ('x', 1, 'D', 'D', 'D'),
            ('y', 2, 'P', 'P', 'P'),
            ('y', 2, 'A', 'A', 'A'),
            ('y', 2, 'C', 'C', 'C')],
           )",failed
3467,tests.integ.modin.binary.test_binary_op,test_other_with_native_pandas_object_raises[sub],Failed: DID NOT RAISE <class 'TypeError'>,failed
3469,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_constant_float_keys_negative[nan-na-2-na],AssertionError: exception type <class 'ValueError'> does not match with expected type <class 'IndexError'>,failed
3473,tests.integ.modin.crosstab.test_crosstab,test_margins_and_values[median1-False],AttributeError: can't set attribute,failed
3474,tests.integ.modin.test_concat,test_concat_keys_with_none[0],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (7, 4)
[right]: (3, 3)",failed
3476,tests.integ.modin.binary.test_binary_op,test_binary_logic_operations_between_df_and_list_like[index_with_name-__rand__],"ValueError: Unable to coerce to Series, length must be 2: given 3",failed
3477,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_constant_float_keys_negative[0-na-nan-na],AssertionError: exception type <class 'ValueError'> does not match with expected type <class 'IndexError'>,failed
3478,tests.integ.modin.frame.test_idxmax_idxmin,test_idxmax_idxmin_df[True-0-idxmin-data10-index10],AttributeError: 'NativeQueryCompiler' object has no attribute 'set_columns',failed
3480,tests.integ.modin.test_concat,test_concat_keys_with_none[1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (3, 3)",failed
3485,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_constant_float_keys_negative[row_pos4-na-col_pos4-na],AssertionError: exception type <class 'ValueError'> does not match with expected type <class 'IndexError'>,failed
3489,tests.integ.modin.test_concat,test_concat_with_keys_and_names[0-one-two-names1],ValueError: Length of names must match number of levels in MultiIndex.,failed
3491,tests.integ.modin.crosstab.test_crosstab,test_margins_and_values[count-True],AttributeError: can't set attribute,failed
3494,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_constant_float_keys_negative[row_pos5-tuple-col_pos5-na],AssertionError: exception type <class 'ValueError'> does not match with expected type <class 'IndexError'>,failed
3498,tests.integ.modin.test_concat,test_concat_with_keys_and_names[0-one-two-names2],ValueError: Length of names must match number of levels in MultiIndex.,failed
3502,tests.integ.modin.binary.test_binary_op,test_other_with_native_pandas_object_raises[rsub],Failed: DID NOT RAISE <class 'TypeError'>,failed
3509,tests.integ.modin.crosstab.test_crosstab,test_margins_and_values[count-False],AttributeError: can't set attribute,failed
3510,tests.integ.modin.test_concat,test_concat_with_keys_and_names[0-one-None-names1],ValueError: Length of names must match number of levels in MultiIndex.,failed
3512,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_constant_float_keys_negative[row_pos6-series-col_pos6-na],AssertionError: exception type <class 'ValueError'> does not match with expected type <class 'IndexError'>,failed
3513,tests.integ.modin.binary.test_binary_op,test_other_with_native_pandas_object_raises[mul],Failed: DID NOT RAISE <class 'TypeError'>,failed
3519,tests.integ.modin.test_concat,test_concat_with_keys_and_names[0-one-None-names2],ValueError: Length of names must match number of levels in MultiIndex.,failed
3522,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_constant_float_keys_negative[row_pos7-na-col_pos7-na],AssertionError: exception type <class 'ValueError'> does not match with expected type <class 'IndexError'>,failed
3523,tests.integ.modin.binary.test_binary_op,test_other_with_native_pandas_object_raises[rmul],Failed: DID NOT RAISE <class 'TypeError'>,failed
3529,tests.integ.modin.crosstab.test_crosstab,test_margins_and_values[mean0-True],AttributeError: can't set attribute,failed
3532,tests.integ.modin.binary.test_binary_op,test_other_with_native_pandas_object_raises[eq],Failed: DID NOT RAISE <class 'TypeError'>,failed
3534,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_constant_float_keys_negative[row_pos8-na-col_pos8-tuple],AssertionError: exception type <class 'ValueError'> does not match with expected type <class 'IndexError'>,failed
3539,tests.integ.modin.binary.test_binary_op,test_other_with_native_pandas_object_raises[ne],Failed: DID NOT RAISE <class 'TypeError'>,failed
3542,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_constant_float_keys_negative[row_pos9-na-col_pos9-series],AssertionError: exception type <class 'ValueError'> does not match with expected type <class 'IndexError'>,failed
3545,tests.integ.modin.crosstab.test_crosstab,test_margins_and_values[mean0-False],AttributeError: can't set attribute,failed
3550,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_constant_float_keys_negative[row_pos10-na-col_pos10-na],AssertionError: exception type <class 'ValueError'> does not match with expected type <class 'IndexError'>,failed
3554,tests.integ.modin.test_concat,test_concat_with_keys_and_names[0-None-two-names1],ValueError: Length of names must match number of levels in MultiIndex.,failed
3557,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_constant_float_keys_negative[row_pos11-na-col_pos11-na],AssertionError: exception type <class 'ValueError'> does not match with expected type <class 'IndexError'>,failed
3558,tests.integ.modin.binary.test_binary_op,test_other_with_native_pandas_object_raises[gt],"AssertionError: Regex pattern did not match.
 Regex: 'Please convert this to Snowpark pandas objects'
 Input: ""'>' not supported between instances of 'NoneType' and 'NoneType'""",failed
3560,tests.integ.modin.crosstab.test_crosstab,test_margins_and_values[mean1-True],AttributeError: can't set attribute,failed
3563,tests.integ.modin.test_concat,test_concat_with_keys_and_names[0-None-two-names2],ValueError: Length of names must match number of levels in MultiIndex.,failed
3565,tests.integ.modin.frame.test_idxmax_idxmin,test_idxmax_idxmin_df[True-1-idxmax-data10-index10],AttributeError: 'NativeQueryCompiler' object has no attribute 'set_columns',failed
3568,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_row_key_constant_float_keys_negative[row_pos12-na-col_pos12-na],AssertionError: exception type <class 'ValueError'> does not match with expected type <class 'IndexError'>,failed
3575,tests.integ.modin.test_concat,test_concat_with_keys_and_names[0-None-None-names1],ValueError: Length of names must match number of levels in MultiIndex.,failed
3578,tests.integ.modin.crosstab.test_crosstab,test_margins_and_values[mean1-False],AttributeError: can't set attribute,failed
3582,tests.integ.modin.test_concat,test_concat_with_keys_and_names[0-None-None-names2],ValueError: Length of names must match number of levels in MultiIndex.,failed
3589,tests.integ.modin.binary.test_binary_op,test_other_with_native_pandas_object_raises[lt],"AssertionError: Regex pattern did not match.
 Regex: 'Please convert this to Snowpark pandas objects'
 Input: ""'<' not supported between instances of 'NoneType' and 'NoneType'""",failed
3594,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_mixed_types_fail[row_key0-col_key0-item0-expected_results0-False],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (100.0 %)
[index]: [0, 1, 2, 3]
[left]:  [nan, 2.0, 3.0, 4.0]
[right]: [True, True, True, True]",failed
3595,tests.integ.modin.test_concat,test_concat_with_keys_and_names[1-one-two-names1],ValueError: Length of names must match number of levels in MultiIndex.,failed
3599,tests.integ.modin.crosstab.test_crosstab,test_margins_and_values[min0-True],AttributeError: can't set attribute,failed
3603,tests.integ.modin.test_concat,test_concat_with_keys_and_names[1-one-two-names2],ValueError: Length of names must match number of levels in MultiIndex.,failed
3613,tests.integ.modin.binary.test_binary_op,test_other_with_native_pandas_object_raises[ge],"AssertionError: Regex pattern did not match.
 Regex: 'Please convert this to Snowpark pandas objects'
 Input: ""'>=' not supported between instances of 'NoneType' and 'NoneType'""",failed
3615,tests.integ.modin.test_concat,test_concat_with_keys_and_names[1-one-None-names1],ValueError: Length of names must match number of levels in MultiIndex.,failed
3620,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_mixed_types_fail[row_key1-col_key1-item1-None-False],"AssertionError: DataFrame.iloc[:, 1] (column name=""B"") are different

DataFrame.iloc[:, 1] (column name=""B"") values are different (25.0 %)
[index]: [0, 1, 2, 3]
[left]:  [True, <NA>, True, False]
[right]: [True, 0, True, False]
At positional index 1, first diff: <NA> != 0",failed
3621,tests.integ.modin.test_concat,test_concat_with_keys_and_names[1-one-None-names2],ValueError: Length of names must match number of levels in MultiIndex.,failed
3627,tests.integ.modin.binary.test_timedelta,test_numeric_series_and_timedelta_list_like[mul],TypeError: Cannot do operation with improper dtypes,failed
3629,tests.integ.modin.test_concat,test_concat_with_keys_and_names[1-None-two-names1],ValueError: Length of names must match number of levels in MultiIndex.,failed
3632,tests.integ.modin.test_concat,test_concat_with_keys_and_names[1-None-two-names2],ValueError: Length of names must match number of levels in MultiIndex.,failed
3635,tests.integ.modin.crosstab.test_crosstab,test_margins_and_values[min0-False],AttributeError: can't set attribute,failed
3638,tests.integ.modin.binary.test_timedelta,test_numeric_series_and_timedelta_list_like[rmul],TypeError: Cannot do operation with improper dtypes,failed
3641,tests.integ.modin.test_concat,test_concat_with_keys_and_names[1-None-None-names1],ValueError: Length of names must match number of levels in MultiIndex.,failed
3644,tests.integ.modin.frame.test_idxmax_idxmin,test_idxmax_idxmin_df[True-1-idxmin-data10-index10],AttributeError: 'NativeQueryCompiler' object has no attribute 'set_columns',failed
3646,tests.integ.modin.crosstab.test_crosstab,test_margins_and_values[min1-True],AttributeError: can't set attribute,failed
3651,tests.integ.modin.binary.test_timedelta,test_numeric_series_and_timedelta_list_like[rdiv],TypeError: Cannot do operation with improper dtypes,failed
3652,tests.integ.modin.binary.test_binary_op,test_other_with_native_pandas_object_raises[le],"AssertionError: Regex pattern did not match.
 Regex: 'Please convert this to Snowpark pandas objects'
 Input: ""'<=' not supported between instances of 'NoneType' and 'NoneType'""",failed
3657,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_mixed_types_fail[row_key2-col_key2-item2-expected_results2-False],"AssertionError: DataFrame.iloc[:, 1] (column name=""B"") are different

DataFrame.iloc[:, 1] (column name=""B"") values are different (25.0 %)
[index]: [0, 1, 2, 3]
[left]:  [True, <NA>, True, False]
[right]: [True, True, True, False]",failed
3659,tests.integ.modin.crosstab.test_crosstab,test_margins_and_values[min1-False],AttributeError: can't set attribute,failed
3665,tests.integ.modin.test_concat,test_concat_with_keys_and_names[1-None-None-names2],ValueError: Length of names must match number of levels in MultiIndex.,failed
3671,tests.integ.modin.binary.test_timedelta,test_numeric_series_and_timedelta_list_like[rtruediv],TypeError: Cannot do operation with improper dtypes,failed
3676,tests.integ.modin.test_concat,test_concat_empty_keys_negative[0],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'ValueError'>,failed
3678,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_mixed_types_fail[row_key3-col_key3-item3-None-True],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
3680,tests.integ.modin.crosstab.test_crosstab,test_margins_and_values[amin-True],AttributeError: can't set attribute,failed
3682,tests.integ.modin.test_concat,test_concat_empty_keys_negative[1],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'ValueError'>,failed
3693,tests.integ.modin.frame.test_idxmax_idxmin,test_idxmax_idxmin_df[False-0-idxmax-data9-index9],reason: Snowpark pandas returns a Series with None whereas pandas throws a ValueError,xfailed
3696,tests.integ.modin.binary.test_timedelta,test_numeric_series_and_timedelta_list_like[rfloordiv],TypeError: Cannot do operation with improper dtypes,failed
3700,tests.integ.modin.crosstab.test_crosstab,test_margins_and_values[amin-False],AttributeError: can't set attribute,failed
3703,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_mixed_types_fail[row_key4-col_key4-item4-None-True],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
3713,tests.integ.modin.binary.test_timedelta,test_numeric_series_and_timedelta_list_like[rmod],TypeError: Cannot do operation with improper dtypes,failed
3714,tests.integ.modin.crosstab.test_crosstab,test_margins_and_values[max0-True],AttributeError: can't set attribute,failed
3729,tests.integ.modin.crosstab.test_crosstab,test_margins_and_values[max0-False],AttributeError: can't set attribute,failed
3735,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_mixed_types_fail[row_key5-col_key5-item5-expected_results5-False],ValueError: Length of values (3) does not match length of index (4),failed
3748,tests.integ.modin.frame.test_idxmax_idxmin,test_idxmax_idxmin_df[False-0-idxmax-data10-index10],AttributeError: 'NativeQueryCompiler' object has no attribute 'set_columns',failed
3751,tests.integ.modin.test_concat,test_concat_dict_with_invalid_keys_negative[0],Failed: DID NOT RAISE <class 'Exception'>,failed
3755,tests.integ.modin.test_concat,test_concat_dict_with_invalid_keys_negative[1],Failed: DID NOT RAISE <class 'Exception'>,failed
3756,tests.integ.modin.binary.test_timedelta,test_numeric_series_and_timedelta_list_like[eq],TypeError: Cannot do operation with improper dtypes,failed
3777,tests.integ.modin.crosstab.test_crosstab,test_margins_and_values[max1-True],AttributeError: can't set attribute,failed
3783,tests.integ.modin.binary.test_timedelta,test_numeric_series_and_timedelta_list_like[ne],TypeError: Cannot do operation with improper dtypes,failed
3788,tests.integ.modin.test_concat,test_concat_verify_integrity_axis1_negative[df],Failed: DID NOT RAISE <class 'ValueError'>,failed
3792,tests.integ.modin.test_concat,test_concat_verify_integrity_axis1_negative[series],Failed: DID NOT RAISE <class 'ValueError'>,failed
3793,tests.integ.modin.test_concat,test_concat_all_series_verify_integrity_axis1_negative,Failed: DID NOT RAISE <class 'ValueError'>,failed
3805,tests.integ.modin.crosstab.test_crosstab,test_margins_and_values[max1-False],AttributeError: can't set attribute,failed
3813,tests.integ.modin.frame.test_idxmax_idxmin,test_idxmax_idxmin_df[False-0-idxmin-data9-index9],reason: Snowpark pandas returns a Series with None whereas pandas throws a ValueError,xfailed
3814,tests.integ.modin.test_concat,test_concat_verify_integrity_axis0_negative[index10-index20],Failed: DID NOT RAISE <class 'Exception'>,failed
3818,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_mixed_types_fail[row_key7-col_key7-item7-expected_results7-False],ValueError: Length of values (2) does not match length of index (4),failed
3820,tests.integ.modin.test_concat,test_concat_verify_integrity_axis0_negative[index11-index21],Failed: DID NOT RAISE <class 'Exception'>,failed
3823,tests.integ.modin.test_concat,test_concat_verify_integrity_axis0_negative[index12-index22],Failed: DID NOT RAISE <class 'Exception'>,failed
3825,tests.integ.modin.test_concat,test_concat_verify_integrity_axis0_large_overlap_negative,Failed: DID NOT RAISE <class 'ValueError'>,failed
3827,tests.integ.modin.crosstab.test_crosstab,test_margins_and_values[amax-True],AttributeError: can't set attribute,failed
3831,tests.integ.modin.test_concat,test_concat_levels_negative,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
3841,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_mixed_types_fail[row_key8-col_key8-item8-expected_results8-False],"AssertionError: DataFrame.iloc[:, 3] (column name=""D"") are different

DataFrame.iloc[:, 3] (column name=""D"") values are different (25.0 %)
[index]: [0, 1, 2, 3]
[left]:  [a, b, False, d]
[right]: [a, b, false, d]
At positional index 2, first diff: False != false",failed
3843,tests.integ.modin.crosstab.test_crosstab,test_margins_and_values[amax-False],AttributeError: can't set attribute,failed
3846,tests.integ.modin.test_concat,test_concat_duplicate_columns[columns11-columns21-expected_rows1-expected_cols1],pandas.errors.InvalidIndexError: Reindexing only valid with uniquely valued Index objects,failed
3850,tests.integ.modin.frame.test_idxmax_idxmin,test_idxmax_idxmin_df[False-0-idxmin-data10-index10],AttributeError: 'NativeQueryCompiler' object has no attribute 'set_columns',failed
3856,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_mixed_types_fail[row_key9-col_key9-item9-None-True],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
3857,tests.integ.modin.crosstab.test_crosstab,test_margins_and_values[sum0-True],AttributeError: can't set attribute,failed
3859,tests.integ.modin.test_concat,test_concat_duplicate_columns[columns12-columns22-expected_rows2-expected_cols2],pandas.errors.InvalidIndexError: Reindexing only valid with uniquely valued Index objects,failed
3871,tests.integ.modin.crosstab.test_crosstab,test_margins_and_values[sum0-False],AttributeError: can't set attribute,failed
3877,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_mixed_types_fail[row_key10-col_key10-item10-expected_results10-False],"AssertionError: DataFrame.iloc[:, 1] (column name=""B"") are different

DataFrame.iloc[:, 1] (column name=""B"") values are different (50.0 %)
[index]: [0, 1, 2, 3]
[left]:  [True, <NA>, <NA>, False]
[right]: [True, True, False, False]",failed
3885,tests.integ.modin.crosstab.test_crosstab,test_margins_and_values[sum1-True],AttributeError: can't set attribute,failed
3894,tests.integ.modin.test_concat,test_concat_duplicate_columns[columns13-columns23-expected_rows3-expected_cols3],pandas.errors.InvalidIndexError: Reindexing only valid with uniquely valued Index objects,failed
3938,tests.integ.modin.frame.test_idxmax_idxmin,test_idxmax_idxmin_df[False-1-idxmax-data10-index10],AttributeError: 'NativeQueryCompiler' object has no attribute 'set_columns',failed
3950,tests.integ.modin.crosstab.test_crosstab,test_margins_and_values[sum1-False],AttributeError: can't set attribute,failed
3974,tests.integ.modin.crosstab.test_crosstab,test_margins_and_values[sum2-True],AttributeError: can't set attribute,failed
3979,tests.integ.modin.binary.test_binary_op,test_binary_mod_deviates_between_df[native_df0-res0],Failed: DID NOT RAISE <class 'AssertionError'>,failed
3987,tests.integ.modin.binary.test_binary_op,test_binary_mod_deviates_between_df[native_df1-res1],Failed: DID NOT RAISE <class 'AssertionError'>,failed
3990,tests.integ.modin.crosstab.test_crosstab,test_margins_and_values[sum2-False],AttributeError: can't set attribute,failed
3995,tests.integ.modin.binary.test_binary_op,test_binary_mod_deviates_between_df[native_df2-res2],Failed: DID NOT RAISE <class 'AssertionError'>,failed
3999,tests.integ.modin.binary.test_timedelta,test_numeric_dataframe_and_timedelta_list_like[mul],TypeError: Cannot do operation with improper dtypes,failed
4000,tests.integ.modin.binary.test_binary_op,test_binary_mod_deviates_between_df[native_df3-res3],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4003,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[median0-0-True],AttributeError: can't set attribute,failed
4009,tests.integ.modin.binary.test_timedelta,test_numeric_dataframe_and_timedelta_list_like[rmul],TypeError: Cannot do operation with improper dtypes,failed
4010,tests.integ.modin.binary.test_binary_op,test_binary_that_deviates_for_series_mod[ser0-res0],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4013,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[median0-0-False],AttributeError: can't set attribute,failed
4017,tests.integ.modin.binary.test_binary_op,test_binary_that_deviates_for_series_mod[ser1-res1],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4019,tests.integ.modin.binary.test_timedelta,test_numeric_dataframe_and_timedelta_list_like[rdiv],TypeError: Cannot do operation with improper dtypes,failed
4021,tests.integ.modin.frame.test_idxmax_idxmin,test_idxmax_idxmin_df[False-1-idxmin-data10-index10],AttributeError: 'NativeQueryCompiler' object has no attribute 'set_columns',failed
4025,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[median0-1-True],AttributeError: can't set attribute,failed
4026,tests.integ.modin.binary.test_binary_op,test_binary_that_deviates_for_series_mod[ser2-res2],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4033,tests.integ.modin.binary.test_timedelta,test_numeric_dataframe_and_timedelta_list_like[rtruediv],TypeError: Cannot do operation with improper dtypes,failed
4034,tests.integ.modin.binary.test_binary_op,test_binary_that_deviates_for_series_mod[ser3-res3],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4037,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[median0-1-False],AttributeError: can't set attribute,failed
4041,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values1-None-None-3-2-None-1-None],"AssertionError: DataFrame.iloc[:, 2] (column name=""('a', 2)"") are different

DataFrame.iloc[:, 2] (column name=""('a', 2)"") values are different (20.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [3.0, nan, 98.0, 57.0, -7.0]
[right]: [3, -999, 98, 57, -7]",failed
4044,tests.integ.modin.binary.test_binary_op,test_binary_that_deviates_for_series_mod[ser4-res4],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4047,tests.integ.modin.binary.test_timedelta,test_numeric_dataframe_and_timedelta_list_like[rfloordiv],TypeError: Cannot do operation with improper dtypes,failed
4050,tests.integ.modin.binary.test_binary_op,test_binary_that_deviates_for_series_mod[ser5-res5],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4055,tests.integ.modin.binary.test_binary_op,test_binary_that_deviates_for_series_mod[ser6-res6],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4056,tests.integ.modin.binary.test_timedelta,test_numeric_dataframe_and_timedelta_list_like[rmod],TypeError: Cannot do operation with improper dtypes,failed
4058,tests.integ.modin.frame.test_idxmax_idxmin,test_idxmax_idxmin_df_numeric_only_axis_0_different_column_dtypes[False-idxmax-data1-index1],pandas throws TypeError when Snowpark pandas returns result,xfailed
4062,tests.integ.modin.binary.test_binary_op,test_binary_that_deviates_for_series_mod[ser7-res7],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4067,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[median0-True-True],AttributeError: can't set attribute,failed
4069,tests.integ.modin.binary.test_binary_op,test_binary_that_deviates_for_series_mod[ser8-res8],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4070,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values1-None-None-3-2-None-row_key1-None],"AssertionError: DataFrame.iloc[:, 2] (column name=""('a', 2)"") are different

DataFrame.iloc[:, 2] (column name=""('a', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [nan, 12.0, 98.0, nan, -7.0]
[right]: [-998, 12, 98, -999, -7]",failed
4074,tests.integ.modin.binary.test_binary_op,test_binary_that_deviates_for_series_mod[ser9-res9],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4075,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[median0-True-False],AttributeError: can't set attribute,failed
4078,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values1-None-None-3-2-None-row_key2-row_key_index2],"AssertionError: DataFrame.iloc[:, 2] (column name=""('a', 2)"") are different

DataFrame.iloc[:, 2] (column name=""('a', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [3.0, nan, nan, 57.0, -7.0]
[right]: [3, -999, -998, 57, -7]",failed
4080,tests.integ.modin.binary.test_binary_op,test_binary_that_deviates_for_series_mod[ser10-res10],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4082,tests.integ.modin.binary.test_timedelta,test_numeric_dataframe_and_timedelta_list_like[eq],TypeError: Cannot do operation with improper dtypes,failed
4083,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[median0-all-True],AttributeError: can't set attribute,failed
4086,tests.integ.modin.binary.test_binary_op,test_binary_that_deviates_for_series_mod[ser11-res11],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4088,tests.integ.modin.frame.test_idxmax_idxmin,test_idxmax_idxmin_df_numeric_only_axis_0_different_column_dtypes[False-idxmin-data1-index1],pandas throws TypeError when Snowpark pandas returns result,xfailed
4089,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values1-None-None-3-2-None-row_key3-row_key_index3],"AssertionError: DataFrame.iloc[:, 2] (column name=""('a', 2)"") are different

DataFrame.iloc[:, 2] (column name=""('a', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [3.0, nan, nan, 57.0, -7.0]
[right]: [3, -998, -999, 57, -7]",failed
4093,tests.integ.modin.binary.test_timedelta,test_numeric_dataframe_and_timedelta_list_like[ne],TypeError: Cannot do operation with improper dtypes,failed
4094,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[median0-all-False],AttributeError: can't set attribute,failed
4104,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[median0-index-True],AttributeError: can't set attribute,failed
4116,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values1-None-None-3-col_key1-None-1-None],ValueError: buffer source array is read-only,failed
4117,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[median0-index-False],AttributeError: can't set attribute,failed
4128,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values1-None-None-3-col_key1-None-row_key1-None],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [nan, 11.0, 101.0, nan, -6.0]
[right]: [-996, 11, 101, -997, -6]",failed
4139,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values1-None-None-3-col_key1-None-row_key2-row_key_index2],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [2.0, nan, nan, 56.0, -6.0]
[right]: [2, -997, -996, 56, -6]",failed
4140,tests.integ.modin.binary.test_timedelta,test_subtract_two_timestamps_timezones_disallowed[sub-pandas_lhs0-pandas_rhs0],"AssertionError: Regex pattern did not match.
 Regex: 'Cannot\\ subtract\\ tz\\-naive\\ and\\ tz\\-aware\\ datetime\\-like\\ objects\\.'
 Input: 'Cannot subtract tz-naive and tz-aware datetime-like objects'",failed
4142,tests.integ.modin.binary.test_binary_op,test_binary_fails_raises_not_implemented_error_for_series_mod[ser0],"TypeError: ufunc 'isnan' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''",failed
4149,tests.integ.modin.binary.test_binary_op,test_binary_fails_raises_not_implemented_error_for_series_mod[ser1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
4151,tests.integ.modin.frame.test_idxmax_idxmin,test_idxmax_idxmin_with_timedelta[1-idxmax],[XPASS(strict)] SNOW-1653126,failed
4152,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[median0-columns-True],AttributeError: can't set attribute,failed
4154,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values1-None-None-3-col_key1-None-row_key3-row_key_index3],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [2.0, nan, nan, 56.0, -6.0]
[right]: [2, -996, -997, 56, -6]",failed
4155,tests.integ.modin.frame.test_idxmax_idxmin,test_idxmax_idxmin_with_timedelta[1-idxmin],[XPASS(strict)] SNOW-1653126,failed
4159,tests.integ.modin.binary.test_binary_op,test_binary_for_str_series_mod[ser0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
4163,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[median0-columns-False],AttributeError: can't set attribute,failed
4165,tests.integ.modin.binary.test_timedelta,test_subtract_two_timestamps_timezones_disallowed[rsub-pandas_lhs1-pandas_rhs1],"AssertionError: Regex pattern did not match.
 Regex: 'Cannot\\ subtract\\ tz\\-naive\\ and\\ tz\\-aware\\ datetime\\-like\\ objects\\.'
 Input: 'Cannot subtract tz-naive and tz-aware datetime-like objects'",failed
4168,tests.integ.modin.binary.test_binary_op,test_binary_for_str_series_mod[ser1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
4174,tests.integ.modin.binary.test_binary_op,test_binary_for_str_series_mod[ser2],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
4175,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[median1-0-True],AttributeError: can't set attribute,failed
4181,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values1-None-None-3-col_key2-col_key_index2-1-None],ValueError: buffer source array is read-only,failed
4185,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[median1-0-False],AttributeError: can't set attribute,failed
4190,tests.integ.modin.frame.test_idxmax_idxmin,test_idxmax_idxmin_empty_df_with_index[0-idxmax],AttributeError: 'NativeQueryCompiler' object has no attribute 'set_columns',failed
4194,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[median1-1-True],AttributeError: can't set attribute,failed
4198,tests.integ.modin.binary.test_binary_op,test_binary_for_str_series_mod[ser3],TypeError: not all arguments converted during string formatting,failed
4203,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[median1-1-False],AttributeError: can't set attribute,failed
4208,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values1-None-None-3-col_key2-col_key_index2-row_key1-None],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [nan, 11.0, 101.0, nan, -6.0]
[right]: [-998, 11, 101, -999, -6]",failed
4209,tests.integ.modin.frame.test_idxmax_idxmin,test_idxmax_idxmin_empty_df_with_index[0-idxmin],AttributeError: 'NativeQueryCompiler' object has no attribute 'set_columns',failed
4210,tests.integ.modin.frame.test_idxmax_idxmin,test_idxmax_idxmin_empty_df_with_index[1-idxmax],reason: Snowpark pandas returns empty dataframe instead of ValueError,xfailed
4212,tests.integ.modin.frame.test_idxmax_idxmin,test_idxmax_idxmin_empty_df_with_index[1-idxmin],reason: Snowpark pandas returns empty dataframe instead of ValueError,xfailed
4215,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[median1-True-True],AttributeError: can't set attribute,failed
4216,tests.integ.modin.frame.test_idxmax_idxmin,test_idxmax_idxmin_crazy_column_names_axis_1[1-idxmax],[XPASS(strict)] Snowpark lit() cannot parse pd.Timestamp,failed
4218,tests.integ.modin.frame.test_idxmax_idxmin,test_idxmax_idxmin_crazy_column_names_axis_1[1-idxmin],[XPASS(strict)] Snowpark lit() cannot parse pd.Timestamp,failed
4221,tests.integ.modin.frame.test_idxmax_idxmin,test_idxmax_idxmin_multiindex_unsupported[0-idxmax],[XPASS(strict)] ,failed
4224,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[median1-True-False],AttributeError: can't set attribute,failed
4225,tests.integ.modin.frame.test_idxmax_idxmin,test_idxmax_idxmin_multiindex_unsupported[0-idxmin],[XPASS(strict)] ,failed
4228,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values1-None-None-3-col_key2-col_key_index2-row_key2-row_key_index2],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [2.0, nan, nan, 56.0, -6.0]
[right]: [2, -999, -998, 56, -6]",failed
4229,tests.integ.modin.frame.test_idxmax_idxmin,test_idxmax_idxmin_multiindex_unsupported[1-idxmax],[XPASS(strict)] ,failed
4231,tests.integ.modin.frame.test_idxmax_idxmin,test_idxmax_idxmin_multiindex_unsupported[1-idxmin],[XPASS(strict)] ,failed
4239,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values1-None-None-3-col_key2-col_key_index2-row_key3-row_key_index3],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [2.0, nan, nan, 56.0, -6.0]
[right]: [2, -998, -999, 56, -6]",failed
4241,tests.integ.modin.binary.test_binary_op,test_binary_for_str_series_mod[ser4],ValueError: cannot convert float NaN to integer,failed
4248,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[median1-all-True],AttributeError: can't set attribute,failed
4256,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[median1-all-False],AttributeError: can't set attribute,failed
4260,tests.integ.modin.binary.test_binary_op,test_binary_for_str_series_mod[ser5],ValueError: incomplete format,failed
4263,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values1-None-None-3-col_key3-col_key_index3-1-None],ValueError: buffer source array is read-only,failed
4266,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[median1-index-True],AttributeError: can't set attribute,failed
4275,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values1-None-None-3-col_key3-col_key_index3-row_key1-None],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [nan, 11.0, 101.0, nan, -6.0]
[right]: [-996, 11, 101, -997, -6]",failed
4277,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[median1-index-False],AttributeError: can't set attribute,failed
4287,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[median1-columns-True],AttributeError: can't set attribute,failed
4292,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values1-None-None-3-col_key3-col_key_index3-row_key2-row_key_index2],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [2.0, nan, nan, 56.0, -6.0]
[right]: [2, -997, -996, 56, -6]",failed
4301,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[median1-columns-False],AttributeError: can't set attribute,failed
4305,tests.integ.modin.frame.test_iloc,test_df_row_return_dataframe[key0-1-2],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
4312,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values1-None-None-3-col_key3-col_key_index3-row_key3-row_key_index3],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [2.0, nan, nan, 56.0, -6.0]
[right]: [2, -996, -997, 56, -6]",failed
4324,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values2-item_index2-None-5-2-None-1-None],"AssertionError: DataFrame.iloc[:, 2] (column name=""('a', 2)"") are different

DataFrame.iloc[:, 2] (column name=""('a', 2)"") values are different (20.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [3.0, nan, 98.0, 57.0, -7.0]
[right]: [3, -999, 98, 57, -7]",failed
4331,tests.integ.modin.frame.test_iloc,test_df_row_return_dataframe[key5-1-2],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
4337,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values2-item_index2-None-5-2-None-row_key1-None],"AssertionError: DataFrame.iloc[:, 2] (column name=""('a', 2)"") are different

DataFrame.iloc[:, 2] (column name=""('a', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [nan, 12.0, 98.0, nan, -7.0]
[right]: [-998, 12, 98, -999, -7]",failed
4348,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[count-0-True],AttributeError: can't set attribute,failed
4354,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values2-item_index2-None-5-2-None-row_key2-row_key_index2],"AssertionError: DataFrame.iloc[:, 2] (column name=""('a', 2)"") are different

DataFrame.iloc[:, 2] (column name=""('a', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [3.0, nan, nan, 57.0, -7.0]
[right]: [3, -999, -998, 57, -7]",failed
4357,tests.integ.modin.frame.test_iloc,test_df_row_return_dataframe[key10-1-2],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
4359,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[count-0-False],AttributeError: can't set attribute,failed
4363,tests.integ.modin.frame.test_iloc,test_df_row_return_dataframe[key11-1-2],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
4365,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values2-item_index2-None-5-2-None-row_key3-row_key_index3],"AssertionError: DataFrame.iloc[:, 2] (column name=""('a', 2)"") are different

DataFrame.iloc[:, 2] (column name=""('a', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [3.0, nan, nan, 57.0, -7.0]
[right]: [3, -998, -999, 57, -7]",failed
4368,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[count-1-True],AttributeError: can't set attribute,failed
4369,tests.integ.modin.binary.test_binary_op,test_binary_mod_between_series_and_list_like_deviating_behavior[list-mod],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4371,tests.integ.modin.binary.test_binary_op,test_binary_mod_between_series_and_list_like_deviating_behavior[list-rmod],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4374,tests.integ.modin.binary.test_binary_op,test_binary_mod_between_series_and_list_like_deviating_behavior[ndarray-mod],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4375,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[count-1-False],AttributeError: can't set attribute,failed
4377,tests.integ.modin.binary.test_binary_op,test_binary_mod_between_series_and_list_like_deviating_behavior[ndarray-rmod],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4378,tests.integ.modin.binary.test_binary_op,test_binary_mod_between_series_and_list_like_deviating_behavior[index-mod],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4382,tests.integ.modin.frame.test_iloc,test_df_row_return_dataframe[key12-1-2],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
4383,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[count-True-True],AttributeError: can't set attribute,failed
4385,tests.integ.modin.binary.test_binary_op,test_binary_mod_between_series_and_list_like_deviating_behavior[index-rmod],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4388,tests.integ.modin.binary.test_binary_op,test_binary_mod_between_series_and_list_like_deviating_behavior[index_with_name-mod],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4389,tests.integ.modin.frame.test_iloc,test_df_row_return_dataframe[key13-1-2],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
4391,tests.integ.modin.frame.test_items,test_items[dataframe3],AssertionError: Got type: <class 'pandas.core.series.Series'>,failed
4394,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[count-True-False],AttributeError: can't set attribute,failed
4395,tests.integ.modin.binary.test_binary_op,test_binary_mod_between_series_and_list_like_deviating_behavior[index_with_name-rmod],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4398,tests.integ.modin.binary.test_binary_op,test_binary_mod_between_df_and_list_like_on_axis_0_deviating_behavior[list-mod],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4399,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[count-all-True],AttributeError: can't set attribute,failed
4400,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values2-item_index2-None-5-col_key1-None-1-None],ValueError: buffer source array is read-only,failed
4406,tests.integ.modin.binary.test_binary_op,test_binary_mod_between_df_and_list_like_on_axis_0_deviating_behavior[list-rmod],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4408,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values2-item_index2-None-5-col_key1-None-row_key1-None],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [nan, 11.0, 101.0, nan, -6.0]
[right]: [-996, 11, 101, -997, -6]",failed
4409,tests.integ.modin.frame.test_iloc,test_df_row_return_dataframe[key18-1-0],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
4410,tests.integ.modin.binary.test_binary_op,test_binary_mod_between_df_and_list_like_on_axis_0_deviating_behavior[ndarray-mod],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4414,tests.integ.modin.binary.test_binary_op,test_binary_mod_between_df_and_list_like_on_axis_0_deviating_behavior[ndarray-rmod],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4418,tests.integ.modin.binary.test_binary_op,test_binary_mod_between_df_and_list_like_on_axis_0_deviating_behavior[index-mod],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4419,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values2-item_index2-None-5-col_key1-None-row_key2-row_key_index2],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [2.0, nan, nan, 56.0, -6.0]
[right]: [2, -997, -996, 56, -6]",failed
4423,tests.integ.modin.binary.test_binary_op,test_binary_mod_between_df_and_list_like_on_axis_0_deviating_behavior[index-rmod],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4428,tests.integ.modin.binary.test_binary_op,test_binary_mod_between_df_and_list_like_on_axis_0_deviating_behavior[index_with_name-mod],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4429,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values2-item_index2-None-5-col_key1-None-row_key3-row_key_index3],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [2.0, nan, nan, 56.0, -6.0]
[right]: [2, -996, -997, 56, -6]",failed
4431,tests.integ.modin.frame.test_iloc,test_df_iloc_get_dataframe[key4-1-2],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
4433,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[count-all-False],AttributeError: can't set attribute,failed
4441,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[count-index-True],AttributeError: can't set attribute,failed
4446,tests.integ.modin.frame.test_iloc,test_df_iloc_get_dataframe[key9-1-2],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
4447,tests.integ.modin.binary.test_binary_op,test_binary_mod_between_df_and_list_like_on_axis_0_deviating_behavior[index_with_name-rmod],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4449,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values2-item_index2-None-5-col_key2-col_key_index2-1-None],ValueError: buffer source array is read-only,failed
4451,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[count-index-False],AttributeError: can't set attribute,failed
4453,tests.integ.modin.binary.test_binary_op,test_binary_mod_between_df_and_list_like_on_axis_1_deviating_behavior[list-mod],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4455,tests.integ.modin.frame.test_iloc,test_df_iloc_get_dataframe[key10-1-2],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
4457,tests.integ.modin.binary.test_binary_op,test_binary_mod_between_df_and_list_like_on_axis_1_deviating_behavior[list-rmod],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4459,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[count-columns-True],AttributeError: can't set attribute,failed
4461,tests.integ.modin.binary.test_binary_op,test_binary_mod_between_df_and_list_like_on_axis_1_deviating_behavior[ndarray-mod],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4464,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values2-item_index2-None-5-col_key2-col_key_index2-row_key1-None],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [nan, 11.0, 101.0, nan, -6.0]
[right]: [-998, 11, 101, -999, -6]",failed
4466,tests.integ.modin.frame.test_iloc,test_df_iloc_get_dataframe[key11-1-2],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
4468,tests.integ.modin.binary.test_binary_op,test_binary_mod_between_df_and_list_like_on_axis_1_deviating_behavior[ndarray-rmod],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4473,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[count-columns-False],AttributeError: can't set attribute,failed
4474,tests.integ.modin.binary.test_binary_op,test_binary_mod_between_df_and_list_like_on_axis_1_deviating_behavior[index-mod],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4477,tests.integ.modin.frame.test_iloc,test_df_iloc_get_dataframe[key12-1-2],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
4481,tests.integ.modin.binary.test_binary_op,test_binary_mod_between_df_and_list_like_on_axis_1_deviating_behavior[index-rmod],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4482,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values2-item_index2-None-5-col_key2-col_key_index2-row_key2-row_key_index2],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [2.0, nan, nan, 56.0, -6.0]
[right]: [2, -999, -998, 56, -6]",failed
4487,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[mean0-0-True],AttributeError: can't set attribute,failed
4488,tests.integ.modin.binary.test_binary_op,test_binary_mod_between_df_and_list_like_on_axis_1_deviating_behavior[index_with_name-mod],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4490,tests.integ.modin.test_concat,test_concat_object_with_same_index_with_dup[inner],pandas.errors.InvalidIndexError: Reindexing only valid with uniquely valued Index objects,failed
4496,tests.integ.modin.binary.test_binary_op,test_binary_mod_between_df_and_list_like_on_axis_1_deviating_behavior[index_with_name-rmod],Failed: DID NOT RAISE <class 'AssertionError'>,failed
4501,tests.integ.modin.frame.test_iloc,test_df_iloc_get_dataframe[key17-1-0],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
4502,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[mean0-0-False],AttributeError: can't set attribute,failed
4503,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values2-item_index2-None-5-col_key2-col_key_index2-row_key3-row_key_index3],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [2.0, nan, nan, 56.0, -6.0]
[right]: [2, -998, -999, 56, -6]",failed
4504,tests.integ.modin.test_concat,test_concat_object_with_same_index_with_dup_sort[inner],pandas.errors.InvalidIndexError: Reindexing only valid with uniquely valued Index objects,failed
4516,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[mean0-1-True],AttributeError: can't set attribute,failed
4518,tests.integ.modin.test_concat,test_concat_object_with_same_index_with_dup_sort[outer],pandas.errors.InvalidIndexError: Reindexing only valid with uniquely valued Index objects,failed
4521,tests.integ.modin.frame.test_iloc,test_df_iloc_get_dataframe_with_range[key0],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
4527,tests.integ.modin.binary.test_binary_op,test_binary_pow_deviating_behavior_series[ser1-res1],"AssertionError: Attributes of Series are different

Attribute ""dtype"" are different
[left]:  object
[right]: float64",failed
4533,tests.integ.modin.binary.test_binary_op,test_binary_pow_deviating_behavior_series[ser2-res2],"AssertionError: Attributes of Series are different

Attribute ""dtype"" are different
[left]:  object
[right]: float64",failed
4536,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[mean0-1-False],AttributeError: can't set attribute,failed
4541,tests.integ.modin.frame.test_iloc,test_df_iloc_get_dataframe_with_range[key1],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
4544,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values2-item_index2-None-5-col_key3-col_key_index3-1-None],ValueError: buffer source array is read-only,failed
4550,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[mean0-True-True],AttributeError: can't set attribute,failed
4554,tests.integ.modin.frame.test_iloc,test_df_iloc_get_dataframe_with_range[key2],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
4559,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values2-item_index2-None-5-col_key3-col_key_index3-row_key1-None],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [nan, 11.0, 101.0, nan, -6.0]
[right]: [-996, 11, 101, -997, -6]",failed
4564,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[mean0-True-False],AttributeError: can't set attribute,failed
4565,tests.integ.modin.frame.test_iloc,test_df_iloc_get_dataframe_with_range[key3],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
4574,tests.integ.modin.frame.test_iloc,test_df_iloc_get_dataframe_with_range[key4],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
4576,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[mean0-all-True],AttributeError: can't set attribute,failed
4578,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values2-item_index2-None-5-col_key3-col_key_index3-row_key2-row_key_index2],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [2.0, nan, nan, 56.0, -6.0]
[right]: [2, -997, -996, 56, -6]",failed
4588,tests.integ.modin.frame.test_iloc,test_df_iloc_get_dataframe_with_range[key5],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
4590,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[mean0-all-False],AttributeError: can't set attribute,failed
4594,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values2-item_index2-None-5-col_key3-col_key_index3-row_key3-row_key_index3],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [2.0, nan, nan, 56.0, -6.0]
[right]: [2, -996, -997, 56, -6]",failed
4599,tests.integ.modin.frame.test_iloc,test_df_iloc_get_dataframe_with_range[key6],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
4602,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[mean0-index-True],AttributeError: can't set attribute,failed
4605,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values3-item_index3-item_columns3-5-2-None-1-None],"AssertionError: DataFrame.iloc[:, 2] (column name=""('a', 2)"") are different

DataFrame.iloc[:, 2] (column name=""('a', 2)"") values are different (20.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [3.0, nan, 98.0, 57.0, -7.0]
[right]: [3, -999, 98, 57, -7]",failed
4612,tests.integ.modin.frame.test_iloc,test_df_iloc_get_dataframe_with_range[key7],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
4614,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[mean0-index-False],AttributeError: can't set attribute,failed
4615,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values3-item_index3-item_columns3-5-2-None-row_key1-None],"AssertionError: DataFrame.iloc[:, 2] (column name=""('a', 2)"") are different

DataFrame.iloc[:, 2] (column name=""('a', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [nan, 12.0, 98.0, nan, -7.0]
[right]: [-998, 12, 98, -999, -7]",failed
4623,tests.integ.modin.test_concat,test_concat_timedelta_not_implemented,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
4625,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values3-item_index3-item_columns3-5-2-None-row_key2-row_key_index2],"AssertionError: DataFrame.iloc[:, 2] (column name=""('a', 2)"") are different

DataFrame.iloc[:, 2] (column name=""('a', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [3.0, nan, nan, 57.0, -7.0]
[right]: [3, -999, -998, 57, -7]",failed
4629,tests.integ.modin.binary.test_timedelta,test_timestamp_dataframe_minus_timestamp_series,TypeError: cannot subtract DatetimeArray from ndarray,failed
4636,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values3-item_index3-item_columns3-5-2-None-row_key3-row_key_index3],"AssertionError: DataFrame.iloc[:, 2] (column name=""('a', 2)"") are different

DataFrame.iloc[:, 2] (column name=""('a', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [3.0, nan, nan, 57.0, -7.0]
[right]: [3, -998, -999, 57, -7]",failed
4637,tests.integ.modin.frame.test_iloc,test_df_iloc_get_dataframe_with_range[key8],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
4640,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[mean0-columns-True],AttributeError: can't set attribute,failed
4646,tests.integ.modin.frame.test_iloc,test_df_iloc_get_dataframe_with_range[key9],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
4651,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[mean0-columns-False],AttributeError: can't set attribute,failed
4665,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[mean1-0-True],AttributeError: can't set attribute,failed
4668,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values3-item_index3-item_columns3-5-col_key1-None-1-None],ValueError: buffer source array is read-only,failed
4680,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[mean1-0-False],AttributeError: can't set attribute,failed
4681,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values3-item_index3-item_columns3-5-col_key1-None-row_key1-None],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [nan, 11.0, 101.0, nan, -6.0]
[right]: [-996, 11, 101, -997, -6]",failed
4692,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[mean1-1-True],AttributeError: can't set attribute,failed
4695,tests.integ.modin.binary.test_timedelta,test_timestamp_series_minus_timestamp_dataframe,numpy.core._exceptions._UFuncBinaryResolutionError: ufunc 'subtract' cannot use operands with types dtype('<M8[ns]') and dtype('float64'),failed
4701,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values3-item_index3-item_columns3-5-col_key1-None-row_key2-row_key_index2],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [2.0, nan, nan, 56.0, -6.0]
[right]: [2, -997, -996, 56, -6]",failed
4727,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[mean1-1-False],AttributeError: can't set attribute,failed
4735,tests.integ.modin.frame.test_itertuples,test_df_itertuples_tuple_data_negative,[XPASS(strict)] Native pandas retains the tuple value while Snowpark pandas converts it to list.,failed
4746,tests.integ.modin.frame.test_itertuples,test_df_itertuples_nan_data_negative,Native pandas retains the np.nan value while Snowpark pandas converts it to None.,xfailed
4754,tests.integ.modin.test_cut,test_cut_with_labels[True-3-True-True-data0-cuts0-labels0],categorical not supported in Snowpark pandas API,xfailed
4755,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[mean1-True-True],AttributeError: can't set attribute,failed
4757,tests.integ.modin.test_cut,test_cut_with_labels[True-3-True-True-data1-4-labels1],categorical not supported in Snowpark pandas API,xfailed
4760,tests.integ.modin.test_cut,test_cut_with_labels[True-3-True-False-data0-cuts0-labels0],categorical not supported in Snowpark pandas API,xfailed
4762,tests.integ.modin.binary.test_timedelta,test_timestamp_dataframe_plus_timedelta_series[add],numpy.core._exceptions._UFuncBinaryResolutionError: ufunc 'add' cannot use operands with types dtype('float64') and dtype('<m8[ns]'),failed
4763,tests.integ.modin.test_cut,test_cut_with_labels[True-3-True-False-data1-4-labels1],categorical not supported in Snowpark pandas API,xfailed
4766,tests.integ.modin.test_cut,test_cut_with_labels[True-3-False-True-data0-cuts0-labels0],categorical not supported in Snowpark pandas API,xfailed
4768,tests.integ.modin.test_cut,test_cut_with_labels[True-3-False-True-data1-4-labels1],categorical not supported in Snowpark pandas API,xfailed
4772,tests.integ.modin.test_cut,test_cut_with_labels[True-3-False-False-data0-cuts0-labels0],categorical not supported in Snowpark pandas API,xfailed
4773,tests.integ.modin.test_cut,test_cut_with_labels[True-3-False-False-data1-4-labels1],categorical not supported in Snowpark pandas API,xfailed
4775,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values3-item_index3-item_columns3-5-col_key1-None-row_key3-row_key_index3],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [2.0, nan, nan, 56.0, -6.0]
[right]: [2, -996, -997, 56, -6]",failed
4776,tests.integ.modin.test_cut,test_cut_with_labels[True-8-True-True-data0-cuts0-labels0],categorical not supported in Snowpark pandas API,xfailed
4778,tests.integ.modin.test_cut,test_cut_with_labels[True-8-True-True-data1-4-labels1],categorical not supported in Snowpark pandas API,xfailed
4780,tests.integ.modin.test_cut,test_cut_with_labels[True-8-True-False-data0-cuts0-labels0],categorical not supported in Snowpark pandas API,xfailed
4782,tests.integ.modin.test_cut,test_cut_with_labels[True-8-True-False-data1-4-labels1],categorical not supported in Snowpark pandas API,xfailed
4786,tests.integ.modin.test_cut,test_cut_with_labels[True-8-False-True-data0-cuts0-labels0],categorical not supported in Snowpark pandas API,xfailed
4789,tests.integ.modin.test_cut,test_cut_with_labels[True-8-False-True-data1-4-labels1],categorical not supported in Snowpark pandas API,xfailed
4792,tests.integ.modin.binary.test_timedelta,test_timestamp_dataframe_plus_timedelta_series[radd],numpy.core._exceptions._UFuncBinaryResolutionError: ufunc 'add' cannot use operands with types dtype('<m8[ns]') and dtype('float64'),failed
4793,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[mean1-True-False],AttributeError: can't set attribute,failed
4798,tests.integ.modin.frame.test_iloc,test_df_iloc_get_col_key_out_of_bounds[-1337-0],IndexError: index -1337 is out of bounds for axis 0 with size 7,failed
4800,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[mean1-all-True],AttributeError: can't set attribute,failed
4801,tests.integ.modin.test_cut,test_cut_with_labels[True-8-False-False-data0-cuts0-labels0],categorical not supported in Snowpark pandas API,xfailed
4802,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values3-item_index3-item_columns3-5-col_key2-col_key_index2-1-None],ValueError: buffer source array is read-only,failed
4803,tests.integ.modin.test_cut,test_cut_with_labels[True-8-False-False-data1-4-labels1],categorical not supported in Snowpark pandas API,xfailed
4805,tests.integ.modin.test_cut,test_cut_with_labels[False-3-True-True-data0-cuts0-labels0],categorical not supported in Snowpark pandas API,xfailed
4807,tests.integ.modin.test_cut,test_cut_with_labels[False-3-True-True-data1-4-labels1],categorical not supported in Snowpark pandas API,xfailed
4809,tests.integ.modin.test_cut,test_cut_with_labels[False-3-True-False-data0-cuts0-labels0],categorical not supported in Snowpark pandas API,xfailed
4811,tests.integ.modin.frame.test_iloc,test_df_iloc_get_col_key_out_of_bounds[1337-0],IndexError: positional indexers are out-of-bounds,failed
4812,tests.integ.modin.test_cut,test_cut_with_labels[False-3-True-False-data1-4-labels1],categorical not supported in Snowpark pandas API,xfailed
4813,tests.integ.modin.binary.test_timedelta,test_timestamp_dataframe_minus_timedelta_series,numpy.core._exceptions._UFuncBinaryResolutionError: ufunc 'add' cannot use operands with types dtype('<m8[ns]') and dtype('float64'),failed
4814,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[mean1-all-False],AttributeError: can't set attribute,failed
4815,tests.integ.modin.test_cut,test_cut_with_labels[False-3-False-True-data0-cuts0-labels0],categorical not supported in Snowpark pandas API,xfailed
4816,tests.integ.modin.test_cut,test_cut_with_labels[False-3-False-True-data1-4-labels1],categorical not supported in Snowpark pandas API,xfailed
4818,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values3-item_index3-item_columns3-5-col_key2-col_key_index2-row_key1-None],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [nan, 11.0, 101.0, nan, -6.0]
[right]: [-998, 11, 101, -999, -6]",failed
4820,tests.integ.modin.test_cut,test_cut_with_labels[False-3-False-False-data0-cuts0-labels0],categorical not supported in Snowpark pandas API,xfailed
4823,tests.integ.modin.test_cut,test_cut_with_labels[False-3-False-False-data1-4-labels1],categorical not supported in Snowpark pandas API,xfailed
4824,tests.integ.modin.test_cut,test_cut_with_labels[False-8-True-True-data0-cuts0-labels0],categorical not supported in Snowpark pandas API,xfailed
4825,tests.integ.modin.test_cut,test_cut_with_labels[False-8-True-True-data1-4-labels1],categorical not supported in Snowpark pandas API,xfailed
4827,tests.integ.modin.test_cut,test_cut_with_labels[False-8-True-False-data0-cuts0-labels0],categorical not supported in Snowpark pandas API,xfailed
4828,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[mean1-index-True],AttributeError: can't set attribute,failed
4829,tests.integ.modin.test_cut,test_cut_with_labels[False-8-True-False-data1-4-labels1],categorical not supported in Snowpark pandas API,xfailed
4831,tests.integ.modin.test_cut,test_cut_with_labels[False-8-False-True-data0-cuts0-labels0],categorical not supported in Snowpark pandas API,xfailed
4833,tests.integ.modin.frame.test_iloc,test_df_iloc_get_col_key_out_of_bounds[col_key3-2],IndexError: positional indexers are out-of-bounds,failed
4834,tests.integ.modin.test_cut,test_cut_with_labels[False-8-False-True-data1-4-labels1],categorical not supported in Snowpark pandas API,xfailed
4836,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values3-item_index3-item_columns3-5-col_key2-col_key_index2-row_key2-row_key_index2],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [2.0, nan, nan, 56.0, -6.0]
[right]: [2, -999, -998, 56, -6]",failed
4837,tests.integ.modin.test_cut,test_cut_with_labels[False-8-False-False-data0-cuts0-labels0],categorical not supported in Snowpark pandas API,xfailed
4838,tests.integ.modin.test_cut,test_cut_with_labels[False-8-False-False-data1-4-labels1],categorical not supported in Snowpark pandas API,xfailed
4839,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[mean1-index-False],AttributeError: can't set attribute,failed
4844,tests.integ.modin.test_cut,test_cut_retbins_negative,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
4846,tests.integ.modin.test_cut,test_cut_labels_none_negative,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
4852,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[mean1-columns-True],AttributeError: can't set attribute,failed
4853,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values3-item_index3-item_columns3-5-col_key2-col_key_index2-row_key3-row_key_index3],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [2.0, nan, nan, 56.0, -6.0]
[right]: [2, -998, -999, 56, -6]",failed
4857,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[mean1-columns-False],AttributeError: can't set attribute,failed
4859,tests.integ.modin.binary.test_timedelta,test_timedelta_dataframe_plus_timestamp_series[add],numpy.core._exceptions._UFuncBinaryResolutionError: ufunc 'add' cannot use operands with types dtype('float64') and dtype('<M8[ns]'),failed
4868,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values3-item_index3-item_columns3-5-col_key3-col_key_index3-1-None],ValueError: buffer source array is read-only,failed
4873,tests.integ.modin.binary.test_timedelta,test_timedelta_dataframe_plus_timestamp_series[radd],numpy.core._exceptions._UFuncBinaryResolutionError: ufunc 'add' cannot use operands with types dtype('<M8[ns]') and dtype('float64'),failed
4875,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[min0-0-True],AttributeError: can't set attribute,failed
4877,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values3-item_index3-item_columns3-5-col_key3-col_key_index3-row_key1-None],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [nan, 11.0, 101.0, nan, -6.0]
[right]: [-996, 11, 101, -997, -6]",failed
4883,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[min0-0-False],AttributeError: can't set attribute,failed
4890,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values3-item_index3-item_columns3-5-col_key3-col_key_index3-row_key2-row_key_index2],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [2.0, nan, nan, 56.0, -6.0]
[right]: [2, -997, -996, 56, -6]",failed
4894,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[min0-1-True],AttributeError: can't set attribute,failed
4901,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[min0-1-False],AttributeError: can't set attribute,failed
4903,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_between_series_and_scalar_nan[10.001-add],"AssertionError: Series are different

Series values are different (60.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [nan, nan, nan, nan, nan]
[right]: [24.000999999999998, 26.801000000000002, nan, 185.001, nan]
At positional index 0, first diff: nan != 24.000999999999998",failed
4904,tests.integ.modin.binary.test_binary_op,test_generated_docstring_examples[eq],"AssertionError: Series are different

Series values are different (40.0 %)
[index]: [a, b, c, d, f]
[left]:  [False, False, False, False, False]
[right]: [False, False, False, None, None]",failed
4905,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[min0-True-True],AttributeError: can't set attribute,failed
4906,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_between_series_and_scalar_nan[10.001-radd],"AssertionError: Series are different

Series values are different (60.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [nan, nan, nan, nan, nan]
[right]: [24.000999999999998, 26.801000000000002, nan, 185.001, nan]
At positional index 0, first diff: nan != 24.000999999999998",failed
4908,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_between_series_and_scalar_nan[10.001-sub],"AssertionError: Series are different

Series values are different (60.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [nan, nan, nan, nan, nan]
[right]: [3.9990000000000006, 6.799000000000001, nan, 164.999, nan]
At positional index 0, first diff: nan != 3.9990000000000006",failed
4909,tests.integ.modin.binary.test_binary_op,test_generated_docstring_examples[ne],"AssertionError: Series are different

Series values are different (40.0 %)
[index]: [a, b, c, d, f]
[left]:  [True, True, True, True, True]
[right]: [True, True, True, None, None]",failed
4910,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[min0-True-False],AttributeError: can't set attribute,failed
4911,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values3-item_index3-item_columns3-5-col_key3-col_key_index3-row_key3-row_key_index3],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [2.0, nan, nan, 56.0, -6.0]
[right]: [2, -996, -997, 56, -6]",failed
4912,tests.integ.modin.frame.test_iloc,test_df_iloc_get_row_input_snowpark_pandas_return_dataframe[Index-2],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
4913,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_between_series_and_scalar_nan[10.001-rsub],"AssertionError: Series are different

Series values are different (60.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [nan, nan, nan, nan, nan]
[right]: [-3.9990000000000006, -6.799000000000001, nan, -164.999, nan]
At positional index 0, first diff: nan != -3.9990000000000006",failed
4915,tests.integ.modin.binary.test_binary_op,test_generated_docstring_examples[gt],"AssertionError: Series are different

Series values are different (40.0 %)
[index]: [a, b, c, d, f]
[left]:  [True, False, False, False, False]
[right]: [True, False, False, None, None]",failed
4916,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values4-None-item_columns4-3-2-None-1-None],"AssertionError: DataFrame.iloc[:, 2] (column name=""('a', 2)"") are different

DataFrame.iloc[:, 2] (column name=""('a', 2)"") values are different (20.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [3.0, nan, 98.0, 57.0, -7.0]
[right]: [3, -999, 98, 57, -7]",failed
4917,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values4-None-item_columns4-3-2-None-row_key1-None],"AssertionError: DataFrame.iloc[:, 2] (column name=""('a', 2)"") are different

DataFrame.iloc[:, 2] (column name=""('a', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [nan, 12.0, 98.0, nan, -7.0]
[right]: [-998, 12, 98, -999, -7]",failed
4919,tests.integ.modin.binary.test_binary_op,test_generated_docstring_examples[lt],"AssertionError: Series are different

Series values are different (40.0 %)
[index]: [a, b, c, d, f]
[left]:  [False, True, True, False, False]
[right]: [False, True, True, None, None]",failed
4920,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[min0-all-True],AttributeError: can't set attribute,failed
4921,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_between_series_and_scalar_nan[10.001-mul],"AssertionError: Series are different

Series values are different (60.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [nan, nan, nan, nan, nan]
[right]: [140.01399999999998, 168.0168, nan, 1750.175, nan]
At positional index 0, first diff: nan != 140.01399999999998",failed
4922,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--9-6-4],KeyError: 15,failed
4923,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values4-None-item_columns4-3-2-None-row_key2-row_key_index2],"AssertionError: DataFrame.iloc[:, 2] (column name=""('a', 2)"") are different

DataFrame.iloc[:, 2] (column name=""('a', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [3.0, nan, nan, 57.0, -7.0]
[right]: [3, -999, -998, 57, -7]",failed
4925,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_between_series_and_scalar_nan[10.001-rmul],"AssertionError: Series are different

Series values are different (60.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [nan, nan, nan, nan, nan]
[right]: [140.01399999999998, 168.0168, nan, 1750.175, nan]
At positional index 0, first diff: nan != 140.01399999999998",failed
4926,tests.integ.modin.binary.test_binary_op,test_generated_docstring_examples[ge],"AssertionError: Series are different

Series values are different (40.0 %)
[index]: [a, b, c, d, f]
[left]:  [True, False, False, False, False]
[right]: [True, False, False, None, None]",failed
4927,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[min0-all-False],AttributeError: can't set attribute,failed
4928,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_between_series_and_scalar_nan[10.001-truediv],"AssertionError: Series are different

Series values are different (60.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [nan, nan, nan, nan, nan]
[right]: [1.3998600139986002, 1.6798320167983203, nan, 17.498250174982502, nan]
At positional index 0, first diff: nan != 1.3998600139986002",failed
4929,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values4-None-item_columns4-3-2-None-row_key3-row_key_index3],"AssertionError: DataFrame.iloc[:, 2] (column name=""('a', 2)"") are different

DataFrame.iloc[:, 2] (column name=""('a', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [3.0, nan, nan, 57.0, -7.0]
[right]: [3, -998, -999, 57, -7]",failed
4930,tests.integ.modin.binary.test_binary_op,test_generated_docstring_examples[le],"AssertionError: Series are different

Series values are different (40.0 %)
[index]: [a, b, c, d, f]
[left]:  [False, True, True, False, False]
[right]: [False, True, True, None, None]",failed
4932,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_between_series_and_scalar_nan[10.001-rtruediv],"AssertionError: Series are different

Series values are different (60.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [nan, nan, nan, nan, nan]
[right]: [0.7143571428571428, 0.595297619047619, nan, 0.057148571428571424, nan]
At positional index 0, first diff: nan != 0.7143571428571428",failed
4933,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[min0-index-True],AttributeError: can't set attribute,failed
4934,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_between_series_and_scalar_nan[10.001-floordiv],"AssertionError: Series are different

Series values are different (60.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [nan, nan, nan, nan, nan]
[right]: [1.0, 1.0, nan, 17.0, nan]
At positional index 0, first diff: nan != 1.0",failed
4937,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_between_series_and_scalar_nan[10.001-rfloordiv],"AssertionError: Series are different

Series values are different (60.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [nan, nan, nan, nan, nan]
[right]: [0.0, 0.0, nan, 0.0, nan]
At positional index 0, first diff: nan != 0.0",failed
4938,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[min0-index-False],AttributeError: can't set attribute,failed
4940,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_between_series_and_scalar_nan[10.001-mod],"AssertionError: Series are different

Series values are different (60.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [nan, nan, nan, nan, nan]
[right]: [3.9990000000000006, 6.799000000000001, nan, 4.983000000000009, nan]
At positional index 0, first diff: nan != 3.9990000000000006",failed
4941,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values4-None-item_columns4-3-col_key1-None-1-None],ValueError: buffer source array is read-only,failed
4943,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_between_series_and_scalar_nan[10.001-rmod],"AssertionError: Series are different

Series values are different (60.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [nan, nan, nan, nan, nan]
[right]: [10.001, 10.001, nan, 10.001, nan]
At positional index 0, first diff: nan != 10.001",failed
4944,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--9-6-6],KeyError: 15,failed
4945,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[min0-columns-True],AttributeError: can't set attribute,failed
4947,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_between_series_and_scalar_nan[10.001-pow],"AssertionError: Series are different

Series values are different (60.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [nan, nan, nan, nan, nan]
[right]: [290019022754.90625, 1796048774939.5837, nan, 2.7078432771126627e+22, nan]
At positional index 0, first diff: nan != 290019022754.90625",failed
4948,tests.integ.modin.frame.test_iloc,test_df_iloc_get_row_input_snowpark_pandas_return_dataframe[Series-2],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
4950,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values4-None-item_columns4-3-col_key1-None-row_key1-None],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [nan, 11.0, 101.0, nan, -6.0]
[right]: [-996, 11, 101, -997, -6]",failed
4951,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[min0-columns-False],AttributeError: can't set attribute,failed
4954,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_between_series_and_scalar_nan[10.001-rpow],"AssertionError: Series are different

Series values are different (60.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [nan, nan, nan, nan, nan]
[right]: [100140091036409.94, 6.320181906387712e+16, nan, 1.0176531317632308e+175, nan]
At positional index 0, first diff: nan != 100140091036409.94",failed
4958,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[eq-rhs0-lhs0],"AssertionError: Series are different

Series values are different (5.55556 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, False]
[right]: [True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, <NA>]",failed
4959,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values4-None-item_columns4-3-col_key1-None-row_key2-row_key_index2],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [2.0, nan, nan, 56.0, -6.0]
[right]: [2, -997, -996, 56, -6]",failed
4961,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[min1-0-True],AttributeError: can't set attribute,failed
4966,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[eq-rhs0-lhs1],"AssertionError: Series are different

Series values are different (11.11111 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
[right]: [False, False, False, False, False, False, <NA>, False, False, False, False, False, False, False, False, False, False, <NA>]",failed
4969,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[min1-0-False],AttributeError: can't set attribute,failed
4970,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values4-None-item_columns4-3-col_key1-None-row_key3-row_key_index3],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [2.0, nan, nan, 56.0, -6.0]
[right]: [2, -996, -997, 56, -6]",failed
4972,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--1-1-None],KeyError: 2,failed
4973,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[eq-rhs0-lhs2],"AssertionError: Series are different

Series values are different (16.66667 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
[right]: [False, <NA>, False, <NA>, False, False, False, False, False, False, False, False, False, False, False, False, False, <NA>]",failed
4979,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[eq-rhs0-lhs3],"AssertionError: Series are different

Series values are different (22.22222 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
[right]: [False, <NA>, False, False, False, False, False, False, <NA>, <NA>, False, False, False, False, False, False, False, <NA>]",failed
4985,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[eq-rhs1-lhs0],"AssertionError: Series are different

Series values are different (11.11111 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
[right]: [False, False, False, False, False, False, <NA>, False, False, False, False, False, False, False, False, False, False, <NA>]",failed
4986,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--1-1-1],KeyError: 2,failed
4987,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values4-None-item_columns4-3-col_key2-col_key_index2-1-None],ValueError: buffer source array is read-only,failed
4988,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_between_df_and_scalar_nan_behavior_deviates[10.001-add],"AssertionError: DataFrame.iloc[:, 0] (column name=""0"") are different

DataFrame.iloc[:, 0] (column name=""0"") values are different (33.33333 %)
[index]: [0, 1, 2]
[left]:  [nan, nan, nan]
[right]: [24.000999999999998, nan, nan]
At positional index 0, first diff: nan != 24.000999999999998",failed
4990,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[min1-1-True],AttributeError: can't set attribute,failed
4991,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[eq-rhs1-lhs1],"AssertionError: Series are different

Series values are different (5.55556 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [True, True, True, True, True, True, False, True, True, True, True, True, True, True, True, True, True, True]
[right]: [True, True, True, True, True, True, <NA>, True, True, True, True, True, True, True, True, True, True, True]",failed
4992,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_between_df_and_scalar_nan_behavior_deviates[10.001-radd],"AssertionError: DataFrame.iloc[:, 0] (column name=""0"") are different

DataFrame.iloc[:, 0] (column name=""0"") values are different (33.33333 %)
[index]: [0, 1, 2]
[left]:  [nan, nan, nan]
[right]: [24.000999999999998, nan, nan]
At positional index 0, first diff: nan != 24.000999999999998",failed
4993,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[min1-1-False],AttributeError: can't set attribute,failed
4994,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_between_df_and_scalar_nan_behavior_deviates[10.001-sub],"AssertionError: DataFrame.iloc[:, 0] (column name=""0"") are different

DataFrame.iloc[:, 0] (column name=""0"") values are different (33.33333 %)
[index]: [0, 1, 2]
[left]:  [nan, nan, nan]
[right]: [3.9990000000000006, nan, nan]
At positional index 0, first diff: nan != 3.9990000000000006",failed
4996,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[eq-rhs1-lhs2],"AssertionError: Series are different

Series values are different (22.22222 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
[right]: [False, <NA>, False, <NA>, False, False, <NA>, False, False, False, False, False, False, False, False, False, False, <NA>]",failed
4997,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--1-1-4],KeyError: 2,failed
4998,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_between_df_and_scalar_nan_behavior_deviates[10.001-rsub],"AssertionError: DataFrame.iloc[:, 0] (column name=""0"") are different

DataFrame.iloc[:, 0] (column name=""0"") values are different (33.33333 %)
[index]: [0, 1, 2]
[left]:  [nan, nan, nan]
[right]: [-3.9990000000000006, nan, nan]
At positional index 0, first diff: nan != -3.9990000000000006",failed
5000,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[min1-True-True],AttributeError: can't set attribute,failed
5001,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[eq-rhs1-lhs3],"AssertionError: Series are different

Series values are different (22.22222 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
[right]: [False, <NA>, False, False, False, False, <NA>, False, <NA>, <NA>, False, False, False, False, False, False, False, False]",failed
5003,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_between_df_and_scalar_nan_behavior_deviates[10.001-mul],"AssertionError: DataFrame.iloc[:, 0] (column name=""0"") are different

DataFrame.iloc[:, 0] (column name=""0"") values are different (33.33333 %)
[index]: [0, 1, 2]
[left]:  [nan, nan, nan]
[right]: [140.01399999999998, nan, nan]
At positional index 0, first diff: nan != 140.01399999999998",failed
5004,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values4-None-item_columns4-3-col_key2-col_key_index2-row_key1-None],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [nan, 11.0, 101.0, nan, -6.0]
[right]: [-998, 11, 101, -999, -6]",failed
5005,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[eq-rhs2-lhs0],"AssertionError: Series are different

Series values are different (16.66667 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
[right]: [False, <NA>, False, <NA>, False, False, False, False, False, False, False, False, False, False, False, False, False, <NA>]",failed
5006,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_between_df_and_scalar_nan_behavior_deviates[10.001-rmul],"AssertionError: DataFrame.iloc[:, 0] (column name=""0"") are different

DataFrame.iloc[:, 0] (column name=""0"") values are different (33.33333 %)
[index]: [0, 1, 2]
[left]:  [nan, nan, nan]
[right]: [140.01399999999998, nan, nan]
At positional index 0, first diff: nan != 140.01399999999998",failed
5007,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[min1-True-False],AttributeError: can't set attribute,failed
5009,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_between_df_and_scalar_nan_behavior_deviates[10.001-truediv],"AssertionError: DataFrame.iloc[:, 0] (column name=""0"") are different

DataFrame.iloc[:, 0] (column name=""0"") values are different (33.33333 %)
[index]: [0, 1, 2]
[left]:  [nan, nan, nan]
[right]: [1.3998600139986002, nan, nan]
At positional index 0, first diff: nan != 1.3998600139986002",failed
5010,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--1-1-6],KeyError: 2,failed
5011,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[eq-rhs2-lhs1],"AssertionError: Series are different

Series values are different (22.22222 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
[right]: [False, <NA>, False, <NA>, False, False, <NA>, False, False, False, False, False, False, False, False, False, False, <NA>]",failed
5012,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_between_df_and_scalar_nan_behavior_deviates[10.001-rtruediv],"AssertionError: DataFrame.iloc[:, 0] (column name=""0"") are different

DataFrame.iloc[:, 0] (column name=""0"") values are different (33.33333 %)
[index]: [0, 1, 2]
[left]:  [nan, nan, nan]
[right]: [0.7143571428571428, nan, nan]
At positional index 0, first diff: nan != 0.7143571428571428",failed
5013,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values4-None-item_columns4-3-col_key2-col_key_index2-row_key2-row_key_index2],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [2.0, nan, nan, 56.0, -6.0]
[right]: [2, -999, -998, 56, -6]",failed
5014,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[min1-all-True],AttributeError: can't set attribute,failed
5015,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[eq-rhs2-lhs2],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
[right]: [True, <NA>, True, <NA>, True, True, True, True, True, True, True, True, True, True, True, True, True, <NA>]",failed
5016,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_between_df_and_scalar_nan_behavior_deviates[10.001-floordiv],"AssertionError: DataFrame.iloc[:, 0] (column name=""0"") are different

DataFrame.iloc[:, 0] (column name=""0"") values are different (33.33333 %)
[index]: [0, 1, 2]
[left]:  [nan, nan, nan]
[right]: [1.0, nan, nan]
At positional index 0, first diff: nan != 1.0",failed
5018,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_between_df_and_scalar_nan_behavior_deviates[10.001-rfloordiv],"AssertionError: DataFrame.iloc[:, 0] (column name=""0"") are different

DataFrame.iloc[:, 0] (column name=""0"") values are different (33.33333 %)
[index]: [0, 1, 2]
[left]:  [nan, nan, nan]
[right]: [0.0, nan, nan]
At positional index 0, first diff: nan != 0.0",failed
5019,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[min1-all-False],AttributeError: can't set attribute,failed
5020,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[eq-rhs2-lhs3],"AssertionError: Series are different

Series values are different (27.77778 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
[right]: [False, <NA>, False, <NA>, False, False, False, False, <NA>, <NA>, False, False, False, False, False, False, False, <NA>]",failed
5022,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values4-None-item_columns4-3-col_key2-col_key_index2-row_key3-row_key_index3],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [2.0, nan, nan, 56.0, -6.0]
[right]: [2, -998, -999, 56, -6]",failed
5024,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[eq-rhs3-lhs0],"AssertionError: Series are different

Series values are different (22.22222 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
[right]: [False, <NA>, False, False, False, False, False, False, <NA>, <NA>, False, False, False, False, False, False, False, <NA>]",failed
5025,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[min1-index-True],AttributeError: can't set attribute,failed
5026,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--1-4-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 8)
[right]: (1, 8)",failed
5028,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[eq-rhs3-lhs1],"AssertionError: Series are different

Series values are different (22.22222 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
[right]: [False, <NA>, False, False, False, False, <NA>, False, <NA>, <NA>, False, False, False, False, False, False, False, False]",failed
5030,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_between_df_and_scalar_nan_behavior_deviates[10.001-mod],"AssertionError: DataFrame.iloc[:, 0] (column name=""0"") are different

DataFrame.iloc[:, 0] (column name=""0"") values are different (33.33333 %)
[index]: [0, 1, 2]
[left]:  [nan, nan, nan]
[right]: [3.9990000000000006, nan, nan]
At positional index 0, first diff: nan != 3.9990000000000006",failed
5031,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--1-4-4],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 8)
[right]: (1, 8)",failed
5032,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[eq-rhs3-lhs2],"AssertionError: Series are different

Series values are different (27.77778 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
[right]: [False, <NA>, False, <NA>, False, False, False, False, <NA>, <NA>, False, False, False, False, False, False, False, <NA>]",failed
5035,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values4-None-item_columns4-3-col_key3-col_key_index3-1-None],ValueError: buffer source array is read-only,failed
5036,tests.integ.modin.frame.test_iloc,test_df_iloc_get_row_input_snowpark_pandas_return_dataframe[emptyFloatSeries-2],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
5037,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_between_df_and_scalar_nan_behavior_deviates[10.001-rmod],"AssertionError: DataFrame.iloc[:, 0] (column name=""0"") are different

DataFrame.iloc[:, 0] (column name=""0"") values are different (33.33333 %)
[index]: [0, 1, 2]
[left]:  [nan, nan, nan]
[right]: [10.001, nan, nan]
At positional index 0, first diff: nan != 10.001",failed
5038,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[eq-rhs3-lhs3],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
[right]: [True, <NA>, True, True, True, True, True, True, <NA>, <NA>, True, True, True, True, True, True, True, True]",failed
5039,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[min1-index-False],AttributeError: can't set attribute,failed
5040,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values4-None-item_columns4-3-col_key3-col_key_index3-row_key1-None],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [nan, 11.0, 101.0, nan, -6.0]
[right]: [-996, 11, 101, -997, -6]",failed
5041,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_between_df_and_scalar_nan_behavior_deviates[10.001-pow],"AssertionError: DataFrame.iloc[:, 0] (column name=""0"") are different

DataFrame.iloc[:, 0] (column name=""0"") values are different (33.33333 %)
[index]: [0, 1, 2]
[left]:  [nan, nan, nan]
[right]: [290019022754.90625, nan, nan]
At positional index 0, first diff: nan != 290019022754.90625",failed
5043,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_between_df_and_scalar_nan_behavior_deviates[10.001-rpow],"AssertionError: DataFrame.iloc[:, 0] (column name=""0"") are different

DataFrame.iloc[:, 0] (column name=""0"") values are different (33.33333 %)
[index]: [0, 1, 2]
[left]:  [nan, nan, nan]
[right]: [100140091036409.94, nan, nan]
At positional index 0, first diff: nan != 100140091036409.94",failed
5045,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[min1-columns-True],AttributeError: can't set attribute,failed
5046,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--1-6-None],KeyError: 7,failed
5049,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values4-None-item_columns4-3-col_key3-col_key_index3-row_key2-row_key_index2],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [2.0, nan, nan, 56.0, -6.0]
[right]: [2, -997, -996, 56, -6]",failed
5053,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[min1-columns-False],AttributeError: can't set attribute,failed
5055,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[ne-rhs0-lhs0],"AssertionError: Series are different

Series values are different (5.55556 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True]
[right]: [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, <NA>]",failed
5059,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--1-6-1],KeyError: 7,failed
5060,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[amin-0-True],AttributeError: can't set attribute,failed
5061,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_multiindex[item_values4-None-item_columns4-3-col_key3-col_key_index3-row_key3-row_key_index3],"AssertionError: DataFrame.iloc[:, 1] (column name=""('b', 2)"") are different

DataFrame.iloc[:, 1] (column name=""('b', 2)"") values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [2.0, nan, nan, 56.0, -6.0]
[right]: [2, -996, -997, 56, -6]",failed
5062,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[ne-rhs0-lhs1],"AssertionError: Series are different

Series values are different (11.11111 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True]
[right]: [True, True, True, True, True, True, <NA>, True, True, True, True, True, True, True, True, True, True, <NA>]",failed
5067,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[ne-rhs0-lhs2],"AssertionError: Series are different

Series values are different (16.66667 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True]
[right]: [True, <NA>, True, <NA>, True, True, True, True, True, True, True, True, True, True, True, True, True, <NA>]",failed
5068,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[amin-0-False],AttributeError: can't set attribute,failed
5071,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[ne-rhs0-lhs3],"AssertionError: Series are different

Series values are different (22.22222 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True]
[right]: [True, <NA>, True, True, True, True, True, True, <NA>, <NA>, True, True, True, True, True, True, True, <NA>]",failed
5073,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[amin-1-True],AttributeError: can't set attribute,failed
5074,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--1-6-4],KeyError: 7,failed
5078,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[ne-rhs1-lhs0],"AssertionError: Series are different

Series values are different (11.11111 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True]
[right]: [True, True, True, True, True, True, <NA>, True, True, True, True, True, True, True, True, True, True, <NA>]",failed
5083,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[ne-rhs1-lhs1],"AssertionError: Series are different

Series values are different (5.55556 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False]
[right]: [False, False, False, False, False, False, <NA>, False, False, False, False, False, False, False, False, False, False, False]",failed
5087,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--1-6-6],KeyError: 7,failed
5088,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[ne-rhs1-lhs2],"AssertionError: Series are different

Series values are different (22.22222 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True]
[right]: [True, <NA>, True, <NA>, True, True, <NA>, True, True, True, True, True, True, True, True, True, True, <NA>]",failed
5093,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[amin-1-False],AttributeError: can't set attribute,failed
5097,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[ne-rhs1-lhs3],"AssertionError: Series are different

Series values are different (22.22222 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True]
[right]: [True, <NA>, True, True, True, True, <NA>, True, <NA>, <NA>, True, True, True, True, True, True, True, True]",failed
5105,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[ne-rhs2-lhs0],"AssertionError: Series are different

Series values are different (16.66667 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True]
[right]: [True, <NA>, True, <NA>, True, True, True, True, True, True, True, True, True, True, True, True, True, <NA>]",failed
5106,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[amin-True-True],AttributeError: can't set attribute,failed
5109,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[ne-rhs2-lhs1],"AssertionError: Series are different

Series values are different (22.22222 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True]
[right]: [True, <NA>, True, <NA>, True, True, <NA>, True, True, True, True, True, True, True, True, True, True, <NA>]",failed
5113,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[amin-True-False],AttributeError: can't set attribute,failed
5115,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[ne-rhs2-lhs2],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True]
[right]: [False, <NA>, False, <NA>, False, False, False, False, False, False, False, False, False, False, False, False, False, <NA>]",failed
5117,tests.integ.modin.frame.test_iloc,test_df_iloc_get_col_input_snowpark_pandas_return_dataframe[Index-2],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
5120,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[amin-all-True],AttributeError: can't set attribute,failed
5122,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[ne-rhs2-lhs3],"AssertionError: Series are different

Series values are different (27.77778 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True]
[right]: [True, <NA>, True, <NA>, True, True, True, True, <NA>, <NA>, True, True, True, True, True, True, True, <NA>]",failed
5125,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[amin-all-False],AttributeError: can't set attribute,failed
5128,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[ne-rhs3-lhs0],"AssertionError: Series are different

Series values are different (22.22222 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True]
[right]: [True, <NA>, True, True, True, True, True, True, <NA>, <NA>, True, True, True, True, True, True, True, <NA>]",failed
5130,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--2-1-None],KeyError: 3,failed
5132,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[amin-index-True],AttributeError: can't set attribute,failed
5133,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[ne-rhs3-lhs1],"AssertionError: Series are different

Series values are different (22.22222 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True]
[right]: [True, <NA>, True, True, True, True, <NA>, True, <NA>, <NA>, True, True, True, True, True, True, True, True]",failed
5139,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[amin-index-False],AttributeError: can't set attribute,failed
5142,tests.integ.modin.frame.test_iloc,test_df_iloc_get_multiindex_key_negative,"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
5143,tests.integ.modin.frame.test_apply,test_apply_axis1_with_3rd_party_libraries_and_decorator[packages0-7],"TypeError: The input of UDF ""TESTDB_SNOWPANDAS"".""PUBLIC"".SNOWPARK_TEMP_FUNCTION_TVJR42YQJ6 must be Column, column name, or a list of them",failed
5145,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--2-1-1],KeyError: 3,failed
5156,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[ne-rhs3-lhs2],"AssertionError: Series are different

Series values are different (27.77778 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True]
[right]: [True, <NA>, True, <NA>, True, True, True, True, <NA>, <NA>, True, True, True, True, True, True, True, <NA>]",failed
5162,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--2-1-4],KeyError: 3,failed
5163,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[ne-rhs3-lhs3],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True]
[right]: [False, <NA>, False, False, False, False, False, False, <NA>, <NA>, False, False, False, False, False, False, False, False]",failed
5167,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[amin-columns-True],AttributeError: can't set attribute,failed
5171,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[gt-rhs0-lhs0],"AssertionError: Series are different

Series values are different (5.55556 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
[right]: [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, <NA>]",failed
5175,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[amin-columns-False],AttributeError: can't set attribute,failed
5178,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[gt-rhs0-lhs1],"AssertionError: Series are different

Series values are different (11.11111 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [True, True, True, True, False, True, False, False, False, False, True, True, True, False, True, True, True, False]
[right]: [True, True, True, True, False, True, <NA>, False, False, False, True, True, True, False, True, True, True, <NA>]",failed
5180,tests.integ.modin.frame.test_iloc,test_df_iloc_get_col_input_snowpark_pandas_return_dataframe[Series-2],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
5181,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--2-1-6],KeyError: 3,failed
5186,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[max0-0-True],AttributeError: can't set attribute,failed
5189,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--2-4-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 8)
[right]: (1, 8)",failed
5194,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[gt-rhs0-lhs2],TypeError: boolean value of NA is ambiguous,failed
5196,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[max0-0-False],AttributeError: can't set attribute,failed
5205,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[max0-1-True],AttributeError: can't set attribute,failed
5211,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[gt-rhs0-lhs3],TypeError: '>' not supported between instances of 'NoneType' and 'float',failed
5215,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--2-4-1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (1, 8)
[right]: (0, 8)",failed
5216,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[max0-1-False],AttributeError: can't set attribute,failed
5220,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[gt-rhs1-lhs0],"AssertionError: Series are different

Series values are different (11.11111 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [False, False, False, False, True, False, False, True, True, True, False, False, False, True, False, False, False, False]
[right]: [False, False, False, False, True, False, <NA>, True, True, True, False, False, False, True, False, False, False, <NA>]",failed
5223,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--2-4-4],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 8)
[right]: (1, 8)",failed
5226,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[max0-True-True],AttributeError: can't set attribute,failed
5229,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[gt-rhs1-lhs1],"AssertionError: Series are different

Series values are different (5.55556 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
[right]: [False, False, False, False, False, False, <NA>, False, False, False, False, False, False, False, False, False, False, False]",failed
5232,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--2-4-6],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (1, 8)
[right]: (0, 8)",failed
5236,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[max0-True-False],AttributeError: can't set attribute,failed
5248,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--2-6-None],KeyError: 8,failed
5257,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[max0-all-True],AttributeError: can't set attribute,failed
5262,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[gt-rhs1-lhs2],TypeError: boolean value of NA is ambiguous,failed
5266,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--2-6-1],KeyError: 8,failed
5268,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[max0-all-False],AttributeError: can't set attribute,failed
5277,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[max0-index-True],AttributeError: can't set attribute,failed
5278,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[gt-rhs1-lhs3],TypeError: '>' not supported between instances of 'NoneType' and 'float',failed
5286,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--2-6-4],KeyError: 8,failed
5288,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[max0-index-False],AttributeError: can't set attribute,failed
5296,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[gt-rhs2-lhs0],TypeError: boolean value of NA is ambiguous,failed
5298,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[max0-columns-True],AttributeError: can't set attribute,failed
5306,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[max0-columns-False],AttributeError: can't set attribute,failed
5313,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[max1-0-True],AttributeError: can't set attribute,failed
5314,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[gt-rhs2-lhs1],TypeError: boolean value of NA is ambiguous,failed
5324,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--2-6-6],KeyError: 8,failed
5333,tests.integ.modin.frame.test_iloc,test_df_iloc_get_col_input_snowpark_pandas_return_dataframe[emptyFloatSeries-2],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
5338,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[max1-0-False],AttributeError: can't set attribute,failed
5347,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[max1-1-True],AttributeError: can't set attribute,failed
5351,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[gt-rhs2-lhs2],TypeError: boolean value of NA is ambiguous,failed
5358,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[max1-1-False],AttributeError: can't set attribute,failed
5360,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--9-1-None],KeyError: 10,failed
5371,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[max1-True-True],AttributeError: can't set attribute,failed
5374,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[gt-rhs2-lhs3],TypeError: boolean value of NA is ambiguous,failed
5379,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--9-1-1],KeyError: 10,failed
5381,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[max1-True-False],AttributeError: can't set attribute,failed
5389,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[max1-all-True],AttributeError: can't set attribute,failed
5391,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[gt-rhs3-lhs0],TypeError: '>' not supported between instances of 'float' and 'NoneType',failed
5397,tests.integ.modin.frame.test_iloc,test_df_iloc_get_empty,IndexError: single positional indexer is out-of-bounds,failed
5398,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[max1-all-False],AttributeError: can't set attribute,failed
5400,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--9-1-4],KeyError: 10,failed
5405,tests.integ.modin.frame.test_iloc,test_df_iloc_get_diff2native,"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
5407,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[gt-rhs3-lhs1],TypeError: '>' not supported between instances of 'float' and 'NoneType',failed
5417,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--9-1-6],KeyError: 10,failed
5422,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[max1-index-True],AttributeError: can't set attribute,failed
5426,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[gt-rhs3-lhs2],TypeError: boolean value of NA is ambiguous,failed
5433,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[max1-index-False],AttributeError: can't set attribute,failed
5441,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[max1-columns-True],AttributeError: can't set attribute,failed
5452,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[max1-columns-False],AttributeError: can't set attribute,failed
5465,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[gt-rhs3-lhs3],TypeError: '>' not supported between instances of 'NoneType' and 'NoneType',failed
5466,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[amax-0-True],AttributeError: can't set attribute,failed
5468,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--9-4-None],KeyError: 13,failed
5476,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[ge-rhs0-lhs0],"AssertionError: Series are different

Series values are different (5.55556 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, False]
[right]: [True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, <NA>]",failed
5478,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[amax-0-False],AttributeError: can't set attribute,failed
5482,tests.integ.modin.frame.test_iloc,test_df_iloc_set_different_incompatible_types[5-123],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
5485,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[ge-rhs0-lhs1],"AssertionError: Series are different

Series values are different (11.11111 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [True, True, True, True, False, True, False, False, False, False, True, True, True, False, True, True, True, False]
[right]: [True, True, True, True, False, True, <NA>, False, False, False, True, True, True, False, True, True, True, <NA>]",failed
5487,tests.integ.modin.frame.test_iloc,test_df_iloc_set_different_incompatible_types[5-99.99],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
5490,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--9-4-1],KeyError: 13,failed
5492,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[amax-1-True],AttributeError: can't set attribute,failed
5494,tests.integ.modin.frame.test_iloc,test_df_iloc_set_different_incompatible_types[5-True],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
5498,tests.integ.modin.frame.test_iloc,test_df_iloc_set_different_incompatible_types[5-abc],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
5503,tests.integ.modin.frame.test_iloc,test_df_iloc_set_different_incompatible_types[5-item_value4],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
5504,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[ge-rhs0-lhs2],TypeError: boolean value of NA is ambiguous,failed
5508,tests.integ.modin.frame.test_iloc,test_df_iloc_set_different_incompatible_types[5-item_value5],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
5510,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--9-4-4],KeyError: 13,failed
5512,tests.integ.modin.frame.test_iloc,test_df_iloc_set_different_incompatible_types[6-123],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
5515,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[amax-1-False],AttributeError: can't set attribute,failed
5517,tests.integ.modin.frame.test_iloc,test_df_iloc_set_different_incompatible_types[6-99.99],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
5519,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[ge-rhs0-lhs3],TypeError: '>=' not supported between instances of 'NoneType' and 'float',failed
5520,tests.integ.modin.frame.test_iloc,test_df_iloc_set_different_incompatible_types[6-True],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
5523,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[amax-True-True],AttributeError: can't set attribute,failed
5524,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_non_scalar_fill_value_negative[fill_value0-add],"AssertionError: Regex pattern did not match.
 Regex: 'Only scalars can be used as fill_value.'
 Input: 'NumPy boolean array indexing assignment cannot assign 3 input values to the 1 output values where the mask is true'",failed
5525,tests.integ.modin.frame.test_iloc,test_df_iloc_set_different_incompatible_types[6-abc],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
5526,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[ge-rhs1-lhs0],"AssertionError: Series are different

Series values are different (11.11111 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [False, False, False, False, True, False, False, True, True, True, False, False, False, True, False, False, False, False]
[right]: [False, False, False, False, True, False, <NA>, True, True, True, False, False, False, True, False, False, False, <NA>]",failed
5528,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--9-4-6],KeyError: 13,failed
5530,tests.integ.modin.frame.test_iloc,test_df_iloc_set_different_incompatible_types[6-item_value4],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
5532,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[amax-True-False],AttributeError: can't set attribute,failed
5534,tests.integ.modin.frame.test_iloc,test_df_iloc_set_different_incompatible_types[6-item_value5],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
5539,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[amax-all-True],AttributeError: can't set attribute,failed
5540,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--9-6-None],KeyError: 15,failed
5541,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_non_scalar_fill_value_negative[fill_value0-radd],"AssertionError: Regex pattern did not match.
 Regex: 'Only scalars can be used as fill_value.'
 Input: 'NumPy boolean array indexing assignment cannot assign 3 input values to the 1 output values where the mask is true'",failed
5546,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[ge-rhs1-lhs1],"AssertionError: Series are different

Series values are different (5.55556 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [True, True, True, True, True, True, False, True, True, True, True, True, True, True, True, True, True, True]
[right]: [True, True, True, True, True, True, <NA>, True, True, True, True, True, True, True, True, True, True, True]",failed
5547,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[amax-all-False],AttributeError: can't set attribute,failed
5552,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[amax-index-True],AttributeError: can't set attribute,failed
5553,tests.integ.modin.frame.test_iloc,test_df_iloc_set_negative[key1-val1],Failed: DID NOT RAISE <class 'Exception'>,failed
5555,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[ge-rhs1-lhs2],TypeError: boolean value of NA is ambiguous,failed
5556,tests.integ.modin.frame.test_iloc,test_df_iloc_set_negative[key2-val2],Failed: DID NOT RAISE <class 'Exception'>,failed
5557,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[amax-index-False],AttributeError: can't set attribute,failed
5563,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--9-6-1],KeyError: 15,failed
5566,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[ge-rhs1-lhs3],TypeError: '>=' not supported between instances of 'NoneType' and 'float',failed
5567,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_non_scalar_fill_value_negative[fill_value0-sub],"AssertionError: Regex pattern did not match.
 Regex: 'Only scalars can be used as fill_value.'
 Input: 'NumPy boolean array indexing assignment cannot assign 3 input values to the 1 output values where the mask is true'",failed
5569,tests.integ.modin.frame.test_iloc,test_df_iloc_set_snowpark_pandas_input_negative_incompatible_types[series],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
5572,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[amax-columns-True],AttributeError: can't set attribute,failed
5573,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[ge-rhs2-lhs0],TypeError: boolean value of NA is ambiguous,failed
5574,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--9-6-4],KeyError: 15,failed
5576,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[amax-columns-False],AttributeError: can't set attribute,failed
5577,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_non_scalar_fill_value_negative[fill_value0-rsub],"AssertionError: Regex pattern did not match.
 Regex: 'Only scalars can be used as fill_value.'
 Input: 'NumPy boolean array indexing assignment cannot assign 3 input values to the 1 output values where the mask is true'",failed
5580,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum0-0-True],AttributeError: can't set attribute,failed
5582,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[ge-rhs2-lhs1],TypeError: boolean value of NA is ambiguous,failed
5583,tests.integ.modin.frame.test_iloc,test_df_iloc_set_snowpark_pandas_input_negative_incompatible_types[series_broadcast],"ValueError: could not broadcast input array from shape (3,) into shape (3, 7)",failed
5586,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[first--9-6-6],KeyError: 15,failed
5587,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum0-0-False],AttributeError: can't set attribute,failed
5590,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_non_scalar_fill_value_negative[fill_value0-mul],"AssertionError: Regex pattern did not match.
 Regex: 'Only scalars can be used as fill_value.'
 Input: 'NumPy boolean array indexing assignment cannot assign 3 input values to the 1 output values where the mask is true'",failed
5593,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum0-1-True],AttributeError: can't set attribute,failed
5596,tests.integ.modin.frame.test_iloc,test_df_iloc_set_snowpark_pandas_input_negative_incompatible_types[df_broadcast],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
5597,tests.integ.modin.frame.test_loc,test_df_loc_get_with_non_monotonic_index_get_key_slice[key0-expected_index0],"KeyError: ""Cannot get left slice bound for non-unique label: 'b'""",failed
5600,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum0-1-False],AttributeError: can't set attribute,failed
5605,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[ge-rhs2-lhs2],TypeError: boolean value of NA is ambiguous,failed
5606,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_duplicates_2d,"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (50.0 %)
[index]: [0, 1, 2, 3]
[left]:  [nan, nan, 3.0, 4.0]
[right]: [72, 73, 3, 4]",failed
5607,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum0-True-True],AttributeError: can't set attribute,failed
5612,tests.integ.modin.frame.test_loc,test_df_loc_get_with_non_monotonic_index_get_key_slice[key1-expected_index1],KeyError: 'a',failed
5617,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_non_scalar_fill_value_negative[fill_value0-rmul],"AssertionError: Regex pattern did not match.
 Regex: 'Only scalars can be used as fill_value.'
 Input: 'NumPy boolean array indexing assignment cannot assign 3 input values to the 1 output values where the mask is true'",failed
5618,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[ge-rhs2-lhs3],TypeError: boolean value of NA is ambiguous,failed
5625,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum0-True-False],AttributeError: can't set attribute,failed
5629,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[ge-rhs3-lhs0],TypeError: '>=' not supported between instances of 'float' and 'NoneType',failed
5630,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_non_scalar_fill_value_negative[fill_value0-truediv],"AssertionError: Regex pattern did not match.
 Regex: 'Only scalars can be used as fill_value.'
 Input: 'NumPy boolean array indexing assignment cannot assign 3 input values to the 1 output values where the mask is true'",failed
5633,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum0-all-True],AttributeError: can't set attribute,failed
5637,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum0-all-False],AttributeError: can't set attribute,failed
5639,tests.integ.modin.frame.test_loc,test_df_loc_get_with_non_monotonic_index_get_key_slice[key2-expected_index2],KeyError: 'f',failed
5641,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[ge-rhs3-lhs1],TypeError: '>=' not supported between instances of 'float' and 'NoneType',failed
5644,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_non_scalar_fill_value_negative[fill_value0-rtruediv],"AssertionError: Regex pattern did not match.
 Regex: 'Only scalars can be used as fill_value.'
 Input: 'NumPy boolean array indexing assignment cannot assign 3 input values to the 1 output values where the mask is true'",failed
5645,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum0-index-True],AttributeError: can't set attribute,failed
5649,tests.integ.modin.frame.test_loc,test_df_loc_get_with_non_monotonic_index_get_key_slice[key3-expected_index3],"KeyError: ""Cannot get left slice bound for non-unique label: 'd'""",failed
5651,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum0-index-False],AttributeError: can't set attribute,failed
5654,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_negative[key0-ValueError-slice step cannot be zero],"AssertionError: Regex pattern did not match.
 Regex: 'slice step cannot be zero'
 Input: 'Step must not be zero'",failed
5657,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_bool[row-list-key5],IndexError: positional indexers are out-of-bounds,failed
5658,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum0-columns-True],AttributeError: can't set attribute,failed
5660,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_negative[key1-TypeError-slice step must be integer],"AssertionError: Regex pattern did not match.
 Regex: 'slice step must be integer'
 Input: ""Wrong type <class 'float'> for value 1.1""",failed
5663,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum0-columns-False],AttributeError: can't set attribute,failed
5666,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[ge-rhs3-lhs2],TypeError: boolean value of NA is ambiguous,failed
5671,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_non_scalar_fill_value_negative[fill_value0-floordiv],"AssertionError: Regex pattern did not match.
 Regex: 'Only scalars can be used as fill_value.'
 Input: 'NumPy boolean array indexing assignment cannot assign 3 input values to the 1 output values where the mask is true'",failed
5672,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_bool[row-series-key0],pandas.errors.IndexingError: Unalignable boolean Series provided as indexer (index of the boolean Series and of the indexed object do not match).,failed
5675,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[ge-rhs3-lhs3],TypeError: '>=' not supported between instances of 'NoneType' and 'NoneType',failed
5680,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum1-0-True],AttributeError: can't set attribute,failed
5681,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[lt-rhs0-lhs0],"AssertionError: Series are different

Series values are different (5.55556 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
[right]: [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, <NA>]",failed
5683,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_non_scalar_fill_value_negative[fill_value0-rfloordiv],"AssertionError: Regex pattern did not match.
 Regex: 'Only scalars can be used as fill_value.'
 Input: 'NumPy boolean array indexing assignment cannot assign 3 input values to the 1 output values where the mask is true'",failed
5686,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum1-0-False],AttributeError: can't set attribute,failed
5687,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[lt-rhs0-lhs1],"AssertionError: Series are different

Series values are different (11.11111 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [False, False, False, False, True, False, False, True, True, True, False, False, False, True, False, False, False, False]
[right]: [False, False, False, False, True, False, <NA>, True, True, True, False, False, False, True, False, False, False, <NA>]",failed
5688,tests.integ.modin.frame.test_loc,test_df_loc_self_df_set_aligned_row_key[df2],ValueError: cannot reindex on an axis with duplicate labels,failed
5694,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum1-1-True],AttributeError: can't set attribute,failed
5697,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_bool[row-series-key1],pandas.errors.IndexingError: Unalignable boolean Series provided as indexer (index of the boolean Series and of the indexed object do not match).,failed
5698,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_non_scalar_fill_value_negative[fill_value0-mod],"AssertionError: Regex pattern did not match.
 Regex: 'Only scalars can be used as fill_value.'
 Input: 'NumPy boolean array indexing assignment cannot assign 3 input values to the 1 output values where the mask is true'",failed
5700,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[lt-rhs0-lhs2],TypeError: boolean value of NA is ambiguous,failed
5701,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum1-1-False],AttributeError: can't set attribute,failed
5707,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum1-True-True],AttributeError: can't set attribute,failed
5711,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement[data_index0-c-T-97],"KeyError: array(['T'], dtype='<U1')",failed
5712,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_bool[row-series-key2],pandas.errors.IndexingError: Unalignable boolean Series provided as indexer (index of the boolean Series and of the indexed object do not match).,failed
5714,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum1-True-False],AttributeError: can't set attribute,failed
5716,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement[data_index0-d-col_key3-96],"KeyError: array(['V', 'T'], dtype=object)",failed
5718,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum1-all-True],AttributeError: can't set attribute,failed
5721,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[lt-rhs0-lhs3],TypeError: '<' not supported between instances of 'NoneType' and 'float',failed
5723,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_non_scalar_fill_value_negative[fill_value0-rmod],"AssertionError: Regex pattern did not match.
 Regex: 'Only scalars can be used as fill_value.'
 Input: 'NumPy boolean array indexing assignment cannot assign 3 input values to the 1 output values where the mask is true'",failed
5724,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement[data_index0-a-col_key4-95],"KeyError: array(['T'], dtype=object)",failed
5725,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_bool[row-series-key3],pandas.errors.IndexingError: Unalignable boolean Series provided as indexer (index of the boolean Series and of the indexed object do not match).,failed
5727,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[lt-rhs1-lhs0],"AssertionError: Series are different

Series values are different (11.11111 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [True, True, True, True, False, True, False, False, False, False, True, True, True, False, True, True, True, False]
[right]: [True, True, True, True, False, True, <NA>, False, False, False, True, True, True, False, True, True, True, <NA>]",failed
5730,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement[data_index0-a-col_key5-95],SNOW-1057861: Investigate locset behavior with missing index value,xfailed
5733,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[lt-rhs1-lhs1],"AssertionError: Series are different

Series values are different (5.55556 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
[right]: [False, False, False, False, False, False, <NA>, False, False, False, False, False, False, False, False, False, False, False]",failed
5738,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum1-all-False],AttributeError: can't set attribute,failed
5739,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_non_scalar_fill_value_negative[fill_value0-pow],"AssertionError: Regex pattern did not match.
 Regex: 'Only scalars can be used as fill_value.'
 Input: 'NumPy boolean array indexing assignment cannot assign 3 input values to the 1 output values where the mask is true'",failed
5741,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_bool[row-series-key4],pandas.errors.IndexingError: Unalignable boolean Series provided as indexer (index of the boolean Series and of the indexed object do not match).,failed
5743,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement[data_index0-x-D-94],"KeyError: array(['x'], dtype='<U1')",failed
5744,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum1-index-True],AttributeError: can't set attribute,failed
5747,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[lt-rhs1-lhs2],TypeError: boolean value of NA is ambiguous,failed
5749,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement[data_index0-y-col_key9-93],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (20.0 %)
[index]: [a, b, c, d, y]
[left]:  [5, 8, 11, 14, 0]
[right]: [5.0, 8.0, 11.0, 14.0, nan]",failed
5751,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum1-index-False],AttributeError: can't set attribute,failed
5753,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_non_scalar_fill_value_negative[fill_value0-rpow],"AssertionError: Regex pattern did not match.
 Regex: 'Only scalars can be used as fill_value.'
 Input: 'NumPy boolean array indexing assignment cannot assign 3 input values to the 1 output values where the mask is true'",failed
5755,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement[data_index0-z-T-92],"KeyError: array(['z'], dtype='<U1')",failed
5757,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[lt-rhs1-lhs3],TypeError: '<' not supported between instances of 'NoneType' and 'float',failed
5758,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum1-columns-True],AttributeError: can't set attribute,failed
5760,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement[data_index0-w-col_key11-91],SNOW-1321196: pandas 2.2.1 migration test failure,xfailed
5763,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum1-columns-False],AttributeError: can't set attribute,failed
5764,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_bool[row-series-key5],pandas.errors.IndexingError: Unalignable boolean Series provided as indexer (index of the boolean Series and of the indexed object do not match).,failed
5768,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum2-0-True],AttributeError: can't set attribute,failed
5769,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[lt-rhs2-lhs0],TypeError: boolean value of NA is ambiguous,failed
5773,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum2-0-False],AttributeError: can't set attribute,failed
5774,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_non_scalar_fill_value_negative[fill_value1-add],"AssertionError: Regex pattern did not match.
 Regex: 'Only scalars can be used as fill_value.'
 Input: 'NumPy boolean array indexing assignment cannot assign 0 input values to the 1 output values where the mask is true'",failed
5775,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement[data_index0-u-col_key12-90],SNOW-1321196: pandas 2.2.1 migration test failure,xfailed
5778,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement[data_index0-v-col_key13-95],SNOW-1321196: pandas 2.2.1 migration test failure,xfailed
5785,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_non_scalar_fill_value_negative[fill_value1-radd],"AssertionError: Regex pattern did not match.
 Regex: 'Only scalars can be used as fill_value.'
 Input: 'NumPy boolean array indexing assignment cannot assign 0 input values to the 1 output values where the mask is true'",failed
5786,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum2-1-True],AttributeError: can't set attribute,failed
5787,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[lt-rhs2-lhs1],TypeError: boolean value of NA is ambiguous,failed
5789,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement[data_index0-y-col_key16-item_values16],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (20.0 %)
[index]: [a, b, c, d, y]
[left]:  [5, 8, 11, 14, 0]
[right]: [5.0, 8.0, 11.0, 14.0, nan]",failed
5791,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement[data_index0-y-col_key17-item_values17],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (20.0 %)
[index]: [a, b, c, d, y]
[left]:  [5, 8, 11, 14, 0]
[right]: [5.0, 8.0, 11.0, 14.0, nan]",failed
5792,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum2-1-False],AttributeError: can't set attribute,failed
5797,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement[data_index0-u-col_key18-item_values18],SNOW-1321196: pandas 2.2.1 migration test failure,xfailed
5798,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[lt-rhs2-lhs2],TypeError: boolean value of NA is ambiguous,failed
5799,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum2-True-True],AttributeError: can't set attribute,failed
5800,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_non_scalar_fill_value_negative[fill_value1-sub],"AssertionError: Regex pattern did not match.
 Regex: 'Only scalars can be used as fill_value.'
 Input: 'NumPy boolean array indexing assignment cannot assign 0 input values to the 1 output values where the mask is true'",failed
5808,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum2-True-False],AttributeError: can't set attribute,failed
5811,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement[data_index1-c-T-97],"KeyError: array(['T'], dtype='<U1')",failed
5813,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum2-all-True],AttributeError: can't set attribute,failed
5815,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[lt-rhs2-lhs3],TypeError: boolean value of NA is ambiguous,failed
5816,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement[data_index1-d-col_key3-96],"KeyError: array(['V', 'T'], dtype=object)",failed
5818,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum2-all-False],AttributeError: can't set attribute,failed
5820,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement[data_index1-a-col_key4-95],"KeyError: array(['T'], dtype=object)",failed
5821,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[lt-rhs3-lhs0],TypeError: '<' not supported between instances of 'float' and 'NoneType',failed
5822,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum2-index-True],AttributeError: can't set attribute,failed
5825,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_non_scalar_fill_value_negative[fill_value1-rsub],"AssertionError: Regex pattern did not match.
 Regex: 'Only scalars can be used as fill_value.'
 Input: 'NumPy boolean array indexing assignment cannot assign 0 input values to the 1 output values where the mask is true'",failed
5834,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_non_scalar_fill_value_negative[fill_value1-mul],"AssertionError: Regex pattern did not match.
 Regex: 'Only scalars can be used as fill_value.'
 Input: 'NumPy boolean array indexing assignment cannot assign 0 input values to the 1 output values where the mask is true'",failed
5837,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement[data_index1-a-col_key5-95],SNOW-1057861: Investigate locset behavior with missing index value,xfailed
5839,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum2-index-False],AttributeError: can't set attribute,failed
5842,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[lt-rhs3-lhs1],TypeError: '<' not supported between instances of 'float' and 'NoneType',failed
5843,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum2-columns-True],AttributeError: can't set attribute,failed
5848,tests.integ.modin.crosstab.test_crosstab,test_normalize_and_values[sum2-columns-False],AttributeError: can't set attribute,failed
5849,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement[data_index1-b-col_key6-98],ValueError: cannot reindex on an axis with duplicate labels,failed
5857,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_non_scalar_fill_value_negative[fill_value1-rmul],"AssertionError: Regex pattern did not match.
 Regex: 'Only scalars can be used as fill_value.'
 Input: 'NumPy boolean array indexing assignment cannot assign 0 input values to the 1 output values where the mask is true'",failed
5874,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[lt-rhs3-lhs2],TypeError: boolean value of NA is ambiguous,failed
5917,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement[data_index1-x-None-94],ValueError: cannot reindex on an axis with duplicate labels,failed
5919,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[lt-rhs3-lhs3],TypeError: '<' not supported between instances of 'NoneType' and 'NoneType',failed
5921,tests.integ.modin.crosstab.test_crosstab,test_values[median0-True],AttributeError: can't set attribute,failed
5925,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[le-rhs0-lhs0],"AssertionError: Series are different

Series values are different (5.55556 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, False]
[right]: [True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, <NA>]",failed
5928,tests.integ.modin.crosstab.test_crosstab,test_values[median0-False],AttributeError: can't set attribute,failed
5931,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[le-rhs0-lhs1],"AssertionError: Series are different

Series values are different (11.11111 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [False, False, False, False, True, False, False, True, True, True, False, False, False, True, False, False, False, False]
[right]: [False, False, False, False, True, False, <NA>, True, True, True, False, False, False, True, False, False, False, <NA>]",failed
5934,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_non_scalar_fill_value_negative[fill_value1-truediv],"AssertionError: Regex pattern did not match.
 Regex: 'Only scalars can be used as fill_value.'
 Input: 'NumPy boolean array indexing assignment cannot assign 0 input values to the 1 output values where the mask is true'",failed
5936,tests.integ.modin.crosstab.test_crosstab,test_values[median1-True],AttributeError: can't set attribute,failed
5937,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement[data_index1-x-D-94],"KeyError: array(['x'], dtype='<U1')",failed
5941,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[le-rhs0-lhs2],TypeError: boolean value of NA is ambiguous,failed
5942,tests.integ.modin.crosstab.test_crosstab,test_values[median1-False],AttributeError: can't set attribute,failed
5946,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_non_scalar_fill_value_negative[fill_value1-rtruediv],"AssertionError: Regex pattern did not match.
 Regex: 'Only scalars can be used as fill_value.'
 Input: 'NumPy boolean array indexing assignment cannot assign 0 input values to the 1 output values where the mask is true'",failed
5947,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement[data_index1-y-col_key9-93],ValueError: cannot reindex on an axis with duplicate labels,failed
5951,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement[data_index1-z-T-92],"KeyError: array(['z'], dtype='<U1')",failed
5954,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_non_scalar_fill_value_negative[fill_value1-floordiv],"AssertionError: Regex pattern did not match.
 Regex: 'Only scalars can be used as fill_value.'
 Input: 'NumPy boolean array indexing assignment cannot assign 0 input values to the 1 output values where the mask is true'",failed
5956,tests.integ.modin.crosstab.test_crosstab,test_values[count-True],AttributeError: can't set attribute,failed
5958,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[le-rhs0-lhs3],TypeError: '<=' not supported between instances of 'NoneType' and 'float',failed
5959,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement[data_index1-w-col_key11-91],SNOW-1321196: pandas 2.2.1 migration test failure,xfailed
5962,tests.integ.modin.crosstab.test_crosstab,test_values[count-False],AttributeError: can't set attribute,failed
5963,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[le-rhs1-lhs0],"AssertionError: Series are different

Series values are different (11.11111 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [True, True, True, True, False, True, False, False, False, False, True, True, True, False, True, True, True, False]
[right]: [True, True, True, True, False, True, <NA>, False, False, False, True, True, True, False, True, True, True, <NA>]",failed
5965,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_non_scalar_fill_value_negative[fill_value1-rfloordiv],"AssertionError: Regex pattern did not match.
 Regex: 'Only scalars can be used as fill_value.'
 Input: 'NumPy boolean array indexing assignment cannot assign 0 input values to the 1 output values where the mask is true'",failed
5966,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[le-rhs1-lhs1],"AssertionError: Series are different

Series values are different (5.55556 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[left]:  [True, True, True, True, True, True, False, True, True, True, True, True, True, True, True, True, True, True]
[right]: [True, True, True, True, True, True, <NA>, True, True, True, True, True, True, True, True, True, True, True]",failed
5969,tests.integ.modin.crosstab.test_crosstab,test_values[mean0-True],AttributeError: can't set attribute,failed
5973,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[le-rhs1-lhs2],TypeError: boolean value of NA is ambiguous,failed
5974,tests.integ.modin.crosstab.test_crosstab,test_values[mean0-False],AttributeError: can't set attribute,failed
5977,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement[data_index1-u-col_key12-90],SNOW-1321196: pandas 2.2.1 migration test failure,xfailed
5979,tests.integ.modin.crosstab.test_crosstab,test_values[mean1-True],AttributeError: can't set attribute,failed
5981,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[le-rhs1-lhs3],TypeError: '<=' not supported between instances of 'NoneType' and 'float',failed
5983,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_non_scalar_fill_value_negative[fill_value1-mod],"AssertionError: Regex pattern did not match.
 Regex: 'Only scalars can be used as fill_value.'
 Input: 'NumPy boolean array indexing assignment cannot assign 0 input values to the 1 output values where the mask is true'",failed
5984,tests.integ.modin.crosstab.test_crosstab,test_values[mean1-False],AttributeError: can't set attribute,failed
5986,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement[data_index1-v-col_key13-95],SNOW-1321196: pandas 2.2.1 migration test failure,xfailed
5990,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[le-rhs2-lhs0],TypeError: boolean value of NA is ambiguous,failed
5991,tests.integ.modin.crosstab.test_crosstab,test_values[min0-True],AttributeError: can't set attribute,failed
5994,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_non_scalar_fill_value_negative[fill_value1-rmod],"AssertionError: Regex pattern did not match.
 Regex: 'Only scalars can be used as fill_value.'
 Input: 'NumPy boolean array indexing assignment cannot assign 0 input values to the 1 output values where the mask is true'",failed
5999,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_non_scalar_fill_value_negative[fill_value1-pow],"AssertionError: Regex pattern did not match.
 Regex: 'Only scalars can be used as fill_value.'
 Input: 'NumPy boolean array indexing assignment cannot assign 0 input values to the 1 output values where the mask is true'",failed
6000,tests.integ.modin.crosstab.test_crosstab,test_values[min0-False],AttributeError: can't set attribute,failed
6001,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[le-rhs2-lhs1],TypeError: boolean value of NA is ambiguous,failed
6002,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement[data_index1-y-col_key16-item_values16],ValueError: cannot reindex on an axis with duplicate labels,failed
6005,tests.integ.modin.crosstab.test_crosstab,test_values[min1-True],AttributeError: can't set attribute,failed
6007,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[le-rhs2-lhs2],TypeError: boolean value of NA is ambiguous,failed
6009,tests.integ.modin.crosstab.test_crosstab,test_values[min1-False],AttributeError: can't set attribute,failed
6010,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement[data_index1-y-col_key17-item_values17],ValueError: cannot reindex on an axis with duplicate labels,failed
6037,tests.integ.modin.crosstab.test_crosstab,test_values[amin-True],AttributeError: can't set attribute,failed
6038,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[le-rhs2-lhs3],TypeError: boolean value of NA is ambiguous,failed
6039,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_non_scalar_fill_value_negative[fill_value1-rpow],"AssertionError: Regex pattern did not match.
 Regex: 'Only scalars can be used as fill_value.'
 Input: 'NumPy boolean array indexing assignment cannot assign 0 input values to the 1 output values where the mask is true'",failed
6040,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement[data_index1-u-col_key18-item_values18],SNOW-1321196: pandas 2.2.1 migration test failure,xfailed
6042,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_single_element_list_like_fill_value_negative[add],Failed: DID NOT RAISE <class 'ValueError'>,failed
6044,tests.integ.modin.crosstab.test_crosstab,test_values[amin-False],AttributeError: can't set attribute,failed
6045,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement_deviates_from_native_pandas[data_index0-a-col_key0-95],"KeyError: array(['T', 'T'], dtype=object)",failed
6046,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_single_element_list_like_fill_value_negative[radd],Failed: DID NOT RAISE <class 'ValueError'>,failed
6047,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[le-rhs3-lhs0],TypeError: '<=' not supported between instances of 'float' and 'NoneType',failed
6050,tests.integ.modin.crosstab.test_crosstab,test_values[max0-True],AttributeError: can't set attribute,failed
6052,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_single_element_list_like_fill_value_negative[sub],Failed: DID NOT RAISE <class 'ValueError'>,failed
6053,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_single_element_list_like_fill_value_negative[rsub],Failed: DID NOT RAISE <class 'ValueError'>,failed
6055,tests.integ.modin.crosstab.test_crosstab,test_values[max0-False],AttributeError: can't set attribute,failed
6057,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_single_element_list_like_fill_value_negative[mul],Failed: DID NOT RAISE <class 'ValueError'>,failed
6058,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement_deviates_from_native_pandas[data_index0-w-col_key1-91],"KeyError: array(['V', 'T'], dtype=object)",failed
6060,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_single_element_list_like_fill_value_negative[rmul],Failed: DID NOT RAISE <class 'ValueError'>,failed
6062,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_single_element_list_like_fill_value_negative[truediv],Failed: DID NOT RAISE <class 'ValueError'>,failed
6063,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement_deviates_from_native_pandas[data_index0-u-col_key2-90],"KeyError: array(['T'], dtype=object)",failed
6064,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[le-rhs3-lhs1],TypeError: '<=' not supported between instances of 'float' and 'NoneType',failed
6068,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_single_element_list_like_fill_value_negative[rtruediv],Failed: DID NOT RAISE <class 'ValueError'>,failed
6069,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement_deviates_from_native_pandas[data_index0-v-col_key3-95],"KeyError: array(['T', 'T'], dtype=object)",failed
6070,tests.integ.modin.crosstab.test_crosstab,test_values[max1-True],AttributeError: can't set attribute,failed
6071,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_single_element_list_like_fill_value_negative[floordiv],Failed: DID NOT RAISE <class 'ValueError'>,failed
6074,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[le-rhs3-lhs2],TypeError: boolean value of NA is ambiguous,failed
6075,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_single_element_list_like_fill_value_negative[rfloordiv],Failed: DID NOT RAISE <class 'ValueError'>,failed
6076,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement_deviates_from_native_pandas[data_index0-u-col_key4-item_values4],"KeyError: array(['X', 'T'], dtype=object)",failed
6077,tests.integ.modin.crosstab.test_crosstab,test_values[max1-False],AttributeError: can't set attribute,failed
6079,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-0--8],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
6080,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_single_element_list_like_fill_value_negative[mod],Failed: DID NOT RAISE <class 'ValueError'>,failed
6081,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement_deviates_from_native_pandas[data_index1-a-col_key0-95],"KeyError: array(['T', 'T'], dtype=object)",failed
6082,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_single_element_list_like_fill_value_negative[rmod],Failed: DID NOT RAISE <class 'ValueError'>,failed
6083,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_numeric[le-rhs3-lhs3],TypeError: '<=' not supported between instances of 'NoneType' and 'NoneType',failed
6084,tests.integ.modin.crosstab.test_crosstab,test_values[amax-True],AttributeError: can't set attribute,failed
6086,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-0-7],IndexError: positional indexers are out-of-bounds,failed
6087,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_single_element_list_like_fill_value_negative[pow],Failed: DID NOT RAISE <class 'ValueError'>,failed
6088,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_different_types[eq],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
6089,tests.integ.modin.crosstab.test_crosstab,test_values[amax-False],AttributeError: can't set attribute,failed
6090,tests.integ.modin.binary.test_binary_op,test_binary_arithmetic_ops_with_single_element_list_like_fill_value_negative[rpow],Failed: DID NOT RAISE <class 'ValueError'>,failed
6091,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_different_types[ne],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
6095,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-0-52879115],IndexError: positional indexers are out-of-bounds,failed
6097,tests.integ.modin.crosstab.test_crosstab,test_values[sum0-True],AttributeError: can't set attribute,failed
6100,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-0--9028751],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
6101,tests.integ.modin.crosstab.test_crosstab,test_values[sum0-False],AttributeError: can't set attribute,failed
6104,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement_deviates_from_native_pandas[data_index1-w-col_key1-91],ValueError: cannot reindex on an axis with duplicate labels,failed
6108,tests.integ.modin.crosstab.test_crosstab,test_values[sum1-True],AttributeError: can't set attribute,failed
6112,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_different_types[gt],TypeError: '>' not supported between instances of 'str' and 'int',failed
6114,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement_deviates_from_native_pandas[data_index1-u-col_key2-90],ValueError: cannot reindex on an axis with duplicate labels,failed
6116,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_bool[row-index-key5],IndexError: positional indexers are out-of-bounds,failed
6120,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_bool[row-ndarray-key0],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
6122,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_different_types[ge],TypeError: '>=' not supported between instances of 'str' and 'int',failed
6124,tests.integ.modin.crosstab.test_crosstab,test_values[sum1-False],AttributeError: can't set attribute,failed
6125,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement_deviates_from_native_pandas[data_index1-v-col_key3-95],ValueError: cannot reindex on an axis with duplicate labels,failed
6132,tests.integ.modin.crosstab.test_crosstab,test_values[sum2-True],AttributeError: can't set attribute,failed
6133,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_different_types[lt],TypeError: '<' not supported between instances of 'str' and 'int',failed
6139,tests.integ.modin.crosstab.test_crosstab,test_values[sum2-False],AttributeError: can't set attribute,failed
6143,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_different_types[le],TypeError: '<=' not supported between instances of 'str' and 'int',failed
6145,tests.integ.modin.crosstab.test_crosstab,test_values_series_like[median0-True],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  ['row_0']
[right]: ['species']",failed
6148,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_variant[eq-rhs0-lhs0],assert True is None,failed
6149,tests.integ.modin.crosstab.test_crosstab,test_values_series_like[median0-False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  ['row_0']
[right]: ['species']",failed
6150,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_row_key_enlargement_deviates_from_native_pandas[data_index1-u-col_key4-item_values4],ValueError: cannot reindex on an axis with duplicate labels,failed
6155,tests.integ.modin.crosstab.test_crosstab,test_values_series_like[median1-True],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  ['row_0']
[right]: ['species']",failed
6156,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_variant[ne-rhs0-lhs0],assert False is None,failed
6157,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--3--8],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
6158,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_with_item_negative[None-item_value0-True-True],Failed: DID NOT RAISE <class 'Exception'>,failed
6160,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_bool[row-ndarray-key5],IndexError: positional indexers are out-of-bounds,failed
6163,tests.integ.modin.crosstab.test_crosstab,test_values_series_like[median1-False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  ['row_0']
[right]: ['species']",failed
6164,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_with_item_negative[a-item_value1-True-True],Failed: DID NOT RAISE <class 'Exception'>,failed
6168,tests.integ.modin.crosstab.test_crosstab,test_values_series_like[count-True],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  ['row_0']
[right]: ['species']",failed
6171,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_with_item_negative[a-item_value3-True-True],Failed: DID NOT RAISE <class 'Exception'>,failed
6172,tests.integ.modin.crosstab.test_crosstab,test_values_series_like[count-False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  ['row_0']
[right]: ['species']",failed
6177,tests.integ.modin.crosstab.test_crosstab,test_values_series_like[mean0-True],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  ['row_0']
[right]: ['species']",failed
6179,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--3-7],IndexError: positional indexers are out-of-bounds,failed
6183,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_variant[gt-rhs0-lhs0],TypeError: '>' not supported between instances of 'NoneType' and 'NoneType',failed
6184,tests.integ.modin.crosstab.test_crosstab,test_values_series_like[mean0-False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  ['row_0']
[right]: ['species']",failed
6188,tests.integ.modin.crosstab.test_crosstab,test_values_series_like[mean1-True],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  ['row_0']
[right]: ['species']",failed
6190,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--3-52879115],IndexError: positional indexers are out-of-bounds,failed
6191,tests.integ.modin.frame.test_loc,test_empty_df_loc_set_scalar,ValueError: cannot set a frame with no defined columns,failed
6192,tests.integ.modin.crosstab.test_crosstab,test_values_series_like[mean1-False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  ['row_0']
[right]: ['species']",failed
6193,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[list0-add],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6195,tests.integ.modin.crosstab.test_crosstab,test_values_series_like[min0-True],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  ['row_0']
[right]: ['species']",failed
6196,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_variant[ge-rhs0-lhs0],TypeError: '>=' not supported between instances of 'NoneType' and 'NoneType',failed
6197,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--3--9028751],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
6199,tests.integ.modin.frame.test_loc,test_empty_df_loc_set_series_and_list[native_item0],"AssertionError: DataFrame.index are different

DataFrame.index values are different (100.0 %)
[left]:  RangeIndex(start=0, stop=3, step=1)
[right]: Index([None, None, None], dtype='object')
At positional index 0, first diff: 0 != None",failed
6200,tests.integ.modin.crosstab.test_crosstab,test_values_series_like[min0-False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  ['row_0']
[right]: ['species']",failed
6201,tests.integ.modin.crosstab.test_crosstab,test_values_series_like[min1-True],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  ['row_0']
[right]: ['species']",failed
6203,tests.integ.modin.frame.test_loc,test_empty_df_loc_set_series_and_list[native_item1],"AssertionError: DataFrame.index are different

DataFrame.index values are different (100.0 %)
[left]:  RangeIndex(start=0, stop=3, step=1)
[right]: Index([None, None, None], dtype='object')
At positional index 0, first diff: 0 != None",failed
6205,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_variant[lt-rhs0-lhs0],TypeError: '<' not supported between instances of 'NoneType' and 'NoneType',failed
6206,tests.integ.modin.crosstab.test_crosstab,test_values_series_like[min1-False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  ['row_0']
[right]: ['species']",failed
6210,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[list0-radd],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6211,tests.integ.modin.crosstab.test_crosstab,test_values_series_like[amin-True],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  ['row_0']
[right]: ['species']",failed
6214,tests.integ.modin.crosstab.test_crosstab,test_values_series_like[amin-False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  ['row_0']
[right]: ['species']",failed
6215,tests.integ.modin.binary.test_binary_op,test_binary_comparison_method_between_series_variant[le-rhs0-lhs0],TypeError: '<=' not supported between instances of 'NoneType' and 'NoneType',failed
6216,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[list0-sub],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6219,tests.integ.modin.crosstab.test_crosstab,test_values_series_like[max0-True],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  ['row_0']
[right]: ['species']",failed
6222,tests.integ.modin.frame.test_loc,test_empty_df_loc_set_series_and_list[native_item3],"AssertionError: DataFrame.index are different

DataFrame.index values are different (100.0 %)
[left]:  RangeIndex(start=0, stop=3, step=1)
[right]: Index(['a', 'b', 'c'], dtype='object')
At positional index 0, first diff: 0 != a",failed
6224,tests.integ.modin.crosstab.test_crosstab,test_values_series_like[max0-False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  ['row_0']
[right]: ['species']",failed
6226,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[list0-rsub],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6229,tests.integ.modin.crosstab.test_crosstab,test_values_series_like[max1-True],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  ['row_0']
[right]: ['species']",failed
6232,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[list0-mul],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6233,tests.integ.modin.crosstab.test_crosstab,test_values_series_like[max1-False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  ['row_0']
[right]: ['species']",failed
6235,tests.integ.modin.crosstab.test_crosstab,test_values_series_like[amax-True],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  ['row_0']
[right]: ['species']",failed
6236,tests.integ.modin.frame.test_loc,test_empty_df_loc_set_series_and_list[native_item5],"AssertionError: DataFrame.index are different

DataFrame.index values are different (100.0 %)
[left]:  RangeIndex(start=0, stop=4, step=1)
[right]: Index(['a', None, None, 'd'], dtype='object')
At positional index 0, first diff: 0 != a",failed
6238,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[list0-rmul],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6240,tests.integ.modin.crosstab.test_crosstab,test_values_series_like[amax-False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  ['row_0']
[right]: ['species']",failed
6244,tests.integ.modin.crosstab.test_crosstab,test_values_series_like[sum0-True],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  ['row_0']
[right]: ['species']",failed
6245,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[list0-truediv],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6247,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-4--8],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
6248,tests.integ.modin.crosstab.test_crosstab,test_values_series_like[sum0-False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  ['row_0']
[right]: ['species']",failed
6251,tests.integ.modin.crosstab.test_crosstab,test_values_series_like[sum1-True],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  ['row_0']
[right]: ['species']",failed
6253,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[list0-rtruediv],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6254,tests.integ.modin.binary.test_binary_op,test_binary_method_datetime_with_dateoffset_replacement[dateoffset0],pandas._libs.tslibs.np_datetime.OutOfBoundsDatetime: Cannot cast 0001-01-02 03:04:05 to unit='ns' without overflow.,failed
6255,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-4-7],IndexError: positional indexers are out-of-bounds,failed
6256,tests.integ.modin.binary.test_binary_op,test_binary_method_datetime_with_dateoffset_replacement[dateoffset1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
6257,tests.integ.modin.crosstab.test_crosstab,test_values_series_like[sum1-False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  ['row_0']
[right]: ['species']",failed
6260,tests.integ.modin.binary.test_binary_op,test_binary_method_datetime_with_dateoffset_replacement[dateoffset2],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
6262,tests.integ.modin.crosstab.test_crosstab,test_values_series_like[sum2-True],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  ['row_0']
[right]: ['species']",failed
6263,tests.integ.modin.binary.test_binary_op,test_binary_method_datetime_with_dateoffset_replacement[dateoffset3],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
6265,tests.integ.modin.binary.test_binary_op,test_binary_method_datetime_with_dateoffset_replacement[dateoffset4],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
6266,tests.integ.modin.crosstab.test_crosstab,test_values_series_like[sum2-False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  ['row_0']
[right]: ['species']",failed
6267,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-4-52879115],IndexError: positional indexers are out-of-bounds,failed
6270,tests.integ.modin.binary.test_binary_op,test_binary_method_datetime_with_dateoffset_replacement[dateoffset5],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
6271,tests.integ.modin.binary.test_binary_op,test_binary_method_datetime_with_dateoffset_replacement[dateoffset6],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
6273,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-4--9028751],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
6274,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[list0-floordiv],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6276,tests.integ.modin.binary.test_binary_op,test_binary_method_datetime_with_dateoffset_replacement[dateoffset7],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
6278,tests.integ.modin.binary.test_binary_op,test_binary_method_datetime_with_dateoffset_replacement[dateoffset8],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
6280,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[list0-rfloordiv],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6281,tests.integ.modin.binary.test_binary_op,test_binary_method_datetime_with_dateoffset_replacement[dateoffset9],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
6283,tests.integ.modin.crosstab.test_crosstab,test_aggfuncs_that_may_produce_nan[std0-True],AttributeError: can't set attribute,failed
6284,tests.integ.modin.binary.test_binary_op,test_binary_add_dataframe_and_series_axis0[df0-s0],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 3)
[right]: (4, 5)",failed
6285,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[list0-mod],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6287,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[False-None-1-1],ValueError: Incompatible indexer with DataFrame,failed
6288,tests.integ.modin.crosstab.test_crosstab,test_aggfuncs_that_may_produce_nan[std0-False],AttributeError: can't set attribute,failed
6289,tests.integ.modin.binary.test_binary_op,test_binary_add_dataframe_and_series_axis0[df1-s1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 3)
[right]: (4, 6)",failed
6290,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--7-0],IndexError: index -7 is out of bounds for axis 0 with size 6,failed
6291,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[list0-rmod],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6293,tests.integ.modin.crosstab.test_crosstab,test_aggfuncs_that_may_produce_nan[std1-True],AttributeError: can't set attribute,failed
6295,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df0-s0-add0],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 3)
[right]: (4, 5)",failed
6298,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--7--3],IndexError: index -7 is out of bounds for axis 0 with size 6,failed
6299,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[list0-pow],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6300,tests.integ.modin.crosstab.test_crosstab,test_aggfuncs_that_may_produce_nan[std1-False],AttributeError: can't set attribute,failed
6301,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df0-s0-sub0],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 3)
[right]: (4, 5)",failed
6304,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--7-4],IndexError: index -7 is out of bounds for axis 0 with size 6,failed
6305,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[list0-rpow],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6307,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df0-s0-truediv],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 3)
[right]: (4, 5)",failed
6308,tests.integ.modin.crosstab.test_crosstab,test_aggfuncs_that_may_produce_nan[var0-True],AttributeError: can't set attribute,failed
6310,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df0-s0-rtruediv],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 3)
[right]: (4, 5)",failed
6311,tests.integ.modin.crosstab.test_crosstab,test_aggfuncs_that_may_produce_nan[var0-False],AttributeError: can't set attribute,failed
6312,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--7--7],IndexError: index -7 is out of bounds for axis 0 with size 6,failed
6313,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[ndarray0-add],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6315,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df0-s0-floordiv0],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 3)
[right]: (4, 5)",failed
6316,tests.integ.modin.crosstab.test_crosstab,test_aggfuncs_that_may_produce_nan[var1-True],AttributeError: can't set attribute,failed
6318,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--7-6],IndexError: index -7 is out of bounds for axis 0 with size 6,failed
6319,tests.integ.modin.crosstab.test_crosstab,test_aggfuncs_that_may_produce_nan[var1-False],AttributeError: can't set attribute,failed
6320,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df0-s0-rfloordiv0],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 3)
[right]: (4, 5)",failed
6322,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--7--6],IndexError: index -7 is out of bounds for axis 0 with size 6,failed
6323,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df0-s0-floordiv1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 3)
[right]: (4, 5)",failed
6325,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[ndarray0-radd],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6326,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df0-s0-rfloordiv1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 3)
[right]: (4, 5)",failed
6327,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[False-None-4-4],ValueError: Incompatible indexer with DataFrame,failed
6329,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df0-s0-pow],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 3)
[right]: (4, 5)",failed
6331,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[ndarray0-sub],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6334,tests.integ.modin.crosstab.test_crosstab,test_aggfuncs_that_may_produce_nan[skew-True],AttributeError: can't set attribute,failed
6336,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[ndarray0-rsub],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6337,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--7--8],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
6338,tests.integ.modin.crosstab.test_crosstab,test_aggfuncs_that_may_produce_nan[skew-False],AttributeError: can't set attribute,failed
6342,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[ndarray0-mul],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6343,tests.integ.modin.crosstab.test_crosstab,test_values_unsupported_aggfunc,AttributeError: can't set attribute,failed
6345,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df0-s0-rpow],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 3)
[right]: (4, 5)",failed
6346,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--7-7],IndexError: positional indexers are out-of-bounds,failed
6348,tests.integ.modin.crosstab.test_crosstab,test_values_series_like_unsupported_aggfunc,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
6352,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[ndarray0-rmul],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6353,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df0-s0-add1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 3)
[right]: (4, 5)",failed
6356,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--7-52879115],IndexError: positional indexers are out-of-bounds,failed
6358,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df0-s0-radd],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 3)
[right]: (4, 5)",failed
6359,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[ndarray0-truediv],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6361,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--7--9028751],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
6362,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df0-s0-sub1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 3)
[right]: (4, 5)",failed
6365,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[ndarray0-rtruediv],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6368,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df0-s0-rsub],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 3)
[right]: (4, 5)",failed
6370,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-6-0],IndexError: positional indexers are out-of-bounds,failed
6372,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df0-s0-mul],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 3)
[right]: (4, 5)",failed
6376,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df0-s0-rmul],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 3)
[right]: (4, 5)",failed
6377,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-6--3],IndexError: positional indexers are out-of-bounds,failed
6379,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[ndarray0-floordiv],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6380,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df0-s0-mod],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 3)
[right]: (4, 5)",failed
6381,tests.integ.modin.extensions.test_dataframe_extensions,test_dataframe_extension_simple_method,AttributeError: DataFrame object has no attribute new_method,failed
6383,tests.integ.modin.extensions.test_dataframe_extensions,test_dataframe_extension_non_method,AttributeError: 'DataFrame' object has no attribute 'four',failed
6384,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-6-4],IndexError: positional indexers are out-of-bounds,failed
6385,tests.integ.modin.extensions.test_dataframe_extensions,test_dataframe_extension_access_existing_methods,AttributeError: DataFrame object has no attribute self_accessor,failed
6386,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df0-s0-rmod],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 3)
[right]: (4, 5)",failed
6387,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[ndarray0-rfloordiv],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6388,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[False-1-1-None],ValueError: Incompatible indexer with DataFrame,failed
6389,tests.integ.modin.extensions.test_dataframe_extensions,test_dataframe_extension_override_method,"ValueError: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().",failed
6391,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df1-s1-add0],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 3)
[right]: (4, 6)",failed
6392,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[ndarray0-mod],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6393,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df1-s1-sub0],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 3)
[right]: (4, 6)",failed
6395,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[False-1-1--1],ValueError: Incompatible indexer with DataFrame,failed
6396,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[ndarray0-rmod],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6398,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df1-s1-truediv],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 3)
[right]: (4, 6)",failed
6401,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-6--7],IndexError: positional indexers are out-of-bounds,failed
6402,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[ndarray0-pow],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6403,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df1-s1-rtruediv],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 3)
[right]: (4, 6)",failed
6406,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df1-s1-floordiv0],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 3)
[right]: (4, 6)",failed
6407,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[ndarray0-rpow],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6410,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-6-6],IndexError: positional indexers are out-of-bounds,failed
6411,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df1-s1-rfloordiv0],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 3)
[right]: (4, 6)",failed
6413,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index0-add],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6416,tests.integ.modin.extensions.test_series_extensions,test_series_extension_simple_method,AttributeError: Series object has no attribute new_method,failed
6417,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-6--6],IndexError: positional indexers are out-of-bounds,failed
6419,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df1-s1-floordiv1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 3)
[right]: (4, 6)",failed
6422,tests.integ.modin.extensions.test_series_extensions,test_series_extension_non_method,AttributeError: 'Series' object has no attribute 'four',failed
6423,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df1-s1-rfloordiv1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 3)
[right]: (4, 6)",failed
6425,tests.integ.modin.extensions.test_series_extensions,test_series_extension_access_existing_methods,AttributeError: Series object has no attribute self_accessor,failed
6426,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-6--8],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
6427,tests.integ.modin.extensions.test_series_extensions,test_series_extension_override_method,"assert 6 == 100
 +  where 6 = <bound method Series.sum of 0    1\n1    2\n2    3\ndtype: int64>()
 +    where <bound method Series.sum of 0    1\n1    2\n2    3\ndtype: int64> = 0    1\n1    2\n2    3\ndtype: int64.sum",failed
6430,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df1-s1-pow],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 3)
[right]: (4, 6)",failed
6431,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index0-radd],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6433,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df1-s1-rpow],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 3)
[right]: (4, 6)",failed
6434,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-6-7],IndexError: positional indexers are out-of-bounds,failed
6437,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index0-sub],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6441,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-6-52879115],IndexError: positional indexers are out-of-bounds,failed
6443,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index0-rsub],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6446,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df1-s1-add1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 3)
[right]: (4, 6)",failed
6447,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index0-mul],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6451,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df1-s1-radd],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 3)
[right]: (4, 6)",failed
6452,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index0-rmul],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6455,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df1-s1-sub1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 3)
[right]: (4, 6)",failed
6457,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-6--9028751],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
6459,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index0-truediv],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6462,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df1-s1-rsub],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 3)
[right]: (4, 6)",failed
6469,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df1-s1-mul],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 3)
[right]: (4, 6)",failed
6470,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index0-rtruediv],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6475,tests.integ.modin.test_dtype_mapping,"test_read_snowflake_data_types[int8 number-values (-128),(127)-expected_dtype0-expected_to_pandas_dtype0-expected_to_pandas0]","AssertionError: unexpected dtypes [dtype('int8')], expected [int64]
assert False",failed
6478,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df1-s1-rmul],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 3)
[right]: (4, 6)",failed
6487,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df1-s1-mod],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 3)
[right]: (4, 6)",failed
6493,tests.integ.modin.binary.test_binary_op,test_binary_op_between_dataframe_and_series_axis0[df1-s1-rmod],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 3)
[right]: (4, 6)",failed
6498,tests.integ.modin.binary.test_binary_op,test_binary_add_dataframe_and_series_axis0_with_type_mismatch_for_index_negative[df0-s0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
6501,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index0-floordiv],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6504,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[False--1-4-None],ValueError: Incompatible indexer with DataFrame,failed
6511,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index0-rfloordiv],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6512,tests.integ.modin.binary.test_binary_op,test_binary_add_dataframe_sub_series_axis1[df0-s0],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (7, 5)
[right]: (2, 7)",failed
6519,tests.integ.modin.binary.test_binary_op,test_binary_add_dataframe_sub_series_axis1[df1-s1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 3)
[right]: (4, 6)",failed
6522,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index0-mod],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6524,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--6--8],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
6525,tests.integ.modin.binary.test_binary_op,test_binary_add_dataframe_sub_series_axis1[df2-s2],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (7, 3)
[right]: (4, 3)",failed
6527,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index0-rmod],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6529,tests.integ.modin.binary.test_binary_op,test_binary_add_dataframe_sub_series_axis1[df3-s3],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 5)
[right]: (2, 4)",failed
6530,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[False--1-4-10],ValueError: Incompatible indexer with DataFrame,failed
6531,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--6-7],IndexError: positional indexers are out-of-bounds,failed
6532,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index0-pow],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6535,tests.integ.modin.binary.test_binary_op,test_binary_add_dataframe_sub_series_axis1[df4-s4],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (7, 2)
[right]: (4, 6)",failed
6538,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index0-rpow],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6542,tests.integ.modin.frame.test_apply,test_apply_axis1_with_dynamic_pivot_and_with_3rd_party_libraries_and_decorator[packages0-7],TODO: SNOW-1261830 need to support PandasSeriesType annotation.,xfailed
6543,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--6-52879115],IndexError: positional indexers are out-of-bounds,failed
6546,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index_with_name0-add],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6549,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--6--9028751],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
6556,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--8-0],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
6568,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index_with_name0-radd],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6569,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[False-2-None-4],ValueError: Incompatible indexer with DataFrame,failed
6577,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index_with_name0-sub],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6582,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--8--3],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
6589,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index_with_name0-rsub],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6593,tests.integ.modin.test_dtype_mapping,"test_read_snowflake_data_types[int16 number-values (-32768),(32767)-expected_dtype1-expected_to_pandas_dtype1-expected_to_pandas1]","AssertionError: unexpected dtypes [dtype('int16')], expected [int64]
assert False",failed
6595,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--8-4],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
6600,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index_with_name0-mul],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6606,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--8--7],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
6611,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index_with_name0-rmul],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6616,tests.integ.modin.binary.test_binary_op,test_binary_sub_dataframe_and_dataframe_duplicate_labels_negative[df10-df20-True],Failed: DID NOT RAISE <class 'ValueError'>,failed
6619,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--8-6],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
6621,tests.integ.modin.binary.test_binary_op,test_binary_sub_dataframe_and_dataframe_duplicate_labels_negative[df11-df21-False],Failed: DID NOT RAISE <class 'ValueError'>,failed
6624,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index_with_name0-truediv],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6629,tests.integ.modin.binary.test_binary_op,test_binary_sub_dataframe_and_dataframe_duplicate_labels_negative[df12-df22-True],Failed: DID NOT RAISE <class 'ValueError'>,failed
6630,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--8--6],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
6632,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index_with_name0-rtruediv],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6635,tests.integ.modin.binary.test_binary_op,test_binary_sub_dataframe_and_dataframe_duplicate_labels_negative[df13-df23-False],Failed: DID NOT RAISE <class 'ValueError'>,failed
6639,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--8--8],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
6640,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_bool[row-index with name-key5],IndexError: positional indexers are out-of-bounds,failed
6644,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--8-7],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
6650,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_bool[col-list-key1],IndexError: positional indexers are out-of-bounds,failed
6653,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[False-2-4-1],ValueError: Incompatible indexer with DataFrame,failed
6658,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index_with_name0-floordiv],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6662,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--8-52879115],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
6666,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index_with_name0-rfloordiv],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6672,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--8--9028751],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
6676,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index_with_name0-mod],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6678,tests.integ.modin.frame.test_aggregate,test_agg_basic[<lambda>-21],TypeError: NamedAgg.__new__() missing 1 required positional argument: 'aggfunc',failed
6680,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_bool[col-list-key3],IndexError: positional indexers are out-of-bounds,failed
6683,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-7-0],IndexError: positional indexers are out-of-bounds,failed
6684,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index_with_name0-rmod],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6686,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[False-2-10-4],ValueError: Incompatible indexer with DataFrame,failed
6689,tests.integ.modin.frame.test_aggregate,test_agg_basic[<lambda>-11],TypeError: NamedAgg.__new__() missing 1 required positional argument: 'aggfunc',failed
6691,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index_with_name0-pow],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6694,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-7--3],IndexError: positional indexers are out-of-bounds,failed
6700,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index_with_name0-rpow],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
6701,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_bool[col-list-key5],IndexError: positional indexers are out-of-bounds,failed
6707,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-7-4],IndexError: positional indexers are out-of-bounds,failed
6710,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[list1-add],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
6716,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[False--2-None-1],ValueError: Incompatible indexer with DataFrame,failed
6719,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-7--7],IndexError: positional indexers are out-of-bounds,failed
6727,tests.integ.modin.test_dtype_mapping,"test_read_snowflake_data_types[int32 number-values (-2147483648),(2147483647)-expected_dtype2-expected_to_pandas_dtype2-expected_to_pandas2]","AssertionError: unexpected dtypes [dtype('int32')], expected [int64]
assert False",failed
6733,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-7-6],IndexError: positional indexers are out-of-bounds,failed
6737,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[list1-radd],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
6741,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_bool[col-series-key1],IndexError: positional indexers are out-of-bounds,failed
6745,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[list1-sub],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
6752,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[list1-rsub],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
6754,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[False--2--1-1],ValueError: Incompatible indexer with DataFrame,failed
6762,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-7--6],IndexError: positional indexers are out-of-bounds,failed
6765,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[list1-mul],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
6769,tests.integ.modin.frame.test_aggregate,test_corr_negative[kendall],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
6772,tests.integ.modin.frame.test_aggregate,test_corr_negative[spearman],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
6774,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-7--8],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
6775,tests.integ.modin.frame.test_aggregate,test_corr_negative[<lambda>],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
6776,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[list1-rmul],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
6784,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_bool[col-series-key3],IndexError: positional indexers are out-of-bounds,failed
6786,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[list1-truediv],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
6788,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-7-7],IndexError: positional indexers are out-of-bounds,failed
6794,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[list1-rtruediv],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
6798,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[False--2-1-4],ValueError: Incompatible indexer with DataFrame,failed
6799,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-7-52879115],IndexError: positional indexers are out-of-bounds,failed
6807,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-7--9028751],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
6811,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_bool[col-series-key5],IndexError: positional indexers are out-of-bounds,failed
6814,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-52879115-0],IndexError: positional indexers are out-of-bounds,failed
6815,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[list1-floordiv],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
6821,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[list1-rfloordiv],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
6822,tests.integ.modin.frame.test_aggregate,test_string_sum_with_nulls,"TypeError: can only concatenate str (not ""int"") to str",failed
6831,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[list1-mod],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
6838,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-52879115--3],IndexError: positional indexers are out-of-bounds,failed
6839,tests.integ.modin.frame.test_aggregate,test_supported_axis_0[aggregate_max],"AssertionError: Series are different

Series values are different (25.0 %)
[index]: [A, B, C, D]
[left]:  [345600000000000, 360000000000, -9223372036854775808, -9223372036854775808]
[right]: [345600000000000, 360000000000, 5, -9223372036854775808]",failed
6840,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[list1-rmod],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
6849,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[list1-pow],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
6850,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-52879115-4],IndexError: positional indexers are out-of-bounds,failed
6855,tests.integ.modin.frame.test_aggregate,test_supported_axis_0[mean],TypeError: timedelta64[ns] is not a numeric data type,failed
6856,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[list1-rpow],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
6858,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-52879115--7],IndexError: positional indexers are out-of-bounds,failed
6860,tests.integ.modin.frame.test_aggregate,test_supported_axis_0[median],TypeError: timedelta64[ns] is not a numeric data type,failed
6862,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[ndarray1-add],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
6864,tests.integ.modin.frame.test_aggregate,test_supported_axis_0[std],TypeError: timedelta64[ns] is not a numeric data type,failed
6867,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-52879115-6],IndexError: positional indexers are out-of-bounds,failed
6869,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[ndarray1-radd],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
6870,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[False-9-None-None],ValueError: Incompatible indexer with DataFrame,failed
6873,tests.integ.modin.frame.test_aggregate,test_axis_1,[XPASS(strict)] SNOW-1653126,failed
6875,tests.integ.modin.frame.test_aggregate,test_var_invalid,"AssertionError: Regex pattern did not match.
 Regex: 'timedelta64\\ type\\ does\\ not\\ support\\ var\\ operations'
 Input: 'timedelta64[ns] is not a numeric data type'",failed
6877,tests.integ.modin.frame.test_aggregate,test_agg_requires_concat_with_timedelta[<lambda>0],"[XPASS(strict)] requires concat(), which we cannot do with Timedelta.",failed
6878,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-52879115--6],IndexError: positional indexers are out-of-bounds,failed
6880,tests.integ.modin.frame.test_aggregate,test_agg_requires_concat_with_timedelta[<lambda>1],"[XPASS(strict)] requires concat(), which we cannot do with Timedelta.",failed
6881,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[False-9-None--1],ValueError: Incompatible indexer with DataFrame,failed
6883,tests.integ.modin.frame.test_aggregate,test_agg_requires_concat_with_timedelta[<lambda>2],TypeError: NamedAgg.__new__() missing 1 required positional argument: 'aggfunc',failed
6885,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-52879115--8],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
6887,tests.integ.modin.frame.test_aggregate,test_agg_requires_concat_with_timedelta[<lambda>3],"[XPASS(strict)] requires concat(), which we cannot do with Timedelta.",failed
6889,tests.integ.modin.frame.test_aggregate,test_agg_requires_concat_with_timedelta[<lambda>4],"[XPASS(strict)] requires concat(), which we cannot do with Timedelta.",failed
6890,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[ndarray1-sub],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
6892,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[False-9-None-1],ValueError: Incompatible indexer with DataFrame,failed
6894,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-52879115-7],IndexError: positional indexers are out-of-bounds,failed
6895,tests.integ.modin.frame.test_aggregate,test_agg_requires_concat_with_timedelta[<lambda>5],TypeError: NamedAgg.__new__() missing 1 required positional argument: 'aggfunc',failed
6897,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[ndarray1-rsub],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
6898,tests.integ.modin.frame.test_aggregate,test_agg_requires_concat_with_timedelta[<lambda>6],"[XPASS(strict)] requires concat(), which we cannot do with Timedelta.",failed
6900,tests.integ.modin.frame.test_aggregate,test_agg_produces_timedelta_and_non_timedelta_type,[XPASS(strict)] requires transposing a one-row frame with integer and timedelta.,failed
6904,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[False-9-None-4],ValueError: Incompatible indexer with DataFrame,failed
6905,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[ndarray1-mul],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
6913,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[ndarray1-rmul],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
6919,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[ndarray1-truediv],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
6920,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-52879115-52879115],IndexError: positional indexers are out-of-bounds,failed
6925,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[ndarray1-rtruediv],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
6927,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True-52879115--9028751],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
6933,tests.integ.modin.frame.test_aggregate,test_single_agg_on_dup_column,"ValueError: Data must be 1-dimensional, got ndarray of shape (1, 2) instead",failed
6934,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--9028751-0],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
6940,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--9028751--3],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
6942,tests.integ.modin.frame.test_aggregate,test_single_agg_on_dup_and_non_dup_columns[dup_first],"ValueError: Data must be 1-dimensional, got ndarray of shape (2, 2) instead",failed
6944,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_bool[col-index-key1],IndexError: positional indexers are out-of-bounds,failed
6946,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[ndarray1-floordiv],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
6949,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--9028751-4],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
6952,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[ndarray1-rfloordiv],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
6956,tests.integ.modin.frame.test_aggregate,test_single_agg_on_dup_and_non_dup_columns[dup_last],"ValueError: Data must be 1-dimensional, got ndarray of shape (2, 2) instead",failed
6957,tests.integ.modin.test_dtype_mapping,"test_read_snowflake_data_types["">int64"" number-values (-99999999999999999999999999999999999999),(99999999999999999999999999999999999999)-expected_dtype4-expected_to_pandas_dtype4-expected_to_pandas4]","AssertionError: unexpected dtypes [dtype('float64')], expected [int64]
assert False",failed
6958,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--9028751--7],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
6961,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[ndarray1-mod],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
6966,tests.integ.modin.frame.test_aggregate,test_multiple_agg_on_dup_and_single_agg_on_non_dup_columns,"ValueError: Data must be 1-dimensional, got ndarray of shape (3, 2) instead",failed
6969,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[ndarray1-rmod],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
6973,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[ndarray1-pow],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
6974,tests.integ.modin.frame.test_aggregate,test_multiple_agg_on_only_dup_columns,"ValueError: Data must be 1-dimensional, got ndarray of shape (2, 3) instead",failed
6975,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[False-9-10-None],ValueError: Incompatible indexer with DataFrame,failed
6978,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--9028751-6],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
6981,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[ndarray1-rpow],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
6982,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--9028751--6],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
6984,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[False-9-10--1],ValueError: Incompatible indexer with DataFrame,failed
6986,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index1-add],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
6988,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--9028751--8],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
6992,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--9028751-7],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
6996,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--9028751-52879115],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
6997,tests.integ.modin.frame.test_aggregate,test_agg_with_all_missing[<lambda>-2],TypeError: boolean value of NA is ambiguous,failed
7000,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index1-radd],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7005,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[False-9-10-1],ValueError: Incompatible indexer with DataFrame,failed
7007,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[True--9028751--9028751],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
7010,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index1-sub],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7021,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index1-rsub],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7026,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index1-mul],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7027,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[False--9-None-None],ValueError: Incompatible indexer with DataFrame,failed
7033,tests.integ.modin.frame.test_aggregate,test_agg_with_all_missing_pandas_bug_58810,IndexError: positional indexers are out-of-bounds,failed
7034,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index1-rmul],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7043,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index1-truediv],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7045,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[False--9-None-1],ValueError: Incompatible indexer with DataFrame,failed
7048,tests.integ.modin.frame.test_aggregate,test_agg_quantile_kwargs[q2-None],"[XPASS(strict)] SNOW-1062878: agg(""quantile"") with list-like q fails",failed
7052,tests.integ.modin.frame.test_aggregate,test_agg_quantile_kwargs[q2-linear],"[XPASS(strict)] SNOW-1062878: agg(""quantile"") with list-like q fails",failed
7053,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index1-rtruediv],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7054,tests.integ.modin.frame.test_aggregate,test_agg_quantile_kwargs[q2-nearest],"[XPASS(strict)] SNOW-1062878: agg(""quantile"") with list-like q fails",failed
7057,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[False--9-None-4],ValueError: Incompatible indexer with DataFrame,failed
7060,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index1-floordiv],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7062,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-0--8],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
7067,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[False--9-None-10],ValueError: Incompatible indexer with DataFrame,failed
7074,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index1-rfloordiv],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7077,tests.integ.modin.frame.test_aggregate,test_agg_with_variant,TypeError: '<' not supported between instances of 'NoneType' and 'NoneType',failed
7081,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index1-mod],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7086,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-0-7],IndexError: positional indexers are out-of-bounds,failed
7092,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index1-rmod],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7098,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-0-52879115],IndexError: positional indexers are out-of-bounds,failed
7102,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index1-pow],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7108,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-0--9028751],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
7110,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index1-rpow],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7120,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index_with_name1-add],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7128,tests.integ.modin.frame.test_aggregate,test_agg_with_multiindex_negative[<lambda>0],[XPASS(strict)] SNOW-1010307: MultiIndex aggregation on axis=1 not supported,failed
7129,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_bool[col-index-key3],IndexError: positional indexers are out-of-bounds,failed
7132,tests.integ.modin.frame.test_aggregate,test_agg_with_multiindex_negative[<lambda>1],[XPASS(strict)] SNOW-1010307: MultiIndex aggregation on axis=1 not supported,failed
7134,tests.integ.modin.frame.test_aggregate,test_agg_with_multiindex_negative[<lambda>2],[XPASS(strict)] SNOW-1010307: MultiIndex aggregation on axis=1 not supported,failed
7149,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index_with_name1-radd],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7153,tests.integ.modin.frame.test_aggregate,test_agg_with_no_column_raises[pandas_df0],"AssertionError: Regex pattern did not match.
 Regex: 'No column to aggregate on'
 Input: 'No objects to concatenate'",failed
7155,tests.integ.modin.frame.test_aggregate,test_agg_with_no_column_raises[pandas_df1],"AssertionError: Regex pattern did not match.
 Regex: 'No column to aggregate on'
 Input: 'No objects to concatenate'",failed
7159,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index_with_name1-sub],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7163,tests.integ.modin.frame.test_aggregate,test_agg_with_single_col[<lambda>-False0],AssertionError: Got type: <class 'int'>,failed
7167,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index_with_name1-rsub],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7174,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index_with_name1-mul],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7176,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--3--8],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
7181,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index_with_name1-rmul],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7187,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--3-7],IndexError: positional indexers are out-of-bounds,failed
7193,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index_with_name1-truediv],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7199,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--3-52879115],IndexError: positional indexers are out-of-bounds,failed
7201,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index_with_name1-rtruediv],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7211,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index_with_name1-floordiv],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7217,tests.integ.modin.frame.test_aggregate,test_ddof_fallback_negative[std],Failed: DID NOT RAISE <class 'AttributeError'>,failed
7221,tests.integ.modin.frame.test_aggregate,test_ddof_fallback_negative[var],Failed: DID NOT RAISE <class 'AttributeError'>,failed
7223,tests.integ.modin.binary.test_binary_op,test_binary_bitwise_op_on_df[df10-df20-<lambda>-expected0],"AssertionError: DataFrame.iloc[:, 1] (column name=""1"") are different

DataFrame.iloc[:, 1] (column name=""1"") values are different (66.66667 %)
[index]: [0, 1, 2]
[left]:  [False, False, False]
[right]: [None, False, None]",failed
7227,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--3--9028751],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
7230,tests.integ.modin.binary.test_binary_op,test_binary_bitwise_op_on_df[df10-df20-<lambda>-expected1],"AssertionError: DataFrame.iloc[:, 0] (column name=""0"") are different

DataFrame.iloc[:, 0] (column name=""0"") values are different (66.66667 %)
[index]: [0, 1, 2]
[left]:  [True, False, False]
[right]: [True, None, None]",failed
7231,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True-None-1-1],ValueError: Incompatible indexer with DataFrame,failed
7241,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index_with_name1-rfloordiv],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7243,tests.integ.modin.binary.test_binary_op,test_binary_single_row_dataframe_and_series[<lambda>2],AssertionError,failed
7248,tests.integ.modin.binary.test_binary_op,test_binary_single_row_dataframe_and_series[<lambda>3],AssertionError,failed
7251,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index_with_name1-mod],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7260,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index_with_name1-rmod],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7268,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index_with_name1-pow],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7275,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_1[index_with_name1-rpow],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7281,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_bool[col-index-key5],IndexError: positional indexers are out-of-bounds,failed
7282,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[list0-add],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7284,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True-None-4-4],ValueError: Incompatible indexer with DataFrame,failed
7286,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_bool[col-ndarray-key0],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
7290,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-4--8],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
7292,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_bool[col-ndarray-key1],IndexError: positional indexers are out-of-bounds,failed
7297,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-4-7],IndexError: positional indexers are out-of-bounds,failed
7298,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[list0-radd],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7302,tests.integ.modin.binary.test_timedelta,test_timedelta_dataframe_bitwise_operation_with_timedelta_scalar[__or__-|],"AssertionError: Regex pattern did not match.
 Regex: 'unsupported\\ operand\\ type\\ for\\ \\|:\\ Timedelta'
 Input: ""unsupported operand type(s) for |: 'TimedeltaArray' and 'Timedelta'""",failed
7304,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_bool[col-ndarray-key3],IndexError: positional indexers are out-of-bounds,failed
7305,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[list0-sub],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7306,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-4-52879115],IndexError: positional indexers are out-of-bounds,failed
7307,tests.integ.modin.binary.test_timedelta,test_timedelta_dataframe_bitwise_operation_with_timedelta_scalar[__ror__-|],"AssertionError: Regex pattern did not match.
 Regex: 'unsupported\\ operand\\ type\\ for\\ \\|:\\ Timedelta'
 Input: ""unsupported operand type(s) for |: 'Timedelta' and 'TimedeltaArray'""",failed
7310,tests.integ.modin.binary.test_timedelta,test_timedelta_dataframe_bitwise_operation_with_timedelta_scalar[__and__-&],"AssertionError: Regex pattern did not match.
 Regex: 'unsupported\\ operand\\ type\\ for\\ \\&:\\ Timedelta'
 Input: ""unsupported operand type(s) for &: 'TimedeltaArray' and 'Timedelta'""",failed
7313,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[list0-rsub],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7314,tests.integ.modin.binary.test_timedelta,test_timedelta_dataframe_bitwise_operation_with_timedelta_scalar[__rand__-&],"AssertionError: Regex pattern did not match.
 Regex: 'unsupported\\ operand\\ type\\ for\\ \\&:\\ Timedelta'
 Input: ""unsupported operand type(s) for &: 'Timedelta' and 'TimedeltaArray'""",failed
7316,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-4--9028751],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
7318,tests.integ.modin.binary.test_timedelta,test_timedelta_dataframe_exponentiation_with_timedelta_scalar[pow],"AssertionError: Regex pattern did not match.
 Regex: 'unsupported\\ operand\\ type\\ for\\ \\*\\*:\\ Timedelta'
 Input: 'cannot perform __pow__ with this index type: TimedeltaArray'",failed
7320,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[list0-mul],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7321,tests.integ.modin.binary.test_timedelta,test_timedelta_dataframe_exponentiation_with_timedelta_scalar[rpow],"AssertionError: Regex pattern did not match.
 Regex: 'unsupported\\ operand\\ type\\ for\\ \\*\\*:\\ Timedelta'
 Input: 'cannot perform __rpow__ with this index type: TimedeltaArray'",failed
7323,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_bool[col-ndarray-key5],IndexError: positional indexers are out-of-bounds,failed
7324,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--7-0],IndexError: index -7 is out of bounds for axis 0 with size 6,failed
7329,tests.integ.modin.binary.test_timedelta,test_timedelta_addition_and_subtraction_with_numeric[1-add],"AssertionError: Regex pattern did not match.
 Regex: 'Snowpark\\ pandas\\ does\\ not\\ support\\ addition\\ or\\ subtraction\\ between\\ timedelta\\ values\\ and\\ numeric\\ values\\.'
 Input: 'Addition/subtraction of integers and integer-arrays with TimedeltaArray is no longer supported.  Instead of adding/subtracting `n`, use `n * obj.freq`'",failed
7330,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[list0-rmul],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7332,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--7--3],IndexError: index -7 is out of bounds for axis 0 with size 6,failed
7334,tests.integ.modin.test_dtype_mapping,"test_read_snowflake_data_types[bool_with_null boolean-values (true),(null)-expected_dtype7-expected_to_pandas_dtype7-expected_to_pandas7]","AssertionError: unexpected dtypes [dtype('O')], expected [bool]
assert False",failed
7335,tests.integ.modin.binary.test_timedelta,test_timedelta_addition_and_subtraction_with_numeric[1-radd],"AssertionError: Regex pattern did not match.
 Regex: 'Snowpark\\ pandas\\ does\\ not\\ support\\ addition\\ or\\ subtraction\\ between\\ timedelta\\ values\\ and\\ numeric\\ values\\.'
 Input: 'Addition/subtraction of integers and integer-arrays with TimedeltaArray is no longer supported.  Instead of adding/subtracting `n`, use `n * obj.freq`'",failed
7337,tests.integ.modin.binary.test_timedelta,test_timedelta_addition_and_subtraction_with_numeric[1-sub],"AssertionError: Regex pattern did not match.
 Regex: 'Snowpark\\ pandas\\ does\\ not\\ support\\ addition\\ or\\ subtraction\\ between\\ timedelta\\ values\\ and\\ numeric\\ values\\.'
 Input: 'Addition/subtraction of integers and integer-arrays with TimedeltaArray is no longer supported.  Instead of adding/subtracting `n`, use `n * obj.freq`'",failed
7338,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[list0-truediv],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7340,tests.integ.modin.binary.test_timedelta,test_timedelta_addition_and_subtraction_with_numeric[1-rsub],"AssertionError: Regex pattern did not match.
 Regex: 'Snowpark\\ pandas\\ does\\ not\\ support\\ addition\\ or\\ subtraction\\ between\\ timedelta\\ values\\ and\\ numeric\\ values\\.'
 Input: 'Addition/subtraction of integers and integer-arrays with TimedeltaArray is no longer supported.  Instead of adding/subtracting `n`, use `n * obj.freq`'",failed
7343,tests.integ.modin.binary.test_timedelta,test_timedelta_addition_and_subtraction_with_numeric[1.5-add],"AssertionError: Regex pattern did not match.
 Regex: 'Snowpark\\ pandas\\ does\\ not\\ support\\ addition\\ or\\ subtraction\\ between\\ timedelta\\ values\\ and\\ numeric\\ values\\.'
 Input: ""unsupported operand type(s) for +: 'TimedeltaArray' and 'float'""",failed
7344,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[list0-rtruediv],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7345,tests.integ.modin.binary.test_timedelta,test_timedelta_addition_and_subtraction_with_numeric[1.5-radd],"AssertionError: Regex pattern did not match.
 Regex: 'Snowpark\\ pandas\\ does\\ not\\ support\\ addition\\ or\\ subtraction\\ between\\ timedelta\\ values\\ and\\ numeric\\ values\\.'
 Input: ""unsupported operand type(s) for +: 'float' and 'TimedeltaArray'""",failed
7348,tests.integ.modin.binary.test_timedelta,test_timedelta_addition_and_subtraction_with_numeric[1.5-sub],"AssertionError: Regex pattern did not match.
 Regex: 'Snowpark\\ pandas\\ does\\ not\\ support\\ addition\\ or\\ subtraction\\ between\\ timedelta\\ values\\ and\\ numeric\\ values\\.'
 Input: ""unsupported operand type(s) for -: 'TimedeltaArray' and 'float'""",failed
7350,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[list0-floordiv],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7351,tests.integ.modin.binary.test_timedelta,test_timedelta_addition_and_subtraction_with_numeric[1.5-rsub],"AssertionError: Regex pattern did not match.
 Regex: 'Snowpark\\ pandas\\ does\\ not\\ support\\ addition\\ or\\ subtraction\\ between\\ timedelta\\ values\\ and\\ numeric\\ values\\.'
 Input: ""unsupported operand type(s) for +: 'TimedeltaArray' and 'float'""",failed
7354,tests.integ.modin.binary.test_timedelta,test_timedelta_divide_number_dataframe_by_timedelta_scalar[div],AssertionError: exception type <class 'numpy.core._exceptions._UFuncBinaryResolutionError'> does not match with expected type <class 'TypeError'>,failed
7355,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--7-4],IndexError: index -7 is out of bounds for axis 0 with size 6,failed
7357,tests.integ.modin.binary.test_timedelta,test_timedelta_divide_number_dataframe_by_timedelta_scalar[floordiv],"AssertionError: Regex pattern did not match.
 Regex: 'Snowpark\\ pandas\\ does\\ not\\ support\\ dividing\\ numeric\\ values\\ by\\ timedelta\\ values\\ with\\ div\\ \\(/\\),\\ mod\\ \\(%\\),\\ or\\ floordiv\\ \\(//\\)\\.'
 Input: 'Invalid dtype int64 for __floordiv__'",failed
7359,tests.integ.modin.binary.test_timedelta,test_timedelta_divide_number_dataframe_by_timedelta_scalar[truediv],AssertionError: exception type <class 'numpy.core._exceptions._UFuncBinaryResolutionError'> does not match with expected type <class 'TypeError'>,failed
7361,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--7--7],IndexError: index -7 is out of bounds for axis 0 with size 6,failed
7362,tests.integ.modin.binary.test_timedelta,test_timedelta_divide_number_dataframe_by_timedelta_scalar[mod],"AssertionError: Regex pattern did not match.
 Regex: 'Snowpark\\ pandas\\ does\\ not\\ support\\ dividing\\ numeric\\ values\\ by\\ timedelta\\ values\\ with\\ div\\ \\(/\\),\\ mod\\ \\(%\\),\\ or\\ floordiv\\ \\(//\\)\\.'
 Input: 'Invalid dtype int64 for __floordiv__'",failed
7365,tests.integ.modin.binary.test_timedelta,test_divide_number_scalar_by_timedelta_dataframe[rdiv],"AssertionError: Regex pattern did not match.
 Regex: 'Snowpark\\ pandas\\ does\\ not\\ support\\ dividing\\ numeric\\ values\\ by\\ timedelta\\ values\\ with\\ div\\ \\(/\\),\\ mod\\ \\(%\\),\\ or\\ floordiv\\ \\(//\\)\\.'
 Input: 'Cannot divide int by TimedeltaArray'",failed
7367,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--7-6],IndexError: index -7 is out of bounds for axis 0 with size 6,failed
7369,tests.integ.modin.binary.test_timedelta,test_divide_number_scalar_by_timedelta_dataframe[rfloordiv],"AssertionError: Regex pattern did not match.
 Regex: 'Snowpark\\ pandas\\ does\\ not\\ support\\ dividing\\ numeric\\ values\\ by\\ timedelta\\ values\\ with\\ div\\ \\(/\\),\\ mod\\ \\(%\\),\\ or\\ floordiv\\ \\(//\\)\\.'
 Input: 'Cannot divide int by TimedeltaArray'",failed
7370,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[list0-rfloordiv],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7372,tests.integ.modin.binary.test_timedelta,test_divide_number_scalar_by_timedelta_dataframe[rtruediv],"AssertionError: Regex pattern did not match.
 Regex: 'Snowpark\\ pandas\\ does\\ not\\ support\\ dividing\\ numeric\\ values\\ by\\ timedelta\\ values\\ with\\ div\\ \\(/\\),\\ mod\\ \\(%\\),\\ or\\ floordiv\\ \\(//\\)\\.'
 Input: 'Cannot divide int by TimedeltaArray'",failed
7375,tests.integ.modin.binary.test_timedelta,test_divide_number_scalar_by_timedelta_dataframe[rmod],"AssertionError: Regex pattern did not match.
 Regex: 'Snowpark\\ pandas\\ does\\ not\\ support\\ dividing\\ numeric\\ values\\ by\\ timedelta\\ values\\ with\\ div\\ \\(/\\),\\ mod\\ \\(%\\),\\ or\\ floordiv\\ \\(//\\)\\.'
 Input: 'Cannot divide int by TimedeltaArray'",failed
7377,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--7--6],IndexError: index -7 is out of bounds for axis 0 with size 6,failed
7379,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[list0-mod],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7381,tests.integ.modin.binary.test_timedelta,test_timedelta_less_than_or_greater_than_numeric[gt],"AssertionError: Regex pattern did not match.
 Regex: 'Snowpark\\ pandas\\ does\\ not\\ support\\ binary\\ operation\\ gt\\ between\\ timedelta\\ and\\ a\\ non\\-timedelta\\ type'
 Input: 'Invalid comparison between dtype=timedelta64[ns] and int'",failed
7385,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--7--8],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
7387,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[list0-rmod],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7393,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[list0-pow],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7396,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--7-7],IndexError: positional indexers are out-of-bounds,failed
7398,tests.integ.modin.frame.test_aggregate,test_agg_axis_1_simple[size],AssertionError: Got type: <class 'int'>,failed
7399,tests.integ.modin.binary.test_timedelta,test_timedelta_less_than_or_greater_than_numeric[ge],"AssertionError: Regex pattern did not match.
 Regex: 'Snowpark\\ pandas\\ does\\ not\\ support\\ binary\\ operation\\ ge\\ between\\ timedelta\\ and\\ a\\ non\\-timedelta\\ type'
 Input: 'Invalid comparison between dtype=timedelta64[ns] and int'",failed
7400,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[list0-rpow],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7404,tests.integ.modin.binary.test_timedelta,test_timedelta_less_than_or_greater_than_numeric[lt],"AssertionError: Regex pattern did not match.
 Regex: 'Snowpark\\ pandas\\ does\\ not\\ support\\ binary\\ operation\\ lt\\ between\\ timedelta\\ and\\ a\\ non\\-timedelta\\ type'
 Input: 'Invalid comparison between dtype=timedelta64[ns] and int'",failed
7407,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--7-52879115],IndexError: positional indexers are out-of-bounds,failed
7408,tests.integ.modin.binary.test_timedelta,test_timedelta_less_than_or_greater_than_numeric[le],"AssertionError: Regex pattern did not match.
 Regex: 'Snowpark\\ pandas\\ does\\ not\\ support\\ binary\\ operation\\ le\\ between\\ timedelta\\ and\\ a\\ non\\-timedelta\\ type'
 Input: 'Invalid comparison between dtype=timedelta64[ns] and int'",failed
7410,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[ndarray0-add],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7412,tests.integ.modin.binary.test_timedelta,test_pow_timedelta_numeric[pow],"AssertionError: Regex pattern did not match.
 Regex: 'Snowpark\\ pandas\\ does\\ not\\ support\\ binary\\ operation\\ pow\\ between\\ timedelta\\ and\\ a\\ non\\-timedelta\\ type'
 Input: 'cannot perform __pow__ with this index type: TimedeltaArray'",failed
7417,tests.integ.modin.binary.test_timedelta,test_pow_timedelta_numeric[rpow],"AssertionError: Regex pattern did not match.
 Regex: 'Snowpark\\ pandas\\ does\\ not\\ support\\ binary\\ operation\\ pow\\ between\\ timedelta\\ and\\ a\\ non\\-timedelta\\ type'
 Input: 'cannot perform __rpow__ with this index type: TimedeltaArray'",failed
7420,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[ndarray0-radd],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7422,tests.integ.modin.binary.test_timedelta,test_invalid_ops_between_timedelta_dataframe_and_string_scalar[pow-Numeric],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
7424,tests.integ.modin.binary.test_timedelta,test_invalid_ops_between_timedelta_dataframe_and_string_scalar[rpow-Numeric],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
7426,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True--1--1-None],ValueError: Incompatible indexer with DataFrame,failed
7428,tests.integ.modin.binary.test_timedelta,test_invalid_ops_between_timedelta_dataframe_and_string_scalar[__and__-Boolean],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
7431,tests.integ.modin.binary.test_timedelta,test_invalid_ops_between_timedelta_dataframe_and_string_scalar[__rand__-Boolean],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
7432,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--7--9028751],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
7434,tests.integ.modin.binary.test_timedelta,test_invalid_ops_between_timedelta_dataframe_and_string_scalar[__or__-Boolean],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
7437,tests.integ.modin.binary.test_timedelta,test_invalid_ops_between_timedelta_dataframe_and_string_scalar[__ror__-Boolean],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
7439,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[ndarray0-sub],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7441,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True--1--1--1],ValueError: Incompatible indexer with DataFrame,failed
7442,tests.integ.modin.binary.test_timedelta,test_bitwise_timedelta_numeric[__or__-__or__],"AssertionError: Regex pattern did not match.
 Regex: 'Snowpark\\ pandas\\ does\\ not\\ support\\ binary\\ operation\\ __or__\\ between\\ timedelta\\ and\\ a\\ non\\-timedelta\\ type'
 Input: ""unsupported operand type(s) for |: 'TimedeltaArray' and 'int'""",failed
7443,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-6-0],IndexError: positional indexers are out-of-bounds,failed
7447,tests.integ.modin.binary.test_timedelta,test_bitwise_timedelta_numeric[__and__-__and__],"AssertionError: Regex pattern did not match.
 Regex: 'Snowpark\\ pandas\\ does\\ not\\ support\\ binary\\ operation\\ __and__\\ between\\ timedelta\\ and\\ a\\ non\\-timedelta\\ type'
 Input: ""unsupported operand type(s) for &: 'TimedeltaArray' and 'int'""",failed
7448,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[ndarray0-rsub],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7452,tests.integ.modin.binary.test_timedelta,test_bitwise_timedelta_numeric[__ror__-__or__],"AssertionError: Regex pattern did not match.
 Regex: 'Snowpark\\ pandas\\ does\\ not\\ support\\ binary\\ operation\\ __or__\\ between\\ timedelta\\ and\\ a\\ non\\-timedelta\\ type'
 Input: ""unsupported operand type(s) for |: 'int' and 'TimedeltaArray'""",failed
7453,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-6--3],IndexError: positional indexers are out-of-bounds,failed
7455,tests.integ.modin.binary.test_timedelta,test_bitwise_timedelta_numeric[__rand__-__and__],"AssertionError: Regex pattern did not match.
 Regex: 'Snowpark\\ pandas\\ does\\ not\\ support\\ binary\\ operation\\ __and__\\ between\\ timedelta\\ and\\ a\\ non\\-timedelta\\ type'
 Input: ""unsupported operand type(s) for &: 'int' and 'TimedeltaArray'""",failed
7457,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[ndarray0-mul],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7460,tests.integ.modin.binary.test_timedelta,test_timedelta_mod_with_negative_timedelta[3--2--1-1],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0]
[left]:  [-1]
[right]: [1]",failed
7463,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-6-4],IndexError: positional indexers are out-of-bounds,failed
7466,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[ndarray0-rmul],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7467,tests.integ.modin.binary.test_timedelta,test_timedelta_mod_with_negative_timedelta[-3-2-1--1],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0]
[left]:  [1]
[right]: [-1]",failed
7474,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[ndarray0-truediv],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7475,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-6--7],IndexError: positional indexers are out-of-bounds,failed
7479,tests.integ.modin.binary.test_timedelta,test_divide_timedelta_by_zero_timedelta,Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
7482,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_bool[col-index with name-key1],IndexError: positional indexers are out-of-bounds,failed
7483,tests.integ.modin.binary.test_timedelta,test_divide_timdelta_by_zero_integer,Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
7485,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[ndarray0-rtruediv],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7486,tests.integ.modin.binary.test_timedelta,test_floordiv_timedelta_by_zero_timedelta,Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
7489,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-6-6],IndexError: positional indexers are out-of-bounds,failed
7490,tests.integ.modin.binary.test_timedelta,test_floordiv_timedelta_by_zero_integer,Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
7494,tests.integ.modin.binary.test_timedelta,test_mod_timedelta_by_zero_timedelta,"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0]
[left]:  [1]
[right]: [-9223372036854775808]",failed
7510,tests.integ.modin.binary.test_timedelta,test_comparison_with_null[eq],"AssertionError: DataFrame.iloc[:, 0] (column name=""0"") are different

DataFrame.iloc[:, 0] (column name=""0"") values are different (100.0 %)
[index]: [0, 1]
[left]:  [False, False]
[right]: [None, None]",failed
7512,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[ndarray0-floordiv],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7515,tests.integ.modin.binary.test_timedelta,test_comparison_with_null[ne],"AssertionError: DataFrame.iloc[:, 0] (column name=""0"") are different

DataFrame.iloc[:, 0] (column name=""0"") values are different (100.0 %)
[index]: [0, 1]
[left]:  [True, True]
[right]: [None, None]",failed
7518,tests.integ.modin.binary.test_timedelta,test_comparison_with_null[lt],"AssertionError: DataFrame.iloc[:, 0] (column name=""0"") are different

DataFrame.iloc[:, 0] (column name=""0"") values are different (100.0 %)
[index]: [0, 1]
[left]:  [False, False]
[right]: [None, None]",failed
7519,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-6--6],IndexError: positional indexers are out-of-bounds,failed
7522,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[ndarray0-rfloordiv],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7524,tests.integ.modin.binary.test_timedelta,test_comparison_with_null[le],"AssertionError: DataFrame.iloc[:, 0] (column name=""0"") are different

DataFrame.iloc[:, 0] (column name=""0"") values are different (100.0 %)
[index]: [0, 1]
[left]:  [False, False]
[right]: [None, None]",failed
7527,tests.integ.modin.binary.test_timedelta,test_comparison_with_null[gt],"AssertionError: DataFrame.iloc[:, 0] (column name=""0"") are different

DataFrame.iloc[:, 0] (column name=""0"") values are different (100.0 %)
[index]: [0, 1]
[left]:  [False, False]
[right]: [None, None]",failed
7528,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-6--8],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
7531,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[ndarray0-mod],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7533,tests.integ.modin.binary.test_timedelta,test_comparison_with_null[ge],"AssertionError: DataFrame.iloc[:, 0] (column name=""0"") are different

DataFrame.iloc[:, 0] (column name=""0"") values are different (100.0 %)
[index]: [0, 1]
[left]:  [False, False]
[right]: [None, None]",failed
7537,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[ndarray0-rmod],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7540,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-6-7],IndexError: positional indexers are out-of-bounds,failed
7542,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[ndarray0-pow],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7544,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True-2-None-1],ValueError: Incompatible indexer with DataFrame,failed
7545,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-6-52879115],IndexError: positional indexers are out-of-bounds,failed
7546,tests.integ.modin.binary.test_timedelta,test_eq_non_null,"AssertionError: DataFrame.iloc[:, 1] (column name=""1"") are different

DataFrame.iloc[:, 1] (column name=""1"") values are different (50.0 %)
[index]: [0, 1]
[left]:  [False, False]
[right]: [None, False]",failed
7549,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[ndarray0-rpow],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7550,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False-6--9028751],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
7551,tests.integ.modin.binary.test_timedelta,test_neq_non_null,"AssertionError: DataFrame.iloc[:, 1] (column name=""1"") are different

DataFrame.iloc[:, 1] (column name=""1"") values are different (50.0 %)
[index]: [0, 1]
[left]:  [True, True]
[right]: [None, True]",failed
7553,tests.integ.modin.frame.test_aggregate,test_agg_axis_1_missing_label,KeyError: 'Column(s) [2] do not exist',failed
7559,tests.integ.modin.frame.test_aggregate,test_agg_numeric_only_negative[max],Failed: DID NOT RAISE <class 'ValueError'>,failed
7560,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index0-add],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7564,tests.integ.modin.frame.test_aggregate,test_agg_numeric_only_negative[min],Failed: DID NOT RAISE <class 'ValueError'>,failed
7566,tests.integ.modin.frame.test_aggregate,test_agg_numeric_only_negative[sum],Failed: DID NOT RAISE <class 'ValueError'>,failed
7567,tests.integ.modin.frame.test_aggregate,test_agg_numeric_only_negative[std],Failed: DID NOT RAISE <class 'ValueError'>,failed
7568,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index0-radd],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7572,tests.integ.modin.frame.test_aggregate,test_agg_numeric_only_negative[var],Failed: DID NOT RAISE <class 'ValueError'>,failed
7573,tests.integ.modin.frame.test_aggregate,test_agg_numeric_only_negative[mean],Failed: DID NOT RAISE <class 'ValueError'>,failed
7575,tests.integ.modin.frame.test_aggregate,test_agg_numeric_only_negative[median],Failed: DID NOT RAISE <class 'ValueError'>,failed
7576,tests.integ.modin.binary.test_timedelta,test_timedelta_timedelta_null_arithmetic_invalid_in_pandas[div],TypeError: unsupported operand type(s) for /: 'numpy.ndarray' and 'NaTType',failed
7577,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True-2--1-1],ValueError: Incompatible indexer with DataFrame,failed
7578,tests.integ.modin.frame.test_aggregate,test_agg_numeric_only_negative[count],Failed: DID NOT RAISE <class 'ValueError'>,failed
7591,tests.integ.modin.binary.test_timedelta,test_timedelta_timedelta_null_arithmetic_invalid_in_pandas[rdiv],TypeError: Cannot divide NaTType by TimedeltaArray,failed
7593,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index0-sub],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7601,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index0-rsub],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7607,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index0-mul],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7609,tests.integ.modin.frame.test_aggregate,test_agg_min_count_negative[TEST],TypeError: '>' not supported between instances of 'str' and 'int',failed
7610,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--6--8],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
7611,tests.integ.modin.frame.test_aggregate,test_agg_min_count_negative[5.3],Failed: DID NOT RAISE <class 'ValueError'>,failed
7612,tests.integ.modin.frame.test_aggregate,test_agg_min_count_negative[5.0],Failed: DID NOT RAISE <class 'ValueError'>,failed
7613,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index0-rmul],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7615,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--6-7],IndexError: positional indexers are out-of-bounds,failed
7616,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_bool[col-index with name-key3],IndexError: positional indexers are out-of-bounds,failed
7617,tests.integ.modin.frame.test_aggregate,test_named_agg_not_supported_axis_1,"AssertionError: One of the passed functions has an invalid type: <class 'NoneType'>: None, only callable or string is acceptable.",failed
7618,tests.integ.modin.binary.test_timedelta,test_timedelta_timedelta_null_arithmetic_invalid_in_pandas[mod],TypeError: unsupported operand type(s) for //: 'numpy.ndarray' and 'NaTType',failed
7619,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index0-truediv],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7620,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True-2-1-1],ValueError: Incompatible indexer with DataFrame,failed
7622,tests.integ.modin.frame.test_aggregate,test_aggregate_unsupported_aggregation_SNOW_1526422[user_defined_function],Failed: DID NOT RAISE <class 'AttributeError'>,failed
7624,tests.integ.modin.frame.test_aggregate,test_aggregate_unsupported_aggregation_SNOW_1526422[list_with_user_defined_function_and_string],Failed: DID NOT RAISE <class 'AttributeError'>,failed
7625,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index0-rtruediv],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7627,tests.integ.modin.frame.test_aggregate,test_aggregate_unsupported_aggregation_SNOW_1526422[tuple_with_user_defined_function_and_string],Failed: DID NOT RAISE <class 'AttributeError'>,failed
7630,tests.integ.modin.binary.test_timedelta,test_timedelta_timedelta_null_arithmetic_invalid_in_pandas[rmod],TypeError: Cannot divide NaTType by TimedeltaArray,failed
7631,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index0-floordiv],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7632,tests.integ.modin.frame.test_aggregate,test_aggregate_unsupported_aggregation_SNOW_1526422[set_with_user_defined_function_and_string],Failed: DID NOT RAISE <class 'AttributeError'>,failed
7635,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--6-52879115],IndexError: positional indexers are out-of-bounds,failed
7638,tests.integ.modin.binary.test_timedelta,test_timedelta_timedelta_null_arithmetic_invalid_in_pandas[floordiv],TypeError: unsupported operand type(s) for //: 'numpy.ndarray' and 'NaTType',failed
7639,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--6--9028751],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
7644,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--8-0],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
7645,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index0-rfloordiv],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7649,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--8--3],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
7650,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index0-mod],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7653,tests.integ.modin.frame.test_aggregate,test_aggregate_unsupported_aggregation_SNOW_1526422[tuple_with_builtins_and_native_pandas_function],ValueError: cannot combine transform and aggregation operations,failed
7655,tests.integ.modin.frame.test_aggregate,test_aggregate_unsupported_aggregation_SNOW_1526422[dict],Failed: DID NOT RAISE <class 'AttributeError'>,failed
7656,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--8-4],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
7657,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index0-rmod],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7660,tests.integ.modin.frame.test_aggregate,test_aggregate_unsupported_aggregation_SNOW_1526422[named_agg0],TypeError: NamedAgg.__new__() missing 1 required positional argument: 'aggfunc',failed
7662,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index0-pow],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7663,tests.integ.modin.binary.test_timedelta,test_timedelta_timedelta_null_arithmetic_invalid_in_pandas[rfloordiv],TypeError: Cannot divide NaTType by TimedeltaArray,failed
7664,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--8--7],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
7667,tests.integ.modin.frame.test_aggregate,test_aggregate_unsupported_aggregation_SNOW_1526422[named_agg1],TypeError: NamedAgg.__new__() missing 1 required positional argument: 'aggfunc',failed
7671,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index0-rpow],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7673,tests.integ.modin.frame.test_aggregate,test_aggregate_unsupported_aggregation_SNOW_1526422[named_agg2],TypeError: NamedAgg.__new__() missing 1 required positional argument: 'aggfunc',failed
7677,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True--2-None-4],ValueError: Incompatible indexer with DataFrame,failed
7680,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index_with_name0-add],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7683,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--8-6],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
7684,tests.integ.modin.frame.test_aggregate,test_named_agg_passed_in_via_star_kwargs,TypeError: NamedAgg.__new__() missing 1 required positional argument: 'aggfunc',failed
7686,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index_with_name0-radd],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7694,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True--2--1-None],ValueError: Incompatible indexer with DataFrame,failed
7696,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--8--6],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
7702,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--8--8],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
7704,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True--2--1--1],ValueError: Incompatible indexer with DataFrame,failed
7706,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index_with_name0-sub],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7709,tests.integ.modin.frame.test_iloc,test_df_iloc_get_scalar_row_and_scalar_col[False--8-7],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
7711,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_bool[col-index with name-key5],IndexError: positional indexers are out-of-bounds,failed
7714,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index_with_name0-rsub],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7716,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True--2--1-1],ValueError: Incompatible indexer with DataFrame,failed
7722,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index_with_name0-mul],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7726,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_bool_series_with_1k_shape[key0],pandas.errors.IndexingError: Unalignable boolean Series provided as indexer (index of the boolean Series and of the indexed object do not match).,failed
7733,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index_with_name0-rmul],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7745,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index_with_name0-truediv],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7746,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_bool_series_with_1k_shape[key1],pandas.errors.IndexingError: Unalignable boolean Series provided as indexer (index of the boolean Series and of the indexed object do not match).,failed
7756,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index_with_name0-rtruediv],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7759,tests.integ.modin.binary.test_timedelta,test_valid_arithmetic_between_possibly_negative_timedeltas[timedelta_scalar3-rfloordiv],reason: precision difference in snowflake,xfailed
7764,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index_with_name0-floordiv],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7781,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True--2-4-4],ValueError: Incompatible indexer with DataFrame,failed
7785,tests.integ.modin.binary.test_timedelta,test_valid_arithmetic_between_possibly_negative_timedeltas[timedelta_scalar4-rfloordiv],reason: precision difference in snowflake,xfailed
7787,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_bool_series_with_1k_shape[key2],pandas.errors.IndexingError: Unalignable boolean Series provided as indexer (index of the boolean Series and of the indexed object do not match).,failed
7791,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index_with_name0-rfloordiv],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7801,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index_with_name0-mod],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7810,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index_with_name0-rmod],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7812,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type_with_duplicate_columns[series-col_key6],ValueError: cannot reindex on an axis with duplicate labels,failed
7815,tests.integ.modin.binary.test_timedelta,test_valid_arithmetic_between_possibly_negative_timedeltas[timedelta_scalar5-rfloordiv],reason: precision difference in snowflake,xfailed
7816,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index_with_name0-pow],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7826,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[index_with_name0-rpow],"ValueError: Unable to coerce to Series, length must be 3: given 2",failed
7832,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type_with_duplicate_columns[series-col_key8],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [nan, 7.0, 4.0]
[right]: [1.0, 4.0, 7.0]
At positional index 0, first diff: nan != 1.0",failed
7836,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True--2-10-4],ValueError: Incompatible indexer with DataFrame,failed
7837,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[list1-add],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7838,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[row-list-key4],IndexError: index 12 is out of bounds for axis 0 with size 7,failed
7846,tests.integ.modin.binary.test_timedelta,test_valid_arithmetic_between_possibly_negative_timedeltas[timedelta_scalar6-rfloordiv],reason: precision difference in snowflake,xfailed
7847,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[row-list-key5],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
7848,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[list1-radd],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7852,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type_with_duplicate_columns[series-col_key10],AssertionError: exception type <class 'IndexError'> does not match with expected type <class 'ValueError'>,failed
7853,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[row-list-key6],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
7858,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True-9-None-None],ValueError: Incompatible indexer with DataFrame,failed
7863,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[row-series-key0],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
7872,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[list1-sub],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7873,tests.integ.modin.binary.test_timedelta,test_valid_arithmetic_between_possibly_negative_timedeltas[timedelta_scalar7-rfloordiv],reason: precision difference in snowflake,xfailed
7876,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True-9-None-1],ValueError: Incompatible indexer with DataFrame,failed
7882,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[list1-rsub],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7889,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True-9-None-4],ValueError: Incompatible indexer with DataFrame,failed
7890,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[list1-mul],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7898,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[list1-rmul],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7901,tests.integ.modin.frame.test_loc,test_df_loc_set_general_key_with_duplicate_rows[series-item1],ValueError: cannot reindex on an axis with duplicate labels,failed
7904,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True-9-None-10],ValueError: Incompatible indexer with DataFrame,failed
7907,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[list1-truediv],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7915,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[list1-rtruediv],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7925,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[list1-floordiv],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7926,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True-9--1-None],ValueError: Incompatible indexer with DataFrame,failed
7933,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[row-series-key4],IndexError: index 12 is out of bounds for axis 0 with size 7,failed
7940,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[row-series-key5],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
7941,tests.integ.modin.frame.test_loc,test_df_loc_get_key_bool[series-key4],pandas.errors.IndexingError: Unalignable boolean Series provided as indexer (index of the boolean Series and of the indexed object do not match).,failed
7949,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[list1-rfloordiv],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7950,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[row-series-key6],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
7958,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[list1-mod],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7963,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True-9--1-1],ValueError: Incompatible indexer with DataFrame,failed
7964,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[list1-rmod],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7969,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[list1-pow],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7972,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True-9--1-4],ValueError: Incompatible indexer with DataFrame,failed
7976,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[list1-rpow],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7980,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[ndarray1-add],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7981,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True-9--1-10],ValueError: Incompatible indexer with DataFrame,failed
7986,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[ndarray1-radd],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
7988,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True-9-1-None],ValueError: Incompatible indexer with DataFrame,failed
8001,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[ndarray1-sub],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
8003,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True-9-1-1],ValueError: Incompatible indexer with DataFrame,failed
8006,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[ndarray1-rsub],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
8011,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[ndarray1-mul],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
8012,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True-9-1-4],ValueError: Incompatible indexer with DataFrame,failed
8017,tests.integ.modin.binary.test_binary_op,test_binary_op_between_df_and_list_like_of_different_lengths_axis_0[ndarray1-rmul],"ValueError: Unable to coerce to Series, length must be 3: given 4",failed
8033,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True-9-1-10],ValueError: Incompatible indexer with DataFrame,failed
8035,tests.integ.modin.frame.test_loc,test_df_loc_set_series_and_list_like_row_key_negative[list],KeyError: array([3]),failed
8040,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True-9-4-None],ValueError: Incompatible indexer with DataFrame,failed
8050,tests.integ.modin.test_dtype_mapping,float)-expected_dtype12-expected_to_pandas_dtype12-expected_to_pandas12],"AssertionError: unexpected dtypes [dtype('float64')], expected [object]
assert False",failed
8053,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True-9-4-1],ValueError: Incompatible indexer with DataFrame,failed
8061,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[list-row_key0-col_key6],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 8)
[right]: (3, 4)",failed
8064,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[row-index-key1],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
8065,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True-9-4-4],ValueError: Incompatible indexer with DataFrame,failed
8075,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True-9-4-10],ValueError: Incompatible indexer with DataFrame,failed
8086,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[list-row_key0-col_key8],"AssertionError: DataFrame.iloc[:, 0] (column name=""D"") are different

DataFrame.iloc[:, 0] (column name=""D"") values are different (66.66667 %)
[index]: [0, 1, 2]
[left]:  [nan, 4.0, nan]
[right]: [1.0, 4.0, 7.0]
At positional index 0, first diff: nan != 1.0",failed
8088,tests.integ.modin.frame.test_set_index,test_set_index_timedelta_index[frame_of_ints],"TypeError: The parameter ""keys"" may be a column key, one-dimensional array, or a list containing only valid column keys and one-dimensional arrays. Received column of type <class 'snowflake.snowpark.modin.plugin.extensions.timedelta_index.TimedeltaIndex'>",failed
8089,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True-9-10-None],ValueError: Incompatible indexer with DataFrame,failed
8097,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[list-row_key0-col_key9],"KeyError: array(['1', '2'], dtype='<U21')",failed
8106,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[row-index-key2],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
8107,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[list-row_key0-col_key10],"KeyError: array(['E', 1, 'X', 2], dtype=object)",failed
8117,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[list-row_key1-col_key1],"AssertionError: DataFrame.iloc[:, 3] (column name=""A"") are different

DataFrame.iloc[:, 3] (column name=""A"") values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [1, 4, 7]
[right]: [nan, 7.0, 4.0]",failed
8122,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True-9-10-1],ValueError: Incompatible indexer with DataFrame,failed
8124,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[list-row_key1-col_key2],"AssertionError: DataFrame.iloc[:, 4] (column name=""Y"") are different

DataFrame.iloc[:, 4] (column name=""Y"") values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [1, 4, 7]
[right]: [nan, nan, nan]",failed
8135,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[row-index-key3],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
8138,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True-9-10-4],ValueError: Incompatible indexer with DataFrame,failed
8143,tests.integ.modin.frame.test_nlargest_nsmallest,test_nlargest_nsmallest_all_keep_not_implemented[nlargest],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
8145,tests.integ.modin.frame.test_nlargest_nsmallest,test_nlargest_nsmallest_all_keep_not_implemented[nsmallest],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
8146,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[list-row_key1-col_key6],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 8)
[right]: (3, 4)",failed
8150,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True-9-10-10],ValueError: Incompatible indexer with DataFrame,failed
8154,tests.integ.modin.frame.test_nlargest_nsmallest,test_nlargest_nsmallest_invalid_label[nlargest-None],AssertionError: exception type <class 'AttributeError'> does not match with expected type <class 'KeyError'>,failed
8160,tests.integ.modin.frame.test_set_index,test_set_index_timedelta_index[frame_of_ints_and_timedelta],"TypeError: The parameter ""keys"" may be a column key, one-dimensional array, or a list containing only valid column keys and one-dimensional arrays. Received column of type <class 'snowflake.snowpark.modin.plugin.extensions.timedelta_index.TimedeltaIndex'>",failed
8162,tests.integ.modin.frame.test_nlargest_nsmallest,test_nlargest_nsmallest_invalid_label[nsmallest-None],AssertionError: exception type <class 'AttributeError'> does not match with expected type <class 'KeyError'>,failed
8163,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[list-row_key1-col_key8],"AssertionError: DataFrame.iloc[:, 0] (column name=""D"") are different

DataFrame.iloc[:, 0] (column name=""D"") values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [nan, nan, nan]
[right]: [1.0, 4.0, 7.0]
At positional index 0, first diff: nan != 1.0",failed
8165,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[row-index-key4],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
8166,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True--9-None-None],ValueError: Incompatible indexer with DataFrame,failed
8172,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[list-row_key1-col_key9],"KeyError: array(['1', '2'], dtype='<U21')",failed
8176,tests.integ.modin.frame.test_nlargest_nsmallest,test_nlargest_nsmallest_duplicate_labels[nlargest],AttributeError: 'DataFrame' object has no attribute 'dtype'. Did you mean: 'dtypes'?,failed
8177,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True--9-None--1],ValueError: Incompatible indexer with DataFrame,failed
8181,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[list-row_key1-col_key10],"KeyError: array(['E', 1, 'X', 2], dtype=object)",failed
8185,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True--9-None-1],ValueError: Incompatible indexer with DataFrame,failed
8187,tests.integ.modin.frame.test_nlargest_nsmallest,test_nlargest_nsmallest_duplicate_labels[nsmallest],AttributeError: 'DataFrame' object has no attribute 'dtype'. Did you mean: 'dtypes'?,failed
8188,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[row-index-key5],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
8190,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type_with_duplicate_columns[list-col_key1],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [1, 4, 7]
[right]: [nan, 7.0, 4.0]",failed
8191,tests.integ.modin.frame.test_nlargest_nsmallest,test_nlargest_nsmallest_non_numeric_types[nlargest-data0],"TypeError: Column 'A' has dtype object, cannot use method 'nlargest' with this dtype",failed
8195,tests.integ.modin.frame.test_nlargest_nsmallest,test_nlargest_nsmallest_non_numeric_types[nlargest-data1],TypeError: '<' not supported between instances of 'str' and 'float',failed
8196,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True--9-None-4],ValueError: Incompatible indexer with DataFrame,failed
8201,tests.integ.modin.frame.test_nlargest_nsmallest,test_nlargest_nsmallest_non_numeric_types[nsmallest-data0],"TypeError: Column 'A' has dtype object, cannot use method 'nsmallest' with this dtype",failed
8202,tests.integ.modin.frame.test_set_index,test_set_index_different_index_length,"TypeError: The parameter ""keys"" may be a column key, one-dimensional array, or a list containing only valid column keys and one-dimensional arrays. Received column of type <class 'snowflake.snowpark.modin.plugin.extensions.index.Index'>",failed
8203,tests.integ.modin.frame.test_set_index,test_set_index_dup_column_name,"AssertionError: Regex pattern did not match.
 Regex: ""The column label 'A' is not unique""
 Input: 'Index data must be 1-dimensional'",failed
8205,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True--9--1-None],ValueError: Incompatible indexer with DataFrame,failed
8206,tests.integ.modin.frame.test_nlargest_nsmallest,test_nlargest_nsmallest_non_numeric_types[nsmallest-data1],TypeError: '<' not supported between instances of 'str' and 'int',failed
8208,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[row-index-key6],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
8210,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type_with_duplicate_columns[list-col_key6],ValueError: cannot reindex on an axis with duplicate labels,failed
8214,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[row-ndarray-key0],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
8217,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True--9--1--1],ValueError: Incompatible indexer with DataFrame,failed
8221,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type_with_duplicate_columns[list-col_key8],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [nan, 7.0, 4.0]
[right]: [1.0, 4.0, 7.0]
At positional index 0, first diff: nan != 1.0",failed
8228,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True--9--1-1],ValueError: Incompatible indexer with DataFrame,failed
8234,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type_with_duplicate_columns[list-col_key10],AssertionError: exception type <class 'IndexError'> does not match with expected type <class 'ValueError'>,failed
8240,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True--9--1-4],ValueError: Incompatible indexer with DataFrame,failed
8246,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[row-ndarray-key4],IndexError: index 12 is out of bounds for axis 0 with size 7,failed
8250,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[row-ndarray-key5],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
8254,tests.integ.modin.frame.test_set_index,test_set_index_names[frame_of_ints],"TypeError: The parameter ""keys"" may be a column key, one-dimensional array, or a list containing only valid column keys and one-dimensional arrays. Received column of type <class 'snowflake.snowpark.modin.plugin.extensions.index.Index'>",failed
8256,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[row-ndarray-key6],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
8257,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True--9-1-None],ValueError: Incompatible indexer with DataFrame,failed
8258,tests.integ.modin.frame.test_loc,test_df_loc_set_general_key_with_duplicate_rows[list-item1],ValueError: cannot reindex on an axis with duplicate labels,failed
8276,tests.integ.modin.frame.test_to_view,test_to_view_index[method-False-None-expected_index_columns2],"NotImplementedError: Modin supports the method DataFrame.to_view on the Snowflake backend, but not on the backend Pandas.",failed
8284,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True--9-1--1],ValueError: Incompatible indexer with DataFrame,failed
8290,tests.integ.modin.frame.test_loc,test_df_loc_get_key_bool[list-key5],IndexError: positional indexers are out-of-bounds,failed
8294,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True--9-1-1],ValueError: Incompatible indexer with DataFrame,failed
8299,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True--9-1-4],ValueError: Incompatible indexer with DataFrame,failed
8302,tests.integ.modin.frame.test_set_index,test_set_index_names[frame_of_ints_and_timedelta],"TypeError: The parameter ""keys"" may be a column key, one-dimensional array, or a list containing only valid column keys and one-dimensional arrays. Received column of type <class 'snowflake.snowpark.modin.plugin.extensions.index.Index'>",failed
8311,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True--9-4-None],ValueError: Incompatible indexer with DataFrame,failed
8319,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True--9-4--1],ValueError: Incompatible indexer with DataFrame,failed
8329,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True--9-4-1],ValueError: Incompatible indexer with DataFrame,failed
8333,tests.integ.modin.frame.test_to_view,test_to_view_index[method-False-index_labels3-expected_index_columns3],"NotImplementedError: Modin supports the method DataFrame.to_view on the Snowflake backend, but not on the backend Pandas.",failed
8338,tests.integ.modin.frame.test_loc,test_df_loc_set_series_and_list_like_row_key_negative[array],KeyError: array([3]),failed
8345,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True--9-4-4],ValueError: Incompatible indexer with DataFrame,failed
8374,tests.integ.modin.frame.test_nunique,test_dataframe_unique_dropna_negative,Failed: DID NOT RAISE <class 'ValueError'>,failed
8377,tests.integ.modin.frame.test_nunique,test_dataframe_unique_axis1_not_implemented[True],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
8379,tests.integ.modin.frame.test_nunique,test_dataframe_unique_axis1_not_implemented[False],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
8382,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[array-row_key0-col_key6],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 8)
[right]: (3, 4)",failed
8389,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True--9-10-None],ValueError: Incompatible indexer with DataFrame,failed
8392,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[array-row_key0-col_key8],"AssertionError: DataFrame.iloc[:, 0] (column name=""D"") are different

DataFrame.iloc[:, 0] (column name=""D"") values are different (66.66667 %)
[index]: [0, 1, 2]
[left]:  [nan, 4.0, nan]
[right]: [1.0, 4.0, 7.0]
At positional index 0, first diff: nan != 1.0",failed
8396,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[row-index with name-key1],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
8398,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True--9-10--1],ValueError: Incompatible indexer with DataFrame,failed
8403,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[array-row_key0-col_key9],"KeyError: array(['1', '2'], dtype='<U21')",failed
8413,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True--9-10-1],ValueError: Incompatible indexer with DataFrame,failed
8418,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[array-row_key0-col_key10],"KeyError: array(['E', 1, 'X', 2], dtype=object)",failed
8420,tests.integ.modin.frame.test_pct_change,test_pct_change_simple[rows-_NoDefault.no_default--1-nonulls],"Failed: DID NOT WARN. No warnings of type (<class 'FutureWarning'>,) were emitted.
The list of emitted warnings is: [].",failed
8425,tests.integ.modin.frame.test_pct_change,test_pct_change_simple[rows-_NoDefault.no_default-0-nonulls],"Failed: DID NOT WARN. No warnings of type (<class 'FutureWarning'>,) were emitted.
The list of emitted warnings is: [].",failed
8429,tests.integ.modin.frame.test_loc,test_df_loc_set_key_slice[True--9-10-4],ValueError: Incompatible indexer with DataFrame,failed
8430,tests.integ.modin.frame.test_pct_change,test_pct_change_simple[rows-_NoDefault.no_default-1-nonulls],"Failed: DID NOT WARN. No warnings of type (<class 'FutureWarning'>,) were emitted.
The list of emitted warnings is: [].",failed
8432,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[array-row_key1-col_key1],"AssertionError: DataFrame.iloc[:, 3] (column name=""A"") are different

DataFrame.iloc[:, 3] (column name=""A"") values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [1, 4, 7]
[right]: [nan, 7.0, 4.0]",failed
8433,tests.integ.modin.frame.test_apply,test_apply_axis1_with_dynamic_pivot_and_with_3rd_party_libraries_and_decorator[packages1-9],TODO: SNOW-1261830 need to support PandasSeriesType annotation.,xfailed
8437,tests.integ.modin.frame.test_pct_change,test_pct_change_simple[rows-_NoDefault.no_default-2-nonulls],"Failed: DID NOT WARN. No warnings of type (<class 'FutureWarning'>,) were emitted.
The list of emitted warnings is: [].",failed
8443,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[row-index with name-key2],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
8445,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[array-row_key1-col_key2],"AssertionError: DataFrame.iloc[:, 4] (column name=""Y"") are different

DataFrame.iloc[:, 4] (column name=""Y"") values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [1, 4, 7]
[right]: [nan, nan, nan]",failed
8448,tests.integ.modin.frame.test_to_view,test_to_view_index[function-True-None-expected_index_columns0],"NotImplementedError: Modin supports the method DataFrame.to_view on the Snowflake backend, but not on the backend Pandas.",failed
8458,tests.integ.modin.frame.test_loc,test_df_loc_set_item_df_single_value[key0-val_columns0-val_index0],ValueError: Length of values (1) does not match length of index (4),failed
8478,tests.integ.modin.frame.test_set_index,test_set_index_duplicate_label_in_dataframe_negative[True],"AssertionError: Regex pattern did not match.
 Regex: ""The column label 'a' is not unique""
 Input: 'Index data must be 1-dimensional'",failed
8484,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[array-row_key1-col_key6],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 8)
[right]: (3, 4)",failed
8489,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[row-index with name-key3],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
8492,tests.integ.modin.frame.test_set_index,test_set_index_duplicate_label_in_dataframe_negative[False],"AssertionError: Regex pattern did not match.
 Regex: ""The column label 'a' is not unique""
 Input: 'Index data must be 1-dimensional'",failed
8494,tests.integ.modin.frame.test_loc,test_df_loc_set_item_df_single_value[key0-val_columns0-val_index1],ValueError: Length of values (1) does not match length of index (4),failed
8502,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[array-row_key1-col_key8],"AssertionError: DataFrame.iloc[:, 0] (column name=""D"") are different

DataFrame.iloc[:, 0] (column name=""D"") values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [nan, nan, nan]
[right]: [1.0, 4.0, 7.0]
At positional index 0, first diff: nan != 1.0",failed
8506,tests.integ.modin.frame.test_apply,test_udfs_and_udtfs_with_snowpark_object_error_msg,Failed: DID NOT RAISE <class 'ValueError'>,failed
8514,tests.integ.modin.frame.test_loc,test_df_loc_set_item_df_single_value[key0-val_columns1-val_index0],ValueError: Length of values (1) does not match length of index (4),failed
8518,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[array-row_key1-col_key9],"KeyError: array(['1', '2'], dtype='<U21')",failed
8528,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[array-row_key1-col_key10],"KeyError: array(['E', 1, 'X', 2], dtype=object)",failed
8530,tests.integ.modin.frame.test_loc,test_df_loc_set_item_df_single_value[key0-val_columns1-val_index1],ValueError: Length of values (1) does not match length of index (4),failed
8538,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type_with_duplicate_columns[array-col_key1],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [1, 4, 7]
[right]: [nan, 7.0, 4.0]",failed
8539,tests.integ.modin.frame.test_pct_change,test_pct_change_simple[columns-_NoDefault.no_default--1-nonulls],"Failed: DID NOT WARN. No warnings of type (<class 'FutureWarning'>,) were emitted.
The list of emitted warnings is: [].",failed
8543,tests.integ.modin.frame.test_pct_change,test_pct_change_simple[columns-_NoDefault.no_default-0-nonulls],"Failed: DID NOT WARN. No warnings of type (<class 'FutureWarning'>,) were emitted.
The list of emitted warnings is: [].",failed
8545,tests.integ.modin.frame.test_loc,test_df_loc_set_item_df_single_value[A-val_columns0-val_index0],ValueError: Length of values (1) does not match length of index (4),failed
8548,tests.integ.modin.frame.test_pct_change,test_pct_change_simple[columns-_NoDefault.no_default-1-nonulls],"Failed: DID NOT WARN. No warnings of type (<class 'FutureWarning'>,) were emitted.
The list of emitted warnings is: [].",failed
8549,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[row-index with name-key4],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
8552,tests.integ.modin.frame.test_pct_change,test_pct_change_simple[columns-_NoDefault.no_default-2-nonulls],"Failed: DID NOT WARN. No warnings of type (<class 'FutureWarning'>,) were emitted.
The list of emitted warnings is: [].",failed
8566,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type_with_duplicate_columns[array-col_key6],ValueError: cannot reindex on an axis with duplicate labels,failed
8573,tests.integ.modin.frame.test_loc,test_df_loc_set_item_df_single_value[A-val_columns0-val_index1],ValueError: Length of values (1) does not match length of index (4),failed
8575,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[row-index with name-key5],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
8576,tests.integ.modin.frame.test_set_index,test_set_index_pass_single_array[True-True-frame_of_ints-Index],"TypeError: The parameter ""keys"" may be a column key, one-dimensional array, or a list containing only valid column keys and one-dimensional arrays. Received column of type <class 'snowflake.snowpark.modin.plugin.extensions.index.Index'>",failed
8577,tests.integ.modin.frame.test_to_view,test_to_view_index[function-True-index_labels1-expected_index_columns1],"NotImplementedError: Modin supports the method DataFrame.to_view on the Snowflake backend, but not on the backend Pandas.",failed
8581,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type_with_duplicate_columns[array-col_key8],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [nan, 7.0, 4.0]
[right]: [1.0, 4.0, 7.0]
At positional index 0, first diff: nan != 1.0",failed
8595,tests.integ.modin.frame.test_apply_axis_0,test_axis_0_basic_types_without_type_hints[return_timedelta_scalar],[XPASS(strict)] SNOW-1619940,failed
8596,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type_with_duplicate_columns[array-col_key10],AssertionError: exception type <class 'IndexError'> does not match with expected type <class 'ValueError'>,failed
8598,tests.integ.modin.frame.test_loc,test_df_loc_set_item_df_single_value[A-val_columns1-val_index0],ValueError: Length of values (1) does not match length of index (4),failed
8604,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[row-index with name-key6],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
8618,tests.integ.modin.frame.test_loc,test_df_loc_set_item_df_single_value[A-val_columns1-val_index1],ValueError: Length of values (1) does not match length of index (4),failed
8630,tests.integ.modin.frame.test_pct_change,test_axis_0_with_timedelta[None--1],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8634,tests.integ.modin.frame.test_apply_axis_0,test_axis_0_basic_types_without_type_hints[apply_on_frame_with_timedelta_data_columns_returns_int],[XPASS(strict)] ,failed
8635,tests.integ.modin.frame.test_pct_change,test_axis_0_with_timedelta[None-0],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8636,tests.integ.modin.frame.test_loc,test_df_loc_set_with_scalar_item[col_key4],SNOW-1321196: pandas 2.2.1 migration,xfailed
8640,tests.integ.modin.frame.test_pct_change,test_axis_0_with_timedelta[None-1],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8642,tests.integ.modin.frame.test_loc,test_df_loc_set_general_key_with_duplicate_rows[array-item1],ValueError: cannot reindex on an axis with duplicate labels,failed
8644,tests.integ.modin.frame.test_apply_axis_0,test_axis_0_basic_types_with_type_hints[return_timedelta_scalar],[XPASS(strict)] SNOW-1619940,failed
8647,tests.integ.modin.frame.test_pct_change,test_axis_0_with_timedelta[None-2],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8655,tests.integ.modin.frame.test_pct_change,test_axis_0_with_timedelta[_NoDefault.no_default--1],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8657,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[col-list-key4],IndexError: index 12 is out of bounds for axis 0 with size 7,failed
8662,tests.integ.modin.frame.test_pct_change,test_axis_0_with_timedelta[_NoDefault.no_default-0],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8665,tests.integ.modin.frame.test_set_index,test_set_index_pass_single_array[True-True-frame_of_ints_and_timedelta-Index],"TypeError: The parameter ""keys"" may be a column key, one-dimensional array, or a list containing only valid column keys and one-dimensional arrays. Received column of type <class 'snowflake.snowpark.modin.plugin.extensions.index.Index'>",failed
8666,tests.integ.modin.frame.test_to_view,test_to_view_index[function-False-None-expected_index_columns2],"NotImplementedError: Modin supports the method DataFrame.to_view on the Snowflake backend, but not on the backend Pandas.",failed
8669,tests.integ.modin.frame.test_pct_change,test_axis_0_with_timedelta[_NoDefault.no_default-1],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8671,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[col-list-key5],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
8677,tests.integ.modin.frame.test_pct_change,test_axis_0_with_timedelta[_NoDefault.no_default-2],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8679,tests.integ.modin.frame.test_loc,test_df_loc_get_key_bool[array-key5],IndexError: positional indexers are out-of-bounds,failed
8680,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[col-list-key6],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
8684,tests.integ.modin.frame.test_pct_change,test_axis_0_with_timedelta[ffill--1],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8689,tests.integ.modin.frame.test_pct_change,test_axis_0_with_timedelta[ffill-0],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8690,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[col-series-key0],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
8692,tests.integ.modin.frame.test_loc,test_df_loc_set_with_column_wise_list_like_item[list-<lambda>-item2-A],"ValueError: could not broadcast input array from shape (4,) into shape (2, 1)",failed
8693,tests.integ.modin.frame.test_apply_axis_0,test_axis_0_basic_types_with_type_hints[apply_on_frame_with_timedelta_data_columns_returns_int],[XPASS(strict)] ,failed
8694,tests.integ.modin.frame.test_pct_change,test_axis_0_with_timedelta[ffill-1],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8695,tests.integ.modin.frame.test_apply_axis_0,test_frame_with_timedelta_index,[XPASS(strict)] ,failed
8697,tests.integ.modin.frame.test_pct_change,test_axis_0_with_timedelta[ffill-2],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8700,tests.integ.modin.frame.test_pct_change,test_axis_0_with_timedelta[pad--1],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8708,tests.integ.modin.frame.test_loc,test_df_loc_set_with_column_wise_list_like_item[list-<lambda>-item2-X],"ValueError: could not broadcast input array from shape (4,) into shape (2, 1)",failed
8711,tests.integ.modin.frame.test_pct_change,test_axis_0_with_timedelta[pad-0],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8712,tests.integ.modin.frame.test_loc,test_df_loc_set_with_column_wise_list_like_item[list-<lambda>-item2-col_key2],"ValueError: could not broadcast input array from shape (4,) into shape (2, 1)",failed
8716,tests.integ.modin.frame.test_pct_change,test_axis_0_with_timedelta[pad-1],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8717,tests.integ.modin.frame.test_apply_axis_0,test_axis_0_return_dataframe_not_supported,"ValueError: If using all scalar values, you must pass an index",failed
8718,tests.integ.modin.frame.test_loc,test_df_loc_set_with_column_wise_list_like_item[list-<lambda>-item2-col_key3],"ValueError: could not broadcast input array from shape (4,) into shape (2, 1)",failed
8720,tests.integ.modin.frame.test_pct_change,test_axis_0_with_timedelta[pad-2],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8721,tests.integ.modin.frame.test_apply_axis_0,test_result_type[reduce],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
8724,tests.integ.modin.frame.test_pct_change,test_axis_0_with_timedelta[backfill--1],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8725,tests.integ.modin.frame.test_apply_axis_0,test_result_type[expand],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
8726,tests.integ.modin.frame.test_loc,test_df_loc_set_with_column_wise_list_like_item[list-<lambda>-item2-col_key4],"ValueError: could not broadcast input array from shape (4,) into shape (2, 1)",failed
8727,tests.integ.modin.frame.test_apply_axis_0,test_result_type[broadcast],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
8728,tests.integ.modin.frame.test_pct_change,test_axis_0_with_timedelta[backfill-0],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8730,tests.integ.modin.frame.test_apply_axis_0,test_axis_1_apply_args_kwargs_with_snowpandas_object,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
8733,tests.integ.modin.frame.test_pct_change,test_axis_0_with_timedelta[backfill-1],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8734,tests.integ.modin.frame.test_to_view,test_to_view_index[function-False-index_labels3-expected_index_columns3],"NotImplementedError: Modin supports the method DataFrame.to_view on the Snowflake backend, but not on the backend Pandas.",failed
8735,tests.integ.modin.frame.test_loc,test_df_loc_set_with_column_wise_list_like_item[list-<lambda>-item2-None],"ValueError: could not broadcast input array from shape (4,) into shape (2, 1)",failed
8737,tests.integ.modin.frame.test_pct_change,test_axis_0_with_timedelta[backfill-2],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8739,tests.integ.modin.frame.test_loc,test_df_loc_set_series_and_list_like_row_key_negative[index],"KeyError: Index([3], dtype='int64')",failed
8742,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[col-series-key4],IndexError: index 12 is out of bounds for axis 0 with size 7,failed
8743,tests.integ.modin.frame.test_pct_change,test_axis_0_with_timedelta[bfill--1],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8744,tests.integ.modin.frame.test_set_index,test_set_index_pass_single_array[True-False-frame_of_ints-Index],"TypeError: The parameter ""keys"" may be a column key, one-dimensional array, or a list containing only valid column keys and one-dimensional arrays. Received column of type <class 'snowflake.snowpark.modin.plugin.extensions.index.Index'>",failed
8750,tests.integ.modin.frame.test_pct_change,test_axis_0_with_timedelta[bfill-0],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8754,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[col-series-key5],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
8758,tests.integ.modin.frame.test_pct_change,test_axis_0_with_timedelta[bfill-1],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8763,tests.integ.modin.frame.test_pct_change,test_axis_0_with_timedelta[bfill-2],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8764,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[col-series-key6],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
8769,tests.integ.modin.frame.test_pct_change,test_axis_1_with_timedelta_columns[None--1],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8772,tests.integ.modin.frame.test_pct_change,test_axis_1_with_timedelta_columns[None-0],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8774,tests.integ.modin.frame.test_loc,test_df_loc_set_with_column_wise_list_like_item[array-<lambda>-item2-A],"ValueError: could not broadcast input array from shape (4,) into shape (2, 1)",failed
8777,tests.integ.modin.frame.test_pct_change,test_axis_1_with_timedelta_columns[None-1],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8779,tests.integ.modin.frame.test_pct_change,test_axis_1_with_timedelta_columns[None-2],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8780,tests.integ.modin.frame.test_loc,test_df_loc_set_with_column_wise_list_like_item[array-<lambda>-item2-X],"ValueError: could not broadcast input array from shape (4,) into shape (2, 1)",failed
8790,tests.integ.modin.frame.test_pct_change,test_axis_1_with_timedelta_columns[_NoDefault.no_default--1],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8791,tests.integ.modin.frame.test_loc,test_df_loc_set_with_column_wise_list_like_item[array-<lambda>-item2-col_key2],"ValueError: could not broadcast input array from shape (4,) into shape (2, 1)",failed
8793,tests.integ.modin.frame.test_pct_change,test_axis_1_with_timedelta_columns[_NoDefault.no_default-0],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8795,tests.integ.modin.frame.test_loc,test_df_loc_set_with_column_wise_list_like_item[array-<lambda>-item2-col_key3],"ValueError: could not broadcast input array from shape (4,) into shape (2, 1)",failed
8796,tests.integ.modin.frame.test_to_view,test_to_view_multiindex[method],"NotImplementedError: Modin supports the method DataFrame.to_view on the Snowflake backend, but not on the backend Pandas.",failed
8797,tests.integ.modin.frame.test_pct_change,test_axis_1_with_timedelta_columns[_NoDefault.no_default-1],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8798,tests.integ.modin.frame.test_loc,test_df_loc_set_with_column_wise_list_like_item[array-<lambda>-item2-col_key4],"ValueError: could not broadcast input array from shape (4,) into shape (2, 1)",failed
8799,tests.integ.modin.frame.test_pct_change,test_axis_1_with_timedelta_columns[_NoDefault.no_default-2],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8802,tests.integ.modin.frame.test_apply_axis_0,test_axis_0_date_time_timestamp_type[data0-<lambda>-expected_result0],AttributeError: Can only use .dt accessor with datetimelike values,failed
8803,tests.integ.modin.frame.test_pct_change,test_axis_1_with_timedelta_columns[ffill--1],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8804,tests.integ.modin.frame.test_loc,test_df_loc_set_with_column_wise_list_like_item[array-<lambda>-item2-None],"ValueError: could not broadcast input array from shape (4,) into shape (2, 1)",failed
8807,tests.integ.modin.frame.test_pct_change,test_axis_1_with_timedelta_columns[ffill-0],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8810,tests.integ.modin.frame.test_pct_change,test_axis_1_with_timedelta_columns[ffill-1],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8814,tests.integ.modin.frame.test_pct_change,test_axis_1_with_timedelta_columns[ffill-2],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8817,tests.integ.modin.frame.test_apply_axis_0,test_axis_0_date_time_timestamp_type[data1-<lambda>-expected_result1],AttributeError: Can only use .dt accessor with datetimelike values,failed
8819,tests.integ.modin.frame.test_set_index,test_set_index_pass_single_array[True-False-frame_of_ints_and_timedelta-Index],"TypeError: The parameter ""keys"" may be a column key, one-dimensional array, or a list containing only valid column keys and one-dimensional arrays. Received column of type <class 'snowflake.snowpark.modin.plugin.extensions.index.Index'>",failed
8821,tests.integ.modin.frame.test_pct_change,test_axis_1_with_timedelta_columns[pad--1],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8828,tests.integ.modin.frame.test_pct_change,test_axis_1_with_timedelta_columns[pad-0],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8835,tests.integ.modin.frame.test_pct_change,test_axis_1_with_timedelta_columns[pad-1],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8840,tests.integ.modin.frame.test_pct_change,test_axis_1_with_timedelta_columns[pad-2],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8841,tests.integ.modin.frame.test_apply_axis_0,test_axis_0_apply_args_kwargs,AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
8842,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[index-row_key0-col_key6],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 8)
[right]: (3, 4)",failed
8845,tests.integ.modin.frame.test_pct_change,test_axis_1_with_timedelta_columns[backfill--1],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8846,tests.integ.modin.frame.test_loc,test_df_loc_set_with_column_wise_list_like_item[tuple-<lambda>-item2-A],"ValueError: could not broadcast input array from shape (4,) into shape (2, 1)",failed
8848,tests.integ.modin.frame.test_pct_change,test_axis_1_with_timedelta_columns[backfill-0],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8849,tests.integ.modin.frame.test_loc,test_df_loc_set_with_column_wise_list_like_item[tuple-<lambda>-item2-X],"ValueError: could not broadcast input array from shape (4,) into shape (2, 1)",failed
8852,tests.integ.modin.frame.test_pct_change,test_axis_1_with_timedelta_columns[backfill-1],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8853,tests.integ.modin.frame.test_to_view,test_to_view_multiindex[function],"NotImplementedError: Modin supports the method DataFrame.to_view on the Snowflake backend, but not on the backend Pandas.",failed
8854,tests.integ.modin.frame.test_loc,test_df_loc_set_with_column_wise_list_like_item[tuple-<lambda>-item2-col_key2],"ValueError: could not broadcast input array from shape (4,) into shape (2, 1)",failed
8857,tests.integ.modin.frame.test_pct_change,test_axis_1_with_timedelta_columns[backfill-2],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8859,tests.integ.modin.frame.test_apply_axis_0,test_apply_axis_0_bug_1650918[data0-<lambda>],[XPASS(strict)] SNOW-1650918: Apply on dataframe data columns containing NULL fails with invalid arguments to udtf function,failed
8860,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[index-row_key0-col_key8],"AssertionError: DataFrame.iloc[:, 0] (column name=""D"") are different

DataFrame.iloc[:, 0] (column name=""D"") values are different (66.66667 %)
[index]: [0, 1, 2]
[left]:  [nan, 4.0, nan]
[right]: [1.0, 4.0, 7.0]
At positional index 0, first diff: nan != 1.0",failed
8862,tests.integ.modin.frame.test_apply_axis_0,test_apply_axis_0_bug_1650918[data1-<lambda>],[XPASS(strict)] SNOW-1650918: Apply on dataframe data columns containing NULL fails with invalid arguments to udtf function,failed
8863,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[col-index-key1],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
8864,tests.integ.modin.frame.test_apply_axis_0,test_apply_nested_series_negative,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
8866,tests.integ.modin.frame.test_pct_change,test_axis_1_with_timedelta_columns[bfill--1],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8867,tests.integ.modin.frame.test_loc,test_df_loc_set_with_column_wise_list_like_item[tuple-<lambda>-item2-col_key3],"ValueError: could not broadcast input array from shape (4,) into shape (2, 1)",failed
8868,tests.integ.modin.frame.test_set_index,test_set_index_pass_single_array[False-True-frame_of_ints-Index],"TypeError: The parameter ""keys"" may be a column key, one-dimensional array, or a list containing only valid column keys and one-dimensional arrays. Received column of type <class 'snowflake.snowpark.modin.plugin.extensions.index.Index'>",failed
8869,tests.integ.modin.frame.test_pct_change,test_axis_1_with_timedelta_columns[bfill-0],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8872,tests.integ.modin.frame.test_pct_change,test_axis_1_with_timedelta_columns[bfill-1],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8874,tests.integ.modin.frame.test_loc,test_df_loc_set_with_column_wise_list_like_item[tuple-<lambda>-item2-col_key4],"ValueError: could not broadcast input array from shape (4,) into shape (2, 1)",failed
8877,tests.integ.modin.frame.test_pct_change,test_axis_1_with_timedelta_columns[bfill-2],TypeError: unsupported operand type for /: got timedelta64[ns],failed
8879,tests.integ.modin.frame.test_pct_change,test_axis_1_with_timedelta_and_non_timedelta_column_invalid[data0],"AssertionError: Regex pattern did not match.
 Regex: 'pct_change\\(axis=1\\)\\ is\\ invalid\\ when\\ one\\ column\\ is\\ Timedelta\\ another\\ column\\ is\\ not\\.'
 Input: 'unsupported operand type for /: got timedelta64[ns]'",failed
8881,tests.integ.modin.frame.test_loc,test_df_loc_set_with_column_wise_list_like_item[tuple-<lambda>-item2-None],"ValueError: could not broadcast input array from shape (4,) into shape (2, 1)",failed
8882,tests.integ.modin.frame.test_pct_change,test_axis_1_with_timedelta_and_non_timedelta_column_invalid[data1],"AssertionError: Regex pattern did not match.
 Regex: 'pct_change\\(axis=1\\)\\ is\\ invalid\\ when\\ one\\ column\\ is\\ Timedelta\\ another\\ column\\ is\\ not\\.'
 Input: 'unsupported operand type for /: got timedelta64[ns]'",failed
8883,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[col-index-key2],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
8884,tests.integ.modin.frame.test_pct_change,test_pct_change_unsupported_args[params0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
8887,tests.integ.modin.frame.test_pct_change,test_pct_change_bad_periods,ValueError: periods must be an int. got <class 'str'> instead,failed
8888,tests.integ.modin.frame.test_pct_change,test_pct_change_bad_dtypes[data0],"AssertionError: Regex pattern did not match.
 Regex: 'cannot perform pct_change on non-numeric column with dtype'
 Input: 'unsupported operand type for /: got object'",failed
8890,tests.integ.modin.frame.test_pct_change,test_pct_change_bad_dtypes[data1],"AssertionError: Regex pattern did not match.
 Regex: 'cannot perform pct_change on non-numeric column with dtype'
 Input: 'unsupported operand type for /: got object'",failed
8891,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[index-row_key0-col_key9],"KeyError: array(['1', '2'], dtype='<U21')",failed
8893,tests.integ.modin.frame.test_to_view,test_to_view_multiindex_length_mismatch_raises[method],"NotImplementedError: Modin supports the method DataFrame.to_view on the Snowflake backend, but not on the backend Pandas.",failed
8894,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[col-index-key3],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
8899,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[index-row_key0-col_key10],"KeyError: array(['E', 1, 'X', 2], dtype=object)",failed
8904,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[col-index-key4],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
8907,tests.integ.modin.frame.test_set_index,test_set_index_pass_single_array[False-True-frame_of_ints_and_timedelta-Index],"TypeError: The parameter ""keys"" may be a column key, one-dimensional array, or a list containing only valid column keys and one-dimensional arrays. Received column of type <class 'snowflake.snowpark.modin.plugin.extensions.index.Index'>",failed
8908,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[index-row_key1-col_key1],"AssertionError: DataFrame.iloc[:, 3] (column name=""A"") are different

DataFrame.iloc[:, 3] (column name=""A"") values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [1, 4, 7]
[right]: [nan, 7.0, 4.0]",failed
8924,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[col-index-key5],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
8925,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[index-row_key1-col_key2],"AssertionError: DataFrame.iloc[:, 4] (column name=""Y"") are different

DataFrame.iloc[:, 4] (column name=""Y"") values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [1, 4, 7]
[right]: [nan, nan, nan]",failed
8928,tests.integ.modin.frame.test_to_view,test_to_view_multiindex_length_mismatch_raises[function],"NotImplementedError: Modin supports the method DataFrame.to_view on the Snowflake backend, but not on the backend Pandas.",failed
8944,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[col-index-key6],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
8947,tests.integ.modin.frame.test_quantile,test_quantile_unsupported_args_negative[table-lower-0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
8948,tests.integ.modin.frame.test_quantile,test_quantile_unsupported_args_negative[table-lower-1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
8950,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[col-ndarray-key0],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
8951,tests.integ.modin.frame.test_quantile,test_quantile_unsupported_args_negative[table-higher-0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
8954,tests.integ.modin.frame.test_quantile,test_quantile_unsupported_args_negative[table-higher-1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
8962,tests.integ.modin.frame.test_transpose,test_dataframe_transpose_set_timedelta_index_SNOW_1652608[index0-transpose_twice],[XPASS(strict)] SNOW-886400,failed
8964,tests.integ.modin.frame.test_quantile,test_quantile_unsupported_args_negative[table-midpoint-0],"ValueError: Invalid interpolation: midpoint. Interpolation must be in {'nearest', 'lower', 'higher'}",failed
8967,tests.integ.modin.frame.test_transpose,test_dataframe_transpose_set_timedelta_index_SNOW_1652608[index1-transpose_twice],[XPASS(strict)] SNOW-886400,failed
8969,tests.integ.modin.frame.test_set_index,test_set_index_pass_single_array[False-False-frame_of_ints-Index],"TypeError: The parameter ""keys"" may be a column key, one-dimensional array, or a list containing only valid column keys and one-dimensional arrays. Received column of type <class 'snowflake.snowpark.modin.plugin.extensions.index.Index'>",failed
8970,tests.integ.modin.frame.test_applymap,test_applymap_basic_without_type_hints[applymap-return_timedelta_scalar],[XPASS(strict)] SNOW-1619940,failed
8971,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[index-row_key1-col_key6],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 8)
[right]: (3, 4)",failed
8977,tests.integ.modin.frame.test_quantile,test_quantile_unsupported_args_negative[table-midpoint-1],"ValueError: Invalid interpolation: midpoint. Interpolation must be in {'nearest', 'lower', 'higher'}",failed
8982,tests.integ.modin.frame.test_quantile,test_quantile_datetime_negative,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
8994,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[col-ndarray-key4],IndexError: index 12 is out of bounds for axis 0 with size 7,failed
8999,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[col-ndarray-key5],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9005,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[col-ndarray-key6],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9012,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[index-row_key1-col_key8],"AssertionError: DataFrame.iloc[:, 0] (column name=""D"") are different

DataFrame.iloc[:, 0] (column name=""D"") values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [nan, nan, nan]
[right]: [1.0, 4.0, 7.0]
At positional index 0, first diff: nan != 1.0",failed
9028,tests.integ.modin.frame.test_applymap,test_applymap_basic_without_type_hints[applymap-apply_on_frame_with_timedelta_data_columns_returns_int],[XPASS(strict)] ,failed
9035,tests.integ.modin.frame.test_loc,test_df_loc_set_with_column_wise_list_like_item[index-<lambda>-item2-A],"ValueError: could not broadcast input array from shape (4,) into shape (2, 1)",failed
9038,tests.integ.modin.frame.test_applymap,test_applymap_basic_without_type_hints[map-return_timedelta_scalar],[XPASS(strict)] SNOW-1619940,failed
9050,tests.integ.modin.frame.test_set_index,test_set_index_pass_single_array[False-False-frame_of_ints_and_timedelta-Index],"TypeError: The parameter ""keys"" may be a column key, one-dimensional array, or a list containing only valid column keys and one-dimensional arrays. Received column of type <class 'snowflake.snowpark.modin.plugin.extensions.index.Index'>",failed
9068,tests.integ.modin.frame.test_transpose,test_dataframe_transpose_not_json_serializable_unimplemented[col_label0],[XPASS(strict)] SNOW-896985: Support non-JSON serializable types in dataframe,failed
9069,tests.integ.modin.frame.test_loc,test_df_loc_set_with_column_wise_list_like_item[index-<lambda>-item2-X],"ValueError: could not broadcast input array from shape (4,) into shape (2, 1)",failed
9071,tests.integ.modin.frame.test_transpose,test_dataframe_transpose_not_json_serializable_unimplemented[col_label1],[XPASS(strict)] SNOW-896985: Support non-JSON serializable types in dataframe,failed
9073,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[index-row_key1-col_key9],"KeyError: array(['1', '2'], dtype='<U21')",failed
9078,tests.integ.modin.frame.test_transpose,test_dataframe_transpose_copy_warning_log,"AssertionError: assert 'Single Warning: The argument `copy` of `transpose` has been ignored by Snowpark pandas API:\nTranspose ignore copy argument in Snowpark pandas API. was raised.' in ['After DataFrame function __init__, considered moving to backend Pandas with (transfer_cost 0 + other_execution_cost 0) , stay_cost 100, and move-stay delta -100', 'After DataFrame function __init__, considered moving to backend Python_Test with (transfer_cost 0 + other_execution_cost 0) , stay_cost 100, and move-stay delta -100', 'Chose to move to backend Pandas']",failed
9086,tests.integ.modin.frame.test_applymap,test_applymap_basic_without_type_hints[map-apply_on_frame_with_timedelta_data_columns_returns_int],[XPASS(strict)] ,failed
9093,tests.integ.modin.frame.test_loc,test_df_loc_set_with_column_wise_list_like_item[index-<lambda>-item2-col_key2],"ValueError: could not broadcast input array from shape (4,) into shape (2, 1)",failed
9094,tests.integ.modin.frame.test_applymap,test_applymap_basic_with_type_hints[applymap-return_timedelta_scalar],[XPASS(strict)] SNOW-1619940,failed
9101,tests.integ.modin.frame.test_transpose,test_dataframe_transpose_args_warning_log,TypeError: transpose() takes at most 1 argument (2 given),failed
9107,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[index-row_key1-col_key10],"KeyError: array(['E', 1, 'X', 2], dtype=object)",failed
9110,tests.integ.modin.frame.test_loc,test_df_loc_set_with_column_wise_list_like_item[index-<lambda>-item2-col_key3],"ValueError: could not broadcast input array from shape (4,) into shape (2, 1)",failed
9133,tests.integ.modin.frame.test_applymap,test_applymap_basic_with_type_hints[applymap-apply_on_frame_with_timedelta_data_columns_returns_int],[XPASS(strict)] ,failed
9134,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type_with_duplicate_columns[index-col_key1],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [1, 4, 7]
[right]: [nan, 7.0, 4.0]",failed
9136,tests.integ.modin.frame.test_set_index,test_set_index_pass_arrays[True-True-frame_of_ints-Index],"TypeError: The parameter ""keys"" may be a column key, one-dimensional array, or a list containing only valid column keys and one-dimensional arrays. Received column of type <class 'snowflake.snowpark.modin.plugin.extensions.index.Index'>",failed
9142,tests.integ.modin.frame.test_applymap,test_applymap_basic_with_type_hints[map-return_timedelta_scalar],[XPASS(strict)] SNOW-1619940,failed
9150,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[col-index with name-key1],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9156,tests.integ.modin.frame.test_loc,test_df_loc_set_with_column_wise_list_like_item[index-<lambda>-item2-col_key4],"ValueError: could not broadcast input array from shape (4,) into shape (2, 1)",failed
9176,tests.integ.modin.frame.test_iloc,test_df_iloc_get_slice_with_non_integer_parameters_negative[row-slice_key0],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9183,tests.integ.modin.frame.test_iloc,test_df_iloc_get_slice_with_non_integer_parameters_negative[row-slice_key1],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9185,tests.integ.modin.frame.test_loc,test_df_loc_set_with_column_wise_list_like_item[index-<lambda>-item2-None],"ValueError: could not broadcast input array from shape (4,) into shape (2, 1)",failed
9191,tests.integ.modin.frame.test_iloc,test_df_iloc_get_slice_with_non_integer_parameters_negative[row-slice_key2],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9195,tests.integ.modin.frame.test_applymap,test_applymap_basic_with_type_hints[map-apply_on_frame_with_timedelta_data_columns_returns_int],[XPASS(strict)] ,failed
9199,tests.integ.modin.frame.test_iloc,test_df_iloc_get_slice_with_non_integer_parameters_negative[col-slice_key0],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9202,tests.integ.modin.frame.test_applymap,test_applymap_date_time_timestamp[data0-str-str-expected_result0],"AssertionError: DataFrame.iloc[:, 0] (column name=""0"") are different

DataFrame.iloc[:, 0] (column name=""0"") values are different (100.0 %)
[index]: [0, 1]
[left]:  [2023-01-01, None]
[right]: [2023-01-01 00:00:00, NaT]
At positional index 0, first diff: 2023-01-01 != 2023-01-01 00:00:00",failed
9203,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[list-<lambda>-item0-col_key2],ValueError: Must have equal len keys and value when setting with an iterable,failed
9206,tests.integ.modin.frame.test_iloc,test_df_iloc_get_slice_with_non_integer_parameters_negative[col-slice_key1],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9209,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[col-index with name-key2],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9212,tests.integ.modin.frame.test_applymap,test_applymap_date_time_timestamp[data1-type-str-expected_result1],"AssertionError: DataFrame.iloc[:, 0] (column name=""0"") are different

DataFrame.iloc[:, 0] (column name=""0"") values are different (100.0 %)
[index]: [0, 1]
[left]:  [<class 'datetime.date'>, <class 'NoneType'>]
[right]: [<class 'pandas._libs.tslibs.timestamps.Timestamp'>, <class 'pandas._libs.tslibs.nattype.NaTType'>]
At positional index 0, first diff: <class 'datetime.date'> != <class 'pandas._libs.tslibs.timestamps.Timestamp'>",failed
9217,tests.integ.modin.frame.test_iloc,test_df_iloc_get_slice_with_non_integer_parameters_negative[col-slice_key2],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9219,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[list-<lambda>-item0-col_key3],ValueError: Must have equal len keys and value when setting with an iterable,failed
9222,tests.integ.modin.frame.test_applymap,test_applymap_date_time_timestamp[data2-str-str-expected_result2],"AssertionError: DataFrame.iloc[:, 0] (column name=""0"") are different

DataFrame.iloc[:, 0] (column name=""0"") values are different (100.0 %)
[index]: [0, 1]
[left]:  [01:02:03, None]
[right]: [0 days 01:02:03, NaT]
At positional index 0, first diff: 01:02:03 != 0 days 01:02:03",failed
9227,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[list-<lambda>-item0-col_key4],ValueError: Must have equal len keys and value when setting with an iterable,failed
9230,tests.integ.modin.frame.test_applymap,test_applymap_date_time_timestamp[data3-type-str-expected_result3],"AssertionError: DataFrame.iloc[:, 0] (column name=""0"") are different

DataFrame.iloc[:, 0] (column name=""0"") values are different (100.0 %)
[index]: [0, 1]
[left]:  [<class 'datetime.time'>, <class 'NoneType'>]
[right]: [<class 'pandas._libs.tslibs.timedeltas.Timedelta'>, <class 'pandas._libs.tslibs.nattype.NaTType'>]
At positional index 0, first diff: <class 'datetime.time'> != <class 'pandas._libs.tslibs.timedeltas.Timedelta'>",failed
9236,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[list-<lambda>-item0-col_key5],ValueError: Must have equal len keys and value when setting with an iterable,failed
9246,tests.integ.modin.frame.test_applymap,test_applymap_date_time_timestamp[data5-type-str-expected_result5],"AssertionError: DataFrame.iloc[:, 0] (column name=""0"") are different

DataFrame.iloc[:, 0] (column name=""0"") values are different (100.0 %)
[index]: [0, 1]
[left]:  [<class 'pandas._libs.tslibs.timestamps.Timestamp'>, <class 'pandas._libs.tslibs.nattype.NaTType'>]
[right]: [<class 'pandas._libs.tslibs.timestamps.Timestamp'>, <class 'pandas._libs.tslibs.nattype.NaTType'>]
At positional index 0, first diff: <class 'pandas._libs.tslibs.timestamps.Timestamp'> != <class 'pandas._libs.tslibs.timestamps.Timestamp'>",failed
9251,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[list-<lambda>-item1-col_key1],"AssertionError: Regex pattern did not match.
 Regex: 'Must have equal len keys and value when setting with an iterable'
 Input: 'could not broadcast input array from shape (2,) into shape (2, 3)'",failed
9255,tests.integ.modin.frame.test_applymap,test_applymap_date_time_timestamp[data6-str-str-expected_result6],"AssertionError: DataFrame.iloc[:, 0] (column name=""0"") are different

DataFrame.iloc[:, 0] (column name=""0"") values are different (33.33333 %)
[index]: [0, 1, 2]
[left]:  [2023-01-01 01:02:03+00:00, 2023-01-01 01:02:03, None]
[right]: [2023-01-01 01:02:03+00:00, 2023-01-01 01:02:03-08:00, None]
At positional index 1, first diff: 2023-01-01 01:02:03 != 2023-01-01 01:02:03-08:00",failed
9256,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[col-index with name-key3],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9260,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[list-<lambda>-item1-col_key2],ValueError: Must have equal len keys and value when setting with an iterable,failed
9264,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type_with_duplicate_columns[index-col_key6],ValueError: cannot reindex on an axis with duplicate labels,failed
9266,tests.integ.modin.frame.test_applymap,test_applymap_date_time_timestamp[data7-type-str-expected_result7],"AssertionError: DataFrame.iloc[:, 0] (column name=""0"") are different

DataFrame.iloc[:, 0] (column name=""0"") values are different (100.0 %)
[index]: [0, 1]
[left]:  [<class 'pandas._libs.tslibs.timestamps.Timestamp'>, <class 'pandas._libs.tslibs.nattype.NaTType'>]
[right]: [<class 'pandas._libs.tslibs.timestamps.Timestamp'>, <class 'NoneType'>]
At positional index 0, first diff: <class 'pandas._libs.tslibs.timestamps.Timestamp'> != <class 'pandas._libs.tslibs.timestamps.Timestamp'>",failed
9269,tests.integ.modin.frame.test_set_index,test_set_index_pass_arrays[True-True-frame_of_ints_and_timedelta-Index],"TypeError: The parameter ""keys"" may be a column key, one-dimensional array, or a list containing only valid column keys and one-dimensional arrays. Received column of type <class 'snowflake.snowpark.modin.plugin.extensions.index.Index'>",failed
9271,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[list-<lambda>-item1-col_key3],ValueError: Must have equal len keys and value when setting with an iterable,failed
9275,tests.integ.modin.frame.test_applymap,test_frame_with_timedelta_index,[XPASS(strict)] ,failed
9283,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[list-<lambda>-item1-col_key4],ValueError: Must have equal len keys and value when setting with an iterable,failed
9295,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[list-<lambda>-item2-col_key0],Failed: DID NOT RAISE <class 'ValueError'>,failed
9304,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[col-index with name-key4],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9312,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type_with_duplicate_columns[index-col_key8],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [nan, 7.0, 4.0]
[right]: [1.0, 4.0, 7.0]
At positional index 0, first diff: nan != 1.0",failed
9313,tests.integ.modin.frame.test_tz_convert,test_tz_convert_negative[1-None-None-UTC-NotImplementedError],AttributeError: 'RangeIndex' object has no attribute 'tz_convert',failed
9321,tests.integ.modin.frame.test_tz_convert,test_tz_convert_negative[columns-None-None-UTC-NotImplementedError],AttributeError: 'RangeIndex' object has no attribute 'tz_convert',failed
9329,tests.integ.modin.frame.test_tz_convert,test_tz_convert_negative[0-1-None-UTC-NotImplementedError],ValueError: The level 1 is not valid,failed
9330,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[col-index with name-key5],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9332,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[list-<lambda>-item2-col_key1],"AssertionError: Regex pattern did not match.
 Regex: 'Must have equal len keys and value when setting with an iterable'
 Input: 'could not broadcast input array from shape (4,) into shape (2, 3)'",failed
9334,tests.integ.modin.frame.test_tz_convert,test_tz_convert_negative[0-None-False-UTC-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9339,tests.integ.modin.frame.test_tz_convert,test_tz_convert_negative[0-None-None-UTC+09:00-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9345,tests.integ.modin.frame.test_applymap,test_applymap_na_action_ignore[applymap],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9347,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type_with_duplicate_columns[index-col_key10],AssertionError: exception type <class 'IndexError'> does not match with expected type <class 'ValueError'>,failed
9350,tests.integ.modin.frame.test_applymap,test_applymap_na_action_ignore[map],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9352,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[list-<lambda>-item2-col_key5],ValueError: Must have equal len keys and value when setting with an iterable,failed
9366,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[array-<lambda>-item0-col_key2],ValueError: Must have equal len keys and value when setting with an iterable,failed
9372,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[array-<lambda>-item0-col_key3],ValueError: Must have equal len keys and value when setting with an iterable,failed
9377,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_numeric[col-index with name-key6],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9382,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[array-<lambda>-item0-col_key4],ValueError: Must have equal len keys and value when setting with an iterable,failed
9388,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[array-<lambda>-item0-col_key5],ValueError: Must have equal len keys and value when setting with an iterable,failed
9390,tests.integ.modin.frame.test_set_index,test_set_index_pass_arrays[True-False-frame_of_ints-Index],"TypeError: The parameter ""keys"" may be a column key, one-dimensional array, or a list containing only valid column keys and one-dimensional arrays. Received column of type <class 'snowflake.snowpark.modin.plugin.extensions.index.Index'>",failed
9396,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_int_series_with_1k_shape[key0],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9402,tests.integ.modin.frame.test_loc,test_df_loc_set_general_key_with_duplicate_rows[index-item1],ValueError: cannot reindex on an axis with duplicate labels,failed
9408,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[array-<lambda>-item1-col_key1],"AssertionError: Regex pattern did not match.
 Regex: 'Must have equal len keys and value when setting with an iterable'
 Input: 'could not broadcast input array from shape (2,) into shape (2, 3)'",failed
9417,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[array-<lambda>-item1-col_key2],ValueError: Must have equal len keys and value when setting with an iterable,failed
9419,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_int_series_with_1k_shape[key1],IndexError: index 1204 is out of bounds for axis 0 with size 1000,failed
9428,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[array-<lambda>-item1-col_key3],ValueError: Must have equal len keys and value when setting with an iterable,failed
9430,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_int_series_with_1k_shape[key2],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9438,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[array-<lambda>-item1-col_key4],ValueError: Must have equal len keys and value when setting with an iterable,failed
9449,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[array-<lambda>-item2-col_key0],Failed: DID NOT RAISE <class 'ValueError'>,failed
9485,tests.integ.modin.frame.test_set_index,test_set_index_pass_arrays[True-False-frame_of_ints_and_timedelta-Index],"TypeError: The parameter ""keys"" may be a column key, one-dimensional array, or a list containing only valid column keys and one-dimensional arrays. Received column of type <class 'snowflake.snowpark.modin.plugin.extensions.index.Index'>",failed
9488,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[array-<lambda>-item2-col_key1],"AssertionError: Regex pattern did not match.
 Regex: 'Must have equal len keys and value when setting with an iterable'
 Input: 'could not broadcast input array from shape (4,) into shape (2, 3)'",failed
9504,tests.integ.modin.frame.test_assign,test_assign_basic_series,"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
9513,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[array-<lambda>-item2-col_key5],ValueError: Must have equal len keys and value when setting with an iterable,failed
9517,tests.integ.modin.frame.test_join,test_join_suffix_on_list_negative,"AssertionError: Regex pattern did not match.
 Regex: 'Join dataframes have overlapping column labels'
 Input: ""Indexes have overlapping values: Index(['key'], dtype='object')""",failed
9522,tests.integ.modin.frame.test_assign,test_assign_basic_series_mismatched_index[reversed_index],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
9524,tests.integ.modin.frame.test_set_index,test_set_index_pass_arrays[False-True-frame_of_ints-Series],"KeyError: ""None of ['a'] are in the columns""",failed
9531,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_scalar[row--8],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
9537,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[tuple-<lambda>-item0-col_key2],ValueError: Must have equal len keys and value when setting with an iterable,failed
9540,tests.integ.modin.frame.test_assign,test_assign_basic_series_mismatched_index[different_index],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
9542,tests.integ.modin.frame.test_join,test_join_invalid_how_negative,"AssertionError: Regex pattern did not match.
 Regex: 'do not recognize join method full_outer_join'
 Input: ""columns overlap but no suffix specified: Index(['a'], dtype='object')""",failed
9546,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[tuple-<lambda>-item0-col_key3],ValueError: Must have equal len keys and value when setting with an iterable,failed
9552,tests.integ.modin.frame.test_assign,test_assign_basic_non_pandas_object[2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
9558,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[tuple-<lambda>-item0-col_key4],ValueError: Must have equal len keys and value when setting with an iterable,failed
9563,tests.integ.modin.frame.test_assign,test_assign_basic_non_pandas_object[new_col_value1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
9565,tests.integ.modin.frame.test_join,test_join_unnamed_series_in_list_negative,AttributeError: 'Series' object has no attribute 'columns',failed
9566,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[tuple-<lambda>-item0-col_key5],ValueError: Must have equal len keys and value when setting with an iterable,failed
9571,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_scalar[row-7],IndexError: positional indexers are out-of-bounds,failed
9573,tests.integ.modin.frame.test_assign,test_assign_basic_non_pandas_object[x],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
9574,tests.integ.modin.frame.test_tz_localize,test_tz_localize_negative[UTC-1-None-None-raise-raise-NotImplementedError],ValueError: No axis named 1 for object type Series,failed
9577,tests.integ.modin.frame.test_iloc,test_df_iloc_get_range_deviating_behavior[row-range_key0],IndexError: positional indexers are out-of-bounds,failed
9578,tests.integ.modin.frame.test_join,test_join_list_mixed,AttributeError: 'Series' object has no attribute 'columns',failed
9579,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[tuple-<lambda>-item1-col_key1],"AssertionError: Regex pattern did not match.
 Regex: 'Must have equal len keys and value when setting with an iterable'
 Input: 'could not broadcast input array from shape (2,) into shape (2, 3)'",failed
9580,tests.integ.modin.frame.test_loc,test_df_loc_get_key_bool[index-key5],IndexError: positional indexers are out-of-bounds,failed
9582,tests.integ.modin.frame.test_assign,test_assign_invalid_long_column_length_negative,ValueError: Length of values (5) does not match length of index (3),failed
9584,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_scalar[row-52879115],IndexError: positional indexers are out-of-bounds,failed
9585,tests.integ.modin.frame.test_tz_localize,test_tz_localize_negative[UTC-columns-None-None-raise-raise-NotImplementedError],ValueError: No axis named 1 for object type Series,failed
9587,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[tuple-<lambda>-item1-col_key2],ValueError: Must have equal len keys and value when setting with an iterable,failed
9590,tests.integ.modin.frame.test_iloc,test_df_iloc_get_range_deviating_behavior[row-range_key1],IndexError: positional indexers are out-of-bounds,failed
9591,tests.integ.modin.frame.test_assign,test_assign_invalid_short_column_length_negative,ValueError: Length of values (2) does not match length of index (3),failed
9593,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_scalar[row--9028751],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
9595,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[tuple-<lambda>-item1-col_key3],ValueError: Must have equal len keys and value when setting with an iterable,failed
9599,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[tuple-<lambda>-item1-col_key4],ValueError: Must have equal len keys and value when setting with an iterable,failed
9601,tests.integ.modin.frame.test_assign,test_assign_short_series,"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
9602,tests.integ.modin.frame.test_set_index,test_set_index_pass_arrays[False-True-frame_of_ints-Index],"TypeError: The parameter ""keys"" may be a column key, one-dimensional array, or a list containing only valid column keys and one-dimensional arrays. Received column of type <class 'snowflake.snowpark.modin.plugin.extensions.index.Index'>",failed
9607,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[tuple-<lambda>-item2-col_key0],Failed: DID NOT RAISE <class 'ValueError'>,failed
9610,tests.integ.modin.frame.test_set_index,test_set_index_pass_arrays[False-True-frame_of_ints-array],"KeyError: ""None of ['a'] are in the columns""",failed
9611,tests.integ.modin.frame.test_assign,test_assign_short_series_mismatched_index[reversed_index],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
9613,tests.integ.modin.frame.test_tz_localize,test_tz_localize_negative[UTC-0-1-None-raise-raise-NotImplementedError],ValueError: The level 1 is not valid,failed
9616,tests.integ.modin.frame.test_tz_localize,test_tz_localize_negative[UTC-0-None-False-raise-raise-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9618,tests.integ.modin.frame.test_tz_localize,test_tz_localize_negative[UTC-0-None-True-infer-raise-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9619,tests.integ.modin.frame.test_set_index,test_set_index_pass_arrays[False-True-frame_of_ints-list],"KeyError: ""None of ['a'] are in the columns""",failed
9620,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[tuple-<lambda>-item2-col_key1],"AssertionError: Regex pattern did not match.
 Regex: 'Must have equal len keys and value when setting with an iterable'
 Input: 'could not broadcast input array from shape (4,) into shape (2, 3)'",failed
9623,tests.integ.modin.frame.test_tz_localize,test_tz_localize_negative[UTC-0-None-True-NaT-raise-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9624,tests.integ.modin.frame.test_iloc,test_df_iloc_get_range_deviating_behavior[row-range_key2],IndexError: positional indexers are out-of-bounds,failed
9627,tests.integ.modin.frame.test_tz_localize,test_tz_localize_negative[UTC-0-None-True-ambiguous6-raise-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9629,tests.integ.modin.frame.test_assign,test_assign_short_series_mismatched_index[different_index],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
9632,tests.integ.modin.frame.test_tz_localize,test_tz_localize_negative[UTC-0-None-True-raise-shift_forward-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9633,tests.integ.modin.frame.test_set_index,test_set_index_pass_arrays[False-True-frame_of_ints-<lambda>],"KeyError: ""None of ['a'] are in the columns""",failed
9636,tests.integ.modin.frame.test_tz_localize,test_tz_localize_negative[UTC-0-None-True-raise-shift_backward-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9638,tests.integ.modin.frame.test_tz_localize,test_tz_localize_negative[UTC-0-None-True-raise-NaT-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9639,tests.integ.modin.frame.test_iloc,test_df_iloc_get_range_deviating_behavior[row-range_key3],IndexError: positional indexers are out-of-bounds,failed
9642,tests.integ.modin.frame.test_tz_localize,test_tz_localize_negative[UTC-0-None-True-raise-nonexistent10-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9643,tests.integ.modin.frame.test_assign,test_assign_basic_callable[identity_fn],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
9644,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_scalar[col--7],IndexError: index -7 is out of bounds for axis 0 with size 6,failed
9645,tests.integ.modin.frame.test_tz_localize,test_tz_localize_negative[UTC-0-None-True-infer-shift_forward-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9647,tests.integ.modin.frame.test_tz_localize,test_tz_localize_negative[UTC+09:00-0-None-None-raise-raise-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9649,tests.integ.modin.frame.test_set_index,test_set_index_pass_arrays[False-True-frame_of_ints_and_timedelta-Series],"KeyError: ""None of ['a'] are in the columns""",failed
9653,tests.integ.modin.frame.test_iloc,test_df_iloc_get_range_deviating_behavior[col-range_key0],IndexError: positional indexers are out-of-bounds,failed
9655,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_scalar[col-6],IndexError: positional indexers are out-of-bounds,failed
9656,tests.integ.modin.frame.test_rank,test_rank_unsupported_args_negative[keep-True-min],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9657,tests.integ.modin.frame.test_rank,test_rank_unsupported_args_negative[keep-True-dense],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9659,tests.integ.modin.frame.test_rank,test_rank_unsupported_args_negative[keep-True-first],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9660,tests.integ.modin.frame.test_iloc,test_df_iloc_get_range_deviating_behavior[col-range_key1],IndexError: positional indexers are out-of-bounds,failed
9661,tests.integ.modin.frame.test_rank,test_rank_unsupported_args_negative[keep-True-max],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9663,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[tuple-<lambda>-item2-col_key5],ValueError: Must have equal len keys and value when setting with an iterable,failed
9664,tests.integ.modin.frame.test_rank,test_rank_unsupported_args_negative[keep-True-average],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9665,tests.integ.modin.frame.test_rank,test_rank_unsupported_args_negative[keep-False-min],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9666,tests.integ.modin.frame.test_assign,test_assign_basic_callable[add_two_cols_fn],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
9667,tests.integ.modin.frame.test_rank,test_rank_unsupported_args_negative[keep-False-dense],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9668,tests.integ.modin.frame.test_rank,test_rank_unsupported_args_negative[keep-False-first],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9669,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_scalar[col--8],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
9670,tests.integ.modin.frame.test_iloc,test_df_iloc_get_range_deviating_behavior[col-range_key2],IndexError: positional indexers are out-of-bounds,failed
9671,tests.integ.modin.frame.test_rank,test_rank_unsupported_args_negative[keep-False-max],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9674,tests.integ.modin.frame.test_rank,test_rank_unsupported_args_negative[keep-False-average],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9676,tests.integ.modin.frame.test_rank,test_rank_unsupported_args_negative[top-True-min],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9678,tests.integ.modin.frame.test_assign,test_assign_chained_callable,"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
9679,tests.integ.modin.frame.test_rank,test_rank_unsupported_args_negative[top-True-dense],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9681,tests.integ.modin.frame.test_rank,test_rank_unsupported_args_negative[top-True-first],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9682,tests.integ.modin.frame.test_iloc,test_df_iloc_get_range_deviating_behavior[col-range_key3],IndexError: positional indexers are out-of-bounds,failed
9683,tests.integ.modin.frame.test_join,test_join_different_levels_negative,"AssertionError: Regex pattern did not match.
 Regex: 'Can not merge objects with different column levels'
 Input: 'Not allowed to merge between different levels. (1 levels on the left, 2 on the right)'",failed
9685,tests.integ.modin.frame.test_rank,test_rank_unsupported_args_negative[top-True-max],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9686,tests.integ.modin.frame.test_unary_op,test_df_unary_all_pos[timedelta64[ns]-abs],TypeError: timedelta64[ns] is not a numeric data type,failed
9687,tests.integ.modin.frame.test_rank,test_rank_unsupported_args_negative[top-True-average],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9689,tests.integ.modin.frame.test_rank,test_rank_unsupported_args_negative[top-False-min],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9691,tests.integ.modin.frame.test_unary_op,test_df_unary_all_pos[timedelta64[ns]-neg],TypeError: timedelta64[ns] is not a numeric data type,failed
9692,tests.integ.modin.frame.test_rank,test_rank_unsupported_args_negative[top-False-dense],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9694,tests.integ.modin.frame.test_rank,test_rank_unsupported_args_negative[top-False-first],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9696,tests.integ.modin.frame.test_join,test_join_validate[lvalues0-rvalues0-1:1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9698,tests.integ.modin.frame.test_rank,test_rank_unsupported_args_negative[top-False-max],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9699,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_scalar[col-7],IndexError: positional indexers are out-of-bounds,failed
9702,tests.integ.modin.frame.test_rank,test_rank_unsupported_args_negative[top-False-average],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9703,tests.integ.modin.frame.test_join,test_join_validate[lvalues1-rvalues1-1:m],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9705,tests.integ.modin.frame.test_rank,test_rank_unsupported_args_negative[bottom-True-min],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9707,tests.integ.modin.frame.test_join,test_join_validate[lvalues2-rvalues2-m:1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9708,tests.integ.modin.frame.test_rank,test_rank_unsupported_args_negative[bottom-True-dense],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9709,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[index-<lambda>-item0-col_key2],ValueError: Must have equal len keys and value when setting with an iterable,failed
9710,tests.integ.modin.frame.test_assign,test_assign_self_columns,"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
9712,tests.integ.modin.frame.test_rank,test_rank_unsupported_args_negative[bottom-True-first],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9713,tests.integ.modin.frame.test_join,test_join_validate[lvalues3-rvalues3-m:m],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9715,tests.integ.modin.frame.test_rank,test_rank_unsupported_args_negative[bottom-True-max],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9716,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_scalar[col-52879115],IndexError: positional indexers are out-of-bounds,failed
9718,tests.integ.modin.frame.test_rank,test_rank_unsupported_args_negative[bottom-True-average],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9719,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_series_row_key_df_item_match_pandas[row_pos0-col_pos0-item_values0],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (75.0 %)
[index]: [0, 1, 2, 3]
[left]:  [5.0, nan, nan, nan]
[right]: [5, 91, 92, 93]",failed
9720,tests.integ.modin.frame.test_join,test_join_validate[lvalues4-rvalues4-1:m],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9722,tests.integ.modin.frame.test_rank,test_rank_unsupported_args_negative[bottom-False-min],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9723,tests.integ.modin.frame.test_assign,test_overwrite_columns_via_assign,"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
9724,tests.integ.modin.frame.test_rank,test_rank_unsupported_args_negative[bottom-False-dense],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9725,tests.integ.modin.frame.test_join,test_join_validate[lvalues5-rvalues5-m:m],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9726,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_scalar[col--9028751],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
9727,tests.integ.modin.frame.test_rank,test_rank_unsupported_args_negative[bottom-False-first],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9728,tests.integ.modin.frame.test_set_index,test_set_index_pass_arrays[False-True-frame_of_ints_and_timedelta-Index],"TypeError: The parameter ""keys"" may be a column key, one-dimensional array, or a list containing only valid column keys and one-dimensional arrays. Received column of type <class 'snowflake.snowpark.modin.plugin.extensions.index.Index'>",failed
9729,tests.integ.modin.frame.test_unary_op,test_df_unary_np_none_bool[True-abs],TypeError: object is not a numeric data type,failed
9731,tests.integ.modin.frame.test_join,test_join_validate[lvalues6-rvalues6-m:1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9732,tests.integ.modin.frame.test_rank,test_rank_unsupported_args_negative[bottom-False-max],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9734,tests.integ.modin.frame.test_rank,test_rank_unsupported_args_negative[bottom-False-average],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9735,tests.integ.modin.frame.test_join,test_join_validate[lvalues7-rvalues7-m:m],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9737,tests.integ.modin.frame.test_assign,test_assign_basic_timedelta_series,"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
9738,tests.integ.modin.frame.test_unary_op,test_df_unary_np_none_bool[True-neg],TypeError: object is not a numeric data type,failed
9739,tests.integ.modin.frame.test_set_index,test_set_index_pass_arrays[False-True-frame_of_ints_and_timedelta-array],"KeyError: ""None of ['a'] are in the columns""",failed
9741,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_series_row_key_df_item_match_pandas[row_pos1-col_pos1-item_values1],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (75.0 %)
[index]: [0, 1, 2, 3]
[left]:  [5.0, nan, nan, nan]
[right]: [5, 93, 92, 91]",failed
9743,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[index-<lambda>-item0-col_key3],ValueError: Must have equal len keys and value when setting with an iterable,failed
9744,tests.integ.modin.frame.test_join,test_join_validate[lvalues8-rvalues8-m:m],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9749,tests.integ.modin.frame.test_unary_op,test_df_unary_np_none_bool[False-abs],TypeError: object is not a numeric data type,failed
9751,tests.integ.modin.frame.test_set_index,test_set_index_pass_arrays[False-True-frame_of_ints_and_timedelta-list],"KeyError: ""None of ['a'] are in the columns""",failed
9756,tests.integ.modin.frame.test_unary_op,test_df_unary_np_none_bool[False-neg],TypeError: object is not a numeric data type,failed
9758,tests.integ.modin.frame.test_iloc,test_df_iloc_get_native_pd_key_raises_type_error_negative[key0-<class\\ 'pandas\\.core\\.series\\.Series'>\\ is\\ not\\ supported\\ as\\ 'value'\\ argument\\.\\ Please\\ convert\\ this\\ to\\ Snowpark\\ pandas\\ objects\\ by\\ calling\\ modin\\.pandas\\.Series\\(\\)/DataFrame\\(\\)-TypeError],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9759,tests.integ.modin.frame.test_set_index,test_set_index_pass_arrays[False-True-frame_of_ints_and_timedelta-<lambda>],"KeyError: ""None of ['a'] are in the columns""",failed
9762,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_series_row_key_df_item_match_pandas[row_pos2-col_pos2-item_values2],"AssertionError: DataFrame.iloc[:, 1] (column name=""B"") are different

DataFrame.iloc[:, 1] (column name=""B"") values are different (75.0 %)
[index]: [0, 1, 2, 3]
[left]:  [nan, nan, 12.0, nan]
[right]: [95, 92, 12, 98]",failed
9765,tests.integ.modin.frame.test_iloc,test_df_iloc_get_native_pd_key_raises_type_error_negative[key1-<class\\ 'pandas\\.core\\.frame\\.DataFrame'>\\ is\\ not\\ supported\\ as\\ 'value'\\ argument\\.\\ Please\\ convert\\ this\\ to\\ Snowpark\\ pandas\\ objects\\ by\\ calling\\ modin\\.pandas\\.Series\\(\\)/DataFrame\\(\\)-TypeError],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9768,tests.integ.modin.frame.test_unary_op,test_df_unary_invalid_in_native_negative[data0-abs],TypeError: object is not a numeric data type,failed
9769,tests.integ.modin.frame.test_iloc,"test_df_iloc_get_native_pd_key_raises_type_error_negative[key2-\\.iloc\\ requires\\ numeric\\ indexers,\\ got\\ \\[Ellipsis,\\ 1\\]-IndexError]","ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9771,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[index-<lambda>-item0-col_key4],ValueError: Must have equal len keys and value when setting with an iterable,failed
9772,tests.integ.modin.frame.test_set_index,test_set_index_pass_arrays[False-False-frame_of_ints-Series],"KeyError: ""None of ['a'] are in the columns""",failed
9774,tests.integ.modin.frame.test_unary_op,test_df_unary_invalid_in_native_negative[data0-neg],TypeError: object is not a numeric data type,failed
9775,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_raises_indexing_error_negative[key0-Too many indexers],Failed: DID NOT RAISE <class 'pandas.errors.IndexingError'>,failed
9777,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_series_row_key_df_item_match_pandas[row_pos3-col_pos3-item_values3],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (50.0 %)
[index]: [0, 1, 2, 3]
[left]:  [nan, 8.0, nan, nan]
[right]: [92.0, 8.0, 98.0, nan]
At positional index 0, first diff: nan != 92.0",failed
9778,tests.integ.modin.frame.test_unary_op,test_df_unary_invalid_in_sf_negative[data0-abs],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
9781,tests.integ.modin.frame.test_unary_op,test_df_unary_invalid_in_sf_negative[data0-neg],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
9783,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_raises_indexing_error_negative[key2-Too many indexers],Failed: DID NOT RAISE <class 'pandas.errors.IndexingError'>,failed
9784,tests.integ.modin.frame.test_unary_op,test_df_unary_invalid_in_sf_negative[data1-abs],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
9787,tests.integ.modin.frame.test_unary_op,test_df_unary_invalid_in_sf_negative[data1-neg],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
9789,tests.integ.modin.frame.test_unary_op,test_df_unary_invalid_in_sf_negative[data2-abs],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
9790,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_raises_indexing_error_negative[key3-indexer may only contain one '...' entry],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9792,tests.integ.modin.frame.test_unary_op,test_df_unary_invalid_in_sf_negative[data2-neg],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
9794,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_series_row_key_df_item_match_pandas[row_pos4-col_pos4-item_values4],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (75.0 %)
[index]: [0, 1, 2, 3]
[left]:  [5.0, nan, nan, nan]
[right]: [5, 91, 91, 91]",failed
9795,tests.integ.modin.frame.test_join,test_join_validate_negative[lvalues0-rvalues0-1:1],pandas.errors.MergeError: Merge keys are not unique in right dataset; not a one-to-one merge,failed
9796,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[index-<lambda>-item0-col_key5],ValueError: Must have equal len keys and value when setting with an iterable,failed
9799,tests.integ.modin.frame.test_iloc,test_df_iloc_get_invalid_slice_key_negative[row-key0],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9800,tests.integ.modin.frame.test_unary_op,test_ser_unary_invalid_in_both_native_and_sf_negative[invalid_value0-Invalid argument types for function-abs],TypeError: object is not a numeric data type,failed
9802,tests.integ.modin.frame.test_astype,test_input_negative,"AssertionError: Regex pattern did not match.
 Regex: 'not found in columns'
 Input: ""'Only a column name can be used for the key in a dtype mappings argument.'""",failed
9804,tests.integ.modin.frame.test_iloc,test_df_iloc_get_invalid_slice_key_negative[row-key1],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9807,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_series_row_key_df_item_match_pandas[row_pos5-col_pos5-item_values5],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (75.0 %)
[index]: [0, 1, 2, 3]
[left]:  [5.0, nan, nan, nan]
[right]: [5, 91, 92, 93]",failed
9808,tests.integ.modin.frame.test_join,test_join_validate_negative[lvalues1-rvalues1-m:1],pandas.errors.MergeError: Merge keys are not unique in right dataset; not a many-to-one merge,failed
9809,tests.integ.modin.frame.test_iloc,test_df_iloc_get_invalid_slice_key_negative[row-key2],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9815,tests.integ.modin.frame.test_iloc,test_df_iloc_get_invalid_slice_key_negative[col-key0],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9817,tests.integ.modin.frame.test_join,test_join_validate_negative[lvalues2-rvalues2-1:1],pandas.errors.MergeError: Merge keys are not unique in left dataset; not a one-to-one merge,failed
9819,tests.integ.modin.frame.test_unary_op,test_ser_unary_invalid_in_both_native_and_sf_negative[invalid_value0-Invalid argument types for function-neg],TypeError: object is not a numeric data type,failed
9820,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[index-<lambda>-item1-col_key1],"AssertionError: Regex pattern did not match.
 Regex: 'Must have equal len keys and value when setting with an iterable'
 Input: 'could not broadcast input array from shape (2,) into shape (2, 3)'",failed
9821,tests.integ.modin.frame.test_join,test_join_validate_negative[lvalues3-rvalues3-1:m],pandas.errors.MergeError: Merge keys are not unique in left dataset; not a one-to-many merge,failed
9822,tests.integ.modin.frame.test_unary_op,test_ser_unary_invalid_in_both_native_and_sf_negative[invalid_value1-Invalid argument types for function-abs],TypeError: object is not a numeric data type,failed
9823,tests.integ.modin.frame.test_set_index,test_set_index_pass_arrays[False-False-frame_of_ints-Index],"TypeError: The parameter ""keys"" may be a column key, one-dimensional array, or a list containing only valid column keys and one-dimensional arrays. Received column of type <class 'snowflake.snowpark.modin.plugin.extensions.index.Index'>",failed
9824,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_series_row_key_df_item_match_pandas[row_pos7-col_pos7-item_values7],"AssertionError: DataFrame.iloc[:, 1] (column name=""B"") are different

DataFrame.iloc[:, 1] (column name=""B"") values are different (75.0 %)
[index]: [0, 1, 2, 3]
[left]:  [nan, nan, nan, 15.0]
[right]: [93, 91, 92, 15]",failed
9825,tests.integ.modin.frame.test_iloc,test_df_iloc_get_invalid_slice_key_negative[col-key1],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9826,tests.integ.modin.frame.test_unary_op,test_ser_unary_invalid_in_both_native_and_sf_negative[invalid_value1-Invalid argument types for function-neg],TypeError: object is not a numeric data type,failed
9829,tests.integ.modin.frame.test_set_index,test_set_index_pass_arrays[False-False-frame_of_ints-array],"KeyError: ""None of ['a'] are in the columns""",failed
9830,tests.integ.modin.frame.test_iloc,test_df_iloc_get_invalid_slice_key_negative[col-key2],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9832,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[index-<lambda>-item1-col_key2],ValueError: Must have equal len keys and value when setting with an iterable,failed
9834,tests.integ.modin.frame.test_unary_op,test_ser_unary_invalid_in_both_native_and_sf_negative[invalid_value2-is not recognized-abs],TypeError: object is not a numeric data type,failed
9836,tests.integ.modin.frame.test_iloc,test_df_iloc_get_non_numeric_key_negative[row-None],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9838,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_series_row_key_df_item_match_pandas[row_pos8-col_pos8-item_values8],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (75.0 %)
[index]: [0, 1, 2, 3]
[left]:  [5.0, nan, nan, nan]
[right]: [5, 93, 93, 93]",failed
9840,tests.integ.modin.frame.test_unary_op,test_ser_unary_invalid_in_both_native_and_sf_negative[invalid_value2-is not recognized-neg],TypeError: object is not a numeric data type,failed
9841,tests.integ.modin.frame.test_iloc,test_df_iloc_get_non_numeric_key_negative[row-True],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9845,tests.integ.modin.frame.test_iloc,test_df_iloc_get_non_numeric_key_negative[row-False],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9846,tests.integ.modin.frame.test_unary_op,test_ser_unary_invalid_in_both_native_and_sf_negative[invalid_value3- Numeric value 'bad_str' is not recognized-abs],TypeError: object is not a numeric data type,failed
9847,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[index-<lambda>-item1-col_key3],ValueError: Must have equal len keys and value when setting with an iterable,failed
9848,tests.integ.modin.frame.test_join,test_join_validate_negative[lvalues4-rvalues4-1:1],pandas.errors.MergeError: Merge keys are not unique in either left or right dataset; not a one-to-one merge,failed
9852,tests.integ.modin.frame.test_iloc,test_df_iloc_get_non_numeric_key_negative[row--3.14],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9853,tests.integ.modin.frame.test_unary_op,test_ser_unary_invalid_in_both_native_and_sf_negative[invalid_value3- Numeric value 'bad_str' is not recognized-neg],TypeError: object is not a numeric data type,failed
9855,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_series_row_key_df_item_match_pandas[row_pos9-col_pos9-item_values9],"AssertionError: DataFrame.iloc[:, 1] (column name=""B"") are different

DataFrame.iloc[:, 1] (column name=""B"") values are different (75.0 %)
[index]: [0, 1, 2, 3]
[left]:  [6.0, nan, nan, nan]
[right]: [6, 91, 92, 93]",failed
9859,tests.integ.modin.frame.test_iloc,test_df_iloc_get_non_numeric_key_negative[row-3.142857142857143],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9860,tests.integ.modin.frame.test_set_index,test_set_index_pass_arrays[False-False-frame_of_ints-list],"KeyError: ""None of ['a'] are in the columns""",failed
9862,tests.integ.modin.frame.test_join,test_join_validate_negative[lvalues5-rvalues5-1:m],pandas.errors.MergeError: Merge keys are not unique in left dataset; not a one-to-many merge,failed
9864,tests.integ.modin.frame.test_iloc,test_df_iloc_get_non_numeric_key_negative[row-nan],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9866,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[index-<lambda>-item1-col_key4],ValueError: Must have equal len keys and value when setting with an iterable,failed
9868,tests.integ.modin.frame.test_set_index,test_set_index_pass_arrays[False-False-frame_of_ints-<lambda>],"KeyError: ""None of ['a'] are in the columns""",failed
9869,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_series_row_key_df_item_match_pandas[row_pos10-col_pos10-item_values10],"AssertionError: DataFrame.iloc[:, 1] (column name=""B"") are different

DataFrame.iloc[:, 1] (column name=""B"") values are different (50.0 %)
[index]: [0, 1, 2, 3]
[left]:  [6.0, nan, nan, 15.0]
[right]: [6, 91, 93, 15]",failed
9871,tests.integ.modin.frame.test_iloc,test_df_iloc_get_non_numeric_key_negative[row-key6],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9875,tests.integ.modin.frame.test_join,test_join_validate_negative[lvalues6-rvalues6-m:1],pandas.errors.MergeError: Merge keys are not unique in right dataset; not a many-to-one merge,failed
9878,tests.integ.modin.frame.test_set_index,test_set_index_pass_arrays[False-False-frame_of_ints_and_timedelta-Series],"KeyError: ""None of ['a'] are in the columns""",failed
9880,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_series_row_key_df_item_match_pandas[row_pos11-col_pos11-item_values11],"AssertionError: DataFrame.iloc[:, 1] (column name=""B"") are different

DataFrame.iloc[:, 1] (column name=""B"") values are different (50.0 %)
[index]: [0, 1, 2, 3]
[left]:  [nan, 9.0, nan, 15.0]
[right]: [94, 9, 92, 15]",failed
9890,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_series_row_key_df_item_match_pandas[row_pos12-col_pos12-item_values12],"AssertionError: DataFrame.iloc[:, 2] (column name=""C"") are different

DataFrame.iloc[:, 2] (column name=""C"") values are different (100.0 %)
[index]: [0, 1, 2, 3]
[left]:  [nan, nan, nan, nan]
[right]: [93, 91, 92, 94]",failed
9891,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[index-<lambda>-item2-col_key0],Failed: DID NOT RAISE <class 'ValueError'>,failed
9902,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_series_row_key_df_item_match_pandas[row_pos13-col_pos13-item_values13],"AssertionError: DataFrame.iloc[:, 1] (column name=""B"") are different

DataFrame.iloc[:, 1] (column name=""B"") values are different (50.0 %)
[index]: [0, 1, 2, 3]
[left]:  [6.0, nan, nan, 15.0]
[right]: [6, 99, 101, 15]",failed
9907,tests.integ.modin.frame.test_unstack,test_unstack_input_no_multiindex[timedelta64[ns]-index_names0],[XPASS(strict)] ,failed
9908,tests.integ.modin.frame.test_unstack,test_unstack_input_no_multiindex[timedelta64[ns]-index_names1],[XPASS(strict)] ,failed
9911,tests.integ.modin.frame.test_unstack,test_unstack_input_no_multiindex[timedelta64[ns]-index_names2],[XPASS(strict)] ,failed
9912,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[index-<lambda>-item2-col_key1],"AssertionError: Regex pattern did not match.
 Regex: 'Must have equal len keys and value when setting with an iterable'
 Input: 'could not broadcast input array from shape (4,) into shape (2, 3)'",failed
9914,tests.integ.modin.frame.test_unstack,test_unstack_input_no_multiindex[timedelta64[ns]-index_names3],[XPASS(strict)] ,failed
9919,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_series_row_key_df_item_match_pandas[row_pos14-col_pos14-item_values14],"AssertionError: DataFrame.iloc[:, 1] (column name=""B"") are different

DataFrame.iloc[:, 1] (column name=""B"") values are different (50.0 %)
[index]: [0, 1, 2, 3]
[left]:  [6.0, nan, nan, 15.0]
[right]: [6, 99, 101, 15]",failed
9928,tests.integ.modin.frame.test_unstack,test_unstack_sort_notimplemented,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9930,tests.integ.modin.frame.test_unstack,test_unstack_non_integer_level_notimplemented,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
9932,tests.integ.modin.frame.test_iloc,test_df_iloc_set_with_series_row_key_df_item_match_pandas[row_pos15-col_pos15-item_values15],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (25.0 %)
[index]: [0, 1, 2, 3]
[left]:  [5.0, nan, 11.0, 14.0]
[right]: [5, 99, 11, 14]",failed
9946,tests.integ.modin.frame.test_astype,test_astype_from_timestamp_ltz[uint64],"TypeError: Converting from datetime64[ns, America/Los_Angeles] to uint64 is not supported. Do obj.astype('int64').astype(dtype) instead",failed
9951,tests.integ.modin.frame.test_iloc,test_df_iloc_get_non_numeric_key_negative[row-key7],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
9956,tests.integ.modin.frame.test_set_index,test_set_index_pass_arrays[False-False-frame_of_ints_and_timedelta-Index],"TypeError: The parameter ""keys"" may be a column key, one-dimensional array, or a list containing only valid column keys and one-dimensional arrays. Received column of type <class 'snowflake.snowpark.modin.plugin.extensions.index.Index'>",failed
9962,tests.integ.modin.frame.test_set_index,test_set_index_pass_arrays[False-False-frame_of_ints_and_timedelta-array],"KeyError: ""None of ['a'] are in the columns""",failed
9969,tests.integ.modin.frame.test_set_index,test_set_index_pass_arrays[False-False-frame_of_ints_and_timedelta-list],"KeyError: ""None of ['a'] are in the columns""",failed
9974,tests.integ.modin.frame.test_loc,test_df_loc_set_with_row_wise_list_like_item[index-<lambda>-item2-col_key5],ValueError: Must have equal len keys and value when setting with an iterable,failed
9982,tests.integ.modin.frame.test_set_index,test_set_index_pass_arrays[False-False-frame_of_ints_and_timedelta-<lambda>],"KeyError: ""None of ['a'] are in the columns""",failed
10057,tests.integ.modin.frame.test_iloc,test_df_iloc_get_non_numeric_key_negative[row-key8],Failed: DID NOT RAISE <class 'IndexError'>,failed
10086,tests.integ.modin.frame.test_loc,test_df_loc_set_number_of_cols_mismatch_negative,Failed: DID NOT RAISE <class 'Exception'>,failed
10087,tests.integ.modin.test_from_pandas_to_pandas,test_type_mismatch_index_type[bool-object],AssertionError: Expected bool saw object,failed
10089,tests.integ.modin.frame.test_loc,test_df_loc_set_duplicate_index[duplicate-self_index_val1-index0-x-item0],ValueError: Length of values (2) does not match length of index (4),failed
10094,tests.integ.modin.test_from_pandas_to_pandas,test_type_mismatch_index_type[string-python],AssertionError: Expected object saw string,failed
10099,tests.integ.modin.frame.test_astype,test_astype_from_timestamp_ltz[int32],"TypeError: Converting from datetime64[ns, America/Los_Angeles] to int32 is not supported. Do obj.astype('int64').astype(dtype) instead",failed
10100,tests.integ.modin.test_from_pandas_to_pandas,test_type_mismatch_index_type[nullable_int],AssertionError: Expected float64 saw Int64,failed
10105,tests.integ.modin.frame.test_loc,test_df_loc_set_with_non_matching_1d_scalar_key[data0-None-columns0-A-7],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
10107,tests.integ.modin.test_from_pandas_to_pandas,test_type_mismatch_index_type[nullable_uint],AssertionError: Expected float64 saw UInt16,failed
10113,tests.integ.modin.test_from_pandas_to_pandas,test_type_mismatch_index_type[nullable_float],AssertionError: Expected float64 saw Float32,failed
10118,tests.integ.modin.frame.test_loc,test_df_loc_set_duplicate_index[duplicate-self_index_val1-index1-y-item1],ValueError: Length of values (2) does not match length of index (4),failed
10121,tests.integ.modin.test_from_pandas_to_pandas,test_type_mismatch_index_type[nullable_bool],AssertionError: Expected bool saw boolean,failed
10126,tests.integ.modin.test_from_pandas_to_pandas,test_type_mismatch_index_type[uint],AssertionError: Expected int16 saw uint64,failed
10131,tests.integ.modin.test_from_pandas_to_pandas,test_type_mismatch_index_type[num_int32],AssertionError: Expected int16 saw int32,failed
10136,tests.integ.modin.frame.test_loc,test_df_loc_set_with_non_matching_1d_scalar_key[data1-None-columns1-A-7],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
10137,tests.integ.modin.test_from_pandas_to_pandas,test_type_mismatch_index_type[num_uint64],AssertionError: Expected int16 saw uint64,failed
10144,tests.integ.modin.test_from_pandas_to_pandas,test_type_mismatch_index_type[num_uint32],AssertionError: Expected int16 saw uint32,failed
10150,tests.integ.modin.test_from_pandas_to_pandas,test_type_mismatch_index_type[num_uint16],AssertionError: Expected int16 saw uint16,failed
10156,tests.integ.modin.test_from_pandas_to_pandas,test_type_mismatch_index_type[num_uint8],AssertionError: Expected int16 saw uint8,failed
10162,tests.integ.modin.test_from_pandas_to_pandas,test_type_mismatch_index_type[num_float32],AssertionError: Expected float64 saw float32,failed
10169,tests.integ.modin.frame.test_loc,test_df_loc_set_duplicate_index[duplicate-self_index_val1-index2-x-item2],ValueError: cannot reindex on an axis with duplicate labels,failed
10170,tests.integ.modin.test_from_pandas_to_pandas,test_value_type_mismatch_index_type[categorical],"Failed: DID NOT RAISE (<class 'AssertionError'>, <class 'NotImplementedError'>)",failed
10174,tests.integ.modin.test_from_pandas_to_pandas,test_value_type_mismatch_index_type[interval],"Failed: DID NOT RAISE (<class 'AssertionError'>, <class 'NotImplementedError'>)",failed
10176,tests.integ.modin.test_from_pandas_to_pandas,test_value_type_mismatch_index_type[complex64],"Failed: DID NOT RAISE (<class 'AssertionError'>, <class 'NotImplementedError'>)",failed
10177,tests.integ.modin.frame.test_loc,test_df_loc_set_with_non_matching_1d_scalar_key[None-index3-columns3-5-0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
10179,tests.integ.modin.test_from_pandas_to_pandas,test_value_type_mismatch_index_type[complex128],"Failed: DID NOT RAISE (<class 'AssertionError'>, <class 'NotImplementedError'>)",failed
10183,tests.integ.modin.test_from_pandas_to_pandas,test_value_type_mismatch_index_type[period],"Failed: DID NOT RAISE (<class 'AssertionError'>, <class 'NotImplementedError'>)",failed
10184,tests.integ.modin.frame.test_loc,test_df_loc_set_with_non_matching_1d_scalar_key[None-index3-columns3--2-20],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
10189,tests.integ.modin.test_from_pandas_to_pandas,test_value_type_mismatch_index_type[datetime],"Failed: DID NOT RAISE (<class 'AssertionError'>, <class 'NotImplementedError'>)",failed
10192,tests.integ.modin.test_from_pandas_to_pandas,test_value_type_mismatch_index_type[datetime-tz],"Failed: DID NOT RAISE (<class 'AssertionError'>, <class 'NotImplementedError'>)",failed
10196,tests.integ.modin.test_from_pandas_to_pandas,test_value_type_mismatch_index_type[timedelta],"Failed: DID NOT RAISE (<class 'AssertionError'>, <class 'NotImplementedError'>)",failed
10205,tests.integ.modin.frame.test_iloc,test_df_iloc_get_non_numeric_key_negative[row-key9],Failed: DID NOT RAISE <class 'IndexError'>,failed
10217,tests.integ.modin.frame.test_iloc,test_df_iloc_get_non_numeric_key_negative[row-string],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
10225,tests.integ.modin.frame.test_iloc,test_df_iloc_get_non_numeric_key_negative[row-test],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
10227,tests.integ.modin.frame.test_loc,test_df_loc_set_row_col_with_non_matching_scalar_key[native_df0-5-A-0],KeyError: array([5]),failed
10238,tests.integ.modin.frame.test_loc,test_df_loc_set_row_col_with_non_matching_scalar_key[native_df0--2-B-20],KeyError: array([-2]),failed
10242,tests.integ.modin.groupby.test_groupby_basic_agg,test_groupby_agg_on_groupby_columns_named_agg[False-False-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (6, 4)
[right]: (6, 6)",failed
10246,tests.integ.modin.frame.test_set_index,test_set_index_pass_arrays_duplicate[True-True-frame_of_ints-Index-Index],"TypeError: The parameter ""keys"" may be a column key, one-dimensional array, or a list containing only valid column keys and one-dimensional arrays. Received column of type <class 'snowflake.snowpark.modin.plugin.extensions.index.Index'>",failed
10251,tests.integ.modin.frame.test_loc,test_df_loc_set_row_col_with_non_matching_scalar_key[native_df0-A-C-7],"KeyError: array(['A'], dtype='<U1')",failed
10255,tests.integ.modin.frame.test_loc,test_df_loc_set_duplicate_index[duplicate-self_index_val1-index3-y-item3],ValueError: cannot reindex on an axis with duplicate labels,failed
10264,tests.integ.modin.frame.test_loc,test_df_loc_set_row_col_with_non_matching_scalar_key[native_df0-X-D-7],"KeyError: array(['X'], dtype='<U1')",failed
10265,tests.integ.modin.frame.test_iloc,test_df_iloc_get_non_numeric_key_negative[row-key12],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
10275,tests.integ.modin.frame.test_astype,test_astype_from_timestamp_ltz[uint32],"TypeError: Converting from datetime64[ns, America/Los_Angeles] to uint32 is not supported. Do obj.astype('int64').astype(dtype) instead",failed
10279,tests.integ.modin.frame.test_iloc,test_df_iloc_get_non_numeric_key_negative[row-key13],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
10291,tests.integ.modin.frame.test_iloc,test_df_iloc_get_non_numeric_key_negative[col-None],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
10297,tests.integ.modin.frame.test_loc,test_df_loc_set_duplicate_index[duplicate-self_index_val1-index4-columns4-item4],ValueError: Length of values (2) does not match length of index (4),failed
10302,tests.integ.modin.frame.test_iloc,test_df_iloc_get_non_numeric_key_negative[col-True],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
10314,tests.integ.modin.frame.test_loc,test_df_loc_set_with_multi_index_not_implemented,KeyError: array([1]),failed
10315,tests.integ.modin.frame.test_iloc,test_df_iloc_get_non_numeric_key_negative[col-False],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
10330,tests.integ.modin.frame.test_iloc,test_df_iloc_get_non_numeric_key_negative[col--3.14],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
10340,tests.integ.modin.frame.test_loc,test_df_loc_set_duplicate_index[duplicate-self_index_val1-index5-columns5-item5],ValueError: Length of values (2) does not match length of index (4),failed
10345,tests.integ.modin.frame.test_iloc,test_df_iloc_get_non_numeric_key_negative[col-3.142857142857143],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
10362,tests.integ.modin.frame.test_iloc,test_df_iloc_get_non_numeric_key_negative[col-nan],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
10377,tests.integ.modin.frame.test_iloc,test_df_iloc_get_non_numeric_key_negative[col-key6],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
10432,tests.integ.modin.frame.test_loc,test_df_loc_set_duplicate_index_negative[index0-columns0-item0],ValueError: Length of values (2) does not match length of index (4),failed
10435,tests.integ.modin.frame.test_value_counts,test_value_counts_dropna[False-test_data0],reason: SNOW-1201658,xfailed
10447,tests.integ.modin.frame.test_value_counts,test_non_existing_labels,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
10474,tests.integ.modin.frame.test_astype,test_astype_from_timestamp_ltz[int16],"TypeError: Converting from datetime64[ns, America/Los_Angeles] to int16 is not supported. Do obj.astype('int64').astype(dtype) instead",failed
10502,tests.integ.modin.frame.test_iloc,test_df_iloc_get_non_numeric_key_negative[col-key7],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
10509,tests.integ.modin.test_from_pandas_to_pandas,test_from_to_pandas_datetime64_support,AssertionError,failed
10514,tests.integ.modin.test_from_pandas_to_pandas,test_rw_datetimeindex,"AssertionError: Series are different

Series values are different (50.0 %)
[index]: [ntz, tz]
[left]:  [datetime64[ns], datetime64[ns, US/Pacific]]
[right]: [datetime64[ns], datetime64[ns, UTC-08:00]]
At positional index 1, first diff: datetime64[ns, US/Pacific] != datetime64[ns, UTC-08:00]",failed
10520,tests.integ.modin.test_from_pandas_to_pandas,test_from_to_pandas_datetime64_timezone_support,"AssertionError: Attributes of DataFrame.iloc[:, 1] (column name=""pacific"") are different

Attribute ""dtype"" are different
[left]:  datetime64[ns, US/Pacific]
[right]: datetime64[ns, UTC-08:00]",failed
10535,tests.integ.modin.groupby.test_groupby_basic_agg,test_groupby_dropna_multi_index[False-group_index1-expected_index_dropna_false1],"AssertionError: DataFrame.index are different

Attribute ""inferred_type"" are different
[left]:  mixed
[right]: string",failed
10540,tests.integ.modin.groupby.test_groupby_basic_agg,test_groupby_dropna_multi_index[False-group_index2-expected_index_dropna_false2],"AssertionError: DataFrame.index are different

Attribute ""inferred_type"" are different
[left]:  mixed
[right]: string",failed
10541,tests.integ.modin.frame.test_loc,test_df_loc_get_key_bool_series_with_unaligned_and_duplicate_indices,"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 2)
[right]: (9, 2)",failed
10546,tests.integ.modin.groupby.test_groupby_basic_agg,test_groupby_dropna_multi_index[False-group_index3-expected_index_dropna_false3],"AssertionError: DataFrame.index are different

Attribute ""inferred_type"" are different
[left]:  mixed
[right]: string",failed
10553,tests.integ.modin.groupby.test_groupby_basic_agg,test_groupby_dropna_multi_index[False-group_index4-expected_index_dropna_false4],"AssertionError: MultiIndex level [0] are different

Attribute ""dtype"" are different
[left]:  float64
[right]: object",failed
10554,tests.integ.modin.frame.test_loc,test_df_loc_set_scalar_indexer_2d_array_negative,Failed: DID NOT RAISE <class 'Exception'>,failed
10562,tests.integ.modin.frame.test_loc,test_df_loc_set_item_2d_array_scalar_row_loc_negative,Failed: DID NOT RAISE <class 'ValueError'>,failed
10566,tests.integ.modin.frame.test_loc,test_df_loc_get_key_bool_series_with_mismatch_index_len[True-key0],pandas.errors.IndexingError: Unalignable boolean Series provided as indexer (index of the boolean Series and of the indexed object do not match).,failed
10576,tests.integ.modin.frame.test_loc,test_df_loc_set_item_2d_array_row_length_no_match,"ValueError: could not broadcast input array from shape (3, 4) into shape (2, 4)",failed
10583,tests.integ.modin.frame.test_loc,test_df_loc_set_item_2d_array_col_length_no_match,"AssertionError: Regex pattern did not match.
 Regex: 'shape mismatch: the number of columns 3 from the item does not match with the number of columns 4 to set'
 Input: 'could not broadcast input array from shape (3, 3) into shape (2, 4)'",failed
10593,tests.integ.modin.frame.test_loc,test_df_loc_get_key_bool_series_with_mismatch_index_len[True-key1],pandas.errors.IndexingError: Unalignable boolean Series provided as indexer (index of the boolean Series and of the indexed object do not match).,failed
10599,tests.integ.modin.frame.test_loc,test_df_loc_set_2d_array_with_ffill_na_values_negative,"ValueError: could not broadcast input array from shape (2, 4) into shape (4, 4)",failed
10611,tests.integ.modin.frame.test_loc,test_df_loc_set_with_empty_key_and_empty_item_negative[item0-key1],Failed: DID NOT RAISE <class 'Exception'>,failed
10616,tests.integ.modin.frame.test_iloc,test_df_iloc_get_non_numeric_key_negative[col-key8],Failed: DID NOT RAISE <class 'IndexError'>,failed
10619,tests.integ.modin.frame.test_loc,test_df_loc_set_with_empty_key_and_empty_item_negative[item0-key2],Failed: DID NOT RAISE <class 'Exception'>,failed
10623,tests.integ.modin.frame.test_loc,test_df_loc_get_key_bool_series_with_mismatch_index_len[False-key0],pandas.errors.IndexingError: Unalignable boolean Series provided as indexer (index of the boolean Series and of the indexed object do not match).,failed
10628,tests.integ.modin.frame.test_loc,test_df_loc_set_with_empty_key_and_empty_item_negative[item0-key3],Failed: DID NOT RAISE <class 'Exception'>,failed
10630,tests.integ.modin.frame.test_loc,test_df_loc_get_col_time_df[key0],"TypeError: Cannot interpret 'datetime64[ns, UTC]' as a data type",failed
10635,tests.integ.modin.frame.test_astype,test_astype_from_timestamp_ltz[uint16],"TypeError: Converting from datetime64[ns, America/Los_Angeles] to uint16 is not supported. Do obj.astype('int64').astype(dtype) instead",failed
10638,tests.integ.modin.frame.test_loc,test_df_loc_set_with_empty_key_and_empty_item_negative[item1-key1],Failed: DID NOT RAISE <class 'Exception'>,failed
10642,tests.integ.modin.frame.test_loc,test_df_loc_get_col_time_df[key1],"TypeError: Cannot interpret 'datetime64[ns, UTC]' as a data type",failed
10646,tests.integ.modin.frame.test_loc,test_df_loc_set_with_empty_key_and_empty_item_negative[item1-key2],Failed: DID NOT RAISE <class 'Exception'>,failed
10654,tests.integ.modin.frame.test_loc,test_df_loc_set_with_empty_key_and_empty_item_negative[item1-key3],Failed: DID NOT RAISE <class 'Exception'>,failed
10663,tests.integ.modin.frame.test_loc,test_df_loc_get_key_bool_series_with_mismatch_index_len[False-key1],pandas.errors.IndexingError: Unalignable boolean Series provided as indexer (index of the boolean Series and of the indexed object do not match).,failed
10664,tests.integ.modin.frame.test_loc,test_df_loc_set_with_empty_key_and_empty_item_negative[item2-key1],Failed: DID NOT RAISE <class 'Exception'>,failed
10682,tests.integ.modin.frame.test_loc,test_df_loc_get_key_bool_series_with_1k_shape[key0],pandas.errors.IndexingError: Unalignable boolean Series provided as indexer (index of the boolean Series and of the indexed object do not match).,failed
10683,tests.integ.modin.frame.test_loc,test_df_loc_get_col_snowpark_pandas_input[series[bool]_col],"AssertionError: DataFrame.columns are different

DataFrame.columns values are different (20.0 %)
[left]:  Index(['A', 'B', 'C', 'F', 'A'], dtype='object')
[right]: Index(['A', 'B', 'C', 'E', 'A'], dtype='object')
At positional index 3, first diff: F != E",failed
10689,tests.integ.modin.frame.test_loc,test_df_loc_set_with_empty_key_and_empty_item_negative[item2-key2],Failed: DID NOT RAISE <class 'Exception'>,failed
10694,tests.integ.modin.frame.test_iloc,test_df_iloc_get_non_numeric_key_negative[col-key9],Failed: DID NOT RAISE <class 'IndexError'>,failed
10697,tests.integ.modin.frame.test_set_index,test_set_index_pass_arrays_duplicate[True-True-frame_of_ints_and_timedelta-Index-Index],"TypeError: The parameter ""keys"" may be a column key, one-dimensional array, or a list containing only valid column keys and one-dimensional arrays. Received column of type <class 'snowflake.snowpark.modin.plugin.extensions.index.Index'>",failed
10698,tests.integ.modin.frame.test_loc,test_df_loc_set_with_empty_key_and_empty_item_negative[item2-key3],Failed: DID NOT RAISE <class 'Exception'>,failed
10699,tests.integ.modin.frame.test_iloc,test_df_iloc_get_non_numeric_key_negative[col-string],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
10700,tests.integ.modin.frame.test_loc,test_df_loc_get_key_bool_series_with_1k_shape[key1],pandas.errors.IndexingError: Unalignable boolean Series provided as indexer (index of the boolean Series and of the indexed object do not match).,failed
10708,tests.integ.modin.frame.test_iloc,test_df_iloc_get_non_numeric_key_negative[col-test],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
10712,tests.integ.modin.frame.test_loc,test_df_loc_set_with_empty_key_and_empty_item_negative[item3-key1],Failed: DID NOT RAISE <class 'Exception'>,failed
10716,tests.integ.modin.frame.test_iloc,test_df_iloc_get_non_numeric_key_negative[col-key12],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
10718,tests.integ.modin.frame.test_astype,test_astype_from_timestamp_ltz[int8],"TypeError: Converting from datetime64[ns, America/Los_Angeles] to int8 is not supported. Do obj.astype('int64').astype(dtype) instead",failed
10721,tests.integ.modin.frame.test_loc,test_df_loc_set_with_empty_key_and_empty_item_negative[item3-key2],Failed: DID NOT RAISE <class 'Exception'>,failed
10731,tests.integ.modin.frame.test_loc,test_df_loc_set_with_empty_key_and_empty_item_negative[item3-key3],Failed: DID NOT RAISE <class 'Exception'>,failed
10749,tests.integ.modin.frame.test_loc,test_series_loc_set_with_empty_key_and_scalar_item[key0],"KeyError: ""None of [[]] are in the [Index([0, 1, 2], dtype='int64')]""",failed
10752,tests.integ.modin.frame.test_iloc,test_df_iloc_get_non_numeric_key_negative[col-key13],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
10759,tests.integ.modin.frame.test_loc,test_series_loc_set_with_empty_key_and_scalar_item[key1],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
10766,tests.integ.modin.frame.test_iloc,test_df_iloc_get_non_numeric_key_categorical_negative,"AssertionError: Regex pattern did not match.
 Regex: '\\.iloc\\ requires\\ numeric\\ indexers,\\ got\\ \\[1,\\ 3,\\ 5\\]\\\nCategories\\ \\(3,\\ int64\\):\\ \\[1,\\ 3,\\ 5\\]'
 Input: 'positional indexers are out-of-bounds'",failed
10770,tests.integ.modin.frame.test_loc,test_series_loc_set_with_empty_key_and_scalar_item[key2],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
10782,tests.integ.modin.frame.test_where,test_dataframe_where_not_implemented,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
10785,tests.integ.modin.frame.test_loc,test_df_loc_get_col_len_mismatch_boolean_indexer[key1],IndexError: positional indexers are out-of-bounds,failed
10788,tests.integ.modin.frame.test_loc,test_series_loc_set_with_empty_key_and_scalar_item[key3],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
10792,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_snowpark_df_input_negative[row],"ValueError: Buffer has wrong number of dimensions (expected 1, got 2)",failed
10798,tests.integ.modin.frame.test_loc,test_df_loc_get_key_non_boolean_series_with_1k_shape[key1],"KeyError: array([ -539,  1160,  -883,  -970, -1083,  1051, -1232, -1263,  -586,
        1271,  -558,    -3,  -132, -1133, -1390,  -451, -1030,  -707,
        -657, -1363,  -223, -1466,  1020, -1215,  -433,  -211,  -998,
        -891,   -63,  -892,  -153, -1478,  -199])",failed
10809,tests.integ.modin.frame.test_where,test_dataframe_where_other_is_array,"ValueError: Data must be 1-dimensional, got ndarray of shape (2, 2) instead",failed
10810,tests.integ.modin.frame.test_loc,test_df_loc_set_with_empty_key_and_list_like_item[key0],"KeyError: ""None of [[]] are in the [Index([0, 1, 2], dtype='int64')]""",failed
10814,tests.integ.modin.frame.test_where,test_dataframe_where_other_is_array_wrong_size_negative,AssertionError: Snowpark pandas Exception Length of values (2) does not match length of index (3) doesn't match pandas Exception other must be the same shape as self when an ndarray,failed
10816,tests.integ.modin.frame.test_loc,test_df_loc_get_negative_row_diff2native[key0-TypeError-Passing a set as an indexer is not supported. Use a list instead.],"AssertionError: Regex pattern did not match.
 Regex: 'Passing a set as an indexer is not supported. Use a list instead.'
 Input: ""'set' type is unordered""",failed
10819,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_snowpark_df_input_negative[col],"ValueError: Buffer has wrong number of dimensions (expected 1, got 2)",failed
10820,tests.integ.modin.frame.test_loc,test_df_loc_get_key_non_boolean_series_with_1k_shape[key2],"KeyError: array([ -351, -1466,  -643,  -727,  -628, -1014,  -631,  -621,   -82,
        1471, -1488,   -10, -1116,  1214,  1295,  -800, -1420,  -783,
        -290,  -394,  -821,  1255,  -367, -1451,  -301,  -322,  -126,
        -557,  -419,  -661,  1279,  1219,  1416,  -448, -1223, -1200,
        1101,  1183,  1382, -1072,  1243, -1466, -1442, -1061,  1252,
        -666,  -461,   -10, -1332, -1415,  1068,  -276,  -913,  -337,
        1187,  -956,  -589,  -433,  -625,   -39,  1133,  -397,  1118,
        1128,  -189, -1345,    -4,  -214, -1235,  -678,  -376, -1476,
       -1399,  -606,  1453,  -622,  -946,  1139, -1261,  -805,  -816,
        -234,  -234,  -771,  1190,  -652, -1222, -1380,  -358, -1121,
        -519,  -700,  1409,  -150, -1079,  1222,  1458,   -58, -1116,
        -914,  -283,  -439,  -467,  -515,  1341, -1289,  -616, -1291,
       -1029, -1002,   -35,  1167,  1320, -1109,  -550,  -773, -1241,
        -646, -1385, -1031,  -198,  -567,  -215,  1433,  -548,  -323,
        -989,  -143,  -218,   -59, -1243,  -238,  -950, -1040,  1123,
        1101,  1238, -1049,    -1,  -598,  1217,  -665,   -98,  -815,
        1052,  1414,  -105,  -726, -1194,  1275,  1256,   -80,  -538,
        1007,  -227, -1042, -1464,  -492, -1479,  -632,  -901,  1197,
        1456,  1328,  -616,  1368,  -386,  -324,  1329,  1251, -1147,
        -395,   -96, -1218,  1202,  -852,  1166, -1417,  1354,  -618,
        -244,  1089,  1258, -1249,  -556, -1262,  1464,  1018,  -235,
         -19, -1418, -1456,  -768,  1284, -1336, -1104,  -206,  1211,
        -159,  -880,  -521,  -227,  -549,  1315, -1227,  1133,  -956,
        1274,  -973,  -548,  -928, -1295, -1061, -1338,   -52, -1226,
        -743, -1078,  1020,  1464,  -546,  -304,  -851,  1304, -1416,
        1219,  -542,   -62,  1249,  -354,  -302,  1145,  -688, -1354,
        1320,  -745, -1245, -1041,  -145,  -527,  -469,    -9,  -288,
        1275,  -962,  -259,  -450,  -412,  -766, -1054,  -113, -1200,
       -1481,  -688,  -487,  -771,  -240, -1292,  -907, -1379,  -164,
       -1163,  1304, -1047,  1472, -1176,  -694, -1045,  -999,  -327,
       -1188,  1161,  -739, -1295,  -800,  1121,  1329,   -91,  -576,
        -299,  1385, -1241,  1172, -1240,  1144,  -400,  -208,  -274,
       -1441,  -176, -1135, -1447,  -788, -1207, -1213,  -147,  -835,
        1438,  1392,  1297,  1219, -1088, -1497,  -100,  -758,  -266,
        -807,  -261,  -572,  1449, -1009,  -918,  -447,  -828, -1233,
        -427,  -672,  -408,  -782,  1134,   -58,  -418,  1437,  1151,
        1092,  -610,  -731, -1001,  -699,  -500,  -915,  -704,  -702,
        -417,  1099, -1003, -1121,  -661,  1180,  -346,  -105,  1008,
        -647, -1366,  -499,  -171,  -977,  1033, -1077, -1158, -1178,
       -1413,  -735,  1239, -1308, -1142,  -564,  -205, -1276,  1345,
        -889,  -725,  1159, -1125,  1171,  -831,   -45,  -151,  -671,
        1411,  1341,  -593, -1419,  -263,  -195, -1029,  1132,  -180,
        -561,  -648,  1356, -1374,   -82,  -792,  1250, -1352,  -269,
        1006, -1448,  -481,  -194,  -897,   -42,  -878,  1232,  1337,
       -1175,  1315,  -668,  1090,  1246,  -148,  -182,  -276,  1277,
        -545,  -551,  1002, -1466,  1075,  -268,  -912,  -301,  1364,
        -933,  -823,  -954,  1303, -1253, -1334,  -138,  -704,  -968,
        1000,  -262, -1352,   -37, -1479,  1096,  -760,  -648,  -673,
        -582,  -710,  -345,  1061,  -184,  1327, -1185, -1331, -1209,
       -1060,  1043,  -937,  1049, -1365,  1312,  -616,  -650,  -136,
       -1349, -1193,  1067, -1073, -1151,  1296,  -678, -1380,  -673,
       -1030, -1083, -1344, -1245,  1049,  1186,  -537,  -578, -1035,
        -932,  -381,  -995,  -881,  -731,  1325,  1192,  -476,    -8,
       -1168, -1447,  -973, -1312,  1341,  1347,  -503,  -212,  -327,
        1146,  1062, -1494,  1206,  -983, -1085,  -164, -1237,  -853,
          -8,  -164, -1419,  1300,  -145,  1130, -1031,  1450,  -609,
        -344,  1458,  -250,  -422, -1476, -1021,  -831, -1258, -1092,
        1126,  -816,  -398, -1152,  -609,  1189,  1349, -1295,  -363,
        -237,  -696,  1309,  1174,  -620,  -246,  -331, -1102,  -561,
         -53,  -121,  1492, -1339, -1054,  1043,  1457,  -925,  1123,
       -1018, -1467, -1001,  -233,  -901,  -308,  -850,  -534,  1368,
       -1203,  -825,  -110,  -504,  1196, -1389,  -456,  -316,  -404,
        -869,  -438,  -836,    -1, -1339, -1417,  1230,  1310,  -252,
         -61,   -53,  1353,  -362,  -287,  -976,  1081, -1496,  1036,
        -152,  -547,  1187,  1269,  1305,  1003, -1457,  -236,   -56,
         -93, -1309,  -708, -1314,  1453, -1280,  1441, -1241,  1176,
       -1013,  -192,  -415, -1154,  -651, -1318,  1018,  1228,  1328,
        1201,  -358,  1393,  -935,  1170,  1445,  1119,  -947, -1051,
        1253, -1012,  1484, -1217,  -328, -1251,  1044,  1244,  -395,
        1043,  1004,  -520, -1091, -1028,  -739,  1189, -1475,  1232,
       -1348, -1064,  -517,  1293,  1088,  1490,  1099,  -947,  1065,
         -99, -1023,  -923,  1119,  1296,  -392, -1336,  -343,    -7,
       -1131,  -801,   -89,  -431, -1095,  1195,  -677,  1350,  -135,
        -246,  -362, -1326,  1243,  -565, -1248,  -582,  -178,  -749,
        1078, -1186,  1227, -1108,  1251,  -324,  -654,  1406, -1248,
        1092, -1147, -1024,  1005, -1104,  1017,  -584,  -604,  -355,
       -1419,  -177, -1415,  1281,  1069,  -866, -1149, -1447,  -239,
        -201,  1267, -1384,  -176,  1452,  1191,  -339,  -332, -1123])",failed
10822,tests.integ.modin.frame.test_loc,test_df_loc_get_negative_row_diff2native[key1-TypeError-Passing a dict as an indexer is not supported. Use a list instead.],Failed: DID NOT RAISE <class 'TypeError'>,failed
10832,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_snowpark_empty_str_series_input_negative[row],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
10837,tests.integ.modin.frame.test_loc,test_df_loc_get_negative_row_diff2native[key2-TypeError-Please convert this to Snowpark pandas objects by calling modin],"KeyError: array([2, 4], dtype=object)",failed
10843,tests.integ.modin.frame.test_astype,test_astype_from_timestamp_ltz[uint8],"TypeError: Converting from datetime64[ns, America/Los_Angeles] to uint8 is not supported. Do obj.astype('int64').astype(dtype) instead",failed
10846,tests.integ.modin.frame.test_loc,test_df_loc_get_negative_row_diff2native[key3-TypeError-Please convert this to Snowpark pandas objects by calling modin],Failed: DID NOT RAISE <class 'TypeError'>,failed
10848,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_snowpark_empty_str_series_input_negative[col],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
10857,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_raises_not_implemented_error_negative[key0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
10885,tests.integ.modin.frame.test_iloc,test_df_iloc_get_key_raises_not_implemented_error_negative[key1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
10913,tests.integ.modin.frame.test_where,test_dataframe_where_with_dataframe_cond_single_index_different_names_2,"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['B']",failed
10927,tests.integ.modin.frame.test_loc,test_df_loc_get_negative_snowpark_pandas_input[dataframe],Failed: DID NOT RAISE <class 'Exception'>,failed
10934,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_col_key[fizz1-None],AssertionError,failed
10936,tests.integ.modin.frame.test_where,test_dataframe_where_with_duplicated_index_aligned[10-cond_frame0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
10944,tests.integ.modin.frame.test_loc,test_df_setitem_boolean_key[index1-False],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 3)
[right]: (5, 3)",failed
10956,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_col_key[key4-None],"AssertionError: DataFrame.columns are different

DataFrame.columns classes are different
[left]:  Index(['buzz1'], dtype='object', name='buzz')
[right]: MultiIndex([('fizz1', 'buzz1')],
           names=['fizz', 'buzz'])",failed
10967,tests.integ.modin.frame.test_where,test_dataframe_where_with_duplicated_index_aligned[10-cond_frame1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
10971,tests.integ.modin.frame.test_loc,test_df_setitem_boolean_key[index2-0],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 3)
[right]: (5, 3)",failed
10986,tests.integ.modin.groupby.test_groupby_basic_agg,test_engine_kwargs_warning,"AssertionError: assert 'The argument `engine` of `groupby_max` has been ignored by Snowpark pandas API' in ''
 +  where '' = <_pytest.logging.LogCaptureFixture object at 0x344297130>.text",failed
10987,tests.integ.modin.frame.test_where,test_dataframe_where_with_duplicated_index_aligned[other1-cond_frame0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
10992,tests.integ.modin.groupby.test_groupby_basic_agg,test_groupby_with_observed_warns,"AssertionError: assert 'CategoricalDType is not yet supported with Snowpark pandas API, the observed parameter is ignored.' in ''
 +  where '' = <_pytest.logging.LogCaptureFixture object at 0x3442797b0>.text",failed
11004,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_col_key[key5-None],KeyError: 'fizz2',failed
11006,tests.integ.modin.frame.test_where,test_dataframe_where_with_duplicated_index_aligned[other1-cond_frame1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
11010,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False-1-1-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (1, 7)
[right]: (2, 7)",failed
11011,tests.integ.modin.frame.test_astype,test_astype_from_timestamp_ltz[float32],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: 'Cannot cast DatetimeArray to dtype float32'",failed
11016,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False-1-1--1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (1, 7)
[right]: (2, 7)",failed
11021,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False-1-1-1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 7)
[right]: (1, 7)",failed
11024,tests.integ.modin.frame.test_loc,test_df_setitem_boolean_key[index3-False],ValueError: cannot reindex on an axis with duplicate labels,failed
11030,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_col_key[key7-None],KeyError: 'buzz1',failed
11035,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False-1-4-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 7)
[right]: (5, 7)",failed
11039,tests.integ.modin.frame.test_loc,test_df_setitem_boolean_key[index3-0],ValueError: cannot reindex on an axis with duplicate labels,failed
11041,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False-1-4--1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 7)
[right]: (5, 7)",failed
11042,tests.integ.modin.frame.test_where,test_dataframe_where_with_duplicated_index_aligned[other2-cond_frame0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
11049,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False-1-4-1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 7)
[right]: (4, 7)",failed
11052,tests.integ.modin.frame.test_loc,test_df_setitem_boolean_key[index4-True],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 3)
[right]: (5, 3)",failed
11054,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_col_key[key8-None],KeyError: 'buzz1',failed
11059,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False-1-4-4],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 7)
[right]: (1, 7)",failed
11062,tests.integ.modin.frame.test_where,test_dataframe_where_with_duplicated_index_aligned[other2-cond_frame1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
11069,tests.integ.modin.frame.test_set_index,test_set_index_pass_arrays_duplicate[True-False-frame_of_ints-Index-Index],"TypeError: The parameter ""keys"" may be a column key, one-dimensional array, or a list containing only valid column keys and one-dimensional arrays. Received column of type <class 'snowflake.snowpark.modin.plugin.extensions.index.Index'>",failed
11082,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_col_key[key9-None],KeyError: 'buzz1',failed
11086,tests.integ.modin.frame.test_loc,test_df_setitem_boolean_key[index5-True],ValueError: cannot reindex on an axis with duplicate labels,failed
11113,tests.integ.modin.frame.test_where,test_dataframe_where_with_duplicated_index_unaligned,pandas.errors.InvalidIndexError,failed
11126,tests.integ.modin.frame.test_where,test_dataframe_where_with_duplicated_columns_negative[cond_column_names0-None-Multiple columns are mapped to each label in ['A'] in DataFrame condition],"AssertionError: Regex pattern did not match.
 Regex: ""Multiple\\ columns\\ are\\ mapped\\ to\\ each\\ label\\ in\\ \\['A'\\]\\ in\\ DataFrame\\ condition""
 Input: 'cannot reindex on an axis with duplicate labels'",failed
11134,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False--1-1-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 7)
[right]: (6, 7)",failed
11135,tests.integ.modin.frame.test_where,test_dataframe_where_with_duplicated_columns_negative[None-others_column_names1-Multiple columns are mapped to each label in ['C'] in DataFrame other],AssertionError: exception type <class 'pandas.errors.InvalidIndexError'> does not match with expected type <class 'ValueError'>,failed
11143,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_row_key[mark ii-KeyError],KeyError: 'mark ii',failed
11146,tests.integ.modin.frame.test_loc,test_df_setitem_boolean_key[index5-1],ValueError: cannot reindex on an axis with duplicate labels,failed
11149,tests.integ.modin.frame.test_where,test_dataframe_where_with_duplicated_columns_negative[cond_column_names2-others_column_names2-Multiple columns are mapped to each label in ['C'] in DataFrame condition],"AssertionError: Regex pattern did not match.
 Regex: ""Multiple\\ columns\\ are\\ mapped\\ to\\ each\\ label\\ in\\ \\['C'\\]\\ in\\ DataFrame\\ condition""
 Input: 'cannot reindex on an axis with duplicate labels'",failed
11151,tests.integ.modin.frame.test_astype,test_astype_from_timestamp_ltz[float160],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: 'Cannot cast DatetimeArray to dtype float16'",failed
11152,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False--1-1-1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 7)
[right]: (1, 7)",failed
11154,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_row_key[key4-None],"AssertionError: DataFrame.index are different

DataFrame.index levels are different
[left]:  1, Index(['mark v', 'mark vi'], dtype='object')
[right]: 2, MultiIndex([('mark i',  'mark v'),
            ('mark i', 'mark vi')],
           )",failed
11161,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False--1-1-4],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 7)
[right]: (4, 7)",failed
11167,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_row_key[key5-None],"KeyError: ['viper', 'mark i', 'viper']",failed
11169,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False--1-1-10],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 7)
[right]: (6, 7)",failed
11172,tests.integ.modin.frame.test_where,test_where_series_cond[series_shorter_than_dataframe],ValueError: Array conditional must be same shape as self,failed
11179,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False--1-4-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (2, 7)
[right]: (3, 7)",failed
11182,tests.integ.modin.frame.test_where,test_where_series_cond[series_same_length_as_dataframe],ValueError: Array conditional must be same shape as self,failed
11188,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_row_key[key6-KeyError],KeyError: 'invalid',failed
11194,tests.integ.modin.frame.test_where,test_where_series_cond[series_longer_than_dataframe],ValueError: Array conditional must be same shape as self,failed
11196,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False--1-4-4],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 7)
[right]: (1, 7)",failed
11206,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False--1-4-10],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (2, 7)
[right]: (3, 7)",failed
11220,tests.integ.modin.frame.test_where,test_where_series_other_axis_not_specified,"AssertionError: Regex pattern did not match.
 Regex: 'df.where requires an axis parameter \\(0 or 1\\) when given a Series'
 Input: 'Must specify axis=0 or 1'",failed
11223,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_row_key[key7-None],KeyError: 'mark vi',failed
11241,tests.integ.modin.frame.test_where,test_where_series_other_axis_0[matching_index-series_shorter_than_dataframe],IndexError: index 0 is out of bounds for axis 0 with size 0,failed
11276,tests.integ.modin.frame.test_where,test_where_series_other_axis_0[unmatched_index-series_shorter_than_dataframe],IndexError: index 0 is out of bounds for axis 0 with size 0,failed
11288,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_row_key[key8-None],KeyError: 'mark vi',failed
11293,tests.integ.modin.frame.test_where,test_where_series_other_axis_0[unmatched_index-series_same_length_as_dataframe],IndexError: index 0 is out of bounds for axis 0 with size 0,failed
11300,tests.integ.modin.frame.test_astype,test_astype_from_timestamp_ltz[float161],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: 'Cannot cast DatetimeArray to dtype float16'",failed
11315,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_row_key[key9-None],KeyError: 'mark vi',failed
11321,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False-2-1-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 7)
[right]: (1, 7)",failed
11322,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_row_key[key10-AssertionError],"assert False
 +  where False = fizz           fizz1 fizz2\nbuzz           buzz1 buzz2\nmark i mark v     12     2\n       mark vi     0     4.empty",failed
11327,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False-2-1--1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 7)
[right]: (1, 7)",failed
11328,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[fizz1-mark i],AssertionError,failed
11337,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[fizz1-row1],AssertionError,failed
11338,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False-2-1-1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 7)
[right]: (1, 7)",failed
11340,tests.integ.modin.frame.test_where,test_where_series_other_axis_0[unmatched_index-series_longer_than_dataframe],IndexError: index 0 is out of bounds for axis 0 with size 0,failed
11345,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[fizz1-row2],AssertionError: Got type: <class 'numpy.int64'>,failed
11357,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False-2-4-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (2, 7)
[right]: (3, 7)",failed
11358,tests.integ.modin.frame.test_where,test_where_series_other_axis_1[matching_index-series_same_length_as_dataframe],"AssertionError: DataFrame.iloc[:, 0] (column name=""col1"") are different

DataFrame.iloc[:, 0] (column name=""col1"") values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [nan, nan, nan]
[right]: [11, 11, 11]",failed
11360,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[fizz1-row3],AssertionError,failed
11369,tests.integ.modin.frame.test_where,test_where_series_other_axis_1[matching_index-series_longer_than_dataframe],"AssertionError: DataFrame.iloc[:, 0] (column name=""col1"") are different

DataFrame.iloc[:, 0] (column name=""col1"") values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [nan, nan, nan]
[right]: [11, 11, 11]",failed
11370,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False-2-4--1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (2, 7)
[right]: (3, 7)",failed
11374,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[fizz1-row4],"KeyError: ['viper', 'mark i', 'viper']",failed
11380,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False-2-4-1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (1, 7)
[right]: (2, 7)",failed
11387,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False-2-4-4],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 7)
[right]: (1, 7)",failed
11399,tests.integ.modin.frame.test_where,test_where_series_cond_after_join,ValueError: Array conditional must be same shape as self,failed
11403,tests.integ.modin.frame.test_astype,test_astype_from_timestamp_ltz[float64],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: 'Cannot cast DatetimeArray to dtype float64'",failed
11409,tests.integ.modin.frame.test_where,test_where_with_zero_other_mixed_types_SNOW_1372268,ValueError: Array conditional must be same shape as self,failed
11417,tests.integ.modin.frame.test_where,test_where_with_zero_other_SNOW_1372268,ValueError: Array conditional must be same shape as self,failed
11428,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[fizz1-row5],KeyError: 'mark vi',failed
11435,tests.integ.modin.groupby.test_groupby_apply,test_dropna[index0-True-include_groups_True],KeyError: 'index',failed
11436,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False--2--1-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 7)
[right]: (4, 7)",failed
11443,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[fizz1-row6],KeyError: 'mark vi',failed
11445,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False--2--1-4],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (2, 7)
[right]: (3, 7)",failed
11446,tests.integ.modin.groupby.test_groupby_apply,test_dropna[index0-True-include_groups_False],KeyError: 'index',failed
11450,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False--2--1-10],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 7)
[right]: (4, 7)",failed
11452,tests.integ.modin.frame.test_set_index,test_set_index_pass_arrays_duplicate[True-False-frame_of_ints_and_timedelta-Index-Index],"TypeError: The parameter ""keys"" may be a column key, one-dimensional array, or a list containing only valid column keys and one-dimensional arrays. Received column of type <class 'snowflake.snowpark.modin.plugin.extensions.index.Index'>",failed
11454,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False--2-1-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (2, 7)
[right]: (3, 7)",failed
11456,tests.integ.modin.groupby.test_groupby_apply,test_dropna[index0-False-include_groups_True],KeyError: 'index',failed
11460,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[fizz1-row7],KeyError: 'mark vi',failed
11463,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False--2-1-1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 7)
[right]: (1, 7)",failed
11468,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False--2-1-4],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (1, 7)
[right]: (2, 7)",failed
11473,tests.integ.modin.groupby.test_groupby_apply,test_dropna[index0-False-include_groups_False],KeyError: 'index',failed
11474,tests.integ.modin.groupby.test_groupby_apply,test_dropna[index1-True-include_groups_True],"reason: We drop all the rows, apply the UDTF, and try to pivot the result, but pivoting an empty frame causes a SQL error due to SNOW-1233895",xfailed
11476,tests.integ.modin.groupby.test_groupby_apply,test_dropna[index1-True-include_groups_False],"reason: We drop all the rows, apply the UDTF, and try to pivot the result, but pivoting an empty frame causes a SQL error due to SNOW-1233895",xfailed
11478,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False--2-1-10],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (2, 7)
[right]: (3, 7)",failed
11482,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[fizz1-row8],KeyError: 'mark vi',failed
11487,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False--2-4-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (1, 7)
[right]: (2, 7)",failed
11490,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[fizz1-row9],AssertionError,failed
11497,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[fizz1-row10],AssertionError,failed
11499,tests.integ.modin.groupby.test_all_any,test_all_any_invalid_types[data0-Boolean value 'a' is not recognized],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
11500,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False--2-4-4],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 7)
[right]: (1, 7)",failed
11501,tests.integ.modin.groupby.test_all_any,"test_all_any_invalid_types[data1-invalid\\ type\\ \\[TO_BOOLEAN\\(""values""\\.""value""\\)\\]\\ for\\ parameter\\ 'TO_BOOLEAN']",Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
11503,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[fizz1-row11],AssertionError,failed
11508,tests.integ.modin.groupby.test_all_any,test_timedelta_any_with_nulls,"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (100.0 %)
[index]: [a]
[left]:  [True]
[right]: [False]",failed
11509,tests.integ.modin.groupby.test_groupby_apply,test_dropna[index1-False-include_groups_True],KeyError: 'index',failed
11522,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[fizz1-row12],AssertionError: Got type: <class 'numpy.int64'>,failed
11525,tests.integ.modin.groupby.test_groupby_apply,test_dropna[index1-False-include_groups_False],KeyError: 'index',failed
11527,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False--2-4-10],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (1, 7)
[right]: (2, 7)",failed
11530,tests.integ.modin.groupby.test_groupby_apply,test_returning_series_with_different_names[include_groups_True],"[XPASS(strict)] Snowpark pandas uses name returned from first group, while pandas returns None. This should be very rare in practice",failed
11531,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[fizz1-row13],AssertionError: Got type: <class 'numpy.int64'>,failed
11536,tests.integ.modin.groupby.test_groupby_apply,test_returning_series_with_different_names[include_groups_False],"[XPASS(strict)] Snowpark pandas uses name returned from first group, while pandas returns None. This should be very rare in practice",failed
11539,tests.integ.modin.groupby.test_groupby_basic_agg,test_groupby_agg_first_and_last[first-False],"AssertionError: DataFrame.iloc[:, 1] (column name=""('float_col', 'first')"") are different

DataFrame.iloc[:, 1] (column name=""('float_col', 'first')"") values are different (50.0 %)
[index]: [A, B]
[left]:  [2.0, 3.0]
[right]: [nan, 3.0]
At positional index 0, first diff: 2.0 != nan",failed
11541,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[fizz1-row14],AssertionError,failed
11543,tests.integ.modin.groupby.test_groupby_apply,test_returning_series_with_conflicting_indexes[include_groups_True],[XPASS(strict)] Snowpark pandas return a DataFrame but native pandas returns a Series. This should be very rare in practice.,failed
11550,tests.integ.modin.groupby.test_groupby_apply,test_returning_series_with_conflicting_indexes[include_groups_False],[XPASS(strict)] Snowpark pandas return a DataFrame but native pandas returns a Series. This should be very rare in practice.,failed
11552,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col1-mark i],AssertionError,failed
11556,tests.integ.modin.groupby.test_groupby_basic_agg,test_groupby_agg_first_and_last[last-False],"AssertionError: DataFrame.iloc[:, 1] (column name=""('float_col', 'last')"") are different

DataFrame.iloc[:, 1] (column name=""('float_col', 'last')"") values are different (50.0 %)
[index]: [A, B]
[left]:  [4.0, 3.0]
[right]: [4.0, nan]
At positional index 1, first diff: 3.0 != nan",failed
11562,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col1-row1],AssertionError,failed
11569,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col1-row2],AssertionError: Got type: <class 'numpy.int64'>,failed
11579,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col1-row3],"AssertionError: DataFrame.index are different

DataFrame.index levels are different
[left]:  1, Index(['mark v', 'mark vi'], dtype='object')
[right]: 2, MultiIndex([('mark i',  'mark v'),
            ('mark i', 'mark vi')],
           )",failed
11587,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_True-sort_True-group_keys_True-non_transform_returns_dataframe],AssertionError,failed
11595,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col1-row4],"KeyError: ['viper', 'mark i', 'viper']",failed
11607,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False-9-1-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 7)
[right]: (1, 7)",failed
11610,tests.integ.modin.frame.test_astype,test_astype_from_timestamp_ltz[datetime64[ns]],TypeError: Cannot use .astype to convert from timezone-aware dtype to timezone-naive dtype. Use obj.tz_localize(None) or obj.tz_convert('UTC').tz_localize(None) instead.,failed
11616,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False-9-1--1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 7)
[right]: (1, 7)",failed
11620,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col1-row5],KeyError: 'mark vi',failed
11630,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False-9-1-1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 7)
[right]: (1, 7)",failed
11645,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False-9-4-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 7)
[right]: (1, 7)",failed
11654,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False-9-4--1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 7)
[right]: (1, 7)",failed
11658,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_True-sort_True-group_keys_True-transform_returns_dataframe],TypeError: must pass an index to rename,failed
11665,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False-9-4-1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 7)
[right]: (1, 7)",failed
11672,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False-9-4-4],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 7)
[right]: (1, 7)",failed
11673,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_True-sort_True-group_keys_True-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 6, MultiIndex([('k0',  'sum'),
            ('k0', 'mean'),
            ('k0', 'name'),
            ('k1',  'sum'),
            ('k1', 'mean'),
            ('k1', 'name')],
           names=['string_col_1', None])",failed
11677,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col1-row6],KeyError: 'mark vi',failed
11690,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_True-sort_True-group_keys_True-transform_returns_series],"AssertionError: MultiIndex level [1] are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
11695,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False-9-10-4],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 7)
[right]: (1, 7)",failed
11703,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_True-sort_True-group_keys_True-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [k0, k1]
[left]:  [x
int_col    44
dtype: int64_x
int_col    14.666667
dtype: float64_k0, x
int_col    14
dtype: int64_x
int_col    14.0
dtype: float64_k1]
[right]: [44_14.666666666666666_k0, 14_14.0_k1]
At positional index 0, first diff: x
int_col    44
dtype: int64_x
int_col    14.666667
dtype: float64_k0 != 44_14.666666666666666_k0",failed
11704,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col1-row7],KeyError: 'mark vi',failed
11714,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_True-sort_True-group_keys_False-non_transform_returns_dataframe],AssertionError,failed
11722,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False--9--1-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 7)
[right]: (1, 7)",failed
11727,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col1-row8],KeyError: 'mark vi',failed
11732,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False--9--1-1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 7)
[right]: (1, 7)",failed
11734,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col1-row9],AssertionError,failed
11735,tests.integ.modin.groupby.test_groupby_apply,test_group_dataframe_with_column_of_all_nulls_snow_1233832[None-include_groups_True],[XPASS(strict)] SNOW-1233832,failed
11738,tests.integ.modin.groupby.test_groupby_apply,test_group_dataframe_with_column_of_all_nulls_snow_1233832[None-include_groups_False],[XPASS(strict)] SNOW-1233832,failed
11742,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col1-row10],AssertionError,failed
11743,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False--9--1-4],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 7)
[right]: (1, 7)",failed
11745,tests.integ.modin.frame.test_astype,test_astype_from_timestamp_ltz[boolean],TypeError: Need to pass bool-like values,failed
11749,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_True-sort_True-group_keys_False-transform_returns_dataframe],TypeError: must pass an index to rename,failed
11752,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col1-row11],AssertionError,failed
11753,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False--9--1-10],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 7)
[right]: (1, 7)",failed
11760,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col1-row12],AssertionError: Got type: <class 'numpy.int64'>,failed
11762,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False--9-1-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 7)
[right]: (1, 7)",failed
11768,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col1-row13],AssertionError: Got type: <class 'numpy.int64'>,failed
11770,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_True-sort_True-group_keys_False-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 6, Index(['sum', 'mean', 'name', 'sum', 'mean', 'name'], dtype='object')",failed
11774,tests.integ.modin.groupby.test_groupby_apply,test_as_index_false[normalize_numeric_columns_by_sum-level_0-include_groups_True],"AssertionError: DataFrame.index are different

DataFrame.index levels are different
[left]:  1, RangeIndex(start=0, stop=4, step=1)
[right]: 3, MultiIndex([(0, 'i0', 'i0'),
            (1, 'i1', 'i3'),
            (1, 'i1', 'i2'),
            (1, 'i1', 'i4')],
           names=[None, 'level_0', 'level_1'])",failed
11775,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False--9-1-1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 7)
[right]: (1, 7)",failed
11780,tests.integ.modin.groupby.test_groupby_apply,test_as_index_false[normalize_numeric_columns_by_sum-level_0-include_groups_False],"AssertionError: DataFrame.index are different

DataFrame.index levels are different
[left]:  1, RangeIndex(start=0, stop=4, step=1)
[right]: 3, MultiIndex([(0, 'i0', 'i0'),
            (1, 'i1', 'i3'),
            (1, 'i1', 'i2'),
            (1, 'i1', 'i4')],
           names=[None, 'level_0', 'level_1'])",failed
11781,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_True-sort_True-group_keys_False-transform_returns_series],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
11792,tests.integ.modin.groupby.test_groupby_apply,test_as_index_false[duplicate_df_rowwise-level_0-include_groups_True],"AssertionError: DataFrame.index are different

DataFrame.index levels are different
[left]:  1, RangeIndex(start=0, stop=8, step=1)
[right]: 3, MultiIndex([(0, 'i0', 'i0'),
            (0, 'i0', 'i0'),
            (1, 'i1', 'i3'),
            (1, 'i1', 'i2'),
            (1, 'i1', 'i4'),
            (1, 'i1', 'i3'),
            (1, 'i1', 'i2'),
            (1, 'i1', 'i4')],
           names=[None, 'level_0', 'level_1'])",failed
11793,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_True-sort_True-group_keys_False-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [k0, k1]
[left]:  [x
int_col    44
dtype: int64_x
int_col    14.666667
dtype: float64_k0, x
int_col    14
dtype: int64_x
int_col    14.0
dtype: float64_k1]
[right]: [44_14.666666666666666_k0, 14_14.0_k1]
At positional index 0, first diff: x
int_col    44
dtype: int64_x
int_col    14.666667
dtype: float64_k0 != 44_14.666666666666666_k0",failed
11797,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col1-row14],AssertionError,failed
11798,tests.integ.modin.groupby.test_groupby_apply,test_as_index_false[duplicate_df_rowwise-level_0-include_groups_False],"AssertionError: DataFrame.index are different

DataFrame.index levels are different
[left]:  1, RangeIndex(start=0, stop=8, step=1)
[right]: 3, MultiIndex([(0, 'i0', 'i0'),
            (0, 'i0', 'i0'),
            (1, 'i1', 'i3'),
            (1, 'i1', 'i2'),
            (1, 'i1', 'i4'),
            (1, 'i1', 'i3'),
            (1, 'i1', 'i2'),
            (1, 'i1', 'i4')],
           names=[None, 'level_0', 'level_1'])",failed
11803,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col2-mark i],"AssertionError: Series.index are different

Series.index levels are different
[left]:  2, MultiIndex([('mark i',  'mark v'),
            ('mark i', 'mark vi')],
           )
[right]: 1, Index(['mark v', 'mark vi'], dtype='object')",failed
11804,tests.integ.modin.frame.test_set_index,test_set_index_pass_arrays_duplicate[False-True-frame_of_ints-Index-Index],"TypeError: The parameter ""keys"" may be a column key, one-dimensional array, or a list containing only valid column keys and one-dimensional arrays. Received column of type <class 'snowflake.snowpark.modin.plugin.extensions.index.Index'>",failed
11809,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False--9-1-4],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 7)
[right]: (1, 7)",failed
11811,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col2-row1],"AssertionError: Series.index are different

Series.index levels are different
[left]:  2, MultiIndex([('mark i',  'mark v'),
            ('mark i', 'mark vi')],
           )
[right]: 1, Index(['mark v', 'mark vi'], dtype='object')",failed
11813,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_True-sort_False-group_keys_True-non_transform_returns_dataframe],AssertionError,failed
11820,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False--9-1-10],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 7)
[right]: (1, 7)",failed
11831,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False--9-4-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 7)
[right]: (1, 7)",failed
11833,tests.integ.modin.groupby.test_groupby_apply,test_axis_one[include_groups_True],[XPASS(strict)] ,failed
11837,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col2-row4],"KeyError: ['viper', 'mark i', 'viper']",failed
11838,tests.integ.modin.groupby.test_groupby_apply,test_axis_one[include_groups_False],[XPASS(strict)] ,failed
11847,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_True-sort_False-group_keys_True-transform_returns_dataframe],TypeError: must pass an index to rename,failed
11848,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False--9-4-4],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 7)
[right]: (1, 7)",failed
11855,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[False--9-4-10],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 7)
[right]: (1, 7)",failed
11857,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_True-sort_False-group_keys_True-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 6, MultiIndex([('k0',  'sum'),
            ('k0', 'mean'),
            ('k0', 'name'),
            ('k1',  'sum'),
            ('k1', 'mean'),
            ('k1', 'name')],
           names=['string_col_1', None])",failed
11858,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_non_unique_index-group_keys_True-transform_that_changes_columns-as_index_True-by_index-include_groups_True],KeyError: 'index',failed
11866,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col2-row5],KeyError: 'mark vi',failed
11874,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_True-sort_False-group_keys_True-transform_returns_series],"AssertionError: MultiIndex level [1] are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
11878,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_non_unique_index-group_keys_True-transform_that_changes_columns-as_index_True-by_index-include_groups_False],KeyError: 'index',failed
11885,tests.integ.modin.frame.test_astype,test_astype_from_timestamp_ltz[to_dtype15],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""float() argument must be a string or a real number, not 'Timestamp'""",failed
11894,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_True-sort_False-group_keys_True-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [k0, k1]
[left]:  [x
int_col    44
dtype: int64_x
int_col    14.666667
dtype: float64_k0, x
int_col    14
dtype: int64_x
int_col    14.0
dtype: float64_k1]
[right]: [44_14.666666666666666_k0, 14_14.0_k1]
At positional index 0, first diff: x
int_col    44
dtype: int64_x
int_col    14.666667
dtype: float64_k0 != 44_14.666666666666666_k0",failed
11899,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_non_unique_index-group_keys_True-transform_that_changes_columns-as_index_True-by_string_col_1-include_groups_True],"AssertionError: MultiIndex level [1] are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
11905,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col2-row6],KeyError: 'mark vi',failed
11912,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_True-sort_False-group_keys_False-non_transform_returns_dataframe],AssertionError,failed
11917,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_non_unique_index-group_keys_True-transform_that_changes_columns-as_index_True-by_string_col_1-include_groups_False],"AssertionError: MultiIndex level [1] are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
11939,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_non_unique_index-group_keys_True-transform_that_changes_columns-as_index_False-by_index-include_groups_True],KeyError: 'index',failed
11956,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col2-row7],KeyError: 'mark vi',failed
11960,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_non_unique_index-group_keys_True-transform_that_changes_columns-as_index_False-by_index-include_groups_False],KeyError: 'index',failed
11969,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_non_unique_index-group_keys_True-transform_that_changes_columns-as_index_False-by_string_col_1-include_groups_True],"AssertionError: MultiIndex level [1] are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
11972,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_True-sort_False-group_keys_False-transform_returns_dataframe],TypeError: must pass an index to rename,failed
11984,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col2-row8],KeyError: 'mark vi',failed
11987,tests.integ.modin.frame.test_astype,test_astype_from_timestamp_ltz[to_dtype16],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""float() argument must be a string or a real number, not 'Timestamp'""",failed
11990,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_True-sort_False-group_keys_False-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 6, Index(['sum', 'mean', 'name', 'sum', 'mean', 'name'], dtype='object')",failed
11992,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col2-row9],"AssertionError: Series are different

Series length are different
[left]:  0, MultiIndex([], )
[right]: 6, MultiIndex([(    'mark i',   'mark v'),
            (    'mark i',  'mark vi'),
            ('sidewinder',   'mark i'),
            ('sidewinder',  'mark ii'),
            (     'viper',  'mark ii'),
            (     'viper', 'mark iii')],
           )",failed
12004,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_non_unique_index-group_keys_True-transform_that_changes_columns-as_index_False-by_string_col_1-include_groups_False],"AssertionError: MultiIndex level [1] are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12006,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_True-sort_False-group_keys_False-transform_returns_series],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12007,tests.integ.modin.test_from_pandas_to_pandas,test_snowpark_pandas_statement_params,AssertionError: Expected 'to_pandas' to have been called once. Called 0 times.,failed
12013,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col2-row12],AssertionError: Got type: <class 'numpy.int64'>,failed
12018,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col2-row13],AssertionError: Got type: <class 'numpy.int64'>,failed
12019,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_True-sort_False-group_keys_False-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [k0, k1]
[left]:  [x
int_col    44
dtype: int64_x
int_col    14.666667
dtype: float64_k0, x
int_col    14
dtype: int64_x
int_col    14.0
dtype: float64_k1]
[right]: [44_14.666666666666666_k0, 14_14.0_k1]
At positional index 0, first diff: x
int_col    44
dtype: int64_x
int_col    14.666667
dtype: float64_k0 != 44_14.666666666666666_k0",failed
12022,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_non_unique_index-group_keys_True-duplicate_df_rowwise-as_index_True-by_index-include_groups_True],KeyError: 'index',failed
12032,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col3-mark i],"AssertionError: DataFrame.columns are different

DataFrame.columns classes are different
[left]:  Index(['buzz1'], dtype='object', name='buzz')
[right]: MultiIndex([('fizz1', 'buzz1')],
           names=['fizz', 'buzz'])",failed
12035,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_False-sort_True-group_keys_True-non_transform_returns_dataframe],AssertionError,failed
12039,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col3-row1],"AssertionError: DataFrame.columns are different

DataFrame.columns classes are different
[left]:  Index(['buzz1'], dtype='object', name='buzz')
[right]: MultiIndex([('fizz1', 'buzz1')],
           names=['fizz', 'buzz'])",failed
12044,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_non_unique_index-group_keys_True-duplicate_df_rowwise-as_index_True-by_index-include_groups_False],KeyError: 'index',failed
12051,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col3-row3],"AssertionError: DataFrame.index are different

DataFrame.index levels are different
[left]:  1, Index(['mark v', 'mark vi'], dtype='object')
[right]: 2, MultiIndex([('mark i',  'mark v'),
            ('mark i', 'mark vi')],
           )",failed
12053,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_non_unique_index-group_keys_True-duplicate_df_rowwise-as_index_True-by_string_col_1-include_groups_True],"AssertionError: MultiIndex level [1] are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12056,tests.integ.modin.test_internal_frame,test_strip_duplicates[input0-expected0],AttributeError: 'DataFrame' object has no attribute 'strip_duplicates'. Did you mean: 'drop_duplicates'?,failed
12063,tests.integ.modin.test_internal_frame,test_strip_duplicates[input1-expected1],AttributeError: 'DataFrame' object has no attribute 'strip_duplicates'. Did you mean: 'drop_duplicates'?,failed
12064,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_non_unique_index-group_keys_True-duplicate_df_rowwise-as_index_True-by_string_col_1-include_groups_False],"AssertionError: MultiIndex level [1] are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12067,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_False-sort_True-group_keys_True-transform_returns_dataframe],TypeError: must pass an index to rename,failed
12077,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_False-sort_True-group_keys_True-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 9, MultiIndex([('k0',  'sum'),
            ('k0', 'mean'),
            ('k0', 'name'),
            ('k1',  'sum'),
            ('k1', 'mean'),
            ('k1', 'name'),
            ( nan,  'sum'),
            ( nan, 'mean'),
            ( nan, 'name')],
           names=['string_col_1', None])",failed
12079,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_non_unique_index-group_keys_True-duplicate_df_rowwise-as_index_False-by_index-include_groups_True],KeyError: 'index',failed
12084,tests.integ.modin.frame.test_astype,test_astype_from_timestamp_ltz[to_dtype17],"TypeError: int() argument must be a string, a bytes-like object or a real number, not 'Timestamp'",failed
12088,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_False-sort_True-group_keys_True-transform_returns_series],"AssertionError: MultiIndex level [1] are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12089,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col3-row4],"KeyError: ['viper', 'mark i', 'viper']",failed
12092,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_non_unique_index-group_keys_True-duplicate_df_rowwise-as_index_False-by_index-include_groups_False],KeyError: 'index',failed
12098,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_False-sort_True-group_keys_True-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [k0, k1, nan]
[left]:  [x
int_col    44
dtype: int64_x
int_col    14.666667
dtype: float64_k0, x
int_col    14
dtype: int64_x
int_col    14.0
dtype: float64_k1, x
int_col    17
dtype: int64_x
int_col    17.0
dtype: float64_None]
[right]: [44_14.666666666666666_k0, 14_14.0_k1, 17_17.0_None]
At positional index 0, first diff: x
int_col    44
dtype: int64_x
int_col    14.666667
dtype: float64_k0 != 44_14.666666666666666_k0",failed
12103,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_non_unique_index-group_keys_True-duplicate_df_rowwise-as_index_False-by_string_col_1-include_groups_True],"AssertionError: MultiIndex level [1] are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12108,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_False-sort_True-group_keys_False-non_transform_returns_dataframe],AssertionError,failed
12111,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col3-row5],KeyError: 'mark vi',failed
12115,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_non_unique_index-group_keys_True-duplicate_df_rowwise-as_index_False-by_string_col_1-include_groups_False],"AssertionError: MultiIndex level [1] are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12126,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_non_unique_index-group_keys_False-transform_that_changes_columns-as_index_True-by_index-include_groups_True],KeyError: 'index',failed
12131,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col3-row6],KeyError: 'mark vi',failed
12137,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_non_unique_index-group_keys_False-transform_that_changes_columns-as_index_True-by_index-include_groups_False],KeyError: 'index',failed
12143,tests.integ.modin.frame.test_loc,test_df_setitem_boolean_key[index6-True],"AssertionError: DataFrame.iloc[:, 0] (column name=""a"") are different

DataFrame.iloc[:, 0] (column name=""a"") values are different (66.66667 %)
[index]: [2, x, True]
[left]:  [99, 1, 0]
[right]: [0, 1, 99]",failed
12146,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_non_unique_index-group_keys_False-transform_that_changes_columns-as_index_True-by_string_col_1-include_groups_True],"AssertionError: DataFrame.index are different

DataFrame.index values are different (50.0 %)
[left]:  Index(['i0', 'i1', 'i1', 'i2'], dtype='object')
[right]: Index(['i0', 'i1', 'i2', 'i1'], dtype='object', name='index')
At positional index 2, first diff: i1 != i2",failed
12149,tests.integ.modin.frame.test_astype,test_astype_from_timestamp_ltz[to_dtype18],"TypeError: int() argument must be a string, a bytes-like object or a real number, not 'Timestamp'",failed
12150,tests.integ.modin.frame.test_loc,test_df_setitem_boolean_key[index6-False],"AssertionError: DataFrame.iloc[:, 0] (column name=""a"") are different

DataFrame.iloc[:, 0] (column name=""a"") values are different (33.33333 %)
[index]: [2, x, False]
[left]:  [0, 1, 0]
[right]: [0, 1, 99]",failed
12153,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col3-row7],KeyError: 'mark vi',failed
12157,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_False-sort_True-group_keys_False-transform_returns_dataframe],TypeError: must pass an index to rename,failed
12163,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_non_unique_index-group_keys_False-transform_that_changes_columns-as_index_True-by_string_col_1-include_groups_False],"AssertionError: DataFrame.index are different

DataFrame.index values are different (50.0 %)
[left]:  Index(['i0', 'i1', 'i1', 'i2'], dtype='object')
[right]: Index(['i0', 'i1', 'i2', 'i1'], dtype='object', name='index')
At positional index 2, first diff: i1 != i2",failed
12165,tests.integ.modin.frame.test_loc,test_df_partial_string_indexing[<lambda>0],AssertionError,failed
12166,tests.integ.modin.frame.test_set_index,test_set_index_pass_arrays_duplicate[False-True-frame_of_ints_and_timedelta-Index-Index],"TypeError: The parameter ""keys"" may be a column key, one-dimensional array, or a list containing only valid column keys and one-dimensional arrays. Received column of type <class 'snowflake.snowpark.modin.plugin.extensions.index.Index'>",failed
12167,tests.integ.modin.groupby.test_groupby_bfill_ffill,test_groupby_bfill_ffill_multiindex_negative[by_list0-bfill],AssertionError: Snowpark pandas Exception 'I' doesn't match pandas Exception 'A',failed
12169,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_False-sort_True-group_keys_False-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 9, Index(['sum', 'mean', 'name', 'sum', 'mean', 'name', 'sum', 'mean', 'name'], dtype='object')",failed
12174,tests.integ.modin.groupby.test_groupby_bfill_ffill,test_groupby_bfill_ffill_multiindex_negative[by_list0-ffill],AssertionError: Snowpark pandas Exception 'I' doesn't match pandas Exception 'A',failed
12176,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True-1-1-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (7, 7)
[right]: (6, 7)",failed
12181,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_non_unique_index-group_keys_False-transform_that_changes_columns-as_index_False-by_index-include_groups_True],KeyError: 'index',failed
12182,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_False-sort_True-group_keys_False-transform_returns_series],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12191,tests.integ.modin.frame.test_loc,test_df_loc_set_none,"KeyError: array([None], dtype=object)",failed
12194,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_False-sort_True-group_keys_False-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [k0, k1, nan]
[left]:  [x
int_col    44
dtype: int64_x
int_col    14.666667
dtype: float64_k0, x
int_col    14
dtype: int64_x
int_col    14.0
dtype: float64_k1, x
int_col    17
dtype: int64_x
int_col    17.0
dtype: float64_None]
[right]: [44_14.666666666666666_k0, 14_14.0_k1, 17_17.0_None]
At positional index 0, first diff: x
int_col    44
dtype: int64_x
int_col    14.666667
dtype: float64_k0 != 44_14.666666666666666_k0",failed
12196,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True-1-1-1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (2, 7)
[right]: (1, 7)",failed
12198,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_non_unique_index-group_keys_False-transform_that_changes_columns-as_index_False-by_index-include_groups_False],KeyError: 'index',failed
12205,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col3-row8],KeyError: 'mark vi',failed
12207,tests.integ.modin.frame.test_loc,test_raise_set_cell_with_list_like_value_error,"ValueError: could not broadcast input array from shape (2,) into shape (1, 1)",failed
12208,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_non_unique_index-group_keys_False-transform_that_changes_columns-as_index_False-by_string_col_1-include_groups_True],"AssertionError: DataFrame.index are different

DataFrame.index values are different (50.0 %)
[left]:  Index(['i0', 'i1', 'i1', 'i2'], dtype='object')
[right]: Index(['i0', 'i1', 'i2', 'i1'], dtype='object', name='index')
At positional index 2, first diff: i1 != i2",failed
12209,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_False-sort_False-group_keys_True-non_transform_returns_dataframe],AssertionError,failed
12211,tests.integ.modin.test_merge,test_merge_native_pandas_object_negative,"AssertionError: Regex pattern did not match.
 Regex: ""<class 'pandas.core.frame.DataFrame'> is not supported as 'value' argument. Please convert this to Snowpark pandas objects by calling modin.pandas.Series\\(\\)/DataFrame\\(\\)""
 Input: ""Can only merge Series or DataFrame objects, a <class 'pandas.core.frame.DataFrame'> was passed""",failed
12212,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True-1-1-4],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 7)
[right]: (4, 7)",failed
12213,tests.integ.modin.groupby.test_groupby_bfill_ffill,test_groupby_bfill_ffill_unsupported_grouping_negative[bfill],KeyError: 'I',failed
12214,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col3-row9],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 1)
[right]: (6, 1)",failed
12221,tests.integ.modin.groupby.test_groupby_bfill_ffill,test_groupby_bfill_ffill_unsupported_grouping_negative[ffill],KeyError: 'I',failed
12222,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True-1-1-10],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (7, 7)
[right]: (6, 7)",failed
12224,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col3-row12],AssertionError,failed
12232,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col3-row13],AssertionError,failed
12233,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True-1-4-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 7)
[right]: (3, 7)",failed
12240,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_False-sort_False-group_keys_True-transform_returns_dataframe],TypeError: must pass an index to rename,failed
12242,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col3-row14],"AssertionError: DataFrame.columns are different

DataFrame.columns classes are different
[left]:  Index(['buzz1'], dtype='object', name='buzz')
[right]: MultiIndex([('fizz1', 'buzz1')],
           names=['fizz', 'buzz'])",failed
12246,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_non_unique_index-group_keys_False-transform_that_changes_columns-as_index_False-by_string_col_1-include_groups_False],"AssertionError: DataFrame.index are different

DataFrame.index values are different (50.0 %)
[left]:  Index(['i0', 'i1', 'i1', 'i2'], dtype='object')
[right]: Index(['i0', 'i1', 'i2', 'i1'], dtype='object', name='index')
At positional index 2, first diff: i1 != i2",failed
12248,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_False-sort_False-group_keys_True-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 9, MultiIndex([('k0',  'sum'),
            ('k0', 'mean'),
            ('k0', 'name'),
            ('k1',  'sum'),
            ('k1', 'mean'),
            ('k1', 'name'),
            ( nan,  'sum'),
            ( nan, 'mean'),
            ( nan, 'name')],
           names=['string_col_1', None])",failed
12254,tests.integ.modin.frame.test_loc,test_df_loc_get_with_timedelta[key2-1-1],ValueError: Could not convert object to NumPy timedelta,failed
12256,tests.integ.modin.frame.test_astype,test_astype_from_timestamp_ltz[to_dtype19],"TypeError: int() argument must be a string, a bytes-like object or a real number, not 'Timestamp'",failed
12261,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True-1-4-4],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (2, 7)
[right]: (1, 7)",failed
12262,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_False-sort_False-group_keys_True-transform_returns_series],"AssertionError: MultiIndex level [1] are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12263,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col4-mark i],KeyError: 'fizz2',failed
12265,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_non_unique_index-group_keys_False-duplicate_df_rowwise-as_index_True-by_index-include_groups_True],KeyError: 'index',failed
12276,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_False-sort_False-group_keys_True-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [k0, k1, nan]
[left]:  [x
int_col    44
dtype: int64_x
int_col    14.666667
dtype: float64_k0, x
int_col    14
dtype: int64_x
int_col    14.0
dtype: float64_k1, x
int_col    17
dtype: int64_x
int_col    17.0
dtype: float64_None]
[right]: [44_14.666666666666666_k0, 14_14.0_k1, 17_17.0_None]
At positional index 0, first diff: x
int_col    44
dtype: int64_x
int_col    14.666667
dtype: float64_k0 != 44_14.666666666666666_k0",failed
12278,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True-1-4-10],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 7)
[right]: (3, 7)",failed
12287,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_non_unique_index-group_keys_False-duplicate_df_rowwise-as_index_True-by_index-include_groups_False],KeyError: 'index',failed
12288,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col4-row1],KeyError: 'fizz2',failed
12294,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_False-sort_False-group_keys_False-non_transform_returns_dataframe],AssertionError,failed
12310,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_non_unique_index-group_keys_False-duplicate_df_rowwise-as_index_True-by_string_col_1-include_groups_True],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12311,tests.integ.modin.test_merge_asof,test_merge_asof_left_right_on[backward-True],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 5)
[right]: (3, 6)",failed
12314,tests.integ.modin.test_merge_asof,test_merge_asof_left_right_on[backward-False],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 5)
[right]: (3, 6)",failed
12317,tests.integ.modin.test_merge_asof,test_merge_asof_left_right_on[forward-True],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 5)
[right]: (3, 6)",failed
12320,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_non_unique_index-group_keys_False-duplicate_df_rowwise-as_index_True-by_string_col_1-include_groups_False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12322,tests.integ.modin.test_merge_asof,test_merge_asof_left_right_on[forward-False],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 5)
[right]: (3, 6)",failed
12338,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_False-sort_False-group_keys_False-transform_returns_dataframe],TypeError: must pass an index to rename,failed
12343,tests.integ.modin.test_merge_asof,test_merge_asof_negative_non_numeric_on,"pandas.errors.MergeError: Incompatible merge dtype, dtype('O') and dtype('O'), both sides must have numeric dtype",failed
12345,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_non_unique_index-group_keys_False-duplicate_df_rowwise-as_index_False-by_index-include_groups_True],KeyError: 'index',failed
12351,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col4-row2],KeyError: 'fizz2',failed
12354,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_False-sort_False-group_keys_False-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 9, Index(['sum', 'mean', 'name', 'sum', 'mean', 'name', 'sum', 'mean', 'name'], dtype='object')",failed
12360,tests.integ.modin.test_merge_asof,test_merge_asof_negative_multiple_on,"KeyError: ""None of [Index([('a', 'another_col_right')], dtype='object')] are in the [columns]""",failed
12362,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_non_unique_index-group_keys_False-duplicate_df_rowwise-as_index_False-by_index-include_groups_False],KeyError: 'index',failed
12363,tests.integ.modin.test_merge_asof,test_merge_asof_nearest_unsupported,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
12366,tests.integ.modin.frame.test_astype,test_astype_from_timestamp_ltz[to_dtype20],"TypeError: int() argument must be a string, a bytes-like object or a real number, not 'Timestamp'",failed
12368,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_False-sort_False-group_keys_False-transform_returns_series],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12371,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_non_unique_index-group_keys_False-duplicate_df_rowwise-as_index_False-by_string_col_1-include_groups_True],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12375,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col4-row3],KeyError: 'fizz2',failed
12376,tests.integ.modin.test_merge_asof,test_merge_asof_params_unsupported,"KeyError: ""None of [Index(['price'], dtype='object')] are in the [columns]""",failed
12378,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_True-dropna_False-sort_False-group_keys_False-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [k0, k1, nan]
[left]:  [x
int_col    44
dtype: int64_x
int_col    14.666667
dtype: float64_k0, x
int_col    14
dtype: int64_x
int_col    14.0
dtype: float64_k1, x
int_col    17
dtype: int64_x
int_col    17.0
dtype: float64_None]
[right]: [44_14.666666666666666_k0, 14_14.0_k1, 17_17.0_None]
At positional index 0, first diff: x
int_col    44
dtype: int64_x
int_col    14.666667
dtype: float64_k0 != 44_14.666666666666666_k0",failed
12379,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_non_unique_index-group_keys_False-duplicate_df_rowwise-as_index_False-by_string_col_1-include_groups_False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12382,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True--1--1-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (1, 7)
[right]: (0, 7)",failed
12383,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_True-sort_True-group_keys_True-non_transform_returns_dataframe],AssertionError,failed
12384,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col4-row4],"KeyError: ['viper', 'mark i', 'viper']",failed
12386,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_unique_index-group_keys_True-transform_that_changes_columns-as_index_True-by_index-include_groups_True],KeyError: 'index',failed
12390,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True--1--1--1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (1, 7)
[right]: (0, 7)",failed
12392,tests.integ.modin.frame.test_loc,test_df_loc_get_with_timedelta_behavior_difference[key0-expected_result0],KeyError: Timedelta('4 days 23:59:59.999999999'),failed
12398,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_unique_index-group_keys_True-transform_that_changes_columns-as_index_True-by_index-include_groups_False],KeyError: 'index',failed
12403,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col4-row5],KeyError: 'mark vi',failed
12405,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-True-True-True-cummin-LEXLUTHOR],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12408,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_unique_index-group_keys_True-transform_that_changes_columns-as_index_True-by_string_col_1-include_groups_True],"AssertionError: MultiIndex level [1] are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12411,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-True-True-True-cummin-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 5)
[right]: (5, 3)",failed
12414,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-True-True-True-cummin-DARKSEID],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12415,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_unique_index-group_keys_True-transform_that_changes_columns-as_index_True-by_string_col_1-include_groups_False],"AssertionError: MultiIndex level [1] are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12416,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True--1-1-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 7)
[right]: (2, 7)",failed
12417,tests.integ.modin.frame.test_astype,test_astype_from_timestamp_ltz[to_dtype21],"TypeError: int() argument must be a string, a bytes-like object or a real number, not 'Timestamp'",failed
12421,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-True-True-True-cummax-LEXLUTHOR],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12422,tests.integ.modin.frame.test_loc,test_df_loc_get_with_timedelta_behavior_difference[key1-expected_result1],KeyError: Timedelta('4 days 23:59:59.999999999'),failed
12423,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_True-sort_True-group_keys_True-transform_returns_dataframe],TypeError: must pass an index to rename,failed
12425,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-True-True-True-cummax-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 5)
[right]: (5, 3)",failed
12427,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_unique_index-group_keys_True-transform_that_changes_columns-as_index_False-by_index-include_groups_True],KeyError: 'index',failed
12429,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-True-True-True-cummax-DARKSEID],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12430,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_True-sort_True-group_keys_True-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 6, MultiIndex([('k0',  'sum'),
            ('k0', 'mean'),
            ('k0', 'name'),
            ('k1',  'sum'),
            ('k1', 'mean'),
            ('k1', 'name')],
           names=['string_col_1', None])",failed
12436,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col4-row6],KeyError: 'mark vi',failed
12438,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_unique_index-group_keys_True-transform_that_changes_columns-as_index_False-by_index-include_groups_False],KeyError: 'index',failed
12439,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_True-sort_True-group_keys_True-transform_returns_series],"AssertionError: MultiIndex level [1] are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12442,tests.integ.modin.frame.test_loc,test_df_loc_get_with_timedelta_behavior_difference[key2-expected_result2],KeyError: Timedelta('2 days 23:59:59.999999999'),failed
12443,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-True-True-False-cummin-LEXLUTHOR],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12445,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True--1-1--1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 7)
[right]: (2, 7)",failed
12446,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-True-True-False-cummin-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 5)
[right]: (5, 3)",failed
12449,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_True-sort_True-group_keys_True-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [k0, k1]
[left]:  [x
int_col    44
dtype: int64_x
int_col    14.666667
dtype: float64_k0, x
int_col    14
dtype: int64_x
int_col    14.0
dtype: float64_k1]
[right]: [44_14.666666666666666_k0, 14_14.0_k1]
At positional index 0, first diff: x
int_col    44
dtype: int64_x
int_col    14.666667
dtype: float64_k0 != 44_14.666666666666666_k0",failed
12450,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True--1-1-1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (2, 7)
[right]: (1, 7)",failed
12452,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col4-row7],KeyError: 'mark vi',failed
12455,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_True-sort_True-group_keys_False-non_transform_returns_dataframe],AssertionError,failed
12457,tests.integ.modin.frame.test_loc,test_df_loc_get_with_timedelta_behavior_difference[key3-expected_result3],KeyError: Timedelta('2 days 02:00:00'),failed
12460,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_unique_index-group_keys_True-transform_that_changes_columns-as_index_False-by_string_col_1-include_groups_True],"AssertionError: MultiIndex level [1] are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12463,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True--1-4-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (6, 7)
[right]: (5, 7)",failed
12464,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-True-True-False-cummin-DARKSEID],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12466,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_unique_index-group_keys_True-transform_that_changes_columns-as_index_False-by_string_col_1-include_groups_False],"AssertionError: MultiIndex level [1] are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12467,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col4-row8],KeyError: 'mark vi',failed
12468,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-True-True-False-cummax-LEXLUTHOR],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12470,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True--1-4--1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (6, 7)
[right]: (5, 7)",failed
12471,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-True-True-False-cummax-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 5)
[right]: (5, 3)",failed
12473,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_True-sort_True-group_keys_False-transform_returns_dataframe],TypeError: must pass an index to rename,failed
12474,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-True-True-False-cummax-DARKSEID],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12480,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_unique_index-group_keys_True-duplicate_df_rowwise-as_index_True-by_index-include_groups_True],KeyError: 'index',failed
12481,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_True-sort_True-group_keys_False-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 6, Index(['sum', 'mean', 'name', 'sum', 'mean', 'name'], dtype='object')",failed
12482,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col4-row9],KeyError: 'fizz2',failed
12483,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True--1-4-1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 7)
[right]: (4, 7)",failed
12487,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-True-False-True-cummin-LEXLUTHOR],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12488,tests.integ.modin.frame.test_astype,test_astype_from_timestamp_ltz[to_dtype22],"TypeError: int() argument must be a string, a bytes-like object or a real number, not 'Timestamp'",failed
12489,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_True-sort_True-group_keys_False-transform_returns_series],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12491,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True--1-4-4],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (2, 7)
[right]: (1, 7)",failed
12492,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-True-False-True-cummin-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 5)
[right]: (5, 3)",failed
12494,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_unique_index-group_keys_True-duplicate_df_rowwise-as_index_True-by_index-include_groups_False],KeyError: 'index',failed
12497,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-True-False-True-cummin-DARKSEID],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12498,tests.integ.modin.frame.test_loc,test_df_loc_get_with_timedelta_and_none_key,SNOW-1653219 None key does not work with timedelta index,xfailed
12501,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-True-False-True-cummax-LEXLUTHOR],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12502,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_True-sort_True-group_keys_False-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [k0, k1]
[left]:  [x
int_col    44
dtype: int64_x
int_col    14.666667
dtype: float64_k0, x
int_col    14
dtype: int64_x
int_col    14.0
dtype: float64_k1]
[right]: [44_14.666666666666666_k0, 14_14.0_k1]
At positional index 0, first diff: x
int_col    44
dtype: int64_x
int_col    14.666667
dtype: float64_k0 != 44_14.666666666666666_k0",failed
12505,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-True-False-True-cummax-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 5)
[right]: (5, 3)",failed
12507,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_unique_index-group_keys_True-duplicate_df_rowwise-as_index_True-by_string_col_1-include_groups_True],"AssertionError: MultiIndex level [1] are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12510,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-True-False-True-cummax-DARKSEID],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12512,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col4-row10],KeyError: 'fizz2',failed
12514,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_True-sort_False-group_keys_True-non_transform_returns_dataframe],AssertionError,failed
12517,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_unique_index-group_keys_True-duplicate_df_rowwise-as_index_True-by_string_col_1-include_groups_False],"AssertionError: MultiIndex level [1] are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12525,tests.integ.modin.frame.test_set_index,test_set_index_pass_arrays_duplicate[False-False-frame_of_ints-Index-Index],"TypeError: The parameter ""keys"" may be a column key, one-dimensional array, or a list containing only valid column keys and one-dimensional arrays. Received column of type <class 'snowflake.snowpark.modin.plugin.extensions.index.Index'>",failed
12527,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-True-False-False-cummin-LEXLUTHOR],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12529,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col4-row11],KeyError: 'fizz2',failed
12531,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-True-False-False-cummin-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 5)
[right]: (5, 3)",failed
12532,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_unique_index-group_keys_True-duplicate_df_rowwise-as_index_False-by_index-include_groups_True],KeyError: 'index',failed
12535,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-True-False-False-cummin-DARKSEID],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12538,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-True-False-False-cummax-LEXLUTHOR],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12542,tests.integ.modin.frame.test_loc,test_df_loc_full_set_row_from_series_pandas_errors_default_columns[index0-expected_result0],"ValueError: could not broadcast input array from shape (2,) into shape (2, 3)",failed
12544,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_unique_index-group_keys_True-duplicate_df_rowwise-as_index_False-by_index-include_groups_False],KeyError: 'index',failed
12545,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-True-False-False-cummax-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 5)
[right]: (5, 3)",failed
12547,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col4-row12],KeyError: 'fizz2',failed
12551,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_unique_index-group_keys_True-duplicate_df_rowwise-as_index_False-by_string_col_1-include_groups_True],"AssertionError: MultiIndex level [1] are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12552,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-True-False-False-cummax-DARKSEID],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12561,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_unique_index-group_keys_True-duplicate_df_rowwise-as_index_False-by_string_col_1-include_groups_False],"AssertionError: MultiIndex level [1] are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12562,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_True-sort_False-group_keys_True-transform_returns_dataframe],TypeError: must pass an index to rename,failed
12564,tests.integ.modin.frame.test_astype,test_astype_from_timestamp_ltz[to_dtype23],"TypeError: int() argument must be a string, a bytes-like object or a real number, not 'Timestamp'",failed
12569,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-False-True-True-cummin-LEXLUTHOR],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12571,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_True-sort_False-group_keys_True-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 6, MultiIndex([('k0',  'sum'),
            ('k0', 'mean'),
            ('k0', 'name'),
            ('k1',  'sum'),
            ('k1', 'mean'),
            ('k1', 'name')],
           names=['string_col_1', None])",failed
12573,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_unique_index-group_keys_False-transform_that_changes_columns-as_index_True-by_index-include_groups_True],KeyError: 'index',failed
12574,tests.integ.modin.frame.test_loc,test_df_loc_full_set_row_from_series_pandas_errors_default_columns[index1-expected_result1],"ValueError: could not broadcast input array from shape (2,) into shape (2, 3)",failed
12576,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-False-True-True-cummin-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 5)
[right]: (5, 3)",failed
12579,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_True-sort_False-group_keys_True-transform_returns_series],"AssertionError: MultiIndex level [1] are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12582,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-False-True-True-cummin-DARKSEID],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12585,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col4-row13],KeyError: 'fizz2',failed
12586,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_unique_index-group_keys_False-transform_that_changes_columns-as_index_True-by_index-include_groups_False],KeyError: 'index',failed
12589,tests.integ.modin.frame.test_loc,test_df_loc_full_set_row_from_series_pandas_errors_string_columns[series_index0],"ValueError: could not broadcast input array from shape (2,) into shape (2, 3)",failed
12590,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-False-True-True-cummax-LEXLUTHOR],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12593,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_True-sort_False-group_keys_True-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [k0, k1]
[left]:  [x
int_col    44
dtype: int64_x
int_col    14.666667
dtype: float64_k0, x
int_col    14
dtype: int64_x
int_col    14.0
dtype: float64_k1]
[right]: [44_14.666666666666666_k0, 14_14.0_k1]
At positional index 0, first diff: x
int_col    44
dtype: int64_x
int_col    14.666667
dtype: float64_k0 != 44_14.666666666666666_k0",failed
12594,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-False-True-True-cummax-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 5)
[right]: (5, 3)",failed
12595,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_unique_index-group_keys_False-transform_that_changes_columns-as_index_True-by_string_col_1-include_groups_True],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12598,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True-2-1-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 7)
[right]: (3, 7)",failed
12600,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-False-True-True-cummax-DARKSEID],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12601,tests.integ.modin.frame.test_loc,test_df_loc_full_set_row_from_series_pandas_errors_string_columns[series_index1],"ValueError: could not broadcast input array from shape (2,) into shape (2, 3)",failed
12605,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col4-row14],KeyError: 'fizz2',failed
12607,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_unique_index-group_keys_False-transform_that_changes_columns-as_index_True-by_string_col_1-include_groups_False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12609,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_True-sort_False-group_keys_False-non_transform_returns_dataframe],AssertionError,failed
12619,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-False-True-False-cummin-LEXLUTHOR],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12621,tests.integ.modin.frame.test_loc,test_df_loc_set_series_value[None-True-key0],"ValueError: could not broadcast input array from shape (2,) into shape (2, 3)",failed
12622,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_unique_index-group_keys_False-transform_that_changes_columns-as_index_False-by_index-include_groups_True],KeyError: 'index',failed
12623,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True-2-1-4],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 7)
[right]: (2, 7)",failed
12624,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-False-True-False-cummin-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 5)
[right]: (5, 3)",failed
12629,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-False-True-False-cummin-DARKSEID],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12630,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col5-mark i],KeyError: 'buzz1',failed
12633,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_True-sort_False-group_keys_False-transform_returns_dataframe],TypeError: must pass an index to rename,failed
12634,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True-2-1-10],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 7)
[right]: (3, 7)",failed
12635,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-False-True-False-cummax-LEXLUTHOR],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12638,tests.integ.modin.frame.test_loc,test_df_loc_set_series_value[None-True-key1],"ValueError: could not broadcast input array from shape (2,) into shape (2, 3)",failed
12640,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_unique_index-group_keys_False-transform_that_changes_columns-as_index_False-by_index-include_groups_False],KeyError: 'index',failed
12641,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-False-True-False-cummax-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 5)
[right]: (5, 3)",failed
12643,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True-2-4-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 7)
[right]: (2, 7)",failed
12644,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-False-True-False-cummax-DARKSEID],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12648,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_True-sort_False-group_keys_False-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 6, Index(['sum', 'mean', 'name', 'sum', 'mean', 'name'], dtype='object')",failed
12650,tests.integ.modin.frame.test_loc,test_df_loc_set_series_value[None-False-key0],"ValueError: could not broadcast input array from shape (2,) into shape (2, 3)",failed
12651,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_unique_index-group_keys_False-transform_that_changes_columns-as_index_False-by_string_col_1-include_groups_True],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12656,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col5-row1],KeyError: 'buzz1',failed
12662,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-False-False-True-cummin-LEXLUTHOR],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12663,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_True-sort_False-group_keys_False-transform_returns_series],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12665,tests.integ.modin.frame.test_loc,test_df_loc_set_series_value[None-False-key1],"ValueError: could not broadcast input array from shape (2,) into shape (2, 3)",failed
12667,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-False-False-True-cummin-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 5)
[right]: (5, 3)",failed
12668,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True-2-4-4],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (2, 7)
[right]: (1, 7)",failed
12672,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-False-False-True-cummin-DARKSEID],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12674,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_True-sort_False-group_keys_False-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [k0, k1]
[left]:  [x
int_col    44
dtype: int64_x
int_col    14.666667
dtype: float64_k0, x
int_col    14
dtype: int64_x
int_col    14.0
dtype: float64_k1]
[right]: [44_14.666666666666666_k0, 14_14.0_k1]
At positional index 0, first diff: x
int_col    44
dtype: int64_x
int_col    14.666667
dtype: float64_k0 != 44_14.666666666666666_k0",failed
12675,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True-2-4-10],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 7)
[right]: (2, 7)",failed
12677,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-False-False-True-cummax-LEXLUTHOR],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12680,tests.integ.modin.frame.test_astype,test_astype_from_timestamp_ltz[to_dtype24],"TypeError: int() argument must be a string, a bytes-like object or a real number, not 'Timestamp'",failed
12682,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-False-False-True-cummax-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 5)
[right]: (5, 3)",failed
12683,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_unique_index-group_keys_False-transform_that_changes_columns-as_index_False-by_string_col_1-include_groups_False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12685,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_False-sort_True-group_keys_True-non_transform_returns_dataframe],AssertionError,failed
12686,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-False-False-True-cummax-DARKSEID],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12696,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_unique_index-group_keys_False-duplicate_df_rowwise-as_index_True-by_index-include_groups_True],KeyError: 'index',failed
12698,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col5-row2],KeyError: 'buzz1',failed
12702,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-False-False-False-cummin-LEXLUTHOR],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12703,tests.integ.modin.frame.test_loc,test_df_loc_set_series_value[0-True-key1],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (50.0 %)
[index]: [0, 1]
[left]:  [1, 4]
[right]: [9, 4]",failed
12708,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-False-False-False-cummin-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 5)
[right]: (5, 3)",failed
12709,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_unique_index-group_keys_False-duplicate_df_rowwise-as_index_True-by_index-include_groups_False],KeyError: 'index',failed
12710,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_False-sort_True-group_keys_True-transform_returns_dataframe],TypeError: must pass an index to rename,failed
12714,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-False-False-False-cummin-DARKSEID],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12718,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-False-False-False-cummax-LEXLUTHOR],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12721,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col5-row3],KeyError: 'buzz1',failed
12722,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_False-sort_True-group_keys_True-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 9, MultiIndex([('k0',  'sum'),
            ('k0', 'mean'),
            ('k0', 'name'),
            ('k1',  'sum'),
            ('k1', 'mean'),
            ('k1', 'name'),
            ( nan,  'sum'),
            ( nan, 'mean'),
            ( nan, 'name')],
           names=['string_col_1', None])",failed
12723,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_unique_index-group_keys_False-duplicate_df_rowwise-as_index_True-by_string_col_1-include_groups_True],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12724,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-False-False-False-cummax-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 5)
[right]: (5, 3)",failed
12729,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[True-False-False-False-cummax-DARKSEID],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12733,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col5-row4],"KeyError: ['viper', 'mark i', 'viper']",failed
12734,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_unique_index-group_keys_False-duplicate_df_rowwise-as_index_True-by_string_col_1-include_groups_False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12737,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_False-sort_True-group_keys_True-transform_returns_series],"AssertionError: MultiIndex level [1] are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12740,tests.integ.modin.frame.test_loc,test_df_loc_set_series_value_slice_key[None-key0],ValueError: buffer source array is read-only,failed
12742,tests.integ.modin.frame.test_astype,test_astype_from_timestamp_ltz[to_dtype25],AssertionError: assert string[python] == dtype('O'),failed
12744,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_unique_index-group_keys_False-duplicate_df_rowwise-as_index_False-by_index-include_groups_True],KeyError: 'index',failed
12745,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-True-True-True-cummin-LEXLUTHOR],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12746,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_False-sort_True-group_keys_True-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [k0, k1, nan]
[left]:  [x
int_col    44
dtype: int64_x
int_col    14.666667
dtype: float64_k0, x
int_col    14
dtype: int64_x
int_col    14.0
dtype: float64_k1, x
int_col    17
dtype: int64_x
int_col    17.0
dtype: float64_None]
[right]: [44_14.666666666666666_k0, 14_14.0_k1, 17_17.0_None]
At positional index 0, first diff: x
int_col    44
dtype: int64_x
int_col    14.666667
dtype: float64_k0 != 44_14.666666666666666_k0",failed
12748,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True--2--1-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (1, 7)
[right]: (0, 7)",failed
12749,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-True-True-True-cummin-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 5)
[right]: (5, 3)",failed
12750,tests.integ.modin.frame.test_loc,test_df_loc_set_series_value_slice_key[None-key1],"ValueError: could not broadcast input array from shape (2,) into shape (2, 3)",failed
12752,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col5-row5],KeyError: 'mark vi',failed
12753,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-True-True-True-cummin-DARKSEID],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12755,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True--2--1--1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (1, 7)
[right]: (0, 7)",failed
12756,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_unique_index-group_keys_False-duplicate_df_rowwise-as_index_False-by_index-include_groups_False],KeyError: 'index',failed
12758,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_False-sort_True-group_keys_False-non_transform_returns_dataframe],AssertionError,failed
12759,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-True-True-True-cummax-LEXLUTHOR],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12761,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-True-True-True-cummax-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 5)
[right]: (5, 3)",failed
12763,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True--2--1-1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (1, 7)
[right]: (0, 7)",failed
12764,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_unique_index-group_keys_False-duplicate_df_rowwise-as_index_False-by_string_col_1-include_groups_True],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12765,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-True-True-True-cummax-DARKSEID],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12767,tests.integ.modin.frame.test_loc,test_df_loc_set_series_value_slice_key[0-key0],ValueError: buffer source array is read-only,failed
12773,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col5-row6],KeyError: 'mark vi',failed
12778,tests.integ.modin.groupby.test_groupby_apply,test_df_with_single_level_labels[with_unique_index-group_keys_False-duplicate_df_rowwise-as_index_False-by_string_col_1-include_groups_False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12780,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-True-True-False-cummin-LEXLUTHOR],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12783,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True--2-1-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (2, 7)
[right]: (1, 7)",failed
12784,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-True-True-False-cummin-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 5)
[right]: (5, 3)",failed
12786,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-True-True-False-cummin-DARKSEID],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12789,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-True-True-False-cummax-LEXLUTHOR],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12792,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-True-True-False-cummax-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 5)
[right]: (5, 3)",failed
12794,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_False-sort_True-group_keys_False-transform_returns_dataframe],TypeError: must pass an index to rename,failed
12796,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-True-True-False-cummax-DARKSEID],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12800,tests.integ.modin.frame.test_set_index,test_set_index_pass_arrays_duplicate[False-False-frame_of_ints_and_timedelta-Index-Index],"TypeError: The parameter ""keys"" may be a column key, one-dimensional array, or a list containing only valid column keys and one-dimensional arrays. Received column of type <class 'snowflake.snowpark.modin.plugin.extensions.index.Index'>",failed
12801,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col5-row7],KeyError: 'mark vi',failed
12803,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_False-sort_True-group_keys_False-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 9, Index(['sum', 'mean', 'name', 'sum', 'mean', 'name', 'sum', 'mean', 'name'], dtype='object')",failed
12809,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True--2-1--1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (2, 7)
[right]: (1, 7)",failed
12814,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-True-False-True-cummin-LEXLUTHOR],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12816,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_False-sort_True-group_keys_False-transform_returns_series],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12819,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-True-False-True-cummin-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 5)
[right]: (5, 3)",failed
12820,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True--2-1-1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (2, 7)
[right]: (1, 7)",failed
12825,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-True-False-True-cummin-DARKSEID],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12826,tests.integ.modin.groupby.test_groupby_apply,test_numpy_ints_in_result[result2-include_groups_True],"[XPASS(strict)] SNOW-1229760: np.int64 is nested inside the single value of the dataframe, so we don't find it or convert it to int.",failed
12827,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_False-sort_True-group_keys_False-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [k0, k1, nan]
[left]:  [x
int_col    44
dtype: int64_x
int_col    14.666667
dtype: float64_k0, x
int_col    14
dtype: int64_x
int_col    14.0
dtype: float64_k1, x
int_col    17
dtype: int64_x
int_col    17.0
dtype: float64_None]
[right]: [44_14.666666666666666_k0, 14_14.0_k1, 17_17.0_None]
At positional index 0, first diff: x
int_col    44
dtype: int64_x
int_col    14.666667
dtype: float64_k0 != 44_14.666666666666666_k0",failed
12828,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col5-row8],KeyError: 'mark vi',failed
12832,tests.integ.modin.groupby.test_groupby_apply,test_numpy_ints_in_result[result2-include_groups_False],"[XPASS(strict)] SNOW-1229760: np.int64 is nested inside the single value of the dataframe, so we don't find it or convert it to int.",failed
12833,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-True-False-True-cummax-LEXLUTHOR],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12839,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-True-False-True-cummax-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 5)
[right]: (5, 3)",failed
12841,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_False-sort_False-group_keys_True-non_transform_returns_dataframe],AssertionError,failed
12846,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-True-False-True-cummax-DARKSEID],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12852,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True--2-4-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 7)
[right]: (3, 7)",failed
12857,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col5-row9],KeyError: 'buzz1',failed
12861,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-True-False-False-cummin-LEXLUTHOR],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12864,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True--2-4--1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 7)
[right]: (3, 7)",failed
12865,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_False-sort_False-group_keys_True-transform_returns_dataframe],TypeError: must pass an index to rename,failed
12866,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-True-False-False-cummin-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 5)
[right]: (5, 3)",failed
12867,tests.integ.modin.frame.test_astype,test_astype_from_timestamp_ltz[float],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: 'Cannot cast DatetimeArray to dtype float64'",failed
12868,tests.integ.modin.groupby.test_groupby_apply,test_duplicate_index_groupby_mismatch_with_pandas[include_groups_True],KeyError: 'index',failed
12872,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-True-False-False-cummin-DARKSEID],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12874,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True--2-4-1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 7)
[right]: (2, 7)",failed
12875,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-True-False-False-cummax-LEXLUTHOR],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12876,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_False-sort_False-group_keys_True-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 9, MultiIndex([('k0',  'sum'),
            ('k0', 'mean'),
            ('k0', 'name'),
            ('k1',  'sum'),
            ('k1', 'mean'),
            ('k1', 'name'),
            ( nan,  'sum'),
            ( nan, 'mean'),
            ( nan, 'name')],
           names=['string_col_1', None])",failed
12879,tests.integ.modin.groupby.test_groupby_apply,test_duplicate_index_groupby_mismatch_with_pandas[include_groups_False],KeyError: 'index',failed
12881,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-True-False-False-cummax-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 5)
[right]: (5, 3)",failed
12885,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_False-sort_False-group_keys_True-transform_returns_series],"AssertionError: MultiIndex level [1] are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
12887,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True--2-4-4],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (2, 7)
[right]: (1, 7)",failed
12889,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-True-False-False-cummax-DARKSEID],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12901,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_False-sort_False-group_keys_True-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [k0, k1, nan]
[left]:  [x
int_col    44
dtype: int64_x
int_col    14.666667
dtype: float64_k0, x
int_col    14
dtype: int64_x
int_col    14.0
dtype: float64_k1, x
int_col    17
dtype: int64_x
int_col    17.0
dtype: float64_None]
[right]: [44_14.666666666666666_k0, 14_14.0_k1, 17_17.0_None]
At positional index 0, first diff: x
int_col    44
dtype: int64_x
int_col    14.666667
dtype: float64_k0 != 44_14.666666666666666_k0",failed
12908,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col5-row10],KeyError: 'buzz1',failed
12909,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-False-True-True-cummin-LEXLUTHOR],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12914,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_False-sort_False-group_keys_False-non_transform_returns_dataframe],AssertionError,failed
12916,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-False-True-True-cummin-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 5)
[right]: (5, 3)",failed
12922,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-False-True-True-cummin-DARKSEID],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12929,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-False-True-True-cummax-LEXLUTHOR],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12935,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-False-True-True-cummax-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 5)
[right]: (5, 3)",failed
12938,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col5-row11],KeyError: 'buzz1',failed
12944,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-False-True-True-cummax-DARKSEID],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12966,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-False-True-False-cummin-LEXLUTHOR],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12973,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col5-row12],KeyError: 'buzz1',failed
12974,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-False-True-False-cummin-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 5)
[right]: (5, 3)",failed
12977,tests.integ.modin.frame.test_astype,test_astype_to_timedelta_negative,"AssertionError: Regex pattern did not match.
 Regex: 'dtype\\ datetime64\\[ns\\]\\ cannot\\ be\\ converted\\ to\\ timedelta64\\[ns\\]'
 Input: 'Cannot cast DatetimeArray to dtype timedelta64[ns]'",failed
12983,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-False-True-False-cummin-DARKSEID],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12988,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_False-sort_False-group_keys_False-transform_returns_dataframe],TypeError: must pass an index to rename,failed
12992,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-False-True-False-cummax-LEXLUTHOR],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
12999,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-False-True-False-cummax-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 5)
[right]: (5, 3)",failed
13005,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_False-sort_False-group_keys_False-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 9, Index(['sum', 'mean', 'name', 'sum', 'mean', 'name', 'sum', 'mean', 'name'], dtype='object')",failed
13007,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-False-True-False-cummax-DARKSEID],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
13008,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col5-row13],KeyError: 'buzz1',failed
13019,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_False-sort_False-group_keys_False-transform_returns_series],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
13031,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[string_col_1-include_groups_False-dropna_False-sort_False-group_keys_False-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [k0, k1, nan]
[left]:  [x
int_col    44
dtype: int64_x
int_col    14.666667
dtype: float64_k0, x
int_col    14
dtype: int64_x
int_col    14.0
dtype: float64_k1, x
int_col    17
dtype: int64_x
int_col    17.0
dtype: float64_None]
[right]: [44_14.666666666666666_k0, 14_14.0_k1, 17_17.0_None]
At positional index 0, first diff: x
int_col    44
dtype: int64_x
int_col    14.666667
dtype: float64_k0 != 44_14.666666666666666_k0",failed
13041,tests.integ.modin.frame.test_set_index,test_set_index_raise_keys_negative[True-True-frame_of_ints-keys1],"AssertionError: Snowpark pandas Exception 'X' doesn't match pandas Exception ""None of ['X'] are in the columns""",failed
13047,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-False-False-True-cummin-LEXLUTHOR],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
13048,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-False-False-True-cummin-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 5)
[right]: (5, 3)",failed
13052,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-False-False-True-cummin-DARKSEID],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
13056,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_True-sort_True-group_keys_True-non_transform_returns_dataframe],KeyError: 'index',failed
13062,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-False-False-True-cummax-LEXLUTHOR],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
13068,tests.integ.modin.frame.test_set_index,test_set_index_raise_keys_negative[True-True-frame_of_ints_and_timedelta-keys1],"AssertionError: Snowpark pandas Exception 'X' doesn't match pandas Exception ""None of ['X'] are in the columns""",failed
13071,tests.integ.modin.frame.test_at,test_at_set_multiindex_index_str_columns_neg,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
13075,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col5-row14],KeyError: 'buzz1',failed
13076,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-False-False-True-cummax-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 5)
[right]: (5, 3)",failed
13078,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_True-sort_True-group_keys_True-transform_returns_dataframe],KeyError: 'index',failed
13084,tests.integ.modin.frame.test_at,test_at_set_default_index_multiindex_columns_neg,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
13087,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-False-False-True-cummax-DARKSEID],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
13091,tests.integ.modin.frame.test_set_index,test_set_index_raise_keys_negative[True-False-frame_of_ints-keys1],"AssertionError: Snowpark pandas Exception 'X' doesn't match pandas Exception ""None of ['X'] are in the columns""",failed
13093,tests.integ.modin.frame.test_at,test_at_set_multiindex_index_multiindex_columns_neg,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
13099,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_True-sort_True-group_keys_True-non_transform_returns_series],KeyError: 'index',failed
13101,tests.integ.modin.frame.test_at,test_at_neg[0-IndexingError],Failed: DID NOT RAISE <class 'pandas.errors.IndexingError'>,failed
13107,tests.integ.modin.frame.test_at,test_at_neg[key1-IndexingError],Failed: DID NOT RAISE <class 'pandas.errors.IndexingError'>,failed
13112,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-False-False-False-cummin-LEXLUTHOR],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
13115,tests.integ.modin.frame.test_set_index,test_set_index_raise_keys_negative[True-False-frame_of_ints_and_timedelta-keys1],"AssertionError: Snowpark pandas Exception 'X' doesn't match pandas Exception ""None of ['X'] are in the columns""",failed
13116,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col6-mark i],KeyError: 'buzz1',failed
13119,tests.integ.modin.frame.test_at,test_at_neg[key2-IndexingError],"TypeError: int() argument must be a string, a bytes-like object or a real number, not 'dict'",failed
13121,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_True-sort_True-group_keys_True-transform_returns_series],KeyError: 'index',failed
13124,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-False-False-False-cummin-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 5)
[right]: (5, 3)",failed
13129,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-False-False-False-cummin-DARKSEID],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
13131,tests.integ.modin.frame.test_at,test_at_neg[a-IndexingError],"KeyError: array(['a'], dtype='<U1')",failed
13132,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True-9-4-1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (1, 7)
[right]: (0, 7)",failed
13137,tests.integ.modin.frame.test_at,test_at_neg[key4-IndexingError],Failed: DID NOT RAISE <class 'pandas.errors.IndexingError'>,failed
13138,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-False-False-False-cummax-LEXLUTHOR],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
13140,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_True-sort_True-group_keys_True-return_scalar],KeyError: 'index',failed
13144,tests.integ.modin.frame.test_at,test_at_neg[key5-IndexingError],Failed: DID NOT RAISE <class 'pandas.errors.IndexingError'>,failed
13149,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-False-False-False-cummax-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 5)
[right]: (5, 3)",failed
13153,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col6-row1],KeyError: 'buzz1',failed
13156,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumulative[False-False-False-False-cummax-DARKSEID],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 6)
[right]: (5, 4)",failed
13158,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_True-sort_True-group_keys_False-non_transform_returns_dataframe],KeyError: 'index',failed
13170,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True-9-10-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (1, 7)
[right]: (0, 7)",failed
13174,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_True-sort_True-group_keys_False-transform_returns_dataframe],KeyError: 'index',failed
13177,tests.integ.modin.frame.test_at,test_at_neg[key6-IndexingError],"TypeError: int() argument must be a string, a bytes-like object or a real number, not 'dict'",failed
13185,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col6-row2],KeyError: 'buzz1',failed
13192,tests.integ.modin.frame.test_at,test_at_neg[key8-KeyError],"TypeError: int() argument must be a string, a bytes-like object or a real number, not 'dict'",failed
13196,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True-9-10-1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (1, 7)
[right]: (0, 7)",failed
13198,tests.integ.modin.groupby.test_groupby_apply,test_non_series_or_dataframe_return_types[None-include_groups_True],AssertionError,failed
13204,tests.integ.modin.groupby.test_groupby_apply,test_non_series_or_dataframe_return_types[None-include_groups_False],AssertionError,failed
13205,tests.integ.modin.frame.test_at,test_at_multiindex_neg[key0-IndexingError],Failed: DID NOT RAISE <class 'pandas.errors.IndexingError'>,failed
13209,tests.integ.modin.frame.test_at,test_at_multiindex_neg[key1-IndexingError],Failed: DID NOT RAISE <class 'pandas.errors.IndexingError'>,failed
13211,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True-9-10-4],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (1, 7)
[right]: (0, 7)",failed
13213,tests.integ.modin.frame.test_at,test_at_multiindex_neg[key2-IndexingError],Failed: DID NOT RAISE <class 'pandas.errors.IndexingError'>,failed
13216,tests.integ.modin.frame.test_mask,test_dataframe_mask_cond_non_boolean_negative_test,TypeError: bad operand type for unary ~: 'str',failed
13218,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_True-sort_True-group_keys_False-non_transform_returns_series],KeyError: 'index',failed
13222,tests.integ.modin.frame.test_mask,test_dataframe_mask_cond_is_none_negative,AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'ValueError'>,failed
13224,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True-9-10-10],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (1, 7)
[right]: (0, 7)",failed
13226,tests.integ.modin.frame.test_at,test_at_multiindex_neg[key3-IndexingError],IndexError: list index out of range,failed
13234,tests.integ.modin.frame.test_mask,test_dataframe_mask_not_implemented,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
13235,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_True-sort_True-group_keys_False-transform_returns_series],KeyError: 'index',failed
13237,tests.integ.modin.frame.test_at,test_raise_set_cell_with_list_like_value_error,"ValueError: could not broadcast input array from shape (2,) into shape (1, 1)",failed
13243,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col6-row3],KeyError: 'buzz1',failed
13257,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_True-sort_True-group_keys_False-return_scalar],KeyError: 'index',failed
13266,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col6-row4],"KeyError: ['viper', 'mark i', 'viper']",failed
13280,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_True-sort_False-group_keys_True-non_transform_returns_dataframe],KeyError: 'index',failed
13290,tests.integ.modin.groupby.test_groupby_apply,test_non_series_or_dataframe_return_types[date-include_groups_True],[XPASS(strict)] SNOW-1217565,failed
13293,tests.integ.modin.groupby.test_groupby_apply,test_non_series_or_dataframe_return_types[date-include_groups_False],[XPASS(strict)] SNOW-1217565,failed
13294,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True--9--1-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (1, 7)
[right]: (0, 7)",failed
13296,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_True-sort_False-group_keys_True-transform_returns_dataframe],KeyError: 'index',failed
13300,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col6-row5],KeyError: 'mark vi',failed
13302,tests.integ.modin.frame.test_set_index,test_set_index_with_index_series_name[sample0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['num']",failed
13305,tests.integ.modin.frame.test_attrs,test_df_attrs_set_deepcopy,AttributeError: can't set attribute,failed
13308,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True--9--1--1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (1, 7)
[right]: (0, 7)",failed
13309,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_True-sort_False-group_keys_True-non_transform_returns_series],KeyError: 'index',failed
13310,tests.integ.modin.groupby.test_groupby_apply,test_return_timedelta[include_groups_True],[XPASS(strict)] SNOW-1619940,failed
13315,tests.integ.modin.groupby.test_groupby_apply,test_return_timedelta[include_groups_False],[XPASS(strict)] SNOW-1619940,failed
13317,tests.integ.modin.groupby.test_groupby_apply,test_timedelta_input[timedelta_column-include_groups_True],[XPASS(strict)] ,failed
13318,tests.integ.modin.frame.test_attrs,test_df_attrs_take,AttributeError: can't set attribute,failed
13320,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True--9--1-1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (1, 7)
[right]: (0, 7)",failed
13322,tests.integ.modin.groupby.test_groupby_apply,test_timedelta_input[timedelta_column-include_groups_False],[XPASS(strict)] ,failed
13325,tests.integ.modin.frame.test_attrs,test_df_attrs_add,AttributeError: can't set attribute,failed
13327,tests.integ.modin.groupby.test_groupby_apply,test_timedelta_input[timedelta_index-include_groups_True],[XPASS(strict)] ,failed
13328,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col6-row6],KeyError: 'mark vi',failed
13331,tests.integ.modin.groupby.test_groupby_apply,test_timedelta_input[timedelta_index-include_groups_False],[XPASS(strict)] ,failed
13332,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True--9--1-4],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (1, 7)
[right]: (0, 7)",failed
13336,tests.integ.modin.frame.test_attrs,test_df_attrs_concat[0-data0-attrs_list0],AttributeError: can't set attribute,failed
13350,tests.integ.modin.frame.test_attrs,test_df_attrs_concat[0-data1-attrs_list1],AttributeError: can't set attribute,failed
13351,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_True-sort_False-group_keys_True-transform_returns_series],KeyError: 'index',failed
13360,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_True-sort_False-group_keys_True-return_scalar],KeyError: 'index',failed
13361,tests.integ.modin.frame.test_attrs,test_df_attrs_concat[0-data2-attrs_list2],AttributeError: can't set attribute,failed
13363,tests.integ.modin.frame.test_mask,test_dataframe_mask_with_dataframe_cond_single_index_different_names_2,"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['B']",failed
13373,tests.integ.modin.frame.test_attrs,test_df_attrs_concat[1-data0-attrs_list0],AttributeError: can't set attribute,failed
13374,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_True-sort_False-group_keys_False-non_transform_returns_dataframe],KeyError: 'index',failed
13378,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col6-row7],KeyError: 'mark vi',failed
13379,tests.integ.modin.frame.test_setitem,test_df_setitem_df_value[int-key1],ValueError: Columns must be same length as key,failed
13386,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_True-sort_False-group_keys_False-transform_returns_dataframe],KeyError: 'index',failed
13390,tests.integ.modin.frame.test_mask,test_dataframe_mask_with_duplicated_index_aligned[10-cond_frame0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
13398,tests.integ.modin.frame.test_setitem,test_df_setitem_df_value[int-key2],TypeError: unhashable type: 'Series',failed
13399,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice[True--9-1-4],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (1, 7)
[right]: (0, 7)",failed
13400,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_True-sort_False-group_keys_False-non_transform_returns_series],KeyError: 'index',failed
13401,tests.integ.modin.frame.test_attrs,test_df_attrs_concat[1-data1-attrs_list1],AttributeError: can't set attribute,failed
13404,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col6-row8],KeyError: 'mark vi',failed
13417,tests.integ.modin.frame.test_attrs,test_df_attrs_concat[1-data2-attrs_list2],AttributeError: can't set attribute,failed
13420,tests.integ.modin.frame.test_mask,test_dataframe_mask_with_duplicated_index_aligned[10-cond_frame1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
13422,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_True-sort_False-group_keys_False-transform_returns_series],KeyError: 'index',failed
13432,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col6-row9],KeyError: 'buzz1',failed
13438,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_True-sort_False-group_keys_False-return_scalar],KeyError: 'index',failed
13441,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_False-sort_True-group_keys_True-non_transform_returns_dataframe],reason: SNOW-1229760,xfailed
13453,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_False-sort_True-group_keys_True-transform_returns_dataframe],KeyError: 'index',failed
13456,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_False-sort_True-group_keys_True-non_transform_returns_series],reason: SNOW-1229760,xfailed
13459,tests.integ.modin.frame.test_mask,test_dataframe_mask_with_duplicated_index_aligned[other1-cond_frame0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
13462,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col6-row10],KeyError: 'buzz1',failed
13471,tests.integ.modin.frame.test_setitem,test_df_setitem_df_value[int-key5],TypeError: unhashable type: 'Series',failed
13472,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_False-sort_True-group_keys_True-transform_returns_series],KeyError: 'index',failed
13481,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_False-sort_True-group_keys_True-return_scalar],KeyError: 'index',failed
13482,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_False-sort_True-group_keys_False-non_transform_returns_dataframe],reason: SNOW-1229760,xfailed
13497,tests.integ.modin.frame.test_setitem,test_df_setitem_df_value[int-key6],TypeError: unhashable type: 'Series',failed
13500,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_False-sort_True-group_keys_False-transform_returns_dataframe],KeyError: 'index',failed
13501,tests.integ.modin.frame.test_mask,test_dataframe_mask_with_duplicated_index_aligned[other1-cond_frame1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
13504,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_False-sort_True-group_keys_False-non_transform_returns_series],reason: SNOW-1229760,xfailed
13525,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_False-sort_True-group_keys_False-transform_returns_series],KeyError: 'index',failed
13526,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col6-row11],KeyError: 'buzz1',failed
13528,tests.integ.modin.frame.test_setitem,test_df_setitem_df_value[timedelta64[ns]-key1],ValueError: Columns must be same length as key,failed
13540,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_False-sort_True-group_keys_False-return_scalar],KeyError: 'index',failed
13542,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_False-sort_False-group_keys_True-non_transform_returns_dataframe],reason: SNOW-1229760,xfailed
13555,tests.integ.modin.frame.test_setitem,test_df_setitem_df_value[timedelta64[ns]-key2],TypeError: unhashable type: 'Series',failed
13560,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col6-row12],KeyError: 'buzz1',failed
13561,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_False-sort_False-group_keys_True-transform_returns_dataframe],KeyError: 'index',failed
13563,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_False-sort_False-group_keys_True-non_transform_returns_series],reason: SNOW-1229760,xfailed
13564,tests.integ.modin.frame.test_mask,test_dataframe_mask_with_duplicated_index_aligned[other2-cond_frame0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
13585,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_False-sort_False-group_keys_True-transform_returns_series],KeyError: 'index',failed
13592,tests.integ.modin.frame.test_mask,test_dataframe_mask_with_duplicated_index_aligned[other2-cond_frame1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
13594,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col6-row13],KeyError: 'buzz1',failed
13597,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[1-1-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (1, 7)
[right]: (4, 7)",failed
13602,tests.integ.modin.frame.test_setitem,test_df_setitem_df_value[timedelta64[ns]-key5],TypeError: unhashable type: 'Series',failed
13606,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[1-1-1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 7)
[right]: (1, 7)",failed
13613,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[1-1-6],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 7)
[right]: (2, 7)",failed
13617,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col6-row14],KeyError: 'buzz1',failed
13619,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_False-sort_False-group_keys_True-return_scalar],KeyError: 'index',failed
13620,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_False-sort_False-group_keys_False-non_transform_returns_dataframe],reason: SNOW-1229760,xfailed
13629,tests.integ.modin.frame.test_mask,test_dataframe_mask_with_duplicated_index_unaligned,pandas.errors.InvalidIndexError,failed
13632,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_False-sort_False-group_keys_False-transform_returns_dataframe],KeyError: 'index',failed
13633,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[1-4-None],KeyError: 3,failed
13634,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_False-sort_False-group_keys_False-non_transform_returns_series],reason: SNOW-1229760,xfailed
13645,tests.integ.modin.frame.test_mask,test_dataframe_mask_with_duplicated_columns_negative[cond_column_names0-None-Multiple columns are mapped to each label in ['A'] in DataFrame condition],"AssertionError: Regex pattern did not match.
 Regex: ""Multiple\\ columns\\ are\\ mapped\\ to\\ each\\ label\\ in\\ \\['A'\\]\\ in\\ DataFrame\\ condition""
 Input: 'cannot reindex on an axis with duplicate labels'",failed
13647,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_False-sort_False-group_keys_False-transform_returns_series],KeyError: 'index',failed
13655,tests.integ.modin.frame.test_setitem,test_df_setitem_df_value[timedelta64[ns]-key6],TypeError: unhashable type: 'Series',failed
13660,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[1-4-1],KeyError: 3,failed
13661,tests.integ.modin.frame.test_mask,test_dataframe_mask_with_duplicated_columns_negative[None-others_column_names1-Multiple columns are mapped to each label in ['C'] in DataFrame other],AssertionError: exception type <class 'pandas.errors.InvalidIndexError'> does not match with expected type <class 'ValueError'>,failed
13666,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_True-dropna_False-sort_False-group_keys_False-return_scalar],KeyError: 'index',failed
13669,tests.integ.modin.frame.test_setitem,test_df_setitem_df_value_dedup_columns[list-key0],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 3)
[right]: (3, 2)",failed
13676,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col7-mark i],KeyError: 'buzz1',failed
13678,tests.integ.modin.frame.test_mask,test_dataframe_mask_with_duplicated_columns_negative[cond_column_names2-others_column_names2-Multiple columns are mapped to each label in ['C'] in DataFrame condition],"AssertionError: Regex pattern did not match.
 Regex: ""Multiple\\ columns\\ are\\ mapped\\ to\\ each\\ label\\ in\\ \\['C'\\]\\ in\\ DataFrame\\ condition""
 Input: 'cannot reindex on an axis with duplicate labels'",failed
13681,tests.integ.modin.frame.test_setitem,test_df_setitem_df_value_dedup_columns[list-key1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 4)
[right]: (3, 3)",failed
13688,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_True-sort_True-group_keys_True-non_transform_returns_dataframe],KeyError: 'index',failed
13694,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[1-4-4],KeyError: 3,failed
13703,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_True-sort_True-group_keys_True-transform_returns_dataframe],KeyError: 'index',failed
13713,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col7-row1],KeyError: 'buzz1',failed
13721,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_True-sort_True-group_keys_True-non_transform_returns_series],KeyError: 'index',failed
13724,tests.integ.modin.frame.test_setitem,test_df_setitem_df_value_dedup_columns[series-key0],TypeError: unhashable type: 'Series',failed
13731,tests.integ.modin.frame.test_mask,test_mask_series_other_axis_not_specified,"AssertionError: Regex pattern did not match.
 Regex: 'df.mask requires an axis parameter \\(0 or 1\\) when given a Series'
 Input: 'Must specify axis=0 or 1'",failed
13733,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_True-sort_True-group_keys_True-transform_returns_series],KeyError: 'index',failed
13744,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col7-row2],KeyError: 'buzz1',failed
13749,tests.integ.modin.frame.test_setitem,test_df_setitem_df_value_dedup_columns[series-key1],TypeError: unhashable type: 'Series',failed
13751,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_True-sort_True-group_keys_True-return_scalar],KeyError: 'index',failed
13755,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[1-4-6],KeyError: 3,failed
13764,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[1-6-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (6, 7)
[right]: (3, 7)",failed
13769,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_True-sort_True-group_keys_False-non_transform_returns_dataframe],KeyError: 'index',failed
13777,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[1-6-1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 7)
[right]: (0, 7)",failed
13781,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col7-row3],KeyError: 'buzz1',failed
13782,tests.integ.modin.frame.test_setitem,test_df_setitem_df_value_dedup_columns[series-key2],TypeError: unhashable type: 'Series',failed
13789,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[1-6-4],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (2, 7)
[right]: (0, 7)",failed
13793,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_True-sort_True-group_keys_False-transform_returns_dataframe],KeyError: 'index',failed
13802,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[1-6-6],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 7)
[right]: (1, 7)",failed
13803,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col7-row4],"KeyError: ['viper', 'mark i', 'viper']",failed
13813,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_True-sort_True-group_keys_False-non_transform_returns_series],KeyError: 'index',failed
13826,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_True-sort_True-group_keys_False-transform_returns_series],KeyError: 'index',failed
13829,tests.integ.modin.frame.test_setitem,test_df_setitem_slice_key_df_value[int-key0],"AssertionError: DataFrame.iloc[:, 1] (column name=""b"") are different

DataFrame.iloc[:, 1] (column name=""b"") values are different (33.33333 %)
[index]: [0, 1, 2]
[left]:  [nan, 5.0, 6.0]
[right]: [40, 5, 6]",failed
13830,tests.integ.modin.frame.test_axis,test_set_columns_index_name[5],"AssertionError: Index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [5]",failed
13841,tests.integ.modin.frame.test_setitem,test_df_setitem_slice_key_df_value[int-key1],"AssertionError: DataFrame.iloc[:, 1] (column name=""b"") are different

DataFrame.iloc[:, 1] (column name=""b"") values are different (66.66667 %)
[index]: [0, 1, 2]
[left]:  [nan, nan, 6.0]
[right]: [40, 50, 6]",failed
13844,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_True-sort_True-group_keys_False-return_scalar],KeyError: 'index',failed
13847,tests.integ.modin.frame.test_axis,test_set_columns_index_name[5.0],"AssertionError: Index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [5.0]",failed
13851,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-1-1-None],KeyError: 2,failed
13854,tests.integ.modin.frame.test_setitem,test_df_setitem_slice_key_df_value[int-key2],"AssertionError: DataFrame.iloc[:, 1] (column name=""b"") are different

DataFrame.iloc[:, 1] (column name=""b"") values are different (66.66667 %)
[index]: [0, 1, 2]
[left]:  [nan, nan, 6.0]
[right]: [40, 50, 6]",failed
13858,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col7-row5],KeyError: 'mark vi',failed
13860,tests.integ.modin.frame.test_axis,test_set_columns_index_name[index_name2],"AssertionError: Index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('5', 5)]",failed
13863,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_True-sort_False-group_keys_True-non_transform_returns_dataframe],KeyError: 'index',failed
13871,tests.integ.modin.frame.test_setitem,test_df_setitem_slice_key_df_value[int-key4],"AssertionError: DataFrame.iloc[:, 1] (column name=""b"") are different

DataFrame.iloc[:, 1] (column name=""b"") values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [nan, nan, nan]
[right]: [40, 50, 60]",failed
13872,tests.integ.modin.frame.test_axis,test_set_columns_index_name[ c o l ],"AssertionError: Index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [' c o l ']",failed
13876,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-1-1-1],KeyError: 2,failed
13885,tests.integ.modin.frame.test_axis,"test_set_columns_index_name[""col]","AssertionError: Index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['""col']",failed
13886,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col7-row6],KeyError: 'mark vi',failed
13887,tests.integ.modin.frame.test_setitem,test_df_setitem_slice_key_df_value[int-key5],"AssertionError: DataFrame.iloc[:, 1] (column name=""b"") are different

DataFrame.iloc[:, 1] (column name=""b"") values are different (33.33333 %)
[index]: [0, 1, 2]
[left]:  [nan, 5.0, 6.0]
[right]: [40, 5, 6]",failed
13896,tests.integ.modin.frame.test_setitem,test_df_setitem_slice_key_df_value[int-key6],"AssertionError: DataFrame.iloc[:, 1] (column name=""b"") are different

DataFrame.iloc[:, 1] (column name=""b"") values are different (66.66667 %)
[index]: [0, 1, 2]
[left]:  [4.0, nan, nan]
[right]: [4, 50, 60]",failed
13899,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-1-1-4],KeyError: 2,failed
13906,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_True-sort_False-group_keys_True-transform_returns_dataframe],KeyError: 'index',failed
13910,tests.integ.modin.frame.test_melt,test_melt_general_path[data0],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
13912,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col7-row7],KeyError: 'mark vi',failed
13914,tests.integ.modin.frame.test_setitem,test_df_setitem_slice_key_df_value[int-key8],"AssertionError: DataFrame.iloc[:, 1] (column name=""b"") are different

DataFrame.iloc[:, 1] (column name=""b"") values are different (66.66667 %)
[index]: [0, 1, 2]
[left]:  [nan, 5.0, nan]
[right]: [40, 5, 60]",failed
13919,tests.integ.modin.frame.test_melt,test_melt_general_path[data1],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
13921,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_True-sort_False-group_keys_True-non_transform_returns_series],KeyError: 'index',failed
13925,tests.integ.modin.frame.test_setitem,test_df_setitem_slice_key_df_value[int-key9],"AssertionError: DataFrame.iloc[:, 1] (column name=""b"") are different

DataFrame.iloc[:, 1] (column name=""b"") values are different (66.66667 %)
[index]: [0, 1, 2]
[left]:  [nan, nan, 6.0]
[right]: [40, 50, 6]",failed
13928,tests.integ.modin.frame.test_melt,test_melt_general_path[data2],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
13933,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_True-sort_False-group_keys_True-transform_returns_series],KeyError: 'index',failed
13934,tests.integ.modin.frame.test_setitem,test_df_setitem_slice_key_df_value[timedelta64[ns]-key0],"AssertionError: DataFrame.iloc[:, 1] (column name=""b"") are different

DataFrame.iloc[:, 1] (column name=""b"") values are different (33.33333 %)
[index]: [0, 1, 2]
[left]:  [-9223372036854775808, 5, 6]
[right]: [40, 5, 6]",failed
13935,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-keep-True-min-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
13937,tests.integ.modin.frame.test_melt,test_melt_general_path[data3],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
13939,tests.integ.modin.frame.test_axis,"test_set_columns_index_name[""c""""ol]","AssertionError: Index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['""c""""ol']",failed
13940,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-keep-True-min-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
13943,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-keep-True-min-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
13945,tests.integ.modin.frame.test_melt,test_melt_general_path[data4],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
13946,tests.integ.modin.frame.test_setitem,test_df_setitem_slice_key_df_value[timedelta64[ns]-key1],"AssertionError: DataFrame.iloc[:, 1] (column name=""b"") are different

DataFrame.iloc[:, 1] (column name=""b"") values are different (66.66667 %)
[index]: [0, 1, 2]
[left]:  [-9223372036854775808, -9223372036854775808, 6]
[right]: [40, 50, 6]",failed
13948,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-keep-True-dense-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
13950,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_True-sort_False-group_keys_True-return_scalar],KeyError: 'index',failed
13952,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-keep-True-dense-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
13954,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-1-1-6],KeyError: 2,failed
13955,tests.integ.modin.frame.test_axis,test_set_columns_index_name['col],"AssertionError: Index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [''col']",failed
13956,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-keep-True-dense-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
13957,tests.integ.modin.frame.test_setitem,test_df_setitem_slice_key_df_value[timedelta64[ns]-key2],"AssertionError: DataFrame.iloc[:, 1] (column name=""b"") are different

DataFrame.iloc[:, 1] (column name=""b"") values are different (66.66667 %)
[index]: [0, 1, 2]
[left]:  [-9223372036854775808, -9223372036854775808, 6]
[right]: [40, 50, 6]",failed
13961,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-keep-True-first-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
13962,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-1-4-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (2, 7)
[right]: (3, 7)",failed
13965,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_True-sort_False-group_keys_False-non_transform_returns_dataframe],KeyError: 'index',failed
13966,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col7-row8],KeyError: 'mark vi',failed
13968,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-keep-True-first-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
13970,tests.integ.modin.frame.test_axis,"test_set_columns_index_name[""col""]","AssertionError: Index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['""col""']",failed
13973,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-keep-True-first-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
13975,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-keep-True-max-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
13976,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-1-4-4],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 7)
[right]: (1, 7)",failed
13977,tests.integ.modin.frame.test_setitem,test_df_setitem_slice_key_df_value[timedelta64[ns]-key4],"AssertionError: DataFrame.iloc[:, 1] (column name=""b"") are different

DataFrame.iloc[:, 1] (column name=""b"") values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [-9223372036854775808, -9223372036854775808, -9223372036854775808]
[right]: [40, 50, 60]",failed
13979,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-keep-True-max-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
13982,tests.integ.modin.frame.test_axis,"test_set_columns_index_name[""COL""]","AssertionError: Index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['""COL""']",failed
13984,tests.integ.modin.frame.test_melt,test_melt_general_path[data5],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
13985,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_True-sort_False-group_keys_False-transform_returns_dataframe],KeyError: 'index',failed
13986,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-keep-True-max-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
13989,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-keep-True-average-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
13990,tests.integ.modin.frame.test_setitem,test_df_setitem_slice_key_df_value[timedelta64[ns]-key5],"AssertionError: DataFrame.iloc[:, 1] (column name=""b"") are different

DataFrame.iloc[:, 1] (column name=""b"") values are different (33.33333 %)
[index]: [0, 1, 2]
[left]:  [-9223372036854775808, 5, 6]
[right]: [40, 5, 6]",failed
13993,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-keep-True-average-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
13994,tests.integ.modin.frame.test_axis,test_set_columns_index_name['co''l],"AssertionError: Index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [''co''l']",failed
13995,tests.integ.modin.frame.test_melt,test_melt_general_path[data6],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
13996,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_True-sort_False-group_keys_False-non_transform_returns_series],KeyError: 'index',failed
13999,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-keep-True-average-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14001,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-keep-False-min-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14002,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col7-row9],KeyError: 'buzz1',failed
14005,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-keep-False-min-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14006,tests.integ.modin.frame.test_setitem,test_df_setitem_slice_key_df_value[timedelta64[ns]-key6],"AssertionError: DataFrame.iloc[:, 1] (column name=""b"") are different

DataFrame.iloc[:, 1] (column name=""b"") values are different (66.66667 %)
[index]: [0, 1, 2]
[left]:  [4, -9223372036854775808, -9223372036854775808]
[right]: [4, 50, 60]",failed
14007,tests.integ.modin.frame.test_melt,test_melt_general_path[data7],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
14008,tests.integ.modin.frame.test_axis,test_set_columns_index_name[COL],"AssertionError: Index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['COL']",failed
14009,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_True-sort_False-group_keys_False-transform_returns_series],KeyError: 'index',failed
14011,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-keep-False-min-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14013,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-1-6-None],KeyError: 7,failed
14015,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-keep-False-dense-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14019,tests.integ.modin.frame.test_melt,test_melt_general_path[data8],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
14020,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-keep-False-dense-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14021,tests.integ.modin.frame.test_axis,test_set_columns_index_name[\xff\xfes\x00n\x00o\x00w\x00f\x00l\x00a\x00k\x00e\x00],"AssertionError: Index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [b'\xff\xfes\x00n\x00o\x00w\x00f\x00l\x00a\x00k\x00e\x00']",failed
14024,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-keep-False-dense-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14025,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_True-sort_False-group_keys_False-return_scalar],KeyError: 'index',failed
14027,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-keep-False-first-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14028,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_False-sort_True-group_keys_True-non_transform_returns_dataframe],reason: SNOW-1229760,xfailed
14029,tests.integ.modin.frame.test_melt,test_melt_general_path[data9],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
14030,tests.integ.modin.frame.test_setitem,test_df_setitem_slice_key_df_value[timedelta64[ns]-key8],"AssertionError: DataFrame.iloc[:, 1] (column name=""b"") are different

DataFrame.iloc[:, 1] (column name=""b"") values are different (66.66667 %)
[index]: [0, 1, 2]
[left]:  [-9223372036854775808, 5, -9223372036854775808]
[right]: [40, 5, 60]",failed
14032,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-keep-False-first-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14034,tests.integ.modin.frame.test_axis,test_set_columns_index_name[\u30c1\u30ea\u30cc\u30eb],"AssertionError: Index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['チリヌル']",failed
14037,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col7-row10],KeyError: 'buzz1',failed
14038,tests.integ.modin.frame.test_melt,test_melt_general_path[data10],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
14039,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-1-6-1],KeyError: 7,failed
14041,tests.integ.modin.frame.test_setitem,test_df_setitem_slice_key_df_value[timedelta64[ns]-key9],"AssertionError: DataFrame.iloc[:, 1] (column name=""b"") are different

DataFrame.iloc[:, 1] (column name=""b"") values are different (66.66667 %)
[index]: [0, 1, 2]
[left]:  [-9223372036854775808, -9223372036854775808, 6]
[right]: [40, 50, 6]",failed
14043,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_False-sort_True-group_keys_True-transform_returns_dataframe],KeyError: 'index',failed
14044,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_False-sort_True-group_keys_True-non_transform_returns_series],reason: SNOW-1229760,xfailed
14047,tests.integ.modin.frame.test_axis,test_set_columns_index_name[\u0e1b\u0e47\u0e19\u0e21\u0e19\u0e38],"AssertionError: Index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['ป็นมนุ']",failed
14048,tests.integ.modin.frame.test_melt,test_melt_general_path[data11],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
14052,tests.integ.modin.frame.test_melt,test_melt_general_path[data12],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
14055,tests.integ.modin.frame.test_setitem,test_df_setitem_df_single_value[int-key0-val_columns0-val_index0],pandas.errors.InvalidIndexError: Reindexing only valid with uniquely valued Index objects,failed
14057,tests.integ.modin.frame.test_axis,test_set_columns_index_name[\u718a\u732b],"AssertionError: Index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['熊猫']",failed
14058,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-1-6-4],KeyError: 7,failed
14060,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col7-row11],KeyError: 'buzz1',failed
14061,tests.integ.modin.frame.test_melt,test_melt_general_path[data13],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
14062,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_False-sort_True-group_keys_True-transform_returns_series],KeyError: 'index',failed
14063,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-keep-False-first-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14066,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-keep-False-max-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14069,tests.integ.modin.frame.test_melt,test_melt_general_path[data14],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
14070,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-keep-False-max-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14072,tests.integ.modin.frame.test_axis,"test_set_columns_index_name[{""snow"": {""fla"": ""ke""}}]","AssertionError: Index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['{""snow"": {""fla"": ""ke""}}']",failed
14074,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-keep-False-max-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14075,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_False-sort_True-group_keys_True-return_scalar],KeyError: 'index',failed
14076,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_False-sort_True-group_keys_False-non_transform_returns_dataframe],reason: SNOW-1229760,xfailed
14077,tests.integ.modin.frame.test_melt,test_melt_general_path[data15],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
14079,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-keep-False-average-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14083,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-keep-False-average-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14084,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-1-6-6],KeyError: 7,failed
14087,tests.integ.modin.frame.test_melt,test_melt_general_path[data16],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
14089,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-keep-False-average-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14092,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_False-sort_True-group_keys_False-transform_returns_dataframe],KeyError: 'index',failed
14094,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_False-sort_True-group_keys_False-non_transform_returns_series],reason: SNOW-1229760,xfailed
14097,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-top-True-min-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14103,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-top-True-min-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14109,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-top-True-min-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14110,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_False-sort_True-group_keys_False-transform_returns_series],KeyError: 'index',failed
14112,tests.integ.modin.frame.test_setitem,test_df_setitem_df_single_value[int-key0-val_columns0-val_index1],pandas.errors.InvalidIndexError: Reindexing only valid with uniquely valued Index objects,failed
14115,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-top-True-dense-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14119,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-top-True-dense-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14121,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_False-sort_True-group_keys_False-return_scalar],KeyError: 'index',failed
14123,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col7-row12],KeyError: 'buzz1',failed
14124,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_False-sort_False-group_keys_True-non_transform_returns_dataframe],reason: SNOW-1229760,xfailed
14126,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-top-True-dense-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14128,tests.integ.modin.frame.test_melt,test_melt_general_path[data17],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
14130,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-top-True-first-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14134,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-top-True-first-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14136,tests.integ.modin.frame.test_melt,test_melt_general_path[data18],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
14137,tests.integ.modin.frame.test_setitem,test_df_setitem_df_single_value[int-key0-val_columns1-val_index0],pandas.errors.InvalidIndexError: Reindexing only valid with uniquely valued Index objects,failed
14141,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-top-True-first-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14144,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-top-True-max-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14145,tests.integ.modin.frame.test_melt,test_melt_general_path[data19],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
14149,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-top-True-max-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14152,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col7-row13],KeyError: 'buzz1',failed
14155,tests.integ.modin.frame.test_melt,test_melt_simple_path[data0],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
14156,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-top-True-max-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14158,tests.integ.modin.frame.test_setitem,test_df_setitem_df_single_value[int-key0-val_columns1-val_index1],pandas.errors.InvalidIndexError: Reindexing only valid with uniquely valued Index objects,failed
14161,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-top-True-average-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14162,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[2-1-None],KeyError: -1,failed
14165,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-top-True-average-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14168,tests.integ.modin.frame.test_melt,test_melt_simple_path[data1],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
14170,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_False-sort_False-group_keys_True-transform_returns_dataframe],KeyError: 'index',failed
14172,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-top-True-average-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14173,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_False-sort_False-group_keys_True-non_transform_returns_series],reason: SNOW-1229760,xfailed
14178,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-top-False-min-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14179,tests.integ.modin.frame.test_melt,test_melt_simple_path[data2],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
14182,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-top-False-min-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14186,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col7-row14],KeyError: 'buzz1',failed
14187,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-top-False-min-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14189,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_False-sort_False-group_keys_True-transform_returns_series],KeyError: 'index',failed
14190,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[2-1-1],KeyError: -1,failed
14191,tests.integ.modin.frame.test_setitem,test_df_setitem_df_single_value[int-A-val_columns0-val_index0],ValueError: Length of values (1) does not match length of index (4),failed
14192,tests.integ.modin.frame.test_melt,test_melt_simple_path[data3],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
14194,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-top-False-dense-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14196,tests.integ.modin.frame.test_axis,test_set_axis_df_raises_type_error_diff_error_msg[native_df0-axis0-labels0-list is not a valid type for axis.],"AssertionError: Regex pattern did not match.
 Regex: 'list is not a valid type for axis.'
 Input: ""unhashable type: 'list'""",failed
14198,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-top-False-dense-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14199,tests.integ.modin.frame.test_melt,test_melt_simple_path[data4],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
14201,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-top-False-dense-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14202,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_False-sort_False-group_keys_True-return_scalar],KeyError: 'index',failed
14204,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_False-sort_False-group_keys_False-non_transform_returns_dataframe],reason: SNOW-1229760,xfailed
14207,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-top-False-first-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14208,tests.integ.modin.frame.test_axis,test_set_axis_df_raises_type_error_diff_error_msg[native_df1-axis1-labels1-list is not a valid type for axis.],"AssertionError: Regex pattern did not match.
 Regex: 'list is not a valid type for axis.'
 Input: ""unhashable type: 'list'""",failed
14209,tests.integ.modin.frame.test_melt,test_melt_simple_path[data5],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
14212,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-top-False-first-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14213,tests.integ.modin.frame.test_setitem,test_df_setitem_df_single_value[int-A-val_columns0-val_index1],ValueError: Length of values (1) does not match length of index (4),failed
14215,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[2-1-4],KeyError: -1,failed
14217,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-top-False-first-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14218,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_False-sort_False-group_keys_False-transform_returns_dataframe],KeyError: 'index',failed
14219,tests.integ.modin.frame.test_melt,test_melt_simple_path[data6],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
14220,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_False-sort_False-group_keys_False-non_transform_returns_series],reason: SNOW-1229760,xfailed
14221,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col8-mark i],KeyError: 'buzz1',failed
14223,tests.integ.modin.frame.test_axis,test_set_axis_df_raises_type_error_diff_error_msg[native_df2-axis2-labels2-Index is not a valid type for axis.],"AssertionError: Regex pattern did not match.
 Regex: 'Index is not a valid type for axis.'
 Input: ""unhashable type: 'Index'""",failed
14224,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-top-False-max-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14227,tests.integ.modin.frame.test_melt,test_melt_simple_path[data7],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
14228,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-top-False-max-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14233,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-top-False-max-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14235,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_False-sort_False-group_keys_False-transform_returns_series],KeyError: 'index',failed
14237,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-top-False-average-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14238,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[2-1-6],KeyError: -1,failed
14241,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-top-False-average-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14243,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-top-False-average-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14246,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[by1-include_groups_False-dropna_False-sort_False-group_keys_False-return_scalar],KeyError: 'index',failed
14247,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-bottom-True-min-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14249,tests.integ.modin.frame.test_axis,test_set_axis_df_raises_type_error_diff_error_msg[native_df3-axis3-labels3-DataFrame is not a valid type for axis.],"AssertionError: Regex pattern did not match.
 Regex: 'DataFrame is not a valid type for axis.'
 Input: ""unhashable type: 'DataFrame'""",failed
14250,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-bottom-True-min-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14251,tests.integ.modin.frame.test_melt,test_melt_simple_path[data8],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
14253,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-bottom-True-min-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14254,tests.integ.modin.frame.test_setitem,test_df_setitem_df_single_value[int-A-val_columns1-val_index0],ValueError: Length of values (1) does not match length of index (4),failed
14256,tests.integ.modin.frame.test_melt,test_melt_simple_path[data9],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
14257,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[2-4-None],KeyError: 2,failed
14258,tests.integ.modin.frame.test_axis,test_set_axis_df_raises_type_error_diff_error_msg[native_df4-axis4-labels4-Series is not a valid type for axis.],"AssertionError: Regex pattern did not match.
 Regex: 'Series is not a valid type for axis.'
 Input: ""unhashable type: 'Series'""",failed
14259,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-bottom-True-dense-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14260,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_True-sort_True-group_keys_True-non_transform_returns_dataframe],KeyError: 'index',failed
14261,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col8-row1],KeyError: 'buzz1',failed
14263,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-bottom-True-dense-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14264,tests.integ.modin.frame.test_melt,test_melt_simple_path[data10],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
14266,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-bottom-True-dense-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14267,tests.integ.modin.frame.test_axis,test_set_axis_df_raises_type_error_diff_error_msg[native_df5-axis5-labels5-MultiIndex is not a valid type for axis.],"AssertionError: Regex pattern did not match.
 Regex: 'MultiIndex is not a valid type for axis.'
 Input: ""unhashable type: 'MultiIndex'""",failed
14269,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-bottom-True-first-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14271,tests.integ.modin.frame.test_melt,test_melt_simple_path[data11],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
14272,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-bottom-True-first-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14273,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_True-sort_True-group_keys_True-transform_returns_dataframe],KeyError: 'index',failed
14275,tests.integ.modin.frame.test_setitem,test_df_setitem_df_single_value[int-A-val_columns1-val_index1],ValueError: Length of values (1) does not match length of index (4),failed
14278,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-bottom-True-first-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14279,tests.integ.modin.frame.test_axis,test_set_axis_df_raises_type_error_diff_error_msg[native_df6-axis6-labels6-MultiIndex is not a valid type for axis.],"AssertionError: Regex pattern did not match.
 Regex: 'MultiIndex is not a valid type for axis.'
 Input: ""unhashable type: 'MultiIndex'""",failed
14280,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-bottom-True-max-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14282,tests.integ.modin.frame.test_melt,test_melt_simple_path[data12],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
14284,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-bottom-True-max-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14287,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-bottom-True-max-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14288,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col8-row2],KeyError: 'buzz1',failed
14290,tests.integ.modin.frame.test_melt,test_melt_simple_path[data13],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
14291,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_True-sort_True-group_keys_True-non_transform_returns_series],KeyError: 'index',failed
14293,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-bottom-True-average-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14295,tests.integ.modin.frame.test_setitem,test_df_setitem_df_single_value[timedelta64[ns]-key0-val_columns0-val_index0],pandas.errors.InvalidIndexError: Reindexing only valid with uniquely valued Index objects,failed
14297,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-bottom-True-average-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14299,tests.integ.modin.frame.test_melt,test_melt_simple_path[data14],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
14301,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-bottom-True-average-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14302,tests.integ.modin.frame.test_axis,test_set_axis_df_raises_type_error_diff_error_msg[native_df7-index-None-None is not a valid value for the parameter 'labels'.],"AssertionError: Regex pattern did not match.
 Regex: ""None is not a valid value for the parameter 'labels'.""
 Input: 'Index(...) must be called with a collection of some kind, None was passed'",failed
14303,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[2-4-1],KeyError: 2,failed
14306,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-bottom-False-min-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14307,tests.integ.modin.frame.test_melt,test_melt_simple_path[data15],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
14310,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-bottom-False-min-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14311,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_True-sort_True-group_keys_True-transform_returns_series],KeyError: 'index',failed
14314,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-bottom-False-min-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14316,tests.integ.modin.frame.test_setitem,test_df_setitem_df_single_value[timedelta64[ns]-key0-val_columns0-val_index1],pandas.errors.InvalidIndexError: Reindexing only valid with uniquely valued Index objects,failed
14317,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col8-row3],KeyError: 'buzz1',failed
14318,tests.integ.modin.frame.test_melt,test_melt_simple_path[data16],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
14320,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-bottom-False-dense-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14324,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-bottom-False-dense-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14325,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[2-4-4],KeyError: 2,failed
14326,tests.integ.modin.frame.test_melt,test_melt_simple_path[data17],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
14327,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-bottom-False-dense-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14329,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_True-sort_True-group_keys_True-return_scalar],KeyError: 'index',failed
14331,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-bottom-False-first-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14332,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col8-row4],"KeyError: ['viper', 'mark i', 'viper']",failed
14335,tests.integ.modin.frame.test_melt,test_melt_simple_path[data18],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
14336,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-bottom-False-first-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14337,tests.integ.modin.frame.test_setitem,test_df_setitem_df_single_value[timedelta64[ns]-key0-val_columns1-val_index0],pandas.errors.InvalidIndexError: Reindexing only valid with uniquely valued Index objects,failed
14340,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-bottom-False-first-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14341,tests.integ.modin.frame.test_axis,test_set_axis_df_raises_type_error_diff_error_msg[native_df8-columns-None-None is not a valid value for the parameter 'labels'.],"AssertionError: Regex pattern did not match.
 Regex: ""None is not a valid value for the parameter 'labels'.""
 Input: 'Index(...) must be called with a collection of some kind, None was passed'",failed
14343,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-bottom-False-max-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14347,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[2-4-6],KeyError: 2,failed
14349,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-bottom-False-max-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14351,tests.integ.modin.frame.test_axis,test_df_set_axis_copy_true,"AssertionError: assert 'keyword is unused and is ignored.' in ''
 +  where '' = <_pytest.logging.LogCaptureFixture object at 0x33f8315d0>.text",failed
14353,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-bottom-False-max-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14354,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[2-6-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 7)
[right]: (2, 7)",failed
14357,tests.integ.modin.frame.test_axis,test_df_set_axis_copy_false,"AssertionError: assert 'keyword is unused and is ignored.' in ''
 +  where '' = <_pytest.logging.LogCaptureFixture object at 0x33e025fc0>.text",failed
14358,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-bottom-False-average-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14359,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col8-row5],KeyError: 'mark vi',failed
14362,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-bottom-False-average-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14365,tests.integ.modin.frame.test_melt,test_melt_simple_path[data19],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
14366,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[2-6-1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (1, 7)
[right]: (0, 7)",failed
14367,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[True-bottom-False-average-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14372,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-keep-True-min-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14374,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_True-sort_True-group_keys_False-non_transform_returns_dataframe],KeyError: 'index',failed
14378,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-keep-True-min-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14379,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[2-6-4],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (1, 7)
[right]: (0, 7)",failed
14383,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-keep-True-min-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14386,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-keep-True-dense-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14387,tests.integ.modin.frame.test_setitem,test_df_setitem_df_single_value[timedelta64[ns]-key0-val_columns1-val_index1],pandas.errors.InvalidIndexError: Reindexing only valid with uniquely valued Index objects,failed
14389,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[2-6-6],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (2, 7)
[right]: (1, 7)",failed
14392,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-keep-True-dense-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14397,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-keep-True-dense-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14400,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_True-sort_True-group_keys_False-transform_returns_dataframe],KeyError: 'index',failed
14404,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-keep-True-first-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14408,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-keep-True-first-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14411,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-keep-True-first-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14413,tests.integ.modin.frame.test_setitem,test_df_setitem_df_single_value[timedelta64[ns]-A-val_columns0-val_index0],ValueError: Length of values (1) does not match length of index (4),failed
14416,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-keep-True-max-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14417,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col8-row6],KeyError: 'mark vi',failed
14418,tests.integ.modin.frame.test_melt,test_multi_column_melt,ValueError: value_vars must be a list of tuples when columns are a MultiIndex,failed
14420,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_True-sort_True-group_keys_False-non_transform_returns_series],KeyError: 'index',failed
14421,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-keep-True-max-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14426,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-keep-True-max-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14431,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-keep-True-average-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14433,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-2-1-None],KeyError: 3,failed
14436,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-keep-True-average-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14441,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_True-sort_True-group_keys_False-transform_returns_series],KeyError: 'index',failed
14442,tests.integ.modin.frame.test_setitem,test_df_setitem_df_single_value[timedelta64[ns]-A-val_columns0-val_index1],ValueError: Length of values (1) does not match length of index (4),failed
14445,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-keep-True-average-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14449,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-keep-False-min-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14454,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-keep-False-min-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14455,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col8-row7],KeyError: 'mark vi',failed
14459,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-keep-False-min-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14462,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_True-sort_True-group_keys_False-return_scalar],KeyError: 'index',failed
14464,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-keep-False-dense-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14466,tests.integ.modin.frame.test_setitem,test_df_setitem_df_single_value[timedelta64[ns]-A-val_columns1-val_index0],ValueError: Length of values (1) does not match length of index (4),failed
14468,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-keep-False-dense-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14470,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-keep-False-dense-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14473,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-keep-False-first-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14476,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-keep-False-first-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14477,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_True-sort_False-group_keys_True-non_transform_returns_dataframe],KeyError: 'index',failed
14478,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col8-row8],KeyError: 'mark vi',failed
14481,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-keep-False-first-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14484,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-2-1-1],KeyError: 3,failed
14485,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-keep-False-max-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14488,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-keep-False-max-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14491,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-keep-False-max-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14492,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_True-sort_False-group_keys_True-transform_returns_dataframe],KeyError: 'index',failed
14496,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-keep-False-average-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14499,tests.integ.modin.frame.test_memory_usage,test_memory_usage,assert 8 == 0,failed
14502,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-keep-False-average-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14503,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-2-1-4],KeyError: 3,failed
14506,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-keep-False-average-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14510,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-top-True-min-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14512,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_True-sort_False-group_keys_True-non_transform_returns_series],KeyError: 'index',failed
14513,tests.integ.modin.frame.test_setitem,test_df_setitem_df_single_value[timedelta64[ns]-A-val_columns1-val_index1],ValueError: Length of values (1) does not match length of index (4),failed
14514,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-top-True-min-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14519,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-top-True-min-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14524,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-top-True-dense-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14526,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-2-1-6],KeyError: 3,failed
14528,tests.integ.modin.frame.test_setitem,test_df_setitem_value_df_mismatch_num_col_negative,"AssertionError: Regex pattern did not match.
 Regex: 'shape mismatch'
 Input: 'Length of values (1) does not match length of index (4)'",failed
14532,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col8-row9],KeyError: 'buzz1',failed
14533,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_True-sort_False-group_keys_True-transform_returns_series],KeyError: 'index',failed
14535,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-top-True-dense-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14536,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-2-4-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 7)
[right]: (2, 7)",failed
14541,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-top-True-dense-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14544,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-2-4-1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (1, 7)
[right]: (0, 7)",failed
14546,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-top-True-first-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14549,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-top-True-first-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14550,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_True-sort_False-group_keys_True-return_scalar],KeyError: 'index',failed
14552,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-2-4-4],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (2, 7)
[right]: (1, 7)",failed
14554,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-top-True-first-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14558,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-top-True-max-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14559,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col8-row10],KeyError: 'buzz1',failed
14560,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-2-4-6],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (1, 7)
[right]: (0, 7)",failed
14561,tests.integ.modin.frame.test_setitem,test_df_setitem_self_df_set_aligned_row_key[native_df0],TypeError: unhashable type: 'Series',failed
14564,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-top-True-max-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14567,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-top-True-max-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14568,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-top-True-average-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14571,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-top-True-average-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14575,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-top-True-average-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14577,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-2-6-None],KeyError: 8,failed
14580,tests.integ.modin.frame.test_setitem,test_df_setitem_self_df_set_aligned_row_key[native_df1],TypeError: unhashable type: 'Series',failed
14581,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-top-False-min-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14583,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col8-row11],KeyError: 'buzz1',failed
14584,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-top-False-min-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14586,tests.integ.modin.frame.test_cache_result,test_cache_result_empty_dataframe[True-no_col_no_index],"NotImplementedError: Modin supports the method DataFrame.cache_result on the Snowflake backend, but not on the backend Pandas.",failed
14587,tests.integ.modin.frame.test_cache_result,test_cache_result_empty_dataframe[True-only_col],"NotImplementedError: Modin supports the method DataFrame.cache_result on the Snowflake backend, but not on the backend Pandas.",failed
14588,tests.integ.modin.frame.test_cache_result,test_cache_result_empty_dataframe[True-only_index],"NotImplementedError: Modin supports the method DataFrame.cache_result on the Snowflake backend, but not on the backend Pandas.",failed
14589,tests.integ.modin.frame.test_cache_result,test_cache_result_empty_dataframe[True-col_and_index],"NotImplementedError: Modin supports the method DataFrame.cache_result on the Snowflake backend, but not on the backend Pandas.",failed
14591,tests.integ.modin.frame.test_cache_result,test_cache_result_empty_dataframe[False-no_col_no_index],"NotImplementedError: Modin supports the method DataFrame.cache_result on the Snowflake backend, but not on the backend Pandas.",failed
14593,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-top-False-min-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14594,tests.integ.modin.frame.test_cache_result,test_cache_result_empty_dataframe[False-only_col],"NotImplementedError: Modin supports the method DataFrame.cache_result on the Snowflake backend, but not on the backend Pandas.",failed
14595,tests.integ.modin.frame.test_cache_result,test_cache_result_empty_dataframe[False-only_index],"NotImplementedError: Modin supports the method DataFrame.cache_result on the Snowflake backend, but not on the backend Pandas.",failed
14598,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_True-sort_False-group_keys_False-non_transform_returns_dataframe],KeyError: 'index',failed
14599,tests.integ.modin.frame.test_cache_result,test_cache_result_empty_dataframe[False-col_and_index],"NotImplementedError: Modin supports the method DataFrame.cache_result on the Snowflake backend, but not on the backend Pandas.",failed
14600,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-top-False-dense-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14602,tests.integ.modin.frame.test_setitem,test_df_setitem_self_df_set_aligned_row_key[native_df2],TypeError: unhashable type: 'Series',failed
14604,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-top-False-dense-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14606,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-top-False-dense-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14610,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-top-False-first-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14615,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-top-False-first-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14616,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col8-row12],KeyError: 'buzz1',failed
14618,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_True-sort_False-group_keys_False-transform_returns_dataframe],KeyError: 'index',failed
14619,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-top-False-first-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14622,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-top-False-max-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14623,tests.integ.modin.frame.test_setitem,test_df_setitem_replace_column_with_single_column[a-column2],"AssertionError: DataFrame.iloc[:, 0] (column name=""a"") are different

DataFrame.iloc[:, 0] (column name=""a"") values are different (66.66667 %)
[index]: [0, 1, 2]
[left]:  [42, 42, 42]
[right]: [nan, nan, 42.0]",failed
14624,tests.integ.modin.frame.test_cache_result,test_cache_result_dataframe_complex_correctness[True],"NotImplementedError: Modin supports the method DataFrame.cache_result on the Snowflake backend, but not on the backend Pandas.",failed
14627,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-top-False-max-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14631,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-top-False-max-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14633,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-2-6-1],KeyError: 8,failed
14635,tests.integ.modin.frame.test_cache_result,test_cache_result_dataframe_complex_correctness[False],"NotImplementedError: Modin supports the method DataFrame.cache_result on the Snowflake backend, but not on the backend Pandas.",failed
14636,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-top-False-average-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14640,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_True-sort_False-group_keys_False-non_transform_returns_series],KeyError: 'index',failed
14641,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-top-False-average-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14645,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-top-False-average-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14647,tests.integ.modin.frame.test_cache_result,test_cache_result_simple[True],"NotImplementedError: Modin supports the method DataFrame.cache_result on the Snowflake backend, but not on the backend Pandas.",failed
14651,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-bottom-True-min-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14652,tests.integ.modin.frame.test_setitem,test_df_setitem_replace_column_with_single_column[a-timedelta_type],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14653,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-2-6-4],KeyError: 8,failed
14655,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-bottom-True-min-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14656,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_True-sort_False-group_keys_False-transform_returns_series],KeyError: 'index',failed
14659,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-bottom-True-min-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14661,tests.integ.modin.frame.test_cache_result,test_cache_result_simple[False],"NotImplementedError: Modin supports the method DataFrame.cache_result on the Snowflake backend, but not on the backend Pandas.",failed
14663,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-bottom-True-dense-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14664,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col8-row13],KeyError: 'buzz1',failed
14667,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-bottom-True-dense-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14668,tests.integ.modin.frame.test_cache_result,test_cache_result_post_pivot[True],"NotImplementedError: Modin supports the method DataFrame.cache_result on the Snowflake backend, but not on the backend Pandas.",failed
14670,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-bottom-True-dense-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14672,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_True-sort_False-group_keys_False-return_scalar],KeyError: 'index',failed
14676,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-bottom-True-first-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14678,tests.integ.modin.frame.test_cache_result,test_cache_result_post_pivot[False],"NotImplementedError: Modin supports the method DataFrame.cache_result on the Snowflake backend, but not on the backend Pandas.",failed
14679,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-2-6-6],KeyError: 8,failed
14681,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-bottom-True-first-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14685,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-bottom-True-first-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14688,tests.integ.modin.frame.test_cache_result,test_cache_result_post_apply[True],"NotImplementedError: Modin supports the method DataFrame.cache_result on the Snowflake backend, but not on the backend Pandas.",failed
14689,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-bottom-True-max-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14695,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-bottom-True-max-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14696,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_False-sort_True-group_keys_True-non_transform_returns_dataframe],KeyError: 'index',failed
14698,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col8-row14],KeyError: 'buzz1',failed
14699,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-bottom-True-max-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14700,tests.integ.modin.frame.test_cache_result,test_cache_result_post_apply[False],"NotImplementedError: Modin supports the method DataFrame.cache_result on the Snowflake backend, but not on the backend Pandas.",failed
14706,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-bottom-True-average-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14707,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col9-mark i],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (2, 0)
[right]: (2, 2)",failed
14711,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-bottom-True-average-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14713,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col9-row1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (2, 0)
[right]: (2, 2)",failed
14714,tests.integ.modin.frame.test_cache_result,test_cache_result_post_applymap[True],"NotImplementedError: Modin supports the method DataFrame.cache_result on the Snowflake backend, but not on the backend Pandas.",failed
14715,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_False-sort_True-group_keys_True-transform_returns_dataframe],KeyError: 'index',failed
14717,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-bottom-True-average-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14722,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col9-row2],"AssertionError: Series are different

Series length are different
[left]:  0, MultiIndex([], names=['fizz', 'buzz'])
[right]: 2, MultiIndex([('fizz1', 'buzz1'),
            ('fizz2', 'buzz2')],
           names=['fizz', 'buzz'])",failed
14723,tests.integ.modin.frame.test_cache_result,test_cache_result_post_applymap[False],"NotImplementedError: Modin supports the method DataFrame.cache_result on the Snowflake backend, but not on the backend Pandas.",failed
14724,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-bottom-False-min-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14727,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[9-1-None],KeyError: -8,failed
14730,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-bottom-False-min-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14731,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col9-row3],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (2, 0)
[right]: (2, 2)",failed
14735,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_False-sort_True-group_keys_True-non_transform_returns_series],KeyError: 'index',failed
14736,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-bottom-False-min-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14742,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-bottom-False-dense-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14745,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-bottom-False-dense-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14747,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col9-row4],"KeyError: ['viper', 'mark i', 'viper']",failed
14750,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-bottom-False-dense-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14752,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_False-sort_True-group_keys_True-transform_returns_series],KeyError: 'index',failed
14754,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-bottom-False-first-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14758,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-bottom-False-first-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14760,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-bottom-False-first-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14763,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-bottom-False-max-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14765,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-bottom-False-max-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14769,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-bottom-False-max-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14771,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col9-row5],KeyError: 'mark vi',failed
14775,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-bottom-False-average-group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14778,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_False-sort_True-group_keys_True-return_scalar],KeyError: 'index',failed
14780,tests.integ.modin.frame.test_setitem,test_df_setitem_single_column_length_mismatch[a-value0],"AssertionError: Regex pattern did not match.
 Regex: 'item to set is empty'
 Input: 'Length of values (0) does not match length of index (3)'",failed
14781,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-bottom-False-average-None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14785,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[9-1-1],KeyError: -8,failed
14786,tests.integ.modin.groupby.test_groupby_dataframe_rank,test_groupby_rank_negative[False-bottom-False-average-group-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
14804,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[9-1-4],KeyError: -8,failed
14813,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col9-row6],KeyError: 'mark vi',failed
14815,tests.integ.modin.frame.test_compare,test_different_index,"AssertionError: Regex pattern did not match.
 Regex: 'Can only compare identically-labeled objects'
 Input: 'Can only compare identically-labeled (both index and columns) DataFrame objects'",failed
14817,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_False-sort_True-group_keys_False-non_transform_returns_dataframe],KeyError: 'index',failed
14818,tests.integ.modin.frame.test_setitem,test_df_setitem_single_column_length_mismatch[a-value1],ValueError: Length of values (2) does not match length of index (3),failed
14821,tests.integ.modin.frame.test_compare,test_different_columns,"AssertionError: Regex pattern did not match.
 Regex: 'Can only compare identically-labeled objects'
 Input: 'Can only compare identically-labeled (both index and columns) DataFrame objects'",failed
14823,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[9-1-6],KeyError: -8,failed
14827,tests.integ.modin.frame.test_compare,test_align_axis[0],[XPASS(strict)] ,failed
14832,tests.integ.modin.frame.test_compare,test_align_axis[index],[XPASS(strict)] ,failed
14834,tests.integ.modin.frame.test_setitem,test_df_setitem_single_column_length_mismatch[x-value0],"AssertionError: Regex pattern did not match.
 Regex: 'item to set is empty'
 Input: 'Length of values (0) does not match length of index (3)'",failed
14838,tests.integ.modin.frame.test_compare,test_keep_shape,[XPASS(strict)] ,failed
14839,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_False-sort_True-group_keys_False-transform_returns_dataframe],KeyError: 'index',failed
14840,tests.integ.modin.frame.test_compare,test_keep_equal,[XPASS(strict)] ,failed
14844,tests.integ.modin.frame.test_compare,test_result_names,[XPASS(strict)] ,failed
14846,tests.integ.modin.frame.test_setitem,test_df_setitem_single_column_length_mismatch[x-value1],ValueError: Length of values (2) does not match length of index (3),failed
14849,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col9-row7],KeyError: 'mark vi',failed
14854,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[9-4-None],KeyError: -5,failed
14856,tests.integ.modin.frame.test_setitem,test_df_setitem_single_column_length_mismatch[x-value2],ValueError: Length of values (4) does not match length of index (3),failed
14858,tests.integ.modin.groupby.test_groupby_head_tail,test_df_groupby_head_tail_non_integer_n_negative[2.5-head],Failed: DID NOT RAISE <class 'TypeError'>,failed
14860,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_False-sort_True-group_keys_False-non_transform_returns_series],KeyError: 'index',failed
14863,tests.integ.modin.groupby.test_groupby_head_tail,test_df_groupby_head_tail_non_integer_n_negative[2.5-tail],Failed: DID NOT RAISE <class 'TypeError'>,failed
14869,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col9-row8],KeyError: 'mark vi',failed
14871,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[9-4-1],KeyError: -5,failed
14874,tests.integ.modin.groupby.test_groupby_head_tail,test_df_groupby_head_tail_non_integer_n_negative[3-head],"AssertionError: Regex pattern did not match.
 Regex: 'n must be an integer value.'
 Input: ""'>=' not supported between instances of 'str' and 'int'""",failed
14880,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col9-row9],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 0)
[right]: (6, 2)",failed
14881,tests.integ.modin.frame.test_setitem,test_df_setitem_with_unique_and_duplicate_index_values[index_values0-other_index_values0-False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['INDEX']",failed
14888,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col9-row10],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (2, 0)
[right]: (2, 2)",failed
14893,tests.integ.modin.groupby.test_groupby_head_tail,test_df_groupby_head_tail_non_integer_n_negative[3-tail],"AssertionError: Regex pattern did not match.
 Regex: 'n must be an integer value.'
 Input: ""bad operand type for unary -: 'str'""",failed
14894,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col9-row11],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (6, 0)
[right]: (6, 2)",failed
14899,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_False-sort_True-group_keys_False-transform_returns_series],KeyError: 'index',failed
14903,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[9-4-4],KeyError: -5,failed
14910,tests.integ.modin.frame.test_setitem,test_df_setitem_with_unique_and_duplicate_index_values[index_values1-other_index_values1-False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['INDEX']",failed
14911,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col9-row12],AssertionError,failed
14918,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col9-row13],AssertionError,failed
14919,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_False-sort_True-group_keys_False-return_scalar],KeyError: 'index',failed
14931,tests.integ.modin.frame.test_setitem,test_df_setitem_with_unique_and_duplicate_index_values[index_values2-other_index_values2-False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['INDEX']",failed
14933,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_False-sort_False-group_keys_True-non_transform_returns_dataframe],KeyError: 'index',failed
14944,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col9-row14],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (6, 0)
[right]: (6, 2)",failed
14947,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_False-sort_False-group_keys_True-transform_returns_dataframe],KeyError: 'index',failed
14948,tests.integ.modin.frame.test_setitem,test_df_setitem_with_unique_and_duplicate_index_values[index_values3-other_index_values3-False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['INDEX']",failed
14950,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col10-mark i],AssertionError,failed
14951,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[9-4-6],KeyError: -5,failed
14956,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col10-row1],AssertionError,failed
14960,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col10-row2],AssertionError: Got type: <class 'numpy.int64'>,failed
14962,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_False-sort_False-group_keys_True-non_transform_returns_series],KeyError: 'index',failed
14967,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col10-row3],AssertionError,failed
14971,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[9-6-None],KeyError: -3,failed
14977,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_False-sort_False-group_keys_True-transform_returns_series],KeyError: 'index',failed
14980,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col10-row4],"KeyError: ['viper', 'mark i', 'viper']",failed
14986,tests.integ.modin.frame.test_setitem,test_df_setitem_with_unique_and_duplicate_index_values[index_values4-other_index_values4-True],ValueError: cannot reindex on an axis with duplicate labels,failed
14993,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[9-6-1],KeyError: -3,failed
14998,tests.integ.modin.groupby.test_groupby_idxmax_idxmin,test_df_groupby_idxmax_idxmin_with_multiindex_df[False-0-idxmax],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
15001,tests.integ.modin.groupby.test_groupby_idxmax_idxmin,test_df_groupby_idxmax_idxmin_with_multiindex_df[False-0-idxmin],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
15003,tests.integ.modin.frame.test_setitem,test_df_setitem_with_unique_and_duplicate_index_values[index_values5-other_index_values5-False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['INDEX']",failed
15005,tests.integ.modin.groupby.test_groupby_idxmax_idxmin,test_df_groupby_idxmax_idxmin_with_multiindex_df[False-1-idxmax],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
15006,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col10-row5],KeyError: 'mark vi',failed
15009,tests.integ.modin.groupby.test_groupby_idxmax_idxmin,test_df_groupby_idxmax_idxmin_with_multiindex_df[False-1-idxmin],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
15013,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[9-6-4],KeyError: -3,failed
15015,tests.integ.modin.groupby.test_groupby_idxmax_idxmin,test_df_groupby_idxmax_idxmin_with_multiindex_df[True-0-idxmax],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
15018,tests.integ.modin.groupby.test_groupby_idxmax_idxmin,test_df_groupby_idxmax_idxmin_with_multiindex_df[True-0-idxmin],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
15020,tests.integ.modin.groupby.test_groupby_idxmax_idxmin,test_df_groupby_idxmax_idxmin_with_multiindex_df[True-1-idxmax],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
15022,tests.integ.modin.frame.test_setitem,test_df_setitem_with_unique_and_duplicate_index_values[index_values6-other_index_values6-False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['INDEX']",failed
15024,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_False-sort_False-group_keys_True-return_scalar],KeyError: 'index',failed
15025,tests.integ.modin.groupby.test_groupby_idxmax_idxmin,test_df_groupby_idxmax_idxmin_with_multiindex_df[True-1-idxmin],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
15029,tests.integ.modin.groupby.test_groupby_idxmax_idxmin,test_df_groupby_idxmax_idxmin_on_axis_1_negative[idxmax],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
15032,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[9-6-6],KeyError: -3,failed
15035,tests.integ.modin.groupby.test_groupby_idxmax_idxmin,test_df_groupby_idxmax_idxmin_on_axis_1_negative[idxmin],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
15040,tests.integ.modin.frame.test_setitem,test_df_setitem_with_unique_and_duplicate_index_values[index_values7-other_index_values7-False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['INDEX']",failed
15042,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_False-sort_False-group_keys_False-non_transform_returns_dataframe],KeyError: 'index',failed
15053,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col10-row6],KeyError: 'mark vi',failed
15060,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_False-sort_False-group_keys_False-transform_returns_dataframe],KeyError: 'index',failed
15067,tests.integ.modin.groupby.test_groupby_idxmax_idxmin,test_df_groupby_idxmax_idxmin_on_groupby_axis_1_unimplemented[idxmax],AttributeError: 'int' object has no attribute 'startswith',failed
15073,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_False-sort_False-group_keys_False-non_transform_returns_series],KeyError: 'index',failed
15074,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col10-row7],KeyError: 'mark vi',failed
15075,tests.integ.modin.groupby.test_groupby_idxmax_idxmin,test_df_groupby_idxmax_idxmin_on_groupby_axis_1_unimplemented[idxmin],AttributeError: 'int' object has no attribute 'startswith',failed
15087,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_False-sort_False-group_keys_False-transform_returns_series],KeyError: 'index',failed
15090,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-9-1-None],KeyError: 10,failed
15094,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col10-row8],KeyError: 'mark vi',failed
15096,tests.integ.modin.frame.test_setitem,test_df_setitem_with_unique_and_duplicate_index_values[index_values8-other_index_values8-True],ValueError: cannot reindex on an axis with duplicate labels,failed
15100,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col10-row9],AssertionError,failed
15102,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_True-dropna_False-sort_False-group_keys_False-return_scalar],KeyError: 'index',failed
15106,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col10-row10],AssertionError,failed
15107,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-9-1-1],KeyError: 10,failed
15113,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col10-row11],AssertionError,failed
15115,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_True-sort_True-group_keys_True-non_transform_returns_dataframe],KeyError: 'index',failed
15117,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col10-row12],AssertionError: Got type: <class 'numpy.int64'>,failed
15121,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col10-row13],AssertionError: Got type: <class 'numpy.int64'>,failed
15123,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_True-sort_True-group_keys_True-transform_returns_dataframe],KeyError: 'index',failed
15126,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-9-1-4],KeyError: 10,failed
15128,tests.integ.modin.frame.test_setitem,test_df_setitem_with_unique_and_duplicate_index_values[index_values9-other_index_values9-True],ValueError: cannot reindex on an axis with duplicate labels,failed
15131,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col10-row14],AssertionError,failed
15132,tests.integ.modin.groupby.test_groupby_named_agg,test_invalid_func_with_named_agg_errors,AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'ValueError'>,failed
15136,tests.integ.modin.frame.test_create_or_replace_dynamic_table,test_create_or_replace_dynamic_table_enforce_ordering_raises,UnboundLocalError: local variable 'dynamic_table_name' referenced before assignment,failed
15137,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col11-mark i],"AssertionError: DataFrame.index are different

DataFrame.index levels are different
[left]:  2, MultiIndex([('mark i',  'mark v'),
            ('mark i', 'mark vi')],
           )
[right]: 1, Index(['mark v', 'mark vi'], dtype='object')",failed
15141,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_True-sort_True-group_keys_True-non_transform_returns_series],KeyError: 'index',failed
15145,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-9-1-6],KeyError: 10,failed
15152,tests.integ.modin.groupby.test_groupby_named_agg,test_named_agg_output_column_order_with_dup_columns,AttributeError: 'DataFrame' object has no attribute 'name',failed
15153,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_True-sort_True-group_keys_True-transform_returns_series],KeyError: 'index',failed
15159,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-9-4-None],KeyError: 13,failed
15162,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col11-row1],"AssertionError: DataFrame.index are different

DataFrame.index levels are different
[left]:  2, MultiIndex([('mark i',  'mark v'),
            ('mark i', 'mark vi')],
           )
[right]: 1, Index(['mark v', 'mark vi'], dtype='object')",failed
15163,tests.integ.modin.frame.test_setitem,test_df_setitem_with_unique_and_duplicate_index_values[index_values10-other_index_values10-True],ValueError: cannot reindex on an axis with duplicate labels,failed
15168,tests.integ.modin.frame.test_merge,test_merge_on_index_columns[left-True-left_i],KeyError: 'left_i',failed
15179,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col11-row4],"KeyError: ['viper', 'mark i', 'viper']",failed
15183,tests.integ.modin.groupby.test_groupby_named_agg,test_named_groupby_agg_with_incorrect_func[True-True],"AssertionError: Got Snowpark pandas Exception type <class 'pandas.errors.SpecificationError'>, but pandas Exception type <class 'KeyError'> was expected.
 Snowpark pandas exception: <ExceptionInfo SpecificationError('nested renamer is not supported') tblen=5>
pandas exception: <ExceptionInfo KeyError(""Column(s) ['b'] do not exist"") tblen=8>",failed
15185,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_True-sort_True-group_keys_True-return_scalar],KeyError: 'index',failed
15186,tests.integ.modin.frame.test_merge,test_merge_on_index_columns[left-True-right_i],KeyError: 'right_i',failed
15190,tests.integ.modin.frame.test_create_or_replace_dynamic_table,test_create_or_replace_dynamic_table_no_enforce_ordering,"NotImplementedError: Modin supports the method DataFrame.create_or_replace_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
15191,tests.integ.modin.groupby.test_groupby_named_agg,test_named_groupby_agg_with_incorrect_func[True-False],"AssertionError: Got Snowpark pandas Exception type <class 'pandas.errors.SpecificationError'>, but pandas Exception type <class 'KeyError'> was expected.
 Snowpark pandas exception: <ExceptionInfo SpecificationError('nested renamer is not supported') tblen=5>
pandas exception: <ExceptionInfo KeyError(""Column(s) ['b'] do not exist"") tblen=8>",failed
15196,tests.integ.modin.groupby.test_groupby_named_agg,test_named_groupby_agg_with_incorrect_func[False-True],"AssertionError: Got Snowpark pandas Exception type <class 'pandas.errors.SpecificationError'>, but pandas Exception type <class 'KeyError'> was expected.
 Snowpark pandas exception: <ExceptionInfo SpecificationError('nested renamer is not supported') tblen=5>
pandas exception: <ExceptionInfo KeyError(""Column(s) ['b'] do not exist"") tblen=8>",failed
15197,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-9-4-1],KeyError: 13,failed
15198,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col11-row5],KeyError: 'mark vi',failed
15201,tests.integ.modin.groupby.test_groupby_named_agg,test_named_groupby_agg_with_incorrect_func[False-False],"AssertionError: Got Snowpark pandas Exception type <class 'pandas.errors.SpecificationError'>, but pandas Exception type <class 'KeyError'> was expected.
 Snowpark pandas exception: <ExceptionInfo SpecificationError('nested renamer is not supported') tblen=5>
pandas exception: <ExceptionInfo KeyError(""Column(s) ['b'] do not exist"") tblen=8>",failed
15203,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_True-sort_True-group_keys_False-non_transform_returns_dataframe],KeyError: 'index',failed
15206,tests.integ.modin.frame.test_merge,test_merge_on_index_columns[left-False-left_i],KeyError: 'left_i',failed
15212,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-9-4-4],KeyError: 13,failed
15214,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_True-sort_True-group_keys_False-transform_returns_dataframe],KeyError: 'index',failed
15215,tests.integ.modin.frame.test_setitem,test_df_setitem_with_unique_and_duplicate_index_values[index_values11-other_index_values11-True],ValueError: cannot reindex on an axis with duplicate labels,failed
15217,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col11-row6],KeyError: 'mark vi',failed
15222,tests.integ.modin.frame.test_setitem,test_df_setitem_full_columns[key0-value0],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 4)
[right]: (3, 3)",failed
15226,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_True-sort_True-group_keys_False-non_transform_returns_series],KeyError: 'index',failed
15228,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-9-4-6],KeyError: 13,failed
15230,tests.integ.modin.frame.test_create_or_replace_dynamic_table,test_create_or_replace_dynamic_table_multiple_sessions_no_enforce_ordering,"NotImplementedError: Modin supports the method DataFrame.create_or_replace_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
15233,tests.integ.modin.groupby.test_groupby_negative,test_invalid_by[invalid_by0],Failed: DID NOT RAISE <class 'Exception'>,failed
15234,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col11-row7],KeyError: 'mark vi',failed
15238,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_True-sort_True-group_keys_False-transform_returns_series],KeyError: 'index',failed
15241,tests.integ.modin.frame.test_merge,test_merge_on_index_columns[left-False-right_i],KeyError: 'right_i',failed
15242,tests.integ.modin.frame.test_setitem,test_df_setitem_full_columns[key3-value3],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 4)
[right]: (3, 3)",failed
15245,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-9-6-None],KeyError: 15,failed
15250,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_True-sort_True-group_keys_False-return_scalar],KeyError: 'index',failed
15252,tests.integ.modin.frame.test_setitem,test_df_setitem_lambda_dataframe[data0-2-8],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 3)
[right]: (3, 2)",failed
15254,tests.integ.modin.frame.test_setitem,test_df_setitem_lambda_dataframe[data1-comparison_value1-set_value1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 3)
[right]: (3, 2)",failed
15257,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-9-6-1],KeyError: 15,failed
15258,tests.integ.modin.groupby.test_groupby_negative,test_invalid_by[None],"AssertionError: Got Snowpark pandas Exception type <class 'KeyError'>, but pandas Exception type <class 'TypeError'> was expected.
 Snowpark pandas exception: <ExceptionInfo KeyError('None') tblen=15>
pandas exception: <ExceptionInfo TypeError(""You have to supply one of 'by' and 'level'"") tblen=3>",failed
15259,tests.integ.modin.frame.test_merge,test_merge_on_index_columns[inner-True-left_i],KeyError: 'left_i',failed
15261,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_True-sort_False-group_keys_True-non_transform_returns_dataframe],KeyError: 'index',failed
15262,tests.integ.modin.groupby.test_groupby_negative,test_invalid_by[invalid_by2],Failed: DID NOT RAISE <class 'Exception'>,failed
15268,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col11-row8],KeyError: 'mark vi',failed
15271,tests.integ.modin.groupby.test_groupby_negative,test_invalid_by[invalid_by5],"AssertionError: Snowpark pandas Exception ""('col2', 'col3')"" doesn't match pandas Exception ('col2', 'col3')",failed
15273,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col11-row9],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 2)
[right]: (6, 2)",failed
15276,tests.integ.modin.groupby.test_groupby_negative,test_invalid_none_label,"AssertionError: Got Snowpark pandas Exception type <class 'KeyError'>, but pandas Exception type <class 'TypeError'> was expected.
 Snowpark pandas exception: <ExceptionInfo KeyError('col1') tblen=5>
pandas exception: <ExceptionInfo TypeError(""'NoneType' object is not callable"") tblen=10>",failed
15278,tests.integ.modin.groupby.test_groupby_default2pandas,test_groupby_axis_1[x],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
15280,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_True-sort_False-group_keys_True-transform_returns_dataframe],KeyError: 'index',failed
15282,tests.integ.modin.groupby.test_groupby_default2pandas,test_groupby_axis_1[group_name1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
15283,tests.integ.modin.frame.test_merge,test_merge_on_index_columns[inner-True-right_i],KeyError: 'right_i',failed
15284,tests.integ.modin.frame.test_create_or_replace_dynamic_table,test_create_or_replace_dynamic_table_index[None-True],"NotImplementedError: Modin supports the method DataFrame.create_or_replace_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
15285,tests.integ.modin.groupby.test_groupby_negative,test_pandas_series_by,KeyError: 0,failed
15286,tests.integ.modin.groupby.test_groupby_default2pandas,test_groupby_axis_1_mi[x],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
15288,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col11-row12],AssertionError,failed
15289,tests.integ.modin.groupby.test_groupby_default2pandas,test_groupby_axis_1_mi[group_name1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
15291,tests.integ.modin.groupby.test_groupby_default2pandas,test_groupby_with_callable_and_array[<lambda>],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
15292,tests.integ.modin.frame.test_setitem,test_df_setitem_optimized,TypeError: unhashable type: 'Series',failed
15293,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col11-row13],AssertionError,failed
15294,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_True-sort_False-group_keys_True-non_transform_returns_series],KeyError: 'index',failed
15297,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-9-6-4],KeyError: 15,failed
15298,tests.integ.modin.groupby.test_groupby_default2pandas,test_groupby_with_callable_and_array[by1],KeyError: <function <lambda> at 0x329919750>,failed
15300,tests.integ.modin.groupby.test_groupby_negative,test_groupby_numeric_only_func_invalid_non_numeric_column[data0-Timestamp-<lambda>-sum],TypeError: datetime64 type does not support sum operations,failed
15302,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col12-mark i],AssertionError,failed
15303,tests.integ.modin.groupby.test_groupby_negative,test_groupby_numeric_only_func_invalid_non_numeric_column[data0-Timestamp-<lambda>-mean],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
15304,tests.integ.modin.groupby.test_groupby_default2pandas,test_groupby_with_callable_and_array[by2],KeyError: <function <lambda> at 0x3299197e0>,failed
15305,tests.integ.modin.frame.test_merge,test_merge_on_index_columns[inner-False-left_i],KeyError: 'left_i',failed
15308,tests.integ.modin.groupby.test_groupby_negative,test_groupby_numeric_only_func_invalid_non_numeric_column[data0-Timestamp-<lambda>-median],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
15309,tests.integ.modin.groupby.test_groupby_default2pandas,test_timeseries_groupby_with_callable,Failed: DID NOT RAISE <class 'AttributeError'>,failed
15310,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col12-row1],AssertionError,failed
15311,tests.integ.modin.groupby.test_groupby_negative,test_groupby_numeric_only_func_invalid_non_numeric_column[data0-Timestamp-<lambda>-stddev],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
15313,tests.integ.modin.groupby.test_groupby_default2pandas,test_groupby_with_numpy_array,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
15314,tests.integ.modin.frame.test_setitem,test_df_setitem_bool_2d_key_array_value[df_key-key_has_less_cols],"AssertionError: DataFrame.iloc[:, 2] (column name=""c"") are different

DataFrame.iloc[:, 2] (column name=""c"") values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [-7, -8, -8]
[right]: [7, 8, 8]",failed
15315,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col12-row2],AssertionError: Got type: <class 'numpy.int64'>,failed
15317,tests.integ.modin.groupby.test_groupby_default2pandas,test_groupby_series_with_numpy_array[by_list0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
15318,tests.integ.modin.frame.test_loc,test_df_loc_get_key_slice_with_unordered_index[-9-6-6],KeyError: 15,failed
15320,tests.integ.modin.groupby.test_groupby_default2pandas,test_groupby_series_with_numpy_array[by_list1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
15323,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col12-row3],AssertionError,failed
15326,tests.integ.modin.groupby.test_groupby_default2pandas,test_groupby_with_external_series,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
15328,tests.integ.modin.frame.test_setitem,test_df_setitem_bool_2d_key_array_value[df_key-key_has_less_rows],"AssertionError: DataFrame.iloc[:, 0] (column name=""a"") are different

DataFrame.iloc[:, 0] (column name=""a"") values are different (33.33333 %)
[index]: [0, 1, 2]
[left]:  [1, -2, -3]
[right]: [1, -2, 3]",failed
15330,tests.integ.modin.groupby.test_groupby_negative,test_groupby_numeric_only_func_invalid_non_numeric_column[data0-Timestamp-<lambda>-variance],TypeError: datetime64 type does not support var operations,failed
15332,tests.integ.modin.groupby.test_groupby_default2pandas,test_groupby_agg_unsupported_function_SNOW_1305464[numpy_aggregation_function],Failed: DID NOT RAISE <class 'AttributeError'>,failed
15334,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_True-sort_False-group_keys_True-transform_returns_series],KeyError: 'index',failed
15335,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col12-row4],"KeyError: ['viper', 'mark i', 'viper']",failed
15337,tests.integ.modin.groupby.test_groupby_negative,test_groupby_numeric_only_func_invalid_non_numeric_column[data0-Timestamp-<lambda>-stddev_pop],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
15338,tests.integ.modin.groupby.test_groupby_default2pandas,test_groupby_agg_unsupported_function_SNOW_1305464[user_defined_function],Failed: DID NOT RAISE <class 'AttributeError'>,failed
15340,tests.integ.modin.frame.test_setitem,test_df_setitem_bool_2d_key_array_value[array_key-key_has_more_cols],ValueError: Array must be same shape as DataFrame,failed
15341,tests.integ.modin.groupby.test_groupby_default2pandas,test_groupby_agg_unsupported_function_SNOW_1305464[list_with_user_defined_function_and_string],Failed: DID NOT RAISE <class 'AttributeError'>,failed
15342,tests.integ.modin.frame.test_create_or_replace_dynamic_table,test_create_or_replace_dynamic_table_index[None-False],"NotImplementedError: Modin supports the method DataFrame.create_or_replace_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
15344,tests.integ.modin.groupby.test_groupby_default2pandas,test_groupby_agg_unsupported_function_SNOW_1305464[tuple_with_user_defined_function_and_string],Failed: DID NOT RAISE <class 'AttributeError'>,failed
15345,tests.integ.modin.frame.test_setitem,test_df_setitem_bool_2d_key_array_value[array_key-key_has_less_cols],ValueError: Array must be same shape as DataFrame,failed
15347,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_True-sort_False-group_keys_True-return_scalar],KeyError: 'index',failed
15348,tests.integ.modin.frame.test_merge,test_merge_on_index_columns[inner-False-right_i],KeyError: 'right_i',failed
15349,tests.integ.modin.groupby.test_groupby_default2pandas,test_groupby_agg_unsupported_function_SNOW_1305464[set_with_user_defined_function_and_string],Failed: DID NOT RAISE <class 'AttributeError'>,failed
15351,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--1-1-None],KeyError: 2,failed
15352,tests.integ.modin.groupby.test_groupby_negative,test_groupby_numeric_only_func_invalid_non_numeric_column[data0-Timestamp-<lambda>-var_pop],TypeError: datetime64 type does not support var operations,failed
15353,tests.integ.modin.frame.test_setitem,test_df_setitem_bool_2d_key_array_value[array_key-key_has_more_rows],ValueError: Array must be same shape as DataFrame,failed
15355,tests.integ.modin.groupby.test_groupby_default2pandas,test_groupby_agg_unsupported_function_SNOW_1305464[tuple_with_builtins_and_native_pandas_function],Failed: DID NOT RAISE <class 'AttributeError'>,failed
15356,tests.integ.modin.groupby.test_groupby_negative,test_groupby_numeric_only_func_invalid_non_numeric_column[data1-Array-<lambda>-sum],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
15358,tests.integ.modin.groupby.test_groupby_default2pandas,test_groupby_agg_unsupported_function_SNOW_1305464[dict],Failed: DID NOT RAISE <class 'AttributeError'>,failed
15359,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_True-sort_False-group_keys_False-non_transform_returns_dataframe],KeyError: 'index',failed
15360,tests.integ.modin.groupby.test_groupby_default2pandas,test_groupby_agg_unsupported_function_SNOW_1305464[named_agg],Failed: DID NOT RAISE <class 'AttributeError'>,failed
15361,tests.integ.modin.frame.test_merge,test_merge_on_index_columns[right-True-left_i],KeyError: 'left_i',failed
15362,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--1-1-1],KeyError: 2,failed
15363,tests.integ.modin.groupby.test_groupby_default2pandas,test_groupby_level_mapper[mapper0-0],KeyError: 'foo',failed
15364,tests.integ.modin.groupby.test_groupby_default2pandas,test_groupby_level_mapper[mapper1-1],KeyError: 'one',failed
15365,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_True-sort_False-group_keys_False-transform_returns_dataframe],KeyError: 'index',failed
15366,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col12-row5],KeyError: 'mark vi',failed
15367,tests.integ.modin.groupby.test_groupby_default2pandas,test_std_var_ddof_unsupported[col1-<lambda>-std],Failed: DID NOT RAISE <class 'AttributeError'>,failed
15368,tests.integ.modin.groupby.test_groupby_default2pandas,test_std_var_ddof_unsupported[col1-<lambda>-var],Failed: DID NOT RAISE <class 'AttributeError'>,failed
15369,tests.integ.modin.frame.test_setitem,test_df_setitem_bool_2d_key_array_value[array_key-key_has_less_rows],ValueError: Array must be same shape as DataFrame,failed
15370,tests.integ.modin.groupby.test_groupby_default2pandas,test_std_var_ddof_unsupported[by1-<lambda>-std],Failed: DID NOT RAISE <class 'AttributeError'>,failed
15371,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--1-1-4],KeyError: 2,failed
15372,tests.integ.modin.groupby.test_groupby_default2pandas,test_std_var_ddof_unsupported[by1-<lambda>-var],Failed: DID NOT RAISE <class 'AttributeError'>,failed
15374,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_True-sort_False-group_keys_False-non_transform_returns_series],KeyError: 'index',failed
15375,tests.integ.modin.groupby.test_groupby_default2pandas,test_groupby_ngroups_axis_1,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
15376,tests.integ.modin.frame.test_merge,test_merge_on_index_columns[right-True-right_i],KeyError: 'right_i',failed
15377,tests.integ.modin.groupby.test_groupby_default2pandas,test_groupby_ngroups_axis_1_mi,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
15379,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col12-row6],KeyError: 'mark vi',failed
15380,tests.integ.modin.frame.test_create_or_replace_dynamic_table,test_create_or_replace_dynamic_table_index[index_labels1-True],"NotImplementedError: Modin supports the method DataFrame.create_or_replace_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
15381,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_True-sort_False-group_keys_False-transform_returns_series],KeyError: 'index',failed
15382,tests.integ.modin.groupby.test_groupby_negative,test_groupby_numeric_only_func_invalid_non_numeric_column[data1-Array-<lambda>-mean],"TypeError: agg function failed [how->mean,dtype->object]",failed
15383,tests.integ.modin.groupby.test_groupby_default2pandas,test_non_callable_func,TypeError: 'int' object is not callable,failed
15384,tests.integ.modin.frame.test_merge,test_merge_on_index_columns[right-False-left_i],KeyError: 'left_i',failed
15385,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col12-row7],KeyError: 'mark vi',failed
15386,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_True-sort_False-group_keys_False-return_scalar],KeyError: 'index',failed
15387,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--1-1-6],KeyError: 2,failed
15389,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--1-4-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (1, 8)
[right]: (4, 8)",failed
15390,tests.integ.modin.groupby.test_groupby_negative,test_groupby_numeric_only_func_invalid_non_numeric_column[data1-Array-<lambda>-median],"TypeError: agg function failed [how->median,dtype->object]",failed
15392,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_False-sort_True-group_keys_True-non_transform_returns_dataframe],KeyError: 'index',failed
15393,tests.integ.modin.groupby.test_groupby_negative,test_groupby_agg_invalid_min_count[min-5.8],TypeError: 'float' object cannot be interpreted as an integer,failed
15394,tests.integ.modin.frame.test_merge,test_merge_on_index_columns[right-False-right_i],KeyError: 'right_i',failed
15396,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--1-4-1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 8)
[right]: (3, 8)",failed
15398,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col12-row8],KeyError: 'mark vi',failed
15402,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--1-4-4],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 8)
[right]: (1, 8)",failed
15405,tests.integ.modin.groupby.test_groupby_negative,test_groupby_numeric_only_func_invalid_non_numeric_column[data1-Array-<lambda>-stddev],ValueError: setting an array element with a sequence.,failed
15406,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_False-sort_True-group_keys_True-transform_returns_dataframe],KeyError: 'index',failed
15409,tests.integ.modin.groupby.test_groupby_negative,test_groupby_agg_invalid_min_count[min-3.0],TypeError: 'float' object cannot be interpreted as an integer,failed
15410,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--1-4-6],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 8)
[right]: (2, 8)",failed
15413,tests.integ.modin.frame.test_create_or_replace_dynamic_table,test_create_or_replace_dynamic_table_index[index_labels1-False],"NotImplementedError: Modin supports the method DataFrame.create_or_replace_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
15418,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_False-sort_True-group_keys_True-non_transform_returns_series],KeyError: 'index',failed
15419,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col12-row9],AssertionError,failed
15423,tests.integ.modin.groupby.test_groupby_negative,test_groupby_agg_invalid_min_count[max-TEST],TypeError: 'str' object cannot be interpreted as an integer,failed
15425,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col12-row10],AssertionError,failed
15426,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--1-6-None],KeyError: 7,failed
15431,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col12-row11],AssertionError,failed
15433,tests.integ.modin.frame.test_merge,test_merge_on_index_columns[outer-True-left_i],KeyError: 'left_i',failed
15436,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col12-row12],AssertionError: Got type: <class 'numpy.int64'>,failed
15439,tests.integ.modin.groupby.test_groupby_negative,test_groupby_agg_invalid_min_count[max-5.8],TypeError: 'float' object cannot be interpreted as an integer,failed
15442,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--1-6-1],KeyError: 7,failed
15443,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col12-row13],AssertionError: Got type: <class 'numpy.int64'>,failed
15448,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col12-row14],AssertionError,failed
15449,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_False-sort_True-group_keys_True-transform_returns_series],KeyError: 'index',failed
15452,tests.integ.modin.groupby.test_groupby_negative,test_groupby_numeric_only_func_invalid_non_numeric_column[data1-Array-<lambda>-variance],"TypeError: agg function failed [how->var,dtype->object]",failed
15453,tests.integ.modin.frame.test_merge,test_merge_on_index_columns[outer-True-right_i],KeyError: 'right_i',failed
15455,tests.integ.modin.groupby.test_groupby_negative,test_groupby_agg_invalid_min_count[max-3.0],TypeError: 'float' object cannot be interpreted as an integer,failed
15456,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col13-mark i],AssertionError,failed
15461,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--1-6-4],KeyError: 7,failed
15462,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col13-row1],AssertionError,failed
15464,tests.integ.modin.frame.test_create_or_replace_dynamic_table,test_create_or_replace_dynamic_table_multiindex,"NotImplementedError: Modin supports the method DataFrame.create_or_replace_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
15466,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_False-sort_True-group_keys_True-return_scalar],KeyError: 'index',failed
15468,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col13-row2],AssertionError: Got type: <class 'numpy.int64'>,failed
15470,tests.integ.modin.groupby.test_groupby_negative,test_groupby_numeric_only_func_invalid_non_numeric_column[data1-Array-<lambda>-stddev_pop],ValueError: setting an array element with a sequence.,failed
15473,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col13-row3],AssertionError,failed
15476,tests.integ.modin.frame.test_merge,test_merge_on_index_columns[outer-False-left_i],KeyError: 'left_i',failed
15477,tests.integ.modin.frame.test_create_or_replace_view,test_create_or_replace_view_basic,"NotImplementedError: Modin supports the method DataFrame.create_or_replace_view on the Snowflake backend, but not on the backend Pandas.",failed
15478,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_False-sort_True-group_keys_False-non_transform_returns_dataframe],KeyError: 'index',failed
15485,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col13-row4],"KeyError: ['viper', 'mark i', 'viper']",failed
15488,tests.integ.modin.groupby.test_groupby_negative,test_groupby_agg_invalid_min_count[sum-TEST],TypeError: 'str' object cannot be interpreted as an integer,failed
15490,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_False-sort_True-group_keys_False-transform_returns_dataframe],KeyError: 'index',failed
15493,tests.integ.modin.groupby.test_groupby_negative,test_groupby_numeric_only_func_invalid_non_numeric_column[data1-Array-<lambda>-var_pop],"TypeError: agg function failed [how->var,dtype->object]",failed
15498,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--1-6-6],KeyError: 7,failed
15500,tests.integ.modin.frame.test_merge,test_merge_on_index_columns[outer-False-right_i],KeyError: 'right_i',failed
15503,tests.integ.modin.groupby.test_groupby_negative,test_groupby_agg_invalid_min_count[sum-5.8],TypeError: 'float' object cannot be interpreted as an integer,failed
15507,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_False-sort_True-group_keys_False-non_transform_returns_series],KeyError: 'index',failed
15509,tests.integ.modin.groupby.test_groupby_negative,test_groupby_numeric_only_func_invalid_non_numeric_column[data2-Object-<lambda>-sum],TypeError: unsupported operand type(s) for +: 'dict' and 'dict',failed
15516,tests.integ.modin.frame.test_merge,test_join_type_mismatch[index20-index11],"AssertionError: DataFrame.index are different

DataFrame.index values are different (66.66667 %)
[left]:  Index([1.5, 8.0, 7.0], dtype='float64')
[right]: Index([1.5, 7.0, 8.0], dtype='float64')
At positional index 1, first diff: 8.0 != 7.0",failed
15519,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_False-sort_True-group_keys_False-transform_returns_series],KeyError: 'index',failed
15522,tests.integ.modin.groupby.test_groupby_negative,test_groupby_agg_invalid_min_count[sum-3.0],TypeError: 'float' object cannot be interpreted as an integer,failed
15523,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col13-row5],KeyError: 'mark vi',failed
15530,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--2-1-None],KeyError: 3,failed
15532,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_False-sort_True-group_keys_False-return_scalar],KeyError: 'index',failed
15540,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col13-row6],KeyError: 'mark vi',failed
15543,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_False-sort_False-group_keys_True-non_transform_returns_dataframe],KeyError: 'index',failed
15546,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--2-1-1],KeyError: 3,failed
15547,tests.integ.modin.frame.test_merge,test_join_type_mismatch[index20-index12],pandas.errors.InvalidIndexError: Reindexing only valid with uniquely valued Index objects,failed
15553,tests.integ.modin.frame.test_merge,test_join_type_mismatch[index21-index10],"AssertionError: DataFrame.index are different

DataFrame.index values are different (100.0 %)
[left]:  Index([3.0, 4.0, 1.5], dtype='float64')
[right]: Index([1.5, 3.0, 4.0], dtype='float64')
At positional index 0, first diff: 3.0 != 1.5",failed
15554,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_False-sort_False-group_keys_True-transform_returns_dataframe],KeyError: 'index',failed
15557,tests.integ.modin.groupby.test_groupby_negative,test_groupby_numeric_only_func_invalid_non_numeric_column[data2-Object-<lambda>-mean],"TypeError: agg function failed [how->mean,dtype->object]",failed
15560,tests.integ.modin.frame.test_merge,test_join_type_mismatch[index21-index11],"AssertionError: DataFrame.index are different

DataFrame.index values are different (66.66667 %)
[left]:  Index([1.5, 8.0, 3.0], dtype='float64')
[right]: Index([1.5, 3.0, 8.0], dtype='float64')
At positional index 1, first diff: 8.0 != 3.0",failed
15561,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col13-row7],KeyError: 'mark vi',failed
15564,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--2-1-4],KeyError: 3,failed
15565,tests.integ.modin.groupby.test_groupby_ngroups,test_groupby_sort_multiindex_series[a],TypeError: Categorical input must be list-like,failed
15572,tests.integ.modin.frame.test_merge,test_join_type_mismatch[index21-index12],pandas.errors.InvalidIndexError: Reindexing only valid with uniquely valued Index objects,failed
15575,tests.integ.modin.groupby.test_groupby_ngroups,test_groupby_sort_multiindex_series[b],TypeError: Categorical input must be list-like,failed
15576,tests.integ.modin.groupby.test_groupby_negative,test_groupby_numeric_only_func_invalid_non_numeric_column[data2-Object-<lambda>-median],"TypeError: agg function failed [how->median,dtype->object]",failed
15579,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--2-1-6],KeyError: 3,failed
15580,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col13-row8],KeyError: 'mark vi',failed
15587,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col13-row9],AssertionError,failed
15588,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_False-sort_False-group_keys_True-non_transform_returns_series],KeyError: 'index',failed
15589,tests.integ.modin.frame.test_merge,test_join_type_mismatch[index22-index10],pandas.errors.InvalidIndexError: Reindexing only valid with uniquely valued Index objects,failed
15592,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--2-4-1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (1, 8)
[right]: (2, 8)",failed
15595,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col13-row10],AssertionError,failed
15596,tests.integ.modin.groupby.test_groupby_ngroups,test_groupby_ngroups_series_nan,TypeError: Categorical input must be list-like,failed
15598,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--2-4-4],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 8)
[right]: (1, 8)",failed
15599,tests.integ.modin.groupby.test_groupby_negative,test_groupby_numeric_only_func_invalid_non_numeric_column[data2-Object-<lambda>-stddev],"TypeError: float() argument must be a string or a real number, not 'dict'",failed
15603,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col13-row11],AssertionError,failed
15604,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_False-sort_False-group_keys_True-transform_returns_series],KeyError: 'index',failed
15607,tests.integ.modin.frame.test_merge,test_join_type_mismatch[index22-index11],pandas.errors.InvalidIndexError: Reindexing only valid with uniquely valued Index objects,failed
15612,tests.integ.modin.frame.test_merge,test_join_type_mismatch[index22-index12],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (2, 2)
[right]: (4, 2)",failed
15616,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_False-sort_False-group_keys_True-return_scalar],KeyError: 'index',failed
15618,tests.integ.modin.frame.test_merge,test_join_type_mismatch_negative[index10-index20],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
15619,tests.integ.modin.groupby.test_groupby_negative,test_groupby_numeric_only_func_invalid_non_numeric_column[data2-Object-<lambda>-variance],"TypeError: agg function failed [how->var,dtype->object]",failed
15623,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col13-row12],AssertionError: Got type: <class 'numpy.int64'>,failed
15624,tests.integ.modin.frame.test_create_or_replace_view,test_create_or_replace_view_multiple_sessions_enforce_ordering_raises,UnboundLocalError: local variable 'view_name' referenced before assignment,failed
15625,tests.integ.modin.frame.test_merge,test_join_type_mismatch_negative[index11-index21],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
15628,tests.integ.modin.groupby.test_groupby_ngroups,test_groupby_ngroups_series_nan_all,TypeError: Categorical input must be list-like,failed
15631,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col13-row13],AssertionError: Got type: <class 'numpy.int64'>,failed
15632,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_False-sort_False-group_keys_False-non_transform_returns_dataframe],KeyError: 'index',failed
15633,tests.integ.modin.frame.test_merge,test_join_type_mismatch_negative[index12-index22],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
15637,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_non_boolean_list_tuple_key[col13-row14],AssertionError,failed
15639,tests.integ.modin.frame.test_merge,test_join_type_mismatch_diff_with_native_pandas[index10-index20-expected_res0],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 2)
[right]: (3, 2)",failed
15640,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--2-6-None],KeyError: 8,failed
15643,tests.integ.modin.groupby.test_groupby_ngroups,test_groupby_ngroups_series,TypeError: Categorical input must be list-like,failed
15645,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_False-sort_False-group_keys_False-transform_returns_dataframe],KeyError: 'index',failed
15647,tests.integ.modin.frame.test_merge,test_join_type_mismatch_diff_with_native_pandas[index11-index21-expected_res1],"AssertionError: DataFrame.index are different

Attribute ""inferred_type"" are different
[left]:  mixed
[right]: string",failed
15652,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_boolean_series_row_key,KeyError: False,failed
15660,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--2-6-1],KeyError: 8,failed
15665,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_False-sort_False-group_keys_False-non_transform_returns_series],KeyError: 'index',failed
15666,tests.integ.modin.groupby.test_groupby_negative,test_groupby_numeric_only_func_invalid_non_numeric_column[data2-Object-<lambda>-stddev_pop],"TypeError: float() argument must be a string or a real number, not 'dict'",failed
15669,tests.integ.modin.frame.test_loc,test_mi_df_loc_get_boolean_series_col_key,KeyError: False,failed
15676,tests.integ.modin.groupby.test_groupby_ngroups,test_groupby_ngroups_nan[by2],ValueError: Grouper for 'c1' not 1-dimensional,failed
15680,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--2-6-4],KeyError: 8,failed
15681,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_False-sort_False-group_keys_False-transform_returns_series],KeyError: 'index',failed
15695,tests.integ.modin.groupby.test_groupby_negative,test_groupby_numeric_only_func_invalid_non_numeric_column[data2-Object-<lambda>-var_pop],"TypeError: agg function failed [how->var,dtype->object]",failed
15697,tests.integ.modin.groupby.test_groupby_apply,test_dataframe_groupby_getitem[index-include_groups_False-dropna_False-sort_False-group_keys_False-return_scalar],KeyError: 'index',failed
15703,tests.integ.modin.frame.test_create_or_replace_view,test_create_or_replace_view_multiple_sessions_no_enforce_ordering,"NotImplementedError: Modin supports the method DataFrame.create_or_replace_view on the Snowflake backend, but not on the backend Pandas.",failed
15708,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_True-sort_True-group_keys_True-non_transform_returns_dataframe],AssertionError,failed
15713,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--2-6-6],KeyError: 8,failed
15719,tests.integ.modin.groupby.test_groupby_negative,test_groupby_numeric_only_func_invalid_non_numeric_column[data3-Variant-<lambda>-sum],TypeError: unsupported operand type(s) for +: 'int' and 'str',failed
15730,tests.integ.modin.groupby.test_groupby_ngroups,test_groupby_ngroups_multiindex[level6],"assert 2 == 6
 +  where 2 = <modin.pandas.groupby.DataFrameGroupBy object at 0x33ea0eb00>.ngroups
 +  and   6 = <pandas.core.groupby.generic.DataFrameGroupBy object at 0x341560850>.ngroups",failed
15739,tests.integ.modin.groupby.test_groupby_fillna,test_groupby_fillna_multiindex_ffill_bfill_negative[by_list0-None-method_or_value0],AssertionError: Snowpark pandas Exception 'I' doesn't match pandas Exception 'A',failed
15741,tests.integ.modin.frame.test_loc,test_df_loc_set_series_row_key[row_key0],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (33.33333 %)
[index]: [0, 1, 2]
[left]:  [nan, 4.0, 50.0]
[right]: [nan, 4.0, 40.0]
At positional index 2, first diff: 50.0 != 40.0",failed
15743,tests.integ.modin.groupby.test_groupby_fillna,test_groupby_fillna_multiindex_ffill_bfill_negative[by_list0-None-method_or_value1],AssertionError: Snowpark pandas Exception 'I' doesn't match pandas Exception 'A',failed
15745,tests.integ.modin.groupby.test_groupby_fillna,test_groupby_fillna_multiindex_ffill_bfill_negative[by_list0-None-method_or_value2],AssertionError: Snowpark pandas Exception 'I' doesn't match pandas Exception 'A',failed
15747,tests.integ.modin.groupby.test_groupby_fillna,test_groupby_fillna_multiindex_ffill_bfill_negative[by_list0-1-method_or_value0],AssertionError: Snowpark pandas Exception 'I' doesn't match pandas Exception 'A',failed
15750,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--9-1-None],KeyError: 10,failed
15751,tests.integ.modin.groupby.test_groupby_fillna,test_groupby_fillna_multiindex_ffill_bfill_negative[by_list0-1-method_or_value1],AssertionError: Snowpark pandas Exception 'I' doesn't match pandas Exception 'A',failed
15753,tests.integ.modin.groupby.test_groupby_fillna,test_groupby_fillna_multiindex_ffill_bfill_negative[by_list0-1-method_or_value2],AssertionError: Snowpark pandas Exception 'I' doesn't match pandas Exception 'A',failed
15756,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_True-sort_True-group_keys_True-transform_returns_dataframe],TypeError: must pass an index to rename,failed
15759,tests.integ.modin.frame.test_create_or_replace_view,test_create_or_replace_view_index[None-True],"NotImplementedError: Modin supports the method DataFrame.create_or_replace_view on the Snowflake backend, but not on the backend Pandas.",failed
15762,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_True-sort_True-group_keys_True-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 9, MultiIndex([(0,  'sum'),
            (0, 'mean'),
            (0, 'name'),
            (1,  'sum'),
            (1, 'mean'),
            (1, 'name'),
            (2,  'sum'),
            (2, 'mean'),
            (2, 'name')],
           )",failed
15768,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_True-sort_True-group_keys_True-transform_returns_series],"AssertionError: MultiIndex level [0] are different

Attribute ""names"" are different
[left]:  ['__reduced__']
[right]: [None]",failed
15772,tests.integ.modin.groupby.test_groupby_negative,test_groupby_numeric_only_func_invalid_non_numeric_column[data3-Variant-<lambda>-mean],"TypeError: agg function failed [how->mean,dtype->object]",failed
15774,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_True-sort_True-group_keys_True-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [__reduced__    0
dtype: int64___reduced__    0.0
dtype: float64_0, __reduced__    1
dtype: int64___reduced__    1.0
dtype: float64_1, __reduced__    2
dtype: int64___reduced__    2.0
dtype: float64_2]
[right]: [0_0.0_0, 1_1.0_1, 2_2.0_2]
At positional index 0, first diff: __reduced__    0
dtype: int64___reduced__    0.0
dtype: float64_0 != 0_0.0_0",failed
15777,tests.integ.modin.groupby.test_groupby_nunique,test_groupby_nunique[False-df1-id],"AssertionError: DataFrame.iloc[:, 1] (column name=""value2"") are different

DataFrame.iloc[:, 1] (column name=""value2"") values are different (33.33333 %)
[index]: [egg, ham, spam]
[left]:  [2, 1, 2]
[right]: [2, 2, 2]",failed
15780,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_True-sort_True-group_keys_False-non_transform_returns_dataframe],AssertionError,failed
15793,tests.integ.modin.frame.test_loc,test_df_loc_set_series_row_key[row_key2],IndexError: index 3 is out of bounds for axis 0 with size 3,failed
15794,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--9-1-1],KeyError: 10,failed
15798,tests.integ.modin.groupby.test_groupby_negative,test_groupby_numeric_only_func_invalid_non_numeric_column[data3-Variant-<lambda>-median],"TypeError: agg function failed [how->median,dtype->object]",failed
15801,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_True-sort_True-group_keys_False-transform_returns_dataframe],TypeError: must pass an index to rename,failed
15806,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_True-sort_True-group_keys_False-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 9, Index(['sum', 'mean', 'name', 'sum', 'mean', 'name', 'sum', 'mean', 'name'], dtype='object')",failed
15807,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_True-sort_True-group_keys_False-transform_returns_series],[XPASS(strict)] SNOW-1238546,failed
15812,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--9-1-4],KeyError: 10,failed
15813,tests.integ.modin.frame.test_loc,test_df_loc_set_series_row_key[row_key3],ValueError: Incompatible indexer with DataFrame,failed
15814,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_True-sort_True-group_keys_False-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [__reduced__    0
dtype: int64___reduced__    0.0
dtype: float64_0, __reduced__    1
dtype: int64___reduced__    1.0
dtype: float64_1, __reduced__    2
dtype: int64___reduced__    2.0
dtype: float64_2]
[right]: [0_0.0_0, 1_1.0_1, 2_2.0_2]
At positional index 0, first diff: __reduced__    0
dtype: int64___reduced__    0.0
dtype: float64_0 != 0_0.0_0",failed
15815,tests.integ.modin.groupby.test_groupby_negative,test_groupby_numeric_only_func_invalid_non_numeric_column[data3-Variant-<lambda>-stddev],ValueError: could not convert string to float: 'A',failed
15820,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_True-sort_False-group_keys_True-non_transform_returns_dataframe],AssertionError,failed
15824,tests.integ.modin.frame.test_loc,test_df_loc_set_series_row_key[row_key4],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (66.66667 %)
[index]: [0, 1, 2]
[left]:  [nan, 80.0, 50.0]
[right]: [nan, 70.0, 40.0]
At positional index 1, first diff: 80.0 != 70.0",failed
15825,tests.integ.modin.groupby.test_groupby_fillna,test_groupby_fillna_value_not_type_compatible_negative,Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
15826,tests.integ.modin.frame.test_create_or_replace_view,test_create_or_replace_view_index[None-False],"NotImplementedError: Modin supports the method DataFrame.create_or_replace_view on the Snowflake backend, but not on the backend Pandas.",failed
15828,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--9-1-6],KeyError: 10,failed
15834,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_True-sort_False-group_keys_True-transform_returns_dataframe],TypeError: must pass an index to rename,failed
15835,tests.integ.modin.groupby.test_groupby_property,test_pandas_groupby_groups_workaround[pandas_issue_55919],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
15837,tests.integ.modin.groupby.test_groupby_negative,test_groupby_numeric_only_func_invalid_non_numeric_column[data3-Variant-<lambda>-variance],"TypeError: agg function failed [how->var,dtype->object]",failed
15840,tests.integ.modin.groupby.test_groupby_property,test_pandas_groupby_groups_workaround[pandas_issue_56851],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
15841,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_True-sort_False-group_keys_True-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 9, MultiIndex([(0,  'sum'),
            (0, 'mean'),
            (0, 'name'),
            (1,  'sum'),
            (1, 'mean'),
            (1, 'name'),
            (2,  'sum'),
            (2, 'mean'),
            (2, 'name')],
           )",failed
15843,tests.integ.modin.groupby.test_groupby_property,test_pandas_groupby_groups_workaround[pandas_issue_56966],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
15844,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--9-4-None],KeyError: 13,failed
15845,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_True-sort_False-group_keys_True-transform_returns_series],"AssertionError: MultiIndex level [0] are different

Attribute ""names"" are different
[left]:  ['__reduced__']
[right]: [None]",failed
15847,tests.integ.modin.frame.test_loc,test_df_loc_set_series_row_key[row_key6],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (66.66667 %)
[index]: [0, 1, 2]
[left]:  [nan, 80.0, 50.0]
[right]: [nan, 70.0, 40.0]
At positional index 1, first diff: 80.0 != 70.0",failed
15850,tests.integ.modin.groupby.test_groupby_property,test_pandas_groupby_indices_workaround_pandas_issue_56851,TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
15851,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_True-sort_False-group_keys_True-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [__reduced__    0
dtype: int64___reduced__    0.0
dtype: float64_0, __reduced__    1
dtype: int64___reduced__    1.0
dtype: float64_1, __reduced__    2
dtype: int64___reduced__    2.0
dtype: float64_2]
[right]: [0_0.0_0, 1_1.0_1, 2_2.0_2]
At positional index 0, first diff: __reduced__    0
dtype: int64___reduced__    0.0
dtype: float64_0 != 0_0.0_0",failed
15856,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_True-sort_False-group_keys_False-non_transform_returns_dataframe],AssertionError,failed
15862,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--9-4-1],KeyError: 13,failed
15864,tests.integ.modin.groupby.test_groupby_fillna,test_groupby_fillna_downcast_not_supported_negative,TypeError: {'A': 'str'},failed
15869,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-None-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [3, 5], 1: [1, 2], 2: [0, 4]}",failed
15872,tests.integ.modin.frame.test_create_or_replace_view,test_create_or_replace_view_index[index_labels1-True],"NotImplementedError: Modin supports the method DataFrame.create_or_replace_view on the Snowflake backend, but not on the backend Pandas.",failed
15873,tests.integ.modin.groupby.test_groupby_fillna,test_groupby_fillna_other_not_supported_negative,KeyError: 'I',failed
15874,tests.integ.modin.frame.test_loc,test_df_loc_set_boolean_row_indexer[item1-col_key2-row_key0],ValueError: Must have equal len keys and value when setting with an iterable,failed
15878,tests.integ.modin.groupby.test_groupby_negative,test_groupby_numeric_only_func_invalid_non_numeric_column[data3-Variant-<lambda>-stddev_pop],ValueError: could not convert string to float: 'A',failed
15881,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-None-by1-None-groups],KeyError: 'col1',failed
15883,tests.integ.modin.frame.test_loc,test_df_loc_set_boolean_row_indexer[item1-X-row_key0],IndexError: index 2 is out of bounds for axis 0 with size 2,failed
15889,tests.integ.modin.frame.test_loc,test_df_loc_set_boolean_row_indexer[item1-col_key4-row_key0],ValueError: Must have equal len keys and value when setting with an iterable,failed
15892,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_True-sort_False-group_keys_False-transform_returns_dataframe],TypeError: must pass an index to rename,failed
15895,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-None-by1-None-indices],KeyError: 'col1',failed
15897,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_True-sort_False-group_keys_False-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 9, Index(['sum', 'mean', 'name', 'sum', 'mean', 'name', 'sum', 'mean', 'name'], dtype='object')",failed
15898,tests.integ.modin.frame.test_loc,test_df_loc_set_boolean_row_indexer[item1-col_key5-row_key0],ValueError: Must have equal len keys and value when setting with an iterable,failed
15901,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_True-sort_False-group_keys_False-transform_returns_series],[XPASS(strict)] SNOW-1238546,failed
15905,tests.integ.modin.groupby.test_groupby_negative,test_groupby_numeric_only_func_invalid_non_numeric_column[data3-Variant-<lambda>-var_pop],"TypeError: agg function failed [how->var,dtype->object]",failed
15907,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_True-sort_False-group_keys_False-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [__reduced__    0
dtype: int64___reduced__    0.0
dtype: float64_0, __reduced__    1
dtype: int64___reduced__    1.0
dtype: float64_1, __reduced__    2
dtype: int64___reduced__    2.0
dtype: float64_2]
[right]: [0_0.0_0, 1_1.0_1, 2_2.0_2]
At positional index 0, first diff: __reduced__    0
dtype: int64___reduced__    0.0
dtype: float64_0 != 0_0.0_0",failed
15909,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--9-4-4],KeyError: 13,failed
15910,tests.integ.modin.frame.test_loc,test_df_loc_set_list_like_row_key[list-row_key0],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (33.33333 %)
[index]: [0, 1, 2]
[left]:  [nan, 4.0, 50.0]
[right]: [nan, 4.0, 40.0]
At positional index 2, first diff: 50.0 != 40.0",failed
15912,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_False-sort_True-group_keys_True-non_transform_returns_dataframe],AssertionError,failed
15915,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-col3-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [3, 5], 1: [1, 2], 2: [0, 4]}",failed
15916,tests.integ.modin.frame.test_loc,test_df_loc_set_list_like_row_key[list-row_key1],"KeyError: ""None of [[False, False, False]] are in the [Index([0, 1, 2], dtype='int64')]""",failed
15920,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--9-4-6],KeyError: 13,failed
15922,tests.integ.modin.frame.test_loc,test_df_loc_set_list_like_row_key[list-row_key2],ValueError: Item wrong length 6 instead of 3!,failed
15923,tests.integ.modin.frame.test_create_or_replace_view,test_create_or_replace_view_index[index_labels1-False],"NotImplementedError: Modin supports the method DataFrame.create_or_replace_view on the Snowflake backend, but not on the backend Pandas.",failed
15924,tests.integ.modin.groupby.test_groupby_negative,test_groupby_min_max_invalid_non_numeric_column[data0-Object-<lambda>-min],"TypeError: agg function failed [how->min,dtype->object]",failed
15925,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_False-sort_True-group_keys_True-transform_returns_dataframe],TypeError: must pass an index to rename,failed
15927,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-col3-by3-None-groups],KeyError: 'col1',failed
15929,tests.integ.modin.frame.test_loc,test_df_loc_set_list_like_row_key[list-row_key3],ValueError: Item wrong length 2 instead of 3!,failed
15930,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_False-sort_True-group_keys_True-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 9, MultiIndex([(0,  'sum'),
            (0, 'mean'),
            (0, 'name'),
            (1,  'sum'),
            (1, 'mean'),
            (1, 'name'),
            (2,  'sum'),
            (2, 'mean'),
            (2, 'name')],
           )",failed
15932,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--9-6-None],KeyError: 15,failed
15934,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-True-True-col1_grp],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
15935,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_False-sort_True-group_keys_True-transform_returns_series],"AssertionError: MultiIndex level [0] are different

Attribute ""names"" are different
[left]:  ['__reduced__']
[right]: [None]",failed
15937,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-True-True-col2_int64],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
15939,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_False-sort_True-group_keys_True-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [__reduced__    0
dtype: int64___reduced__    0.0
dtype: float64_0, __reduced__    1
dtype: int64___reduced__    1.0
dtype: float64_1, __reduced__    2
dtype: int64___reduced__    2.0
dtype: float64_2]
[right]: [0_0.0_0, 1_1.0_1, 2_2.0_2]
At positional index 0, first diff: __reduced__    0
dtype: int64___reduced__    0.0
dtype: float64_0 != 0_0.0_0",failed
15941,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-True-True-col3_int_identical],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
15942,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_False-sort_True-group_keys_False-non_transform_returns_dataframe],AssertionError,failed
15944,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-True-True-col4_int32],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
15946,tests.integ.modin.frame.test_loc,test_df_loc_get_reversed_key_slice_with_unordered_nullable_index[last--9-6-1],KeyError: 15,failed
15948,tests.integ.modin.frame.test_loc,test_df_loc_set_list_like_row_key[list-row_key4],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (66.66667 %)
[index]: [0, 1, 2]
[left]:  [nan, 80.0, 50.0]
[right]: [nan, 70.0, 40.0]
At positional index 1, first diff: 80.0 != 70.0",failed
15950,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-True-True-col6_mixed],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
15952,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-True-True-col7_bool],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
15954,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-col3-by3-None-indices],KeyError: 'col1',failed
15955,tests.integ.modin.frame.test_loc,test_df_loc_set_list_like_row_key[list-row_key5],"KeyError: ""None of [[]] are in the [Index([0, 1, 2], dtype='int64')]""",failed
15957,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-True-True-col8_bool_missing],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
15961,tests.integ.modin.groupby.test_groupby_negative,test_groupby_min_max_invalid_non_numeric_column[data0-Object-<lambda>-max],"TypeError: agg function failed [how->max,dtype->object]",failed
15963,tests.integ.modin.frame.test_loc,test_df_loc_set_list_like_row_key[list-row_key6],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (66.66667 %)
[index]: [0, 1, 2]
[left]:  [nan, 80.0, 50.0]
[right]: [nan, 70.0, 40.0]
At positional index 1, first diff: 80.0 != 70.0",failed
15964,tests.integ.modin.groupby.test_groupby_negative,test_groupby_min_max_invalid_non_numeric_column[data1-Array-<lambda>-min],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
15966,tests.integ.modin.groupby.test_groupby_negative,test_groupby_min_max_invalid_non_numeric_column[data1-Array-<lambda>-max],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
15968,tests.integ.modin.frame.test_loc,test_df_loc_set_list_like_row_key[array-row_key0],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (33.33333 %)
[index]: [0, 1, 2]
[left]:  [nan, 4.0, 50.0]
[right]: [nan, 4.0, 40.0]
At positional index 2, first diff: 50.0 != 40.0",failed
15969,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols4-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [3, 5], 1: [1, 2], 2: [0, 4]}",failed
15975,tests.integ.modin.groupby.test_groupby_negative,test_groupby_series_numeric_only_true,"AssertionError: Regex pattern did not match.
 Regex: 'SeriesGroupBy does not implement numeric_only'
 Input: ""'grp_col'""",failed
15976,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_False-sort_True-group_keys_False-transform_returns_dataframe],TypeError: must pass an index to rename,failed
15980,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_False-sort_True-group_keys_False-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 9, Index(['sum', 'mean', 'name', 'sum', 'mean', 'name', 'sum', 'mean', 'name'], dtype='object')",failed
15982,tests.integ.modin.frame.test_create_or_replace_view,test_create_or_replace_view_multiindex,"NotImplementedError: Modin supports the method DataFrame.create_or_replace_view on the Snowflake backend, but not on the backend Pandas.",failed
15985,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_False-sort_True-group_keys_False-transform_returns_series],[XPASS(strict)] SNOW-1238546,failed
15986,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols5-by5-None-groups],KeyError: 'col1',failed
15987,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-True-True-col9_int_missing],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
15988,tests.integ.modin.frame.test_loc,test_df_loc_set_list_like_row_key[array-row_key2],IndexError: index 3 is out of bounds for axis 0 with size 3,failed
15990,tests.integ.modin.groupby.test_groupby_negative,test_groupby_singleindex_invalid_level[level0],Failed: DID NOT RAISE <class 'Exception'>,failed
15992,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_False-sort_True-group_keys_False-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [__reduced__    0
dtype: int64___reduced__    0.0
dtype: float64_0, __reduced__    1
dtype: int64___reduced__    1.0
dtype: float64_1, __reduced__    2
dtype: int64___reduced__    2.0
dtype: float64_2]
[right]: [0_0.0_0, 1_1.0_1, 2_2.0_2]
At positional index 0, first diff: __reduced__    0
dtype: int64___reduced__    0.0
dtype: float64_0 != 0_0.0_0",failed
15993,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-True-True-col10_mixed_missing],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
15996,tests.integ.modin.groupby.test_groupby_negative,test_groupby_singleindex_invalid_level[level1],Failed: DID NOT RAISE <class 'Exception'>,failed
15999,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_False-sort_False-group_keys_True-non_transform_returns_dataframe],AssertionError,failed
16000,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-True-True-by9],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16003,tests.integ.modin.groupby.test_groupby_negative,test_groupby_singleindex_invalid_level[level2],Failed: DID NOT RAISE <class 'Exception'>,failed
16006,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-True-True-by10],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16007,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols5-by5-None-indices],KeyError: 'col1',failed
16009,tests.integ.modin.groupby.test_groupby_negative,test_groupby_singleindex_invalid_level_name[level0],Failed: DID NOT RAISE <class 'Exception'>,failed
16011,tests.integ.modin.frame.test_loc,test_df_loc_set_list_like_row_key[array-row_key3],ValueError: Incompatible indexer with DataFrame,failed
16012,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-True-False-col1_grp],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16014,tests.integ.modin.groupby.test_groupby_negative,test_groupby_singleindex_invalid_level_name[level1],Failed: DID NOT RAISE <class 'Exception'>,failed
16018,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-True-False-col2_int64],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16023,tests.integ.modin.groupby.test_groupby_negative,test_groupby_singleindex_invalid_level_name[level2],Failed: DID NOT RAISE <class 'Exception'>,failed
16025,tests.integ.modin.frame.test_loc,test_df_loc_set_list_like_row_key[array-row_key4],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (66.66667 %)
[index]: [0, 1, 2]
[left]:  [nan, 80.0, 50.0]
[right]: [nan, 70.0, 40.0]
At positional index 1, first diff: 80.0 != 70.0",failed
16027,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-True-False-col3_int_identical],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16028,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_False-sort_False-group_keys_True-transform_returns_dataframe],TypeError: must pass an index to rename,failed
16030,tests.integ.modin.groupby.test_groupby_series_rank,test_groupby_ser_rank_negative[group-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16032,tests.integ.modin.groupby.test_groupby_negative,test_groupby_multiindex_invalid_level[10],Failed: DID NOT RAISE <class 'Exception'>,failed
16035,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-True-False-col4_int32],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16036,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_False-sort_False-group_keys_True-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 9, MultiIndex([(0,  'sum'),
            (0, 'mean'),
            (0, 'name'),
            (1,  'sum'),
            (1, 'mean'),
            (1, 'name'),
            (2,  'sum'),
            (2, 'mean'),
            (2, 'name')],
           )",failed
16037,tests.integ.modin.groupby.test_groupby_series_rank,test_groupby_ser_rank_negative[None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16040,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-None-None-0-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [0], 1: [1], 2: [2], 3: [3], 4: [4], 5: [5]}",failed
16041,tests.integ.modin.groupby.test_groupby_negative,test_groupby_multiindex_invalid_level[level1],Failed: DID NOT RAISE <class 'Exception'>,failed
16048,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-True-False-col6_mixed],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16051,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_False-sort_False-group_keys_True-transform_returns_series],"AssertionError: MultiIndex level [0] are different

Attribute ""names"" are different
[left]:  ['__reduced__']
[right]: [None]",failed
16053,tests.integ.modin.groupby.test_groupby_negative,test_groupby_multiindex_invalid_level[level2],Failed: DID NOT RAISE <class 'Exception'>,failed
16061,tests.integ.modin.frame.test_cumulative,test_dataframe_cumfunc_axis_negative[cumsum],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16062,tests.integ.modin.frame.test_cumulative,test_dataframe_cumfunc_axis_negative[cummin],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16063,tests.integ.modin.frame.test_cumulative,test_dataframe_cumfunc_axis_negative[cummax],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16065,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-True-False-col7_bool],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16066,tests.integ.modin.frame.test_loc,test_df_loc_set_list_like_row_key[array-row_key6],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (66.66667 %)
[index]: [0, 1, 2]
[left]:  [nan, 80.0, 50.0]
[right]: [nan, 70.0, 40.0]
At positional index 1, first diff: 80.0 != 70.0",failed
16068,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_False-sort_False-group_keys_True-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [__reduced__    0
dtype: int64___reduced__    0.0
dtype: float64_0, __reduced__    1
dtype: int64___reduced__    1.0
dtype: float64_1, __reduced__    2
dtype: int64___reduced__    2.0
dtype: float64_2]
[right]: [0_0.0_0, 1_1.0_1, 2_2.0_2]
At positional index 0, first diff: __reduced__    0
dtype: int64___reduced__    0.0
dtype: float64_0 != 0_0.0_0",failed
16069,tests.integ.modin.groupby.test_groupby_negative,test_groupby_multiindex_invalid_level[level3],Failed: DID NOT RAISE <class 'Exception'>,failed
16071,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-True-False-col8_bool_missing],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16072,tests.integ.modin.groupby.test_groupby_negative,test_groupby_multiindex_invalid_level[level],Failed: DID NOT RAISE <class 'Exception'>,failed
16073,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_False-sort_False-group_keys_False-non_transform_returns_dataframe],AssertionError,failed
16076,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-col3-col3-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {1.1: [5], 3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
16077,tests.integ.modin.groupby.test_groupby_negative,test_groupby_multiindex_invalid_level_name_list[level0],Failed: DID NOT RAISE <class 'Exception'>,failed
16078,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-True-False-col9_int_missing],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16080,tests.integ.modin.groupby.test_groupby_negative,test_groupby_multiindex_invalid_level_name_list[level1],Failed: DID NOT RAISE <class 'Exception'>,failed
16082,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-True-False-col10_mixed_missing],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16084,tests.integ.modin.groupby.test_groupby_negative,test_groupby_as_index_false_axis_1_raises,Failed: DID NOT RAISE <class 'Exception'>,failed
16086,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-True-False-by9],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16088,tests.integ.modin.frame.test_loc,test_df_loc_set_list_like_row_key[index-row_key0],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (33.33333 %)
[index]: [0, 1, 2]
[left]:  [nan, 4.0, 50.0]
[right]: [nan, 4.0, 40.0]
At positional index 2, first diff: 50.0 != 40.0",failed
16089,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-col3-None-0-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {1.1: [5], 3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
16090,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-True-False-by10],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16091,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_False-sort_False-group_keys_False-transform_returns_dataframe],TypeError: must pass an index to rename,failed
16097,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_False-sort_False-group_keys_False-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 9, Index(['sum', 'mean', 'name', 'sum', 'mean', 'name', 'sum', 'mean', 'name'], dtype='object')",failed
16098,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-False-True-col1_grp],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16102,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_False-sort_False-group_keys_False-transform_returns_series],[XPASS(strict)] SNOW-1238546,failed
16103,tests.integ.modin.groupby.test_groupby_negative,test_groupby_agg_dict_like_input_nested_renamer_raises,"AssertionError: Regex pattern did not match.
 Regex: 'Value for func argument with nested dict format is not allowed.'
 Input: 'nested renamer is not supported'",failed
16105,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-False-True-col2_int64],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16108,tests.integ.modin.groupby.test_groupby_negative,test_groupby_agg_dict_like_input_invalid_column_raises,AssertionError: exception type <class 'pandas.errors.SpecificationError'> does not match with expected type <class 'KeyError'>,failed
16109,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_True-dropna_False-sort_False-group_keys_False-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [__reduced__    0
dtype: int64___reduced__    0.0
dtype: float64_0, __reduced__    1
dtype: int64___reduced__    1.0
dtype: float64_1, __reduced__    2
dtype: int64___reduced__    2.0
dtype: float64_2]
[right]: [0_0.0_0, 1_1.0_1, 2_2.0_2]
At positional index 0, first diff: __reduced__    0
dtype: int64___reduced__    0.0
dtype: float64_0 != 0_0.0_0",failed
16113,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-False-True-col3_int_identical],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16115,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-col3-None-col3-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {1.1: [5], 3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
16123,tests.integ.modin.groupby.test_groupby_negative,test_groupby_named_agg_like_input_invalid_column_raises,AssertionError: exception type <class 'pandas.errors.SpecificationError'> does not match with expected type <class 'KeyError'>,failed
16125,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_True-sort_True-group_keys_True-non_transform_returns_dataframe],AssertionError,failed
16128,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-False-True-col4_int32],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16137,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-False-True-col6_mixed],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16142,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-False-True-col7_bool],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16143,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols10-col3-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {1.1: [5], 3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
16146,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-False-True-col8_bool_missing],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16149,tests.integ.modin.groupby.test_groupby_negative,test_groupby_shift_non_integer_period_negative[mxyzptlk],"TypeError: Periods must be integer, but mxyzptlk is <class 'str'>.",failed
16154,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-False-True-col9_int_missing],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16160,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-False-True-col10_mixed_missing],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16161,tests.integ.modin.groupby.test_groupby_negative,test_groupby_shift_freq_negative[D-LEXLUTHOR-0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16162,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols11-None-level11-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
16166,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-False-True-by9],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16172,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-False-True-by10],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16176,tests.integ.modin.frame.test_loc,test_df_loc_set_list_like_row_key[index-row_key2],IndexError: index 3 is out of bounds for axis 0 with size 3,failed
16177,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_True-sort_True-group_keys_True-transform_returns_dataframe],TypeError: must pass an index to rename,failed
16178,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-False-False-col1_grp],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16186,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols11-None-level11-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
16187,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-False-False-col2_int64],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16188,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_True-sort_True-group_keys_True-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 9, MultiIndex([(0,  'sum'),
            (0, 'mean'),
            (0, 'name'),
            (1,  'sum'),
            (1, 'mean'),
            (1, 'name'),
            (2,  'sum'),
            (2, 'mean'),
            (2, 'name')],
           )",failed
16192,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-False-False-col3_int_identical],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16194,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_True-sort_True-group_keys_True-transform_returns_series],"AssertionError: MultiIndex level [0] are different

Attribute ""names"" are different
[left]:  ['__reduced__']
[right]: [None]",failed
16196,tests.integ.modin.groupby.test_groupby_negative,test_groupby_shift_with_fill_multiindex_negative[4242-by0-0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16200,tests.integ.modin.groupby.test_groupby_negative,test_groupby_shift_with_fill_multiindex_negative[4242-by0-1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16201,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-False-False-col4_int32],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16202,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_True-sort_True-group_keys_True-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [__reduced__    0
dtype: int64___reduced__    0.0
dtype: float64_0, __reduced__    1
dtype: int64___reduced__    1.0
dtype: float64_1, __reduced__    2
dtype: int64___reduced__    2.0
dtype: float64_2]
[right]: [0_0.0_0, 1_1.0_1, 2_2.0_2]
At positional index 0, first diff: __reduced__    0
dtype: int64___reduced__    0.0
dtype: float64_0 != 0_0.0_0",failed
16205,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols12-None-level12-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
16206,tests.integ.modin.groupby.test_groupby_negative,test_groupby_shift_with_fill_multiindex_negative[4242-by0-2],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16207,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-False-False-col6_mixed],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16209,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_True-sort_True-group_keys_False-non_transform_returns_dataframe],AssertionError,failed
16212,tests.integ.modin.groupby.test_groupby_negative,test_groupby_shift_with_fill_multiindex_negative[4242-by0-3],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16214,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-False-False-col7_bool],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16216,tests.integ.modin.groupby.test_groupby_negative,test_groupby_shift_with_fill_multiindex_negative[4242-by0--3],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16218,tests.integ.modin.frame.test_loc,test_df_loc_set_list_like_row_key[index-row_key3],ValueError: Incompatible indexer with DataFrame,failed
16219,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-False-False-col8_bool_missing],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16222,tests.integ.modin.groupby.test_groupby_negative,test_groupby_shift_with_fill_multiindex_negative[4242-by0--2],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16226,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols12-None-level12-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
16227,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-False-False-col9_int_missing],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16228,tests.integ.modin.groupby.test_groupby_negative,test_groupby_shift_with_fill_multiindex_negative[4242-by0--1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16231,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_True-sort_True-group_keys_False-transform_returns_dataframe],TypeError: must pass an index to rename,failed
16232,tests.integ.modin.groupby.test_groupby_negative,test_groupby_shift_with_by_and_level_negative,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16233,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-False-False-col10_mixed_missing],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16239,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_True-sort_True-group_keys_False-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 9, Index(['sum', 'mean', 'name', 'sum', 'mean', 'name', 'sum', 'mean', 'name'], dtype='object')",failed
16240,tests.integ.modin.groupby.test_groupby_negative,test_groupby_shift_with_external_by_negative,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16241,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-False-False-by9],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16243,tests.integ.modin.frame.test_loc,test_df_loc_set_list_like_row_key[index-row_key4],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (66.66667 %)
[index]: [0, 1, 2]
[left]:  [nan, 80.0, 50.0]
[right]: [nan, 70.0, 40.0]
At positional index 1, first diff: 80.0 != 70.0",failed
16244,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_True-sort_True-group_keys_False-transform_returns_series],[XPASS(strict)] SNOW-1238546,failed
16246,tests.integ.modin.groupby.test_groupby_negative,test_groupby_shift_with_by_index_negative[by0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16249,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[first-False-False-by10],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16252,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_True-sort_True-group_keys_False-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [__reduced__    0
dtype: int64___reduced__    0.0
dtype: float64_0, __reduced__    1
dtype: int64___reduced__    1.0
dtype: float64_1, __reduced__    2
dtype: int64___reduced__    2.0
dtype: float64_2]
[right]: [0_0.0_0, 1_1.0_1, 2_2.0_2]
At positional index 0, first diff: __reduced__    0
dtype: int64___reduced__    0.0
dtype: float64_0 != 0_0.0_0",failed
16253,tests.integ.modin.groupby.test_groupby_negative,test_groupby_shift_unsupported_args_negative[params0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16254,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0.0: [3, 5], 1.0: [1, 2]}",failed
16256,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-True-True-col1_grp],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16259,tests.integ.modin.groupby.test_groupby_negative,test_groupby_shift_unsupported_args_negative[params1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16260,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_True-sort_False-group_keys_True-non_transform_returns_dataframe],AssertionError,failed
16263,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-True-True-col2_int64],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16265,tests.integ.modin.groupby.test_groupby_negative,test_groupby_agg_invalid_numeric_only[TEST-min],Failed: DID NOT RAISE <class 'ValueError'>,failed
16268,tests.integ.modin.groupby.test_groupby_negative,test_groupby_agg_invalid_numeric_only[TEST-max],Failed: DID NOT RAISE <class 'ValueError'>,failed
16269,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-True-True-col3_int_identical],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16273,tests.integ.modin.groupby.test_groupby_negative,test_groupby_agg_invalid_numeric_only[TEST-std],Failed: DID NOT RAISE <class 'ValueError'>,failed
16274,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-by1-None-groups],KeyError: 'col1',failed
16277,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-True-True-col4_int32],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16279,tests.integ.modin.groupby.test_groupby_negative,test_groupby_agg_invalid_numeric_only[TEST-var],Failed: DID NOT RAISE <class 'ValueError'>,failed
16281,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_True-sort_False-group_keys_True-transform_returns_dataframe],TypeError: must pass an index to rename,failed
16282,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-True-True-col6_mixed],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16285,tests.integ.modin.groupby.test_groupby_negative,test_groupby_agg_invalid_numeric_only[TEST-sum],Failed: DID NOT RAISE <class 'ValueError'>,failed
16288,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_True-sort_False-group_keys_True-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 9, MultiIndex([(0,  'sum'),
            (0, 'mean'),
            (0, 'name'),
            (1,  'sum'),
            (1, 'mean'),
            (1, 'name'),
            (2,  'sum'),
            (2, 'mean'),
            (2, 'name')],
           )",failed
16290,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-True-True-col7_bool],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16292,tests.integ.modin.groupby.test_groupby_negative,test_groupby_agg_invalid_numeric_only[TEST-mean],Failed: DID NOT RAISE <class 'ValueError'>,failed
16294,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_True-sort_False-group_keys_True-transform_returns_series],"AssertionError: MultiIndex level [0] are different

Attribute ""names"" are different
[left]:  ['__reduced__']
[right]: [None]",failed
16295,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-True-True-col8_bool_missing],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16296,tests.integ.modin.groupby.test_groupby_negative,test_groupby_agg_invalid_numeric_only[TEST-median],Failed: DID NOT RAISE <class 'ValueError'>,failed
16298,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_True-sort_False-group_keys_True-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [__reduced__    0
dtype: int64___reduced__    0.0
dtype: float64_0, __reduced__    1
dtype: int64___reduced__    1.0
dtype: float64_1, __reduced__    2
dtype: int64___reduced__    2.0
dtype: float64_2]
[right]: [0_0.0_0, 1_1.0_1, 2_2.0_2]
At positional index 0, first diff: __reduced__    0
dtype: int64___reduced__    0.0
dtype: float64_0 != 0_0.0_0",failed
16300,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-True-True-col9_int_missing],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16301,tests.integ.modin.groupby.test_groupby_negative,test_groupby_agg_invalid_numeric_only[5-min],Failed: DID NOT RAISE <class 'ValueError'>,failed
16302,tests.integ.modin.frame.test_loc,test_df_loc_set_list_like_row_key[index-row_key6],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (66.66667 %)
[index]: [0, 1, 2]
[left]:  [nan, 80.0, 50.0]
[right]: [nan, 70.0, 40.0]
At positional index 1, first diff: 80.0 != 70.0",failed
16305,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_True-sort_False-group_keys_False-non_transform_returns_dataframe],AssertionError,failed
16306,tests.integ.modin.groupby.test_groupby_negative,test_groupby_agg_invalid_numeric_only[5-max],Failed: DID NOT RAISE <class 'ValueError'>,failed
16307,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-True-True-col10_mixed_missing],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16309,tests.integ.modin.groupby.test_groupby_negative,test_groupby_agg_invalid_numeric_only[5-std],Failed: DID NOT RAISE <class 'ValueError'>,failed
16310,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-True-True-by9],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16313,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-by1-None-indices],KeyError: 'col1',failed
16314,tests.integ.modin.frame.test_loc,test_df_loc_set_series_and_list_like_row_key_negative[series],KeyError: array([3]),failed
16315,tests.integ.modin.groupby.test_groupby_negative,test_groupby_agg_invalid_numeric_only[5-var],Failed: DID NOT RAISE <class 'ValueError'>,failed
16317,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-True-True-by10],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16319,tests.integ.modin.groupby.test_groupby_negative,test_groupby_agg_invalid_numeric_only[5-sum],Failed: DID NOT RAISE <class 'ValueError'>,failed
16322,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-True-False-col1_grp],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16327,tests.integ.modin.groupby.test_groupby_negative,test_groupby_agg_invalid_numeric_only[5-mean],Failed: DID NOT RAISE <class 'ValueError'>,failed
16328,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-True-False-col2_int64],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16331,tests.integ.modin.groupby.test_groupby_negative,test_groupby_agg_invalid_numeric_only[5-median],Failed: DID NOT RAISE <class 'ValueError'>,failed
16332,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0.0: [3, 5], 1.0: [1, 2]}",failed
16333,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-True-False-col3_int_identical],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16339,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-True-False-col4_int32],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16348,tests.integ.modin.frame.test_merge,test_merge_left_on_right_on[left-True-left_i-right_i],KeyError: 'right_i',failed
16349,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-True-False-col6_mixed],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16351,tests.integ.modin.groupby.test_groupby_negative,test_groupby_agg_invalid_min_count[min-TEST],TypeError: 'str' object cannot be interpreted as an integer,failed
16353,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_True-sort_False-group_keys_False-transform_returns_dataframe],TypeError: must pass an index to rename,failed
16356,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-by3-None-groups],KeyError: 'col1',failed
16359,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-True-False-col7_bool],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16360,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_True-sort_False-group_keys_False-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 9, Index(['sum', 'mean', 'name', 'sum', 'mean', 'name', 'sum', 'mean', 'name'], dtype='object')",failed
16366,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_True-sort_False-group_keys_False-transform_returns_series],[XPASS(strict)] SNOW-1238546,failed
16369,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-True-False-col8_bool_missing],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16375,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_True-sort_False-group_keys_False-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [__reduced__    0
dtype: int64___reduced__    0.0
dtype: float64_0, __reduced__    1
dtype: int64___reduced__    1.0
dtype: float64_1, __reduced__    2
dtype: int64___reduced__    2.0
dtype: float64_2]
[right]: [0_0.0_0, 1_1.0_1, 2_2.0_2]
At positional index 0, first diff: __reduced__    0
dtype: int64___reduced__    0.0
dtype: float64_0 != 0_0.0_0",failed
16379,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-True-False-col9_int_missing],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16383,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_False-sort_True-group_keys_True-non_transform_returns_dataframe],AssertionError,failed
16386,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-by3-None-indices],KeyError: 'col1',failed
16388,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-True-False-col10_mixed_missing],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16395,tests.integ.modin.frame.test_merge,test_merge_left_on_right_on[left-True-left_i-A],KeyError: 'left_i',failed
16396,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-True-False-by9],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16406,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-True-False-by10],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16408,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[series-row_key0-col_key6],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 8)
[right]: (3, 4)",failed
16414,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_False-sort_True-group_keys_True-transform_returns_dataframe],TypeError: must pass an index to rename,failed
16420,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols4-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0.0: [3, 5], 1.0: [1, 2]}",failed
16421,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-False-True-col1_grp],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16427,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-None-0-groups],"AssertionError: Actual dict has the wrong key at position 1. Actual key 4.0 is not equal to expected key 8.0.
Actual dict: {3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0]}",failed
16430,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_False-sort_True-group_keys_True-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 9, MultiIndex([(0,  'sum'),
            (0, 'mean'),
            (0, 'name'),
            (1,  'sum'),
            (1, 'mean'),
            (1, 'name'),
            (2,  'sum'),
            (2, 'mean'),
            (2, 'name')],
           )",failed
16431,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-False-True-col2_int64],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16436,tests.integ.modin.frame.test_merge,test_merge_left_on_right_on[left-True-B-right_i],KeyError: 'right_i',failed
16438,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_False-sort_True-group_keys_True-transform_returns_series],"AssertionError: MultiIndex level [0] are different

Attribute ""names"" are different
[left]:  ['__reduced__']
[right]: [None]",failed
16442,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-False-True-col3_int_identical],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16443,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-None-0-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
16449,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols5-by5-None-groups],KeyError: 'col1',failed
16450,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_False-sort_True-group_keys_True-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [__reduced__    0
dtype: int64___reduced__    0.0
dtype: float64_0, __reduced__    1
dtype: int64___reduced__    1.0
dtype: float64_1, __reduced__    2
dtype: int64___reduced__    2.0
dtype: float64_2]
[right]: [0_0.0_0, 1_1.0_1, 2_2.0_2]
At positional index 0, first diff: __reduced__    0
dtype: int64___reduced__    0.0
dtype: float64_0 != 0_0.0_0",failed
16451,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-False-True-col4_int32],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16456,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[series-row_key0-col_key8],"AssertionError: DataFrame.iloc[:, 0] (column name=""D"") are different

DataFrame.iloc[:, 0] (column name=""D"") values are different (66.66667 %)
[index]: [0, 1, 2]
[left]:  [nan, 4.0, nan]
[right]: [1.0, 4.0, 7.0]
At positional index 0, first diff: nan != 1.0",failed
16458,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-None-col3-groups],"AssertionError: Actual dict has the wrong key at position 1. Actual key 4.0 is not equal to expected key 8.0.
Actual dict: {3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0]}",failed
16460,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_False-sort_True-group_keys_False-non_transform_returns_dataframe],AssertionError,failed
16461,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-False-True-col6_mixed],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16467,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-False-True-col7_bool],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16468,tests.integ.modin.frame.test_merge,test_merge_left_on_right_on[left-True-left_on9-right_on9],KeyError: 'right_i',failed
16470,tests.integ.modin.frame.test_describe,test_describe_duplicate_columns[None-None-7],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (11, 3)
[right]: (8, 2)",failed
16472,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-None-col3-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
16474,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-False-True-col8_bool_missing],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16477,tests.integ.modin.frame.test_describe,test_describe_duplicate_columns[number-None-7],ValueError: No objects to concatenate,failed
16478,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols5-by5-None-indices],KeyError: 'col1',failed
16480,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-False-True-col9_int_missing],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16481,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols10-col3-None-groups],"AssertionError: Actual dict has the wrong key at position 1. Actual key 4.0 is not equal to expected key 8.0.
Actual dict: {3.1: [(3.1, 17.0)], 4.0: [(4.0, nan)], 8.0: [(8.0, 3.0)], 10.0: [(10.0, 15.0)], 12.0: [(12.0, 16.0)]}
Expected dict: {3.1: [(3.1, 17.0)], 8.0: [(8.0, 3.0)], 12.0: [(12.0, 16.0)], 10.0: [(10.0, 15.0)], 4.0: [(4.0, nan)]}",failed
16482,tests.integ.modin.frame.test_describe,test_describe_duplicate_columns[None-float-9],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (11, 3)
[right]: (11, 2)",failed
16483,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[series-row_key0-col_key9],"KeyError: array(['1', '2'], dtype='<U21')",failed
16487,tests.integ.modin.frame.test_describe,test_describe_duplicate_columns[object-None-4],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (11, 3)
[right]: (4, 1)",failed
16488,tests.integ.modin.frame.test_describe,test_describe_duplicate_columns[None-object-7],ValueError: No objects to concatenate,failed
16489,tests.integ.modin.frame.test_describe,test_describe_duplicate_columns[int-float-5],ValueError: No objects to concatenate,failed
16490,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-False-True-col10_mixed_missing],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16491,tests.integ.modin.frame.test_describe,test_describe_duplicate_columns[float-int-5],ValueError: No objects to concatenate,failed
16492,tests.integ.modin.frame.test_describe,test_describe_duplicate_columns_mixed,"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (11, 3)
[right]: (8, 2)",failed
16495,tests.integ.modin.frame.test_describe,test_timedelta,"[XPASS(strict)] requires concat(), which we cannot do with Timedelta.",failed
16498,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols10-col3-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
16499,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-False-True-by9],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16504,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-False-True-by10],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16505,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-None-0-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [0], 1: [1], 2: [2], 3: [3], 4: [4], 5: [5]}",failed
16507,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-False-False-col1_grp],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16509,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[series-row_key0-col_key10],"KeyError: array(['E', 1, 'X', 2], dtype=object)",failed
16511,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols11-None-level11-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
16514,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-False-False-col2_int64],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16516,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-False-False-col3_int_identical],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16522,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-False-False-col4_int32],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16523,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-col3-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
16524,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_False-sort_True-group_keys_False-transform_returns_dataframe],TypeError: must pass an index to rename,failed
16527,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols11-None-level11-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
16532,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-False-False-col6_mixed],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16534,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_False-sort_True-group_keys_False-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 9, Index(['sum', 'mean', 'name', 'sum', 'mean', 'name', 'sum', 'mean', 'name'], dtype='object')",failed
16538,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_False-sort_True-group_keys_False-transform_returns_series],[XPASS(strict)] SNOW-1238546,failed
16539,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-False-False-col7_bool],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16542,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols12-None-level12-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
16544,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-False-False-col8_bool_missing],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16545,tests.integ.modin.groupby.test_groupby_size,test_groupby_agg_size[size-False-col1_grp],"TypeError: Must provide 'func' or tuples of '(column, aggfunc).",failed
16546,tests.integ.modin.frame.test_diff,test_row_wise_diff_all_int_df[with_len(df)/2_rows_before],ValueError: periods must be an int. got <class 'float'> instead,failed
16547,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_False-sort_True-group_keys_False-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [__reduced__    0
dtype: int64___reduced__    0.0
dtype: float64_0, __reduced__    1
dtype: int64___reduced__    1.0
dtype: float64_1, __reduced__    2
dtype: int64___reduced__    2.0
dtype: float64_2]
[right]: [0_0.0_0, 1_1.0_1, 2_2.0_2]
At positional index 0, first diff: __reduced__    0
dtype: int64___reduced__    0.0
dtype: float64_0 != 0_0.0_0",failed
16548,tests.integ.modin.frame.test_diff,test_row_wise_diff_all_int_df[with_len(df)/2_rows_after],ValueError: periods must be an int. got <class 'float'> instead,failed
16554,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-False-False-col9_int_missing],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16555,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-None-0-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
16558,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumcount_negative[LEXLUTHOR-0-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16560,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_False-sort_False-group_keys_True-non_transform_returns_dataframe],AssertionError,failed
16561,tests.integ.modin.groupby.test_groupby_size,test_groupby_agg_size[size-False-col2_int64],"TypeError: Must provide 'func' or tuples of '(column, aggfunc).",failed
16562,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-False-False-col10_mixed_missing],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16563,tests.integ.modin.frame.test_diff,test_col_wise_diff_all_int_df[with_len(df.columns)/2_cols_before],ValueError: periods must be an int. got <class 'float'> instead,failed
16564,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumcount_negative[None--1-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16566,tests.integ.modin.frame.test_diff,test_col_wise_diff_all_int_df[with_len(df.columns)/2_cols_after],ValueError: periods must be an int. got <class 'float'> instead,failed
16567,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[series-row_key1-col_key1],"AssertionError: DataFrame.iloc[:, 3] (column name=""A"") are different

DataFrame.iloc[:, 3] (column name=""A"") values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [1, 4, 7]
[right]: [nan, 7.0, 4.0]",failed
16568,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumcount_negative[LEXLUTHOR-0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16571,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-False-False-by9],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16574,tests.integ.modin.groupby.test_groupby_size,test_groupby_agg_size[size-False-col3_int_identical],"TypeError: Must provide 'func' or tuples of '(column, aggfunc).",failed
16577,tests.integ.modin.groupby.test_groupby_first_last,test_groupby_first_last[last-False-False-by10],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16580,tests.integ.modin.groupby.test_groupby_size,test_groupby_agg_size[size-False-col4_int32],"TypeError: Must provide 'func' or tuples of '(column, aggfunc).",failed
16582,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-None-col3-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
16583,tests.integ.modin.groupby.test_groupby_first_last,test_error_checking,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16586,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_False-sort_False-group_keys_True-transform_returns_dataframe],TypeError: must pass an index to rename,failed
16587,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[series-row_key1-col_key2],"AssertionError: DataFrame.iloc[:, 4] (column name=""Y"") are different

DataFrame.iloc[:, 4] (column name=""Y"") values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [1, 4, 7]
[right]: [nan, nan, nan]",failed
16591,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumlative_non_numeric[cumsum-0],"NotImplementedError: function is not implemented for this dtype: [how->cumsum,dtype->object]",failed
16592,tests.integ.modin.groupby.test_groupby_size,test_groupby_agg_size[size-False-col6_mixed],"TypeError: Must provide 'func' or tuples of '(column, aggfunc).",failed
16595,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_False-sort_False-group_keys_True-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 9, MultiIndex([(0,  'sum'),
            (0, 'mean'),
            (0, 'name'),
            (1,  'sum'),
            (1, 'mean'),
            (1, 'name'),
            (2,  'sum'),
            (2, 'mean'),
            (2, 'name')],
           )",failed
16602,tests.integ.modin.groupby.test_groupby_size,test_groupby_agg_size[size-False-col7_bool],"TypeError: Must provide 'func' or tuples of '(column, aggfunc).",failed
16604,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_False-sort_False-group_keys_True-transform_returns_series],"AssertionError: MultiIndex level [0] are different

Attribute ""names"" are different
[left]:  ['__reduced__']
[right]: [None]",failed
16605,tests.integ.modin.frame.test_diff,test_df_diff_bools_as_variants,TypeError: unsupported operand type for -: got object,failed
16607,tests.integ.modin.frame.test_diff,test_df_diff_bools_as_variants_and_ints[0],TypeError: unsupported operand type for -: got object,failed
16608,tests.integ.modin.frame.test_diff,test_df_diff_bools_as_variants_and_ints[1],TypeError: unsupported operand type for -: got object,failed
16610,tests.integ.modin.groupby.test_groupby_size,test_groupby_agg_size[size-False-col8_bool_missing],"TypeError: Must provide 'func' or tuples of '(column, aggfunc).",failed
16611,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_False-sort_False-group_keys_True-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [__reduced__    0
dtype: int64___reduced__    0.0
dtype: float64_0, __reduced__    1
dtype: int64___reduced__    1.0
dtype: float64_1, __reduced__    2
dtype: int64___reduced__    2.0
dtype: float64_2]
[right]: [0_0.0_0, 1_1.0_1, 2_2.0_2]
At positional index 0, first diff: __reduced__    0
dtype: int64___reduced__    0.0
dtype: float64_0 != 0_0.0_0",failed
16612,tests.integ.modin.frame.test_diff,test_df_diff_bools_and_ints_as_variants[0],TypeError: unsupported operand type for -: got object,failed
16613,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols10-col3-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
16614,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols12-None-level12-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
16615,tests.integ.modin.frame.test_diff,test_df_diff_bools_and_ints_as_variants[1],TypeError: unsupported operand type for -: got object,failed
16616,tests.integ.modin.frame.test_diff,test_df_diff_custom_variant_type_negative,TypeError: unsupported operand type for -: got object,failed
16617,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumlative_non_numeric[cummin-1],"NotImplementedError: function is not implemented for this dtype: [how->cummin,dtype->object]",failed
16618,tests.integ.modin.frame.test_diff,test_df_diff_mixed_variant_columns[0],TypeError: unsupported operand type for -: got object,failed
16619,tests.integ.modin.frame.test_merge,test_merge_left_on_right_on[left-False-left_i-right_i],KeyError: 'right_i',failed
16620,tests.integ.modin.frame.test_diff,test_df_diff_mixed_variant_columns[1],TypeError: unsupported operand type for -: got object,failed
16621,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_False-sort_False-group_keys_False-non_transform_returns_dataframe],AssertionError,failed
16622,tests.integ.modin.groupby.test_groupby_size,test_groupby_agg_size[size-False-col9_int_missing],"TypeError: Must provide 'func' or tuples of '(column, aggfunc).",failed
16623,tests.integ.modin.frame.test_diff,test_df_diff_bool_df_with_missing_values[0],TypeError: unsupported operand type for -: got object,failed
16625,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-None-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: [3, 5], 1: [1, 2], 2: [0, 4]}
Expected dict: {2: [0, 4], 1: [1, 2], 0: [3, 5]}",failed
16626,tests.integ.modin.frame.test_diff,test_df_diff_bool_df_with_missing_values[1],TypeError: unsupported operand type for -: got object,failed
16627,tests.integ.modin.frame.test_diff,test_df_diff_string_type_negative,"AssertionError: Regex pattern did not match.
 Regex: ""Numeric value 'a' is not recognized""
 Input: 'unsupported operand type for -: got object'",failed
16628,tests.integ.modin.groupby.test_groupby_size,test_groupby_agg_size[size-False-col10_mixed_missing],"TypeError: Must provide 'func' or tuples of '(column, aggfunc).",failed
16630,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols11-None-level11-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
16632,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-None-col1-None-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: array([3, 5]), 1: array([1, 2]), 2: array([0, 4])}
Expected dict: {2: array([0, 4]), 1: array([1, 2]), 0: array([3, 5])}",failed
16633,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[series-row_key1-col_key6],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 8)
[right]: (3, 4)",failed
16634,tests.integ.modin.groupby.test_groupby_dataframe_cumulative,test_groupby_cumlative_non_numeric[cummax-1],"NotImplementedError: function is not implemented for this dtype: [how->cummax,dtype->object]",failed
16635,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_False-sort_False-group_keys_False-transform_returns_dataframe],TypeError: must pass an index to rename,failed
16637,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_False-sort_False-group_keys_False-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 9, Index(['sum', 'mean', 'name', 'sum', 'mean', 'name', 'sum', 'mean', 'name'], dtype='object')",failed
16638,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols11-None-level11-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
16639,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_False-sort_False-group_keys_False-transform_returns_series],[XPASS(strict)] SNOW-1238546,failed
16640,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-None-by1-None-groups],KeyError: 'col1',failed
16641,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_self[include_groups_False-dropna_False-sort_False-group_keys_False-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [__reduced__    0
dtype: int64___reduced__    0.0
dtype: float64_0, __reduced__    1
dtype: int64___reduced__    1.0
dtype: float64_1, __reduced__    2
dtype: int64___reduced__    2.0
dtype: float64_2]
[right]: [0_0.0_0, 1_1.0_1, 2_2.0_2]
At positional index 0, first diff: __reduced__    0
dtype: int64___reduced__    0.0
dtype: float64_0 != 0_0.0_0",failed
16642,tests.integ.modin.groupby.test_groupby_get_group,test_groupby_get_group[col1_grp],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16643,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[series-row_key1-col_key8],"AssertionError: DataFrame.iloc[:, 0] (column name=""D"") are different

DataFrame.iloc[:, 0] (column name=""D"") values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [nan, nan, nan]
[right]: [1.0, 4.0, 7.0]
At positional index 0, first diff: nan != 1.0",failed
16644,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_True-sort_True-group_keys_True-non_transform_returns_dataframe],AssertionError,failed
16645,tests.integ.modin.groupby.test_groupby_get_group,test_groupby_get_group[col2_int64],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16646,tests.integ.modin.frame.test_merge,test_merge_left_on_right_on[left-False-left_i-A],KeyError: 'left_i',failed
16647,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-None-by1-None-indices],KeyError: 'col1',failed
16648,tests.integ.modin.groupby.test_groupby_size,test_groupby_agg_size[size-False-by9],"TypeError: Must provide 'func' or tuples of '(column, aggfunc).",failed
16649,tests.integ.modin.groupby.test_groupby_get_group,test_groupby_get_group[col3_int_identical],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16650,tests.integ.modin.groupby.test_groupby_size,test_groupby_agg_size[size-False-by10],"TypeError: Must provide 'func' or tuples of '(column, aggfunc).",failed
16651,tests.integ.modin.groupby.test_groupby_get_group,test_groupby_get_group[col4_int32],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16652,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-col3-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: [10.0, 1.1], 1: [8.0, 12.0], 2: [3.1, 4.0]}
Expected dict: {2: [3.1, 4.0], 1: [8.0, 12.0], 0: [10.0, 1.1]}",failed
16653,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[series-row_key1-col_key9],"KeyError: array(['1', '2'], dtype='<U21')",failed
16655,tests.integ.modin.groupby.test_groupby_get_group,test_groupby_get_group[col6_mixed],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16657,tests.integ.modin.groupby.test_groupby_get_group,test_groupby_get_group[col7_bool],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16658,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-col3-col1-None-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: array([3, 5]), 1: array([1, 2]), 2: array([0, 4])}
Expected dict: {2: array([0, 4]), 1: array([1, 2]), 0: array([3, 5])}",failed
16660,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols12-None-level12-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
16661,tests.integ.modin.groupby.test_groupby_get_group,test_groupby_get_group[col8_bool_missing],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16662,tests.integ.modin.frame.test_merge,test_merge_left_on_right_on[left-False-B-right_i],KeyError: 'right_i',failed
16666,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type[series-row_key1-col_key10],"KeyError: array(['E', 1, 'X', 2], dtype=object)",failed
16668,tests.integ.modin.groupby.test_groupby_get_group,test_groupby_get_group[col9_int_missing],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16674,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-col3-by3-None-groups],KeyError: 'col1',failed
16676,tests.integ.modin.groupby.test_groupby_get_group,test_groupby_get_group[col10_mixed_missing],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16694,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols12-None-level12-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
16700,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_True-sort_True-group_keys_True-transform_returns_dataframe],TypeError: must pass an index to rename,failed
16705,tests.integ.modin.frame.test_loc,test_df_loc_set_general_col_key_type_with_duplicate_columns[series-col_key1],"AssertionError: DataFrame.iloc[:, 0] (column name=""A"") are different

DataFrame.iloc[:, 0] (column name=""A"") values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [1, 4, 7]
[right]: [nan, 7.0, 4.0]",failed
16710,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_True-sort_True-group_keys_True-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 6, MultiIndex([('a',  'sum'),
            ('a', 'mean'),
            ('a', 'name'),
            ('b',  'sum'),
            ('b', 'mean'),
            ('b', 'name')],
           )",failed
16711,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-col3-by3-None-indices],KeyError: 'col1',failed
16716,tests.integ.modin.frame.test_merge,test_merge_left_on_right_on[left-False-left_on9-right_on9],KeyError: 'right_i',failed
16718,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_True-sort_True-group_keys_True-transform_returns_series],[XPASS(strict)] SNOW-1238546,failed
16725,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-None-col1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
16726,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_True-sort_True-group_keys_True-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [a, b]
[left]:  [__reduced__    1
dtype: int64___reduced__    0.5
dtype: float64_a, __reduced__    2
dtype: int64___reduced__    2.0
dtype: float64_b]
[right]: [1_0.5_a, 2_2.0_b]
At positional index 0, first diff: __reduced__    1
dtype: int64___reduced__    0.5
dtype: float64_a != 1_0.5_a",failed
16727,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols4-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: [(10.0, 15), (1.1, 6)], 1: [(8.0, 3), (12.0, 16)], 2: [(3.1, 17), (4.0, 5)]}
Expected dict: {2: [(3.1, 17), (4.0, 5)], 1: [(8.0, 3), (12.0, 16)], 0: [(10.0, 15), (1.1, 6)]}",failed
16735,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_True-sort_True-group_keys_False-non_transform_returns_dataframe],AssertionError,failed
16736,tests.integ.modin.frame.test_drop,test_drop_invalid_labels_axis1_negative[labels \\['blue'\\] not found in axis-blue-None],"AssertionError: Regex pattern did not match.
 Regex: ""labels \\['blue'\\] not found in axis""
 Input: '""labels Index([\'blue\'], dtype=\'object\') not contained in axis""'",failed
16737,tests.integ.modin.groupby.test_groupby_size,test_groupby_agg_size[len-False-col1_grp],"TypeError: Must provide 'func' or tuples of '(column, aggfunc).",failed
16739,tests.integ.modin.groupby.test_groupby_get_group,test_groupby_get_group_with_list,ValueError: must supply a tuple to get_group with multiple grouping keys,failed
16740,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols4-col1-None-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: array([3, 5]), 1: array([1, 2]), 2: array([0, 4])}
Expected dict: {2: array([0, 4]), 1: array([1, 2]), 0: array([3, 5])}",failed
16742,tests.integ.modin.groupby.test_groupby_size,test_groupby_agg_size[len-False-col2_int64],"TypeError: Must provide 'func' or tuples of '(column, aggfunc).",failed
16743,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-None-by1-None-groups],KeyError: 'col1',failed
16748,tests.integ.modin.frame.test_drop,test_drop_invalid_labels_axis1_negative[labels \\[3\\] not found in axis-3-None],"AssertionError: Regex pattern did not match.
 Regex: 'labels \\[3\\] not found in axis'
 Input: '""labels Index([3], dtype=\'int64\') not contained in axis""'",failed
16749,tests.integ.modin.frame.test_drop,"test_drop_invalid_labels_axis1_negative[labels \\[\\(1, 2\\)\\] not found in axis-labels7-None]","AssertionError: Regex pattern did not match.
 Regex: 'labels \\[\\(1, 2\\)\\] not found in axis'
 Input: '""labels Index([1, 2], dtype=\'int64\') not contained in axis""'",failed
16751,tests.integ.modin.frame.test_drop,"test_drop_invalid_labels_axis1_negative[labels \\[1, 2, 3\\] not found in axis-labels8-None]","AssertionError: Regex pattern did not match.
 Regex: 'labels \\[1, 2, 3\\] not found in axis'
 Input: '""labels Index([1, 2, 3], dtype=\'int64\') not contained in axis""'",failed
16752,tests.integ.modin.groupby.test_groupby_size,test_groupby_agg_size[len-False-col3_int_identical],"TypeError: Must provide 'func' or tuples of '(column, aggfunc).",failed
16754,tests.integ.modin.frame.test_drop,test_drop_invalid_labels_axis1_negative[labels \\['blue'\\] not found in axis-labels9-None],"AssertionError: Regex pattern did not match.
 Regex: ""labels \\['blue'\\] not found in axis""
 Input: '""labels Index([\'blue\', \'red\'], dtype=\'object\') not contained in axis""'",failed
16758,tests.integ.modin.frame.test_drop,test_drop_invalid_labels_axis0_negative[labels \\[None\\] not found in axis-labels0-None-1],"AssertionError: Regex pattern did not match.
 Regex: 'labels \\[None\\] not found in axis'
 Input: '""labels Index([None], dtype=\'object\') not contained in axis""'",failed
16759,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols5-by5-None-groups],KeyError: 'col1',failed
16762,tests.integ.modin.groupby.test_groupby_size,test_groupby_agg_size[len-False-col4_int32],"TypeError: Must provide 'func' or tuples of '(column, aggfunc).",failed
16765,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_True-sort_True-group_keys_False-transform_returns_dataframe],TypeError: must pass an index to rename,failed
16767,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-None-by1-None-indices],KeyError: 'col1',failed
16771,tests.integ.modin.groupby.test_groupby_size,test_groupby_agg_size[len-False-col6_mixed],"TypeError: Must provide 'func' or tuples of '(column, aggfunc).",failed
16772,tests.integ.modin.frame.test_drop,test_drop_invalid_labels_axis0_negative[labels \\[4\\] not found in axis-4-None-1],"AssertionError: Regex pattern did not match.
 Regex: 'labels \\[4\\] not found in axis'
 Input: '""labels Index([4], dtype=\'int64\') not contained in axis""'",failed
16775,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_True-sort_True-group_keys_False-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 6, Index(['sum', 'mean', 'name', 'sum', 'mean', 'name'], dtype='object')",failed
16776,tests.integ.modin.frame.test_drop,"test_drop_invalid_labels_axis0_negative[labels \\[\\(1, 2\\)\\] not found in axis-labels6-None-1]","AssertionError: Regex pattern did not match.
 Regex: 'labels \\[\\(1, 2\\)\\] not found in axis'
 Input: '""labels Index([1, 2], dtype=\'int64\') not contained in axis""'",failed
16778,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_True-sort_True-group_keys_False-transform_returns_series],[XPASS(strict)] SNOW-1238546,failed
16781,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols5-by5-None-indices],KeyError: 'col1',failed
16782,tests.integ.modin.frame.test_drop,"test_drop_invalid_labels_axis0_negative[labels \\[4, 5, 7\\] not found in axis-labels7-None-3]","AssertionError: Regex pattern did not match.
 Regex: 'labels \\[4, 5, 7\\] not found in axis'
 Input: '""labels Index([4, 5, 7], dtype=\'int64\') not contained in axis""'",failed
16784,tests.integ.modin.groupby.test_groupby_size,test_groupby_agg_size[len-False-col7_bool],"TypeError: Must provide 'func' or tuples of '(column, aggfunc).",failed
16785,tests.integ.modin.frame.test_drop,test_drop_invalid_labels_axis0_negative[labels \\[7\\] not found in axis-labels8-None-2],"AssertionError: Regex pattern did not match.
 Regex: 'labels \\[7\\] not found in axis'
 Input: '""labels Index([1, 7], dtype=\'int64\') not contained in axis""'",failed
16787,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_True-sort_True-group_keys_False-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [a, b]
[left]:  [__reduced__    1
dtype: int64___reduced__    0.5
dtype: float64_a, __reduced__    2
dtype: int64___reduced__    2.0
dtype: float64_b]
[right]: [1_0.5_a, 2_2.0_b]
At positional index 0, first diff: __reduced__    1
dtype: int64___reduced__    0.5
dtype: float64_a != 1_0.5_a",failed
16794,tests.integ.modin.groupby.test_groupby_getitem,test_groupby_getitem[col5_int16-False-col1_grp],"assert False
 +  where False = isinstance(<modin.pandas.groupby.DataFrameGroupBy object at 0x33c5f1ff0>, ModinSerGroupBy)",failed
16797,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-col3-col1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
16798,tests.integ.modin.groupby.test_groupby_size,test_groupby_agg_size[len-False-col8_bool_missing],"TypeError: Must provide 'func' or tuples of '(column, aggfunc).",failed
16799,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_True-sort_False-group_keys_True-non_transform_returns_dataframe],AssertionError,failed
16803,tests.integ.modin.groupby.test_groupby_getitem,test_groupby_getitem[col5_int16-False-by1],"assert False
 +  where False = isinstance(<modin.pandas.groupby.DataFrameGroupBy object at 0x3428b07f0>, ModinSerGroupBy)",failed
16811,tests.integ.modin.groupby.test_groupby_getitem,test_groupby_getitem[col5_int16-False-by2],"assert False
 +  where False = isinstance(<modin.pandas.groupby.DataFrameGroupBy object at 0x341c2d900>, ModinSerGroupBy)",failed
16818,tests.integ.modin.groupby.test_groupby_size,test_groupby_agg_size[len-False-col9_int_missing],"TypeError: Must provide 'func' or tuples of '(column, aggfunc).",failed
16821,tests.integ.modin.frame.test_drop,test_drop_invalid_axis0_labels_errors_ignore[labels5-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 2)
[right]: (1, 2)",failed
16826,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-None-None-0-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
16831,tests.integ.modin.frame.test_drop,test_drop_preserve_index_names,"KeyError: ""labels Index(['red'], dtype='object') not contained in axis""",failed
16836,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-col3-by3-None-groups],KeyError: 'col1',failed
16838,tests.integ.modin.groupby.test_groupby_size,test_groupby_agg_size[len-False-col10_mixed_missing],"TypeError: Must provide 'func' or tuples of '(column, aggfunc).",failed
16846,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-col3-col3-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: [1.1], 3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0], 1.1: [1.1]}",failed
16849,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_True-sort_False-group_keys_True-transform_returns_dataframe],TypeError: must pass an index to rename,failed
16854,tests.integ.modin.groupby.test_groupby_size,test_groupby_agg_size[len-False-by9],"TypeError: Must provide 'func' or tuples of '(column, aggfunc).",failed
16856,tests.integ.modin.frame.test_drop,test_mixed_depth_drop[0-a],"KeyError: ""labels Index(['a'], dtype='object') not contained in axis""",failed
16860,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_True-sort_False-group_keys_True-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 6, MultiIndex([('a',  'sum'),
            ('a', 'mean'),
            ('a', 'name'),
            ('b',  'sum'),
            ('b', 'mean'),
            ('b', 'name')],
           )",failed
16861,tests.integ.modin.frame.test_drop,test_mixed_depth_drop[0-labels1],"KeyError: ""labels Index(['', 'a'], dtype='object') not contained in axis""",failed
16863,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-col3-col3-None-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: array([5]), 3.1: array([0]), 4.0: array([4]), 8.0: array([1]), 10.0: array([3]), 12.0: array([2])}
Expected dict: {3.1: array([0]), 8.0: array([1]), 12.0: array([2]), 10.0: array([3]), 4.0: array([4]), 1.1: array([5])}",failed
16866,tests.integ.modin.groupby.test_groupby_size,test_groupby_agg_size[len-False-by10],"TypeError: Must provide 'func' or tuples of '(column, aggfunc).",failed
16867,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_True-sort_False-group_keys_True-transform_returns_series],[XPASS(strict)] SNOW-1238546,failed
16868,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-col3-by3-None-indices],KeyError: 'col1',failed
16869,tests.integ.modin.frame.test_drop,test_mixed_depth_drop[0-labels2],"KeyError: ""labels Index(['top'], dtype='object') not contained in axis""",failed
16871,tests.integ.modin.groupby.test_groupby_size,test_error_checking,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
16875,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_True-sort_False-group_keys_True-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [a, b]
[left]:  [__reduced__    1
dtype: int64___reduced__    0.5
dtype: float64_a, __reduced__    2
dtype: int64___reduced__    2.0
dtype: float64_b]
[right]: [1_0.5_a, 2_2.0_b]
At positional index 0, first diff: __reduced__    1
dtype: int64___reduced__    0.5
dtype: float64_a != 1_0.5_a",failed
16876,tests.integ.modin.groupby.test_groupby_size,test_multiindex_negative,Failed: DID NOT RAISE <class 'KeyError'>,failed
16877,tests.integ.modin.frame.test_drop,test_mixed_depth_drop[0-labels4],"KeyError: ""labels Index(['OD', 'top', 'wx'], dtype='object') not contained in axis""",failed
16880,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-col3-None-0-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: [1.1], 3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0], 1.1: [1.1]}",failed
16884,tests.integ.modin.frame.test_drop,test_mixed_depth_drop[1-a],"KeyError: ""labels Index(['a'], dtype='object') not contained in axis""",failed
16886,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_True-sort_False-group_keys_False-non_transform_returns_dataframe],AssertionError,failed
16888,tests.integ.modin.frame.test_merge,test_merge_left_on_right_on[inner-True-left_i-right_i],KeyError: 'right_i',failed
16892,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-col3-None-0-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: array([5]), 3.1: array([0]), 4.0: array([4]), 8.0: array([1]), 10.0: array([3]), 12.0: array([2])}
Expected dict: {3.1: array([0]), 8.0: array([1]), 12.0: array([2]), 10.0: array([3]), 4.0: array([4]), 1.1: array([5])}",failed
16896,tests.integ.modin.frame.test_drop,test_mixed_depth_drop[1-labels1],"KeyError: ""labels Index(['', 'a'], dtype='object') not contained in axis""",failed
16897,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols4-col1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
16898,tests.integ.modin.frame.test_drop,test_mixed_depth_drop[1-labels2],"KeyError: ""labels Index(['top'], dtype='object') not contained in axis""",failed
16903,tests.integ.modin.frame.test_drop,test_mixed_depth_drop[1-labels4],"KeyError: ""labels Index(['OD', 'top', 'wx'], dtype='object') not contained in axis""",failed
16904,tests.integ.modin.frame.test_drop,test_drop_level[0-a-None],"KeyError: ""labels Index(['a'], dtype='object') not contained in axis""",failed
16906,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-col3-None-col3-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: [1.1], 3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0], 1.1: [1.1]}",failed
16918,tests.integ.modin.frame.test_merge,test_merge_left_on_right_on[inner-True-left_i-A],KeyError: 'left_i',failed
16919,tests.integ.modin.frame.test_drop,test_drop_level[1-a-None],"KeyError: ""labels Index(['a'], dtype='object') not contained in axis""",failed
16924,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-col3-None-col3-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: array([5]), 3.1: array([0]), 4.0: array([4]), 8.0: array([1]), 10.0: array([3]), 12.0: array([2])}
Expected dict: {3.1: array([0]), 8.0: array([1]), 12.0: array([2]), 10.0: array([3]), 4.0: array([4]), 1.1: array([5])}",failed
16926,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols5-by5-None-groups],KeyError: 'col1',failed
16937,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols10-col3-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: [(1.1, 6)], 3.1: [(3.1, 17)], 4.0: [(4.0, 5)], 8.0: [(8.0, 3)], 10.0: [(10.0, 15)], 12.0: [(12.0, 16)]}
Expected dict: {3.1: [(3.1, 17)], 8.0: [(8.0, 3)], 12.0: [(12.0, 16)], 10.0: [(10.0, 15)], 4.0: [(4.0, 5)], 1.1: [(1.1, 6)]}",failed
16944,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols10-col3-None-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: array([5]), 3.1: array([0]), 4.0: array([4]), 8.0: array([1]), 10.0: array([3]), 12.0: array([2])}
Expected dict: {3.1: array([0]), 8.0: array([1]), 12.0: array([2]), 10.0: array([3]), 4.0: array([4]), 1.1: array([5])}",failed
16948,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_True-sort_False-group_keys_False-transform_returns_dataframe],TypeError: must pass an index to rename,failed
16953,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_True-sort_False-group_keys_False-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 6, Index(['sum', 'mean', 'name', 'sum', 'mean', 'name'], dtype='object')",failed
16956,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_True-sort_False-group_keys_False-transform_returns_series],[XPASS(strict)] SNOW-1238546,failed
16959,tests.integ.modin.frame.test_drop_duplicates,test_drop_duplicates_with_misspelled_column_name_or_empty_subset[a],"AssertionError: Regex pattern did not match.
 Regex: 'None of .* are in the \\[columns\\]'
 Input: ""Index(['a'], dtype='object')""",failed
16962,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols11-None-level11-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
16963,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_True-sort_False-group_keys_False-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [a, b]
[left]:  [__reduced__    1
dtype: int64___reduced__    0.5
dtype: float64_a, __reduced__    2
dtype: int64___reduced__    2.0
dtype: float64_b]
[right]: [1_0.5_a, 2_2.0_b]
At positional index 0, first diff: __reduced__    1
dtype: int64___reduced__    0.5
dtype: float64_a != 1_0.5_a",failed
16964,tests.integ.modin.frame.test_drop_duplicates,test_drop_duplicates_with_misspelled_column_name_or_empty_subset[subset1],"AssertionError: Regex pattern did not match.
 Regex: 'None of .* are in the \\[columns\\]'
 Input: ""Index(['a'], dtype='object')""",failed
16968,tests.integ.modin.frame.test_merge,test_merge_left_on_right_on[inner-True-B-right_i],KeyError: 'right_i',failed
16969,tests.integ.modin.frame.test_drop_duplicates,test_drop_duplicates_with_misspelled_column_name_or_empty_subset[subset2],"AssertionError: Regex pattern did not match.
 Regex: '.* not in index'
 Input: ""Index(['a'], dtype='object')""",failed
16971,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_False-sort_True-group_keys_True-non_transform_returns_dataframe],AssertionError,failed
16974,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols5-by5-None-indices],KeyError: 'col1',failed
16980,tests.integ.modin.frame.test_drop_duplicates,test_drop_duplicates_with_misspelled_column_name_or_empty_subset[subset3],pandas.errors.IndexingError: Unalignable boolean Series provided as indexer (index of the boolean Series and of the indexed object do not match).,failed
17002,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_False-sort_True-group_keys_True-transform_returns_dataframe],TypeError: must pass an index to rename,failed
17003,tests.integ.modin.frame.test_merge,test_merge_left_on_right_on[inner-True-left_on9-right_on9],KeyError: 'right_i',failed
17005,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-None-None-0-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
17017,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_False-sort_True-group_keys_True-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 6, MultiIndex([('a',  'sum'),
            ('a', 'mean'),
            ('a', 'name'),
            ('b',  'sum'),
            ('b', 'mean'),
            ('b', 'name')],
           )",failed
17032,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_False-sort_True-group_keys_True-transform_returns_series],[XPASS(strict)] SNOW-1238546,failed
17046,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols11-None-level11-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
17049,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_False-sort_True-group_keys_True-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [a, b]
[left]:  [__reduced__    1
dtype: int64___reduced__    0.5
dtype: float64_a, __reduced__    2
dtype: int64___reduced__    2.0
dtype: float64_b]
[right]: [1_0.5_a, 2_2.0_b]
At positional index 0, first diff: __reduced__    1
dtype: int64___reduced__    0.5
dtype: float64_a != 1_0.5_a",failed
17054,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-col3-col3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
17061,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_False-sort_True-group_keys_False-non_transform_returns_dataframe],AssertionError,failed
17078,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols12-None-level12-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
17085,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-col3-None-0-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
17096,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols12-None-level12-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
17116,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-col3-None-col3-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
17121,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-col1-None-groups],ValueError: Categorical categories cannot be null,failed
17134,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-col1-None-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0.0 is not equal to expected key nan.
Actual dict: {0.0: array([3, 5]), 1.0: array([1, 2]), nan: array([0, 4])}
Expected dict: {nan: array([0, 4]), 1.0: array([1, 2]), 0.0: array([3, 5])}",failed
17138,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_False-sort_True-group_keys_False-transform_returns_dataframe],TypeError: must pass an index to rename,failed
17144,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols10-col3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
17148,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_False-sort_True-group_keys_False-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 6, Index(['sum', 'mean', 'name', 'sum', 'mean', 'name'], dtype='object')",failed
17149,tests.integ.modin.frame.test_dropna,test_basic_arguments[SNOW-1787507_subset_scalar],"TypeError: Index(...) must be called with a collection of some kind, 'toy' was passed",failed
17153,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-by1-None-groups],KeyError: 'col1',failed
17156,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_False-sort_True-group_keys_False-transform_returns_series],[XPASS(strict)] SNOW-1238546,failed
17160,tests.integ.modin.frame.test_dropna,test_axis_1_not_implemented,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
17164,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_False-sort_True-group_keys_False-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [a, b]
[left]:  [__reduced__    1
dtype: int64___reduced__    0.5
dtype: float64_a, __reduced__    2
dtype: int64___reduced__    2.0
dtype: float64_b]
[right]: [1_0.5_a, 2_2.0_b]
At positional index 0, first diff: __reduced__    1
dtype: int64___reduced__    0.5
dtype: float64_a != 1_0.5_a",failed
17168,tests.integ.modin.frame.test_dropna,test_dropna_negative,KeyError: ['invalid'],failed
17170,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols11-None-level11-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
17172,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_False-sort_False-group_keys_True-non_transform_returns_dataframe],AssertionError,failed
17177,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-by1-None-indices],KeyError: 'col1',failed
17186,tests.integ.modin.frame.test_dtypes,test_integer[dataframe_input0-input_dtype0-logical_dtype0],"AssertionError: assert dtype('int8') == dtype('int64')
 +  where dtype('int8') = 0    1\n1    2\n2    3\ndtype: int8.dtype",failed
17188,tests.integ.modin.frame.test_merge,test_merge_left_on_right_on[inner-False-left_i-right_i],KeyError: 'right_i',failed
17189,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols11-None-level11-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
17190,tests.integ.modin.frame.test_dtypes,test_integer[dataframe_input1-input_dtype1-logical_dtype1],"AssertionError: assert dtype('int16') == dtype('int64')
 +  where dtype('int16') = 0    1\n1    2\n2    3\ndtype: int16.dtype",failed
17192,tests.integ.modin.frame.test_dtypes,test_integer[dataframe_input2-input_dtype2-logical_dtype2],"AssertionError: assert dtype('int32') == dtype('int64')
 +  where dtype('int32') = 0    1\n1    2\n2    3\ndtype: int32.dtype",failed
17195,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-col1-None-groups],ValueError: Categorical categories cannot be null,failed
17196,tests.integ.modin.frame.test_reindex,test_reindex_index_fill_method_pandas_negative[1-bfill],ValueError: limit argument for 'backfill' method only well-defined if index and target are monotonic,failed
17199,tests.integ.modin.frame.test_dtypes,test_integer[dataframe_input4-input_dtype4-logical_dtype4],"AssertionError: assert dtype('int16') == dtype('int64')
 +  where dtype('int16') = 0    1024\n1    2048\n2    3072\ndtype: int16.dtype",failed
17200,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_False-sort_False-group_keys_True-transform_returns_dataframe],TypeError: must pass an index to rename,failed
17202,tests.integ.modin.frame.test_dtypes,test_integer[dataframe_input5-input_dtype5-logical_dtype5],"AssertionError: assert dtype('int32') == dtype('int64')
 +  where dtype('int32') = 0    1024\n1    2048\n2    3072\ndtype: int32.dtype",failed
17208,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_False-sort_False-group_keys_True-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 6, MultiIndex([('a',  'sum'),
            ('a', 'mean'),
            ('a', 'name'),
            ('b',  'sum'),
            ('b', 'mean'),
            ('b', 'name')],
           )",failed
17210,tests.integ.modin.frame.test_dtypes,test_integer[dataframe_input7-input_dtype7-logical_dtype7],"AssertionError: assert dtype('int32') == dtype('int64')
 +  where dtype('int32') = 0    1048576\n1    2097152\n2    3145728\ndtype: int32.dtype",failed
17211,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-col1-None-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0.0 is not equal to expected key nan.
Actual dict: {0.0: array([3, 5]), 1.0: array([1, 2]), nan: array([0, 4])}
Expected dict: {nan: array([0, 4]), 1.0: array([1, 2]), 0.0: array([3, 5])}",failed
17212,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols12-None-level12-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
17214,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_False-sort_False-group_keys_True-transform_returns_series],[XPASS(strict)] SNOW-1238546,failed
17220,tests.integ.modin.frame.test_merge,test_merge_left_on_right_on[inner-False-left_i-A],KeyError: 'left_i',failed
17224,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_False-sort_False-group_keys_True-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [a, b]
[left]:  [__reduced__    1
dtype: int64___reduced__    0.5
dtype: float64_a, __reduced__    2
dtype: int64___reduced__    2.0
dtype: float64_b]
[right]: [1_0.5_a, 2_2.0_b]
At positional index 0, first diff: __reduced__    1
dtype: int64___reduced__    0.5
dtype: float64_a != 1_0.5_a",failed
17227,tests.integ.modin.frame.test_reindex,test_reindex_index_fill_method_pandas_negative[1-backfill],ValueError: limit argument for 'backfill' method only well-defined if index and target are monotonic,failed
17231,tests.integ.modin.frame.test_dtypes,test_nullable_extension[dataframe_input0-None-snowpark_dtype0-logical_dtype0],AttributeError: 'DataFrame' object has no attribute 'get_snowflake_type',failed
17232,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-by3-None-groups],KeyError: 'col1',failed
17233,tests.integ.modin.frame.test_dtypes,test_nullable_extension[dataframe_input1-Int64-snowpark_dtype1-logical_dtype1],"AssertionError: assert Int64Dtype() == dtype('int64')
 +  where Int64Dtype() = 0       1\n1       2\n2    <NA>\ndtype: Int64.dtype",failed
17234,tests.integ.modin.frame.test_dtypes,test_nullable_extension[dataframe_input2-UInt64-snowpark_dtype2-logical_dtype2],"AssertionError: assert UInt64Dtype() == dtype('int64')
 +  where UInt64Dtype() = 0       1\n1       2\n2    <NA>\ndtype: UInt64.dtype",failed
17235,tests.integ.modin.frame.test_dtypes,test_nullable_extension[dataframe_input3-Int32-snowpark_dtype3-logical_dtype3],"AssertionError: assert Int32Dtype() == dtype('int64')
 +  where Int32Dtype() = 0       1\n1       2\n2    <NA>\ndtype: Int32.dtype",failed
17236,tests.integ.modin.frame.test_dtypes,test_nullable_extension[dataframe_input4-UInt32-snowpark_dtype4-logical_dtype4],"AssertionError: assert UInt32Dtype() == dtype('int64')
 +  where UInt32Dtype() = 0       1\n1       2\n2    <NA>\ndtype: UInt32.dtype",failed
17238,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_False-sort_False-group_keys_False-non_transform_returns_dataframe],AssertionError,failed
17241,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols12-None-level12-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
17253,tests.integ.modin.frame.test_reindex,test_reindex_index_fill_method_pandas_negative[1-pad],ValueError: limit argument for 'pad' method only well-defined if index and target are monotonic,failed
17257,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_False-sort_False-group_keys_False-transform_returns_dataframe],TypeError: must pass an index to rename,failed
17258,tests.integ.modin.frame.test_merge,test_merge_left_on_right_on[inner-False-B-right_i],KeyError: 'right_i',failed
17259,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-col1-None-groups],ValueError: Categorical categories cannot be null,failed
17264,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_False-sort_False-group_keys_False-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 6, Index(['sum', 'mean', 'name', 'sum', 'mean', 'name'], dtype='object')",failed
17267,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-col1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
17269,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_False-sort_False-group_keys_False-transform_returns_series],[XPASS(strict)] SNOW-1238546,failed
17276,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_True-dropna_False-sort_False-group_keys_False-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [a, b]
[left]:  [__reduced__    1
dtype: int64___reduced__    0.5
dtype: float64_a, __reduced__    2
dtype: int64___reduced__    2.0
dtype: float64_b]
[right]: [1_0.5_a, 2_2.0_b]
At positional index 0, first diff: __reduced__    1
dtype: int64___reduced__    0.5
dtype: float64_a != 1_0.5_a",failed
17285,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_True-sort_True-group_keys_True-non_transform_returns_dataframe],AssertionError,failed
17287,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-by3-None-indices],KeyError: 'col1',failed
17292,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-by1-None-groups],KeyError: 'col1',failed
17320,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols4-col1-None-groups],ValueError: Categorical categories cannot be null,failed
17322,tests.integ.modin.frame.test_reindex,test_reindex_index_fill_method_pandas_negative[1-ffill],ValueError: limit argument for 'pad' method only well-defined if index and target are monotonic,failed
17324,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-by1-None-indices],KeyError: 'col1',failed
17337,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols4-col1-None-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0.0 is not equal to expected key nan.
Actual dict: {0.0: array([3, 5]), 1.0: array([1, 2]), nan: array([0, 4])}
Expected dict: {nan: array([0, 4]), 1.0: array([1, 2]), 0.0: array([3, 5])}",failed
17338,tests.integ.modin.frame.test_merge,test_merge_left_on_right_on[inner-False-left_on9-right_on9],KeyError: 'right_i',failed
17351,tests.integ.modin.frame.test_reindex,test_reindex_index_fill_method_pandas_negative[2-bfill],ValueError: limit argument for 'backfill' method only well-defined if index and target are monotonic,failed
17355,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols5-by5-None-groups],KeyError: 'col1',failed
17361,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_True-sort_True-group_keys_True-transform_returns_dataframe],TypeError: must pass an index to rename,failed
17379,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_True-sort_True-group_keys_True-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 6, MultiIndex([('a',  'sum'),
            ('a', 'mean'),
            ('a', 'name'),
            ('b',  'sum'),
            ('b', 'mean'),
            ('b', 'name')],
           )",failed
17384,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_True-sort_True-group_keys_True-transform_returns_series],[XPASS(strict)] SNOW-1238546,failed
17387,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols5-by5-None-indices],KeyError: 'col1',failed
17394,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-col1-None-groups],ValueError: Categorical categories cannot be null,failed
17395,tests.integ.modin.frame.test_reindex,test_reindex_index_fill_method_pandas_negative[2-backfill],ValueError: limit argument for 'backfill' method only well-defined if index and target are monotonic,failed
17396,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_True-sort_True-group_keys_True-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [a, b]
[left]:  [__reduced__    1
dtype: int64___reduced__    0.5
dtype: float64_a, __reduced__    2
dtype: int64___reduced__    2.0
dtype: float64_b]
[right]: [1_0.5_a, 2_2.0_b]
At positional index 0, first diff: __reduced__    1
dtype: int64___reduced__    0.5
dtype: float64_a != 1_0.5_a",failed
17406,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_True-sort_True-group_keys_False-non_transform_returns_dataframe],AssertionError,failed
17412,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-col1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
17414,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-None-0-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
17431,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-by3-None-groups],KeyError: 'col1',failed
17436,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_True-sort_True-group_keys_False-transform_returns_dataframe],TypeError: must pass an index to rename,failed
17437,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-col3-None-groups],ValueError: Categorical categories cannot be null,failed
17446,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_True-sort_True-group_keys_False-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 6, Index(['sum', 'mean', 'name', 'sum', 'mean', 'name'], dtype='object')",failed
17457,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_True-sort_True-group_keys_False-transform_returns_series],[XPASS(strict)] SNOW-1238546,failed
17459,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-col3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
17469,tests.integ.modin.frame.test_reindex,test_reindex_index_fill_method_pandas_negative[2-pad],ValueError: limit argument for 'pad' method only well-defined if index and target are monotonic,failed
17470,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_True-sort_True-group_keys_False-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [a, b]
[left]:  [__reduced__    1
dtype: int64___reduced__    0.5
dtype: float64_a, __reduced__    2
dtype: int64___reduced__    2.0
dtype: float64_b]
[right]: [1_0.5_a, 2_2.0_b]
At positional index 0, first diff: __reduced__    1
dtype: int64___reduced__    0.5
dtype: float64_a != 1_0.5_a",failed
17472,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-by3-None-indices],KeyError: 'col1',failed
17479,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_True-sort_False-group_keys_True-non_transform_returns_dataframe],AssertionError,failed
17488,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-None-0-groups],ValueError: Categorical categories cannot be null,failed
17498,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols4-col1-None-groups],ValueError: Categorical categories cannot be null,failed
17502,tests.integ.modin.frame.test_reindex,test_reindex_index_fill_method_pandas_negative[2-ffill],ValueError: limit argument for 'pad' method only well-defined if index and target are monotonic,failed
17503,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-None-0-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
17508,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_True-sort_False-group_keys_True-transform_returns_dataframe],TypeError: must pass an index to rename,failed
17515,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_True-sort_False-group_keys_True-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 6, MultiIndex([('a',  'sum'),
            ('a', 'mean'),
            ('a', 'name'),
            ('b',  'sum'),
            ('b', 'mean'),
            ('b', 'name')],
           )",failed
17517,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols4-col1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
17524,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_True-sort_False-group_keys_True-transform_returns_series],[XPASS(strict)] SNOW-1238546,failed
17530,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-None-col3-groups],ValueError: Categorical categories cannot be null,failed
17535,tests.integ.modin.frame.test_merge,test_merge_left_on_right_on[right-True-left_i-right_i],KeyError: 'right_i',failed
17541,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_True-sort_False-group_keys_True-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [a, b]
[left]:  [__reduced__    1
dtype: int64___reduced__    0.5
dtype: float64_a, __reduced__    2
dtype: int64___reduced__    2.0
dtype: float64_b]
[right]: [1_0.5_a, 2_2.0_b]
At positional index 0, first diff: __reduced__    1
dtype: int64___reduced__    0.5
dtype: float64_a != 1_0.5_a",failed
17547,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_True-sort_False-group_keys_False-non_transform_returns_dataframe],AssertionError,failed
17553,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-None-col3-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
17555,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols5-by5-None-groups],KeyError: 'col1',failed
17573,tests.integ.modin.frame.test_merge,test_merge_left_on_right_on[right-True-left_i-A],KeyError: 'left_i',failed
17576,tests.integ.modin.frame.test_reindex,test_reindex_index_fill_method_pandas_negative[100-bfill],ValueError: limit argument for 'backfill' method only well-defined if index and target are monotonic,failed
17581,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols5-by5-None-indices],KeyError: 'col1',failed
17610,tests.integ.modin.frame.test_merge,test_merge_left_on_right_on[right-True-B-right_i],KeyError: 'right_i',failed
17614,tests.integ.modin.frame.test_reindex,test_reindex_index_fill_method_pandas_negative[100-backfill],ValueError: limit argument for 'backfill' method only well-defined if index and target are monotonic,failed
17616,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_True-sort_False-group_keys_False-transform_returns_dataframe],TypeError: must pass an index to rename,failed
17620,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-None-0-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
17623,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_True-sort_False-group_keys_False-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 6, Index(['sum', 'mean', 'name', 'sum', 'mean', 'name'], dtype='object')",failed
17629,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_True-sort_False-group_keys_False-transform_returns_series],[XPASS(strict)] SNOW-1238546,failed
17632,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols10-col3-None-groups],ValueError: Categorical categories cannot be null,failed
17638,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_True-sort_False-group_keys_False-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [a, b]
[left]:  [__reduced__    1
dtype: int64___reduced__    0.5
dtype: float64_a, __reduced__    2
dtype: int64___reduced__    2.0
dtype: float64_b]
[right]: [1_0.5_a, 2_2.0_b]
At positional index 0, first diff: __reduced__    1
dtype: int64___reduced__    0.5
dtype: float64_a != 1_0.5_a",failed
17644,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols10-col3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
17647,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_False-sort_True-group_keys_True-non_transform_returns_dataframe],AssertionError,failed
17650,tests.integ.modin.frame.test_reindex,test_reindex_index_fill_method_pandas_negative[100-pad],ValueError: limit argument for 'pad' method only well-defined if index and target are monotonic,failed
17651,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-col3-None-groups],ValueError: Categorical categories cannot be null,failed
17671,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols11-None-level11-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
17676,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-col3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
17682,tests.integ.modin.frame.test_merge,test_merge_left_on_right_on[right-True-left_on9-right_on9],KeyError: 'right_i',failed
17686,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_False-sort_True-group_keys_True-transform_returns_dataframe],TypeError: must pass an index to rename,failed
17694,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols11-None-level11-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
17696,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_False-sort_True-group_keys_True-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 6, MultiIndex([('a',  'sum'),
            ('a', 'mean'),
            ('a', 'name'),
            ('b',  'sum'),
            ('b', 'mean'),
            ('b', 'name')],
           )",failed
17703,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_False-sort_True-group_keys_True-transform_returns_series],[XPASS(strict)] SNOW-1238546,failed
17711,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_False-sort_True-group_keys_True-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [a, b]
[left]:  [__reduced__    1
dtype: int64___reduced__    0.5
dtype: float64_a, __reduced__    2
dtype: int64___reduced__    2.0
dtype: float64_b]
[right]: [1_0.5_a, 2_2.0_b]
At positional index 0, first diff: __reduced__    1
dtype: int64___reduced__    0.5
dtype: float64_a != 1_0.5_a",failed
17718,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols12-None-level12-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
17720,tests.integ.modin.frame.test_reindex,test_reindex_index_fill_method_pandas_negative[100-ffill],ValueError: limit argument for 'pad' method only well-defined if index and target are monotonic,failed
17721,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_False-sort_True-group_keys_False-non_transform_returns_dataframe],AssertionError,failed
17751,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols12-None-level12-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
17755,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-None-0-groups],ValueError: Categorical categories cannot be null,failed
17762,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_False-sort_True-group_keys_False-transform_returns_dataframe],TypeError: must pass an index to rename,failed
17770,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-None-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: [3, 5], 1: [1, 2], 2: [0, 4]}
Expected dict: {2: [0, 4], 1: [1, 2], 0: [3, 5]}",failed
17775,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_False-sort_True-group_keys_False-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 6, Index(['sum', 'mean', 'name', 'sum', 'mean', 'name'], dtype='object')",failed
17782,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_False-sort_True-group_keys_False-transform_returns_series],[XPASS(strict)] SNOW-1238546,failed
17786,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-None-0-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
17790,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-None-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [3, 5], 1: [1, 2], 2: [0, 4]}",failed
17795,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_False-sort_True-group_keys_False-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [a, b]
[left]:  [__reduced__    1
dtype: int64___reduced__    0.5
dtype: float64_a, __reduced__    2
dtype: int64___reduced__    2.0
dtype: float64_b]
[right]: [1_0.5_a, 2_2.0_b]
At positional index 0, first diff: __reduced__    1
dtype: int64___reduced__    0.5
dtype: float64_a != 1_0.5_a",failed
17805,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_False-sort_False-group_keys_True-non_transform_returns_dataframe],AssertionError,failed
17812,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-None-by1-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
17819,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-None-col3-groups],ValueError: Categorical categories cannot be null,failed
17833,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-None-by1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
17846,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-None-col3-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
17854,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-col3-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: [10.0, 1.1], 1: [8.0, 12.0], 2: [3.1, 4.0]}
Expected dict: {2: [3.1, 4.0], 1: [8.0, 12.0], 0: [10.0, 1.1]}",failed
17866,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-col3-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [3, 5], 1: [1, 2], 2: [0, 4]}",failed
17869,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols10-col3-None-groups],ValueError: Categorical categories cannot be null,failed
17882,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-col3-by3-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
17883,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols10-col3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
17887,tests.integ.modin.frame.test_reindex,test_reindex_index_fill_method_with_old_na_values_pandas_negative[bfill-1],Cannot qualify window in fillna.,xfailed
17890,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_False-sort_False-group_keys_True-transform_returns_dataframe],TypeError: must pass an index to rename,failed
17893,tests.integ.modin.frame.test_merge,test_merge_left_on_right_on[right-False-left_i-right_i],KeyError: 'right_i',failed
17897,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-col3-by3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
17902,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_False-sort_False-group_keys_True-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 6, MultiIndex([('a',  'sum'),
            ('a', 'mean'),
            ('a', 'name'),
            ('b',  'sum'),
            ('b', 'mean'),
            ('b', 'name')],
           )",failed
17911,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols11-None-level11-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
17915,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_False-sort_False-group_keys_True-transform_returns_series],[XPASS(strict)] SNOW-1238546,failed
17923,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols4-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: [(10.0, 15), (1.1, 6)], 1: [(8.0, 3), (12.0, 16)], 2: [(3.1, 17), (4.0, 5)]}
Expected dict: {2: [(3.1, 17), (4.0, 5)], 1: [(8.0, 3), (12.0, 16)], 0: [(10.0, 15), (1.1, 6)]}",failed
17927,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_False-sort_False-group_keys_True-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [a, b]
[left]:  [__reduced__    1
dtype: int64___reduced__    0.5
dtype: float64_a, __reduced__    2
dtype: int64___reduced__    2.0
dtype: float64_b]
[right]: [1_0.5_a, 2_2.0_b]
At positional index 0, first diff: __reduced__    1
dtype: int64___reduced__    0.5
dtype: float64_a != 1_0.5_a",failed
17936,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols4-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [3, 5], 1: [1, 2], 2: [0, 4]}",failed
17938,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_False-sort_False-group_keys_False-non_transform_returns_dataframe],AssertionError,failed
17939,tests.integ.modin.frame.test_merge,test_merge_left_on_right_on[right-False-left_i-A],KeyError: 'left_i',failed
17941,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols11-None-level11-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
17948,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols5-by5-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
17957,tests.integ.modin.frame.test_reindex,test_reindex_index_fill_method_with_old_na_values_pandas_negative[bfill-2],Cannot qualify window in fillna.,xfailed
17963,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols5-by5-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
17964,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols12-None-level12-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
17966,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_False-sort_False-group_keys_False-transform_returns_dataframe],TypeError: must pass an index to rename,failed
17973,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_False-sort_False-group_keys_False-non_transform_returns_series],"AssertionError: Series are different

Series length are different
[left]:  3, Index(['sum', 'mean', 'name'], dtype='object', name='custom_metrics')
[right]: 6, Index(['sum', 'mean', 'name', 'sum', 'mean', 'name'], dtype='object')",failed
17976,tests.integ.modin.frame.test_merge,test_merge_left_on_right_on[right-False-B-right_i],KeyError: 'right_i',failed
17980,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_False-sort_False-group_keys_False-transform_returns_series],[XPASS(strict)] SNOW-1238546,failed
18000,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-None-None-0-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [0], 1: [1], 2: [2], 3: [3], 4: [4], 5: [5]}",failed
18001,tests.integ.modin.groupby.test_groupby_apply,test_grouping_series_by_external_by[include_groups_False-dropna_False-sort_False-group_keys_False-return_scalar],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [a, b]
[left]:  [__reduced__    1
dtype: int64___reduced__    0.5
dtype: float64_a, __reduced__    2
dtype: int64___reduced__    2.0
dtype: float64_b]
[right]: [1_0.5_a, 2_2.0_b]
At positional index 0, first diff: __reduced__    1
dtype: int64___reduced__    0.5
dtype: float64_a != 1_0.5_a",failed
18003,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols12-None-level12-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
18006,tests.integ.modin.frame.test_reindex,test_reindex_index_fill_method_with_old_na_values_pandas_negative[bfill-100],Cannot qualify window in fillna.,xfailed
18015,tests.integ.modin.groupby.test_groupby_apply,test_non_callable_aggregation,AttributeError: 'str' object has no attribute '__name__'. Did you mean: '__ne__'?,failed
18017,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-col3-col3-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: [1.1], 3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0], 1.1: [1.1]}",failed
18022,tests.integ.modin.frame.test_merge,test_merge_left_on_right_on[right-False-left_on9-right_on9],KeyError: 'right_i',failed
18024,tests.integ.modin.groupby.test_groupby_apply,test_scalar_then_dataframe,[XPASS(strict)] Results in mismatch between udtf schema and the actual result. This should be rare in practice.,failed
18030,tests.integ.modin.groupby.test_groupby_apply,test_series_then_dataframe,[XPASS(strict)] Results in mismatch between udtf schema and the actual result. This should be rare in practice.,failed
18032,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-col3-col3-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {1.1: [5], 3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
18038,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-None-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [3, 5], 1: [1, 2], 2: [0, 4]}",failed
18044,tests.integ.modin.groupby.test_groupby_apply,test_scalar_then_series,pandas gives AttributeError: 'int' object has no attribute 'index'. See SNOW-1236959,xfailed
18050,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-col3-None-0-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: [1.1], 3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0], 1.1: [1.1]}",failed
18052,tests.integ.modin.frame.test_reindex,test_reindex_index_fill_method_with_old_na_values_pandas_negative[backfill-1],Cannot qualify window in fillna.,xfailed
18054,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-None-by1-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18057,tests.integ.modin.groupby.test_groupby_apply,test_scalar_then_series_then_dataframe,pandas gives AttributeError: 'int' object has no attribute 'index'. See SNOW-1236959,xfailed
18068,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-col3-None-0-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {1.1: [5], 3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
18083,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-None-by1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18087,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-col3-None-col3-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: [1.1], 3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0], 1.1: [1.1]}",failed
18100,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-col3-None-col3-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {1.1: [5], 3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
18110,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols10-col3-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: [(1.1, 6)], 3.1: [(3.1, 17)], 4.0: [(4.0, 5)], 8.0: [(8.0, 3)], 10.0: [(10.0, 15)], 12.0: [(12.0, 16)]}
Expected dict: {3.1: [(3.1, 17)], 8.0: [(8.0, 3)], 12.0: [(12.0, 16)], 10.0: [(10.0, 15)], 4.0: [(4.0, 5)], 1.1: [(1.1, 6)]}",failed
18114,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-col3-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [3, 5], 1: [1, 2], 2: [0, 4]}",failed
18121,tests.integ.modin.frame.test_reindex,test_reindex_index_fill_method_with_old_na_values_pandas_negative[backfill-2],Cannot qualify window in fillna.,xfailed
18123,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols10-col3-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {1.1: [5], 3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
18131,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-col3-by3-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18155,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols11-None-level11-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
18160,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-col3-by3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18167,tests.integ.modin.frame.test_reindex,test_reindex_index_fill_method_with_old_na_values_pandas_negative[backfill-100],Cannot qualify window in fillna.,xfailed
18182,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols11-None-level11-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
18192,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols4-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [3, 5], 1: [1, 2], 2: [0, 4]}",failed
18203,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols12-None-level12-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
18210,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols5-by5-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18233,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols5-by5-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18247,tests.integ.modin.frame.test_reindex,test_reindex_index_fill_method_with_old_na_values_pandas_negative[pad-1],Cannot qualify window in fillna.,xfailed
18263,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-None-None-0-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [0], 1: [1], 2: [2], 3: [3], 4: [4], 5: [5]}",failed
18276,tests.integ.modin.frame.test_merge,test_merge_left_on_right_on[outer-True-left_i-right_i],KeyError: 'right_i',failed
18278,tests.integ.modin.frame.test_reindex,test_reindex_index_fill_method_with_old_na_values_pandas_negative[pad-2],Cannot qualify window in fillna.,xfailed
18282,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols12-None-level12-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
18292,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-col3-col3-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {1.1: [5], 3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
18299,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0.0 is not equal to expected key 1.0.
Actual dict: {0.0: [3, 5], 1.0: [1, 2]}
Expected dict: {1.0: [1, 2], 0.0: [3, 5]}",failed
18319,tests.integ.modin.frame.test_merge,test_merge_left_on_right_on[outer-True-left_i-A],KeyError: 'left_i',failed
18322,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0.0: [3, 5], 1.0: [1, 2]}",failed
18325,tests.integ.modin.frame.test_reindex,test_reindex_index_fill_method_with_old_na_values_pandas_negative[pad-100],Cannot qualify window in fillna.,xfailed
18333,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-col3-None-0-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {1.1: [5], 3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
18338,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-by1-None-groups],"AssertionError: Actual and expected dicts have different lengths 5 and 3 respectively.
Actual dict: {(nan, 4.0): [0, 4], (0.0, 5.0): [5], (0.0, 7.0): [3], (1.0, 5.0): [1], (1.0, nan): [2]}
Expected dict: {(1.0, 5.0): [1], (0.0, 7.0): [3], (0.0, 5.0): [5]}",failed
18351,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-by1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18359,tests.integ.modin.frame.test_merge,test_merge_left_on_right_on[outer-True-B-right_i],KeyError: 'right_i',failed
18361,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-col3-None-col3-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {1.1: [5], 3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
18364,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0.0 is not equal to expected key 1.0.
Actual dict: {0.0: [10.0, nan], 1.0: [8.0, 12.0]}
Expected dict: {1.0: [8.0, 12.0], 0.0: [10.0, nan]}",failed
18382,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0.0: [3, 5], 1.0: [1, 2]}",failed
18398,tests.integ.modin.frame.test_merge,test_merge_left_on_right_on[outer-True-left_on9-right_on9],KeyError: 'right_i',failed
18399,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-by3-None-groups],"AssertionError: Actual and expected dicts have different lengths 5 and 3 respectively.
Actual dict: {(nan, 4.0): [3.1, 4.0], (0.0, 5.0): [nan], (0.0, 7.0): [10.0], (1.0, 5.0): [8.0], (1.0, nan): [12.0]}
Expected dict: {(1.0, 5.0): [8.0], (0.0, 7.0): [10.0], (0.0, 5.0): [nan]}",failed
18402,tests.integ.modin.frame.test_reindex,test_reindex_index_fill_method_with_old_na_values_pandas_negative[ffill-1],Cannot qualify window in fillna.,xfailed
18416,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-by3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18429,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols4-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0.0 is not equal to expected key 1.0.
Actual dict: {0.0: [(10.0, 15.0), (nan, nan)], 1.0: [(8.0, 3.0), (12.0, 16.0)]}
Expected dict: {1.0: [(8.0, 3.0), (12.0, 16.0)], 0.0: [(10.0, 15.0), (nan, nan)]}",failed
18430,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols10-col3-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {1.1: [5], 3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
18432,tests.integ.modin.frame.test_reindex,test_reindex_index_fill_method_with_old_na_values_pandas_negative[ffill-2],Cannot qualify window in fillna.,xfailed
18442,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols4-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0.0: [3, 5], 1.0: [1, 2]}",failed
18455,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols11-None-level11-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
18457,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols5-by5-None-groups],"AssertionError: Actual and expected dicts have different lengths 5 and 3 respectively.
Actual dict: {(nan, 4.0): [(3.1, 17.0), (4.0, nan)], (0.0, 5.0): [(nan, nan)], (0.0, 7.0): [(10.0, 15.0)], (1.0, 5.0): [(8.0, 3.0)], (1.0, nan): [(12.0, 16.0)]}
Expected dict: {(1.0, 5.0): [(8.0, 3.0)], (0.0, 7.0): [(10.0, 15.0)], (0.0, 5.0): [(nan, nan)]}",failed
18462,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols5-by5-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18472,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols11-None-level11-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
18476,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-None-0-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [0], 1: [1], 2: [2], 3: [3], 4: [4], 5: [5]}",failed
18483,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-col3-None-groups],"AssertionError: Actual dict has the wrong key at position 1. Actual key 4.0 is not equal to expected key 8.0.
Actual dict: {3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0]}",failed
18486,tests.integ.modin.frame.test_reindex,test_reindex_index_fill_method_with_old_na_values_pandas_negative[ffill-100],Cannot qualify window in fillna.,xfailed
18489,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols12-None-level12-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
18493,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-col3-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
18501,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-None-0-groups],"AssertionError: Actual dict has the wrong key at position 1. Actual key 4.0 is not equal to expected key 8.0.
Actual dict: {3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0]}",failed
18506,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols12-None-level12-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
18509,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-None-0-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
18518,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-None-col3-groups],"AssertionError: Actual dict has the wrong key at position 1. Actual key 4.0 is not equal to expected key 8.0.
Actual dict: {3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0]}",failed
18524,tests.integ.modin.frame.test_merge,test_merge_left_on_right_on[outer-False-left_i-right_i],KeyError: 'right_i',failed
18526,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-None-col3-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
18530,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0.0: [3, 5], 1.0: [1, 2]}",failed
18535,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols10-col3-None-groups],"AssertionError: Actual dict has the wrong key at position 1. Actual key 4.0 is not equal to expected key 8.0.
Actual dict: {3.1: [(3.1, 17.0)], 4.0: [(4.0, nan)], 8.0: [(8.0, 3.0)], 10.0: [(10.0, 15.0)], 12.0: [(12.0, 16.0)]}
Expected dict: {3.1: [(3.1, 17.0)], 8.0: [(8.0, 3.0)], 12.0: [(12.0, 16.0)], 10.0: [(10.0, 15.0)], 4.0: [(4.0, nan)]}",failed
18539,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-by1-None-groups],"AssertionError: Actual and expected dicts have different lengths 5 and 3 respectively.
Actual dict: {(nan, 4.0): [0, 4], (0.0, 5.0): [5], (0.0, 7.0): [3], (1.0, 5.0): [1], (1.0, nan): [2]}
Expected dict: {(0.0, 5.0): [5], (0.0, 7.0): [3], (1.0, 5.0): [1]}",failed
18544,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols10-col3-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
18550,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-by1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18556,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols11-None-level11-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
18566,tests.integ.modin.groupby.test_groupby_basic_agg,test_single_group_row_groupby_with_variant[<lambda>0-by_col_data1-expected_groupby_col1],TypeError: unhashable type: 'list',failed
18568,tests.integ.modin.frame.test_merge,test_merge_left_on_right_on[outer-False-left_i-A],KeyError: 'left_i',failed
18570,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols11-None-level11-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
18572,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0.0: [3, 5], 1.0: [1, 2]}",failed
18580,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-by3-None-groups],"AssertionError: Actual and expected dicts have different lengths 5 and 3 respectively.
Actual dict: {(nan, 4.0): [3.1, 4.0], (0.0, 5.0): [nan], (0.0, 7.0): [10.0], (1.0, 5.0): [8.0], (1.0, nan): [12.0]}
Expected dict: {(0.0, 5.0): [nan], (0.0, 7.0): [10.0], (1.0, 5.0): [8.0]}",failed
18581,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols12-None-level12-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
18590,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-by3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18591,tests.integ.modin.frame.test_merge,test_merge_left_on_right_on[outer-False-B-right_i],KeyError: 'right_i',failed
18594,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols12-None-level12-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
18600,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-None-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: [3, 5], 1: [1, 2], 2: [0, 4]}
Expected dict: {2: [0, 4], 1: [1, 2], 0: [3, 5]}",failed
18604,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols4-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0.0: [3, 5], 1.0: [1, 2]}",failed
18606,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-None-col1-None-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: array([3, 5]), 1: array([1, 2]), 2: array([0, 4])}
Expected dict: {2: array([0, 4]), 1: array([1, 2]), 0: array([3, 5])}",failed
18608,tests.integ.modin.frame.test_merge,test_merge_left_on_right_on[outer-False-left_on9-right_on9],KeyError: 'right_i',failed
18613,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols5-by5-None-groups],"AssertionError: Actual and expected dicts have different lengths 5 and 3 respectively.
Actual dict: {(nan, 4.0): [(3.1, 17.0), (4.0, nan)], (0.0, 5.0): [(nan, nan)], (0.0, 7.0): [(10.0, 15.0)], (1.0, 5.0): [(8.0, 3.0)], (1.0, nan): [(12.0, 16.0)]}
Expected dict: {(0.0, 5.0): [(nan, nan)], (0.0, 7.0): [(10.0, 15.0)], (1.0, 5.0): [(8.0, 3.0)]}",failed
18614,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-None-by1-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18623,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-None-by1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18624,tests.integ.modin.groupby.test_groupby_transform,test_return_timedelta,[XPASS(strict)] SNOW-1619940,failed
18625,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols5-by5-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18628,tests.integ.modin.frame.test_merge,test_merge_left_on_right_index[left-True-left_i],KeyError: 'left_i',failed
18629,tests.integ.modin.groupby.test_groupby_transform,test_timedelta_input[timedelta_column],[XPASS(strict)] ,failed
18631,tests.integ.modin.groupby.test_groupby_transform,test_timedelta_input[timedelta_index],[XPASS(strict)] ,failed
18634,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-col3-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: [10.0, 1.1], 1: [8.0, 12.0], 2: [3.1, 4.0]}
Expected dict: {2: [3.1, 4.0], 1: [8.0, 12.0], 0: [10.0, 1.1]}",failed
18639,tests.integ.modin.frame.test_merge,test_merge_left_on_right_index[left-True-A],KeyError: 'None of [None] are in the columns',failed
18651,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-col3-col1-None-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: array([3, 5]), 1: array([1, 2]), 2: array([0, 4])}
Expected dict: {2: array([0, 4]), 1: array([1, 2]), 0: array([3, 5])}",failed
18654,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-None-0-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [0], 1: [1], 2: [2], 3: [3], 4: [4], 5: [5]}",failed
18682,tests.integ.modin.groupby.test_groupby_transform,test_groupby_transform_single_output_col,ValueError: transform must return a scalar value for each group,failed
18683,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-col3-by3-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18691,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-col3-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
18692,tests.integ.modin.frame.test_merge,test_merge_left_on_right_index[left-True-B],KeyError: 'None of [None] are in the columns',failed
18694,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-col3-by3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18715,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols4-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: [(10.0, 15), (1.1, 6)], 1: [(8.0, 3), (12.0, 16)], 2: [(3.1, 17), (4.0, 5)]}
Expected dict: {2: [(3.1, 17), (4.0, 5)], 1: [(8.0, 3), (12.0, 16)], 0: [(10.0, 15), (1.1, 6)]}",failed
18718,tests.integ.modin.groupby.test_groupby_basic_agg,test_single_group_row_groupby_with_variant[<lambda>1-by_col_data1-expected_groupby_col1],TypeError: unhashable type: 'list',failed
18730,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols4-col1-None-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: array([3, 5]), 1: array([1, 2]), 2: array([0, 4])}
Expected dict: {2: array([0, 4]), 1: array([1, 2]), 0: array([3, 5])}",failed
18732,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-None-0-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
18741,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols5-by5-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18749,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols5-by5-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18750,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-None-col3-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
18753,tests.integ.modin.frame.test_merge,test_merge_left_on_right_index[left-False-left_i],KeyError: 'left_i',failed
18756,tests.integ.modin.groupby.test_groupby_unique,test_all_params[index-True-True-False-animal-None],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
18760,tests.integ.modin.groupby.test_groupby_unique,test_all_params[index-True-True-False-by1-None],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
18762,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-None-None-0-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18764,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols10-col3-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
18765,tests.integ.modin.groupby.test_groupby_unique,test_all_params[index-True-True-False-by2-None],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
18767,tests.integ.modin.frame.test_merge,test_merge_left_on_right_index[left-False-A],KeyError: 'None of [None] are in the columns',failed
18768,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-col3-col3-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: [1.1], 3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0], 1.1: [1.1]}",failed
18771,tests.integ.modin.groupby.test_groupby_unique,test_all_params[index-True-True-False-None-level3],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
18775,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-col3-col3-None-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: array([5]), 3.1: array([0]), 4.0: array([4]), 8.0: array([1]), 10.0: array([3]), 12.0: array([2])}
Expected dict: {3.1: array([0]), 8.0: array([1]), 12.0: array([2]), 10.0: array([3]), 4.0: array([4]), 1.1: array([5])}",failed
18776,tests.integ.modin.groupby.test_groupby_unique,test_all_params[index-True-True-False-None-level4],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
18779,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols11-None-level11-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
18783,tests.integ.modin.groupby.test_groupby_unique,test_all_params[index-True-True-False-None-animal_index],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
18785,tests.integ.modin.frame.test_merge,test_merge_left_on_right_index[left-False-B],KeyError: 'None of [None] are in the columns',failed
18787,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-col3-None-0-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: [1.1], 3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0], 1.1: [1.1]}",failed
18794,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-col3-None-0-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: array([5]), 3.1: array([0]), 4.0: array([4]), 8.0: array([1]), 10.0: array([3]), 12.0: array([2])}
Expected dict: {3.1: array([0]), 8.0: array([1]), 12.0: array([2]), 10.0: array([3]), 4.0: array([4]), 1.1: array([5])}",failed
18795,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols11-None-level11-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
18803,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-col3-None-col3-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: [1.1], 3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0], 1.1: [1.1]}",failed
18809,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols12-None-level12-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
18810,tests.integ.modin.frame.test_merge,test_merge_left_on_right_index[inner-True-left_i],KeyError: 'left_i',failed
18813,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-col3-None-col3-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: array([5]), 3.1: array([0]), 4.0: array([4]), 8.0: array([1]), 10.0: array([3]), 12.0: array([2])}
Expected dict: {3.1: array([0]), 8.0: array([1]), 12.0: array([2]), 10.0: array([3]), 4.0: array([4]), 1.1: array([5])}",failed
18814,tests.integ.modin.groupby.test_groupby_unique,test_all_params[index-True-False-False-animal-None],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
18818,tests.integ.modin.groupby.test_groupby_unique,test_all_params[index-True-False-False-by1-None],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
18820,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols10-col3-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: [(1.1, 6)], 3.1: [(3.1, 17)], 4.0: [(4.0, 5)], 8.0: [(8.0, 3)], 10.0: [(10.0, 15)], 12.0: [(12.0, 16)]}
Expected dict: {3.1: [(3.1, 17)], 8.0: [(8.0, 3)], 12.0: [(12.0, 16)], 10.0: [(10.0, 15)], 4.0: [(4.0, 5)], 1.1: [(1.1, 6)]}",failed
18823,tests.integ.modin.groupby.test_groupby_unique,test_all_params[index-True-False-False-by2-None],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
18827,tests.integ.modin.frame.test_merge,test_merge_left_on_right_index[inner-True-A],KeyError: 'None of [None] are in the columns',failed
18829,tests.integ.modin.groupby.test_groupby_unique,test_all_params[index-True-False-False-None-level3],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
18830,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols10-col3-None-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: array([5]), 3.1: array([0]), 4.0: array([4]), 8.0: array([1]), 10.0: array([3]), 12.0: array([2])}
Expected dict: {3.1: array([0]), 8.0: array([1]), 12.0: array([2]), 10.0: array([3]), 4.0: array([4]), 1.1: array([5])}",failed
18834,tests.integ.modin.groupby.test_groupby_unique,test_all_params[index-True-False-False-None-level4],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
18838,tests.integ.modin.groupby.test_groupby_unique,test_all_params[index-True-False-False-None-animal_index],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
18840,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols11-None-level11-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
18844,tests.integ.modin.frame.test_merge,test_merge_left_on_right_index[inner-True-B],KeyError: 'None of [None] are in the columns',failed
18847,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols12-None-level12-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
18865,tests.integ.modin.frame.test_merge,test_merge_left_on_right_index[inner-False-left_i],KeyError: 'left_i',failed
18866,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-None-col1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18869,tests.integ.modin.groupby.test_groupby_unique,test_all_params[index-False-True-False-animal-None],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
18874,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-None-by1-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18875,tests.integ.modin.groupby.test_groupby_basic_agg,test_single_group_row_groupby_with_variant[<lambda>2-by_col_data1-expected_groupby_col1],TypeError: unhashable type: 'list',failed
18878,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols11-None-level11-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
18883,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-None-by1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18884,tests.integ.modin.frame.test_merge,test_merge_left_on_right_index[inner-False-A],KeyError: 'None of [None] are in the columns',failed
18892,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols12-None-level12-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
18893,tests.integ.modin.groupby.test_groupby_unique,test_all_params[index-False-True-False-by1-None],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
18899,tests.integ.modin.groupby.test_groupby_unique,test_all_params[index-False-True-False-by2-None],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
18900,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-col3-col1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18903,tests.integ.modin.groupby.test_groupby_unique,test_all_params[index-False-True-False-None-level3],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
18904,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols12-None-level12-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
18907,tests.integ.modin.groupby.test_groupby_unique,test_all_params[index-False-True-False-None-level4],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
18910,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-col3-by3-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18913,tests.integ.modin.groupby.test_groupby_unique,test_all_params[index-False-True-False-None-animal_index],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
18915,tests.integ.modin.frame.test_merge,test_merge_left_on_right_index[inner-False-B],KeyError: 'None of [None] are in the columns',failed
18918,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-col1-None-groups],ValueError: Categorical categories cannot be null,failed
18921,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-col3-by3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18928,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-col1-None-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0.0 is not equal to expected key nan.
Actual dict: {0.0: array([3, 5]), 1.0: array([1, 2]), nan: array([0, 4])}
Expected dict: {nan: array([0, 4]), 1.0: array([1, 2]), 0.0: array([3, 5])}",failed
18937,tests.integ.modin.frame.test_reindex,test_reindex_index_non_overlapping_different_types_index_negative,Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
18939,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-by1-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18941,tests.integ.modin.frame.test_merge,test_merge_left_on_right_index[right-True-left_i],KeyError: 'left_i',failed
18942,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols4-col1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18945,tests.integ.modin.groupby.test_groupby_unique,test_all_params[index-False-False-False-animal-None],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
18947,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-by1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18950,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols5-by5-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18951,tests.integ.modin.groupby.test_groupby_unique,test_all_params[index-False-False-False-by1-None],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
18955,tests.integ.modin.frame.test_reindex,test_reindex_index_duplicate_values[new_index0],ValueError: cannot reindex on an axis with duplicate labels,failed
18956,tests.integ.modin.groupby.test_groupby_unique,test_all_params[index-False-False-False-by2-None],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
18960,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols5-by5-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18962,tests.integ.modin.groupby.test_groupby_unique,test_all_params[index-False-False-False-None-level3],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
18963,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-col1-None-groups],ValueError: Categorical categories cannot be null,failed
18966,tests.integ.modin.frame.test_merge,test_merge_left_on_right_index[right-True-A],KeyError: 'None of [None] are in the columns',failed
18968,tests.integ.modin.groupby.test_groupby_unique,test_all_params[index-False-False-False-None-level4],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
18970,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-col1-None-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0.0 is not equal to expected key nan.
Actual dict: {0.0: array([3, 5]), 1.0: array([1, 2]), nan: array([0, 4])}
Expected dict: {nan: array([0, 4]), 1.0: array([1, 2]), 0.0: array([3, 5])}",failed
18971,tests.integ.modin.frame.test_reindex,test_reindex_index_duplicate_values[new_index1],ValueError: cannot reindex on an axis with duplicate labels,failed
18973,tests.integ.modin.groupby.test_groupby_unique,test_all_params[index-False-False-False-None-animal_index],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
18974,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-None-None-0-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18977,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-by3-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18978,tests.integ.modin.frame.test_merge,test_merge_left_on_right_index[right-True-B],KeyError: 'None of [None] are in the columns',failed
18984,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-by3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18988,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-col3-col3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
18994,tests.integ.modin.frame.test_merge,test_merge_left_on_right_index[right-False-left_i],KeyError: 'left_i',failed
18995,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols4-col1-None-groups],ValueError: Categorical categories cannot be null,failed
18998,tests.integ.modin.groupby.test_groupby_unique,test_all_params[0-True-True-False-animal-None],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
19002,tests.integ.modin.groupby.test_groupby_basic_agg,test_single_group_row_groupby_with_variant[<lambda>3-by_col_data1-expected_groupby_col1],TypeError: unhashable type: 'list',failed
19003,tests.integ.modin.groupby.test_groupby_unique,test_all_params[0-True-True-False-by1-None],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
19004,tests.integ.modin.frame.test_reindex,test_reindex_index_duplicate_values[new_index2],ValueError: cannot reindex on an axis with duplicate labels,failed
19005,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols4-col1-None-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0.0 is not equal to expected key nan.
Actual dict: {0.0: array([3, 5]), 1.0: array([1, 2]), nan: array([0, 4])}
Expected dict: {nan: array([0, 4]), 1.0: array([1, 2]), 0.0: array([3, 5])}",failed
19008,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-col3-None-0-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19010,tests.integ.modin.groupby.test_groupby_unique,test_all_params[0-True-True-False-by2-None],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
19012,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols5-by5-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19015,tests.integ.modin.groupby.test_groupby_unique,test_all_params[0-True-True-False-None-level3],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
19016,tests.integ.modin.frame.test_merge,test_merge_left_on_right_index[right-False-A],KeyError: 'None of [None] are in the columns',failed
19020,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols5-by5-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19021,tests.integ.modin.groupby.test_groupby_unique,test_all_params[0-True-True-False-None-level4],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
19023,tests.integ.modin.frame.test_reindex,test_reindex_index_duplicate_values[new_index3],ValueError: cannot reindex on an axis with duplicate labels,failed
19027,tests.integ.modin.groupby.test_groupby_unique,test_all_params[0-True-True-False-None-animal_index],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
19028,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-col3-None-col3-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19040,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-None-0-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19043,tests.integ.modin.frame.test_merge,test_merge_left_on_right_index[right-False-B],KeyError: 'None of [None] are in the columns',failed
19053,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols10-col3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19060,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-col3-None-groups],ValueError: Categorical categories cannot be null,failed
19062,tests.integ.modin.groupby.test_groupby_unique,test_all_params[0-True-False-False-animal-None],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
19068,tests.integ.modin.groupby.test_groupby_unique,test_all_params[0-True-False-False-by1-None],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
19069,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-col3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19072,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols11-None-level11-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
19077,tests.integ.modin.groupby.test_groupby_unique,test_all_params[0-True-False-False-by2-None],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
19083,tests.integ.modin.groupby.test_groupby_unique,test_all_params[0-True-False-False-None-level3],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
19088,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-None-0-groups],ValueError: Categorical categories cannot be null,failed
19090,tests.integ.modin.groupby.test_groupby_unique,test_all_params[0-True-False-False-None-level4],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
19091,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols11-None-level11-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
19094,tests.integ.modin.frame.test_merge,test_merge_left_on_right_index[outer-True-left_i],KeyError: 'left_i',failed
19097,tests.integ.modin.groupby.test_groupby_unique,test_all_params[0-True-False-False-None-animal_index],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
19100,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-None-0-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19110,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols12-None-level12-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
19123,tests.integ.modin.frame.test_merge,test_merge_left_on_right_index[outer-True-A],KeyError: 'None of [None] are in the columns',failed
19128,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols12-None-level12-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
19135,tests.integ.modin.groupby.test_groupby_unique,test_all_params[0-False-True-False-animal-None],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
19136,tests.integ.modin.frame.test_merge,test_merge_left_on_right_index[outer-True-B],KeyError: 'None of [None] are in the columns',failed
19141,tests.integ.modin.groupby.test_groupby_unique,test_all_params[0-False-True-False-by1-None],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
19144,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-col1-None-groups],ValueError: Categorical categories cannot be null,failed
19147,tests.integ.modin.groupby.test_groupby_unique,test_all_params[0-False-True-False-by2-None],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
19152,tests.integ.modin.groupby.test_groupby_unique,test_all_params[0-False-True-False-None-level3],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
19156,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-None-col3-groups],ValueError: Categorical categories cannot be null,failed
19157,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-col1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19164,tests.integ.modin.frame.test_merge,test_merge_left_on_right_index[outer-False-left_i],KeyError: 'left_i',failed
19166,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-None-col3-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19167,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-by1-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19178,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-by1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19181,tests.integ.modin.frame.test_merge,test_merge_left_on_right_index[outer-False-A],KeyError: 'None of [None] are in the columns',failed
19182,tests.integ.modin.groupby.test_groupby_unique,test_all_params[0-False-True-False-None-level4],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
19186,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols10-col3-None-groups],ValueError: Categorical categories cannot be null,failed
19192,tests.integ.modin.groupby.test_groupby_unique,test_all_params[0-False-True-False-None-animal_index],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
19194,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols10-col3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19199,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-col1-None-groups],ValueError: Categorical categories cannot be null,failed
19205,tests.integ.modin.groupby.test_groupby_basic_agg,test_single_group_row_groupby_with_variant[<lambda>4-by_col_data1-expected_groupby_col1],TypeError: unhashable type: 'list',failed
19211,tests.integ.modin.frame.test_merge,test_merge_left_on_right_index[outer-False-B],KeyError: 'None of [None] are in the columns',failed
19213,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-col1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19215,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols11-None-level11-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
19224,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-by3-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19227,tests.integ.modin.groupby.test_groupby_unique,test_all_params[0-False-False-False-animal-None],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
19230,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols11-None-level11-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
19234,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-by3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19235,tests.integ.modin.groupby.test_groupby_unique,test_all_params[0-False-False-False-by1-None],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
19236,tests.integ.modin.frame.test_merge,test_merge_left_index_right_on[left-True-right_i],KeyError: 'right_i',failed
19241,tests.integ.modin.groupby.test_groupby_unique,test_all_params[0-False-False-False-by2-None],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
19243,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols12-None-level12-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
19247,tests.integ.modin.groupby.test_groupby_unique,test_all_params[0-False-False-False-None-level3],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
19251,tests.integ.modin.groupby.test_groupby_unique,test_all_params[0-False-False-False-None-level4],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
19254,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols12-None-level12-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
19257,tests.integ.modin.groupby.test_groupby_unique,test_all_params[0-False-False-False-None-animal_index],AttributeError: 'DataFrameGroupBy' object has no attribute 'unique'. Did you mean: 'nunique'?,failed
19260,tests.integ.modin.groupby.test_groupby_unique,test_aggregating_string_column_with_nulls,[XPASS(strict)] SNOW-1859090,failed
19262,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-None-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: [3, 5], 1: [1, 2], 2: [0, 4]}
Expected dict: {2: [0, 4], 1: [1, 2], 0: [3, 5]}",failed
19265,tests.integ.modin.groupby.test_groupby_unique,test_axis_1,Failed: DID NOT RAISE <class 'Exception'>,failed
19269,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-None-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [3, 5], 1: [1, 2], 2: [0, 4]}",failed
19272,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols4-col1-None-groups],ValueError: Categorical categories cannot be null,failed
19273,tests.integ.modin.frame.test_merge,test_merge_left_index_right_on[left-True-A],KeyError: 'None of [None] are in the columns',failed
19276,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-None-by1-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19281,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols4-col1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19284,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-None-by1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19288,tests.integ.modin.frame.test_merge,test_merge_left_index_right_on[left-True-B],KeyError: 'None of [None] are in the columns',failed
19290,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols5-by5-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19292,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-col3-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: [10.0, 1.1], 1: [8.0, 12.0], 2: [3.1, 4.0]}
Expected dict: {2: [3.1, 4.0], 1: [8.0, 12.0], 0: [10.0, 1.1]}",failed
19297,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols5-by5-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19299,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-col3-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [3, 5], 1: [1, 2], 2: [0, 4]}",failed
19308,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-col3-by3-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19311,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-None-0-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19313,tests.integ.modin.groupby.test_groupby_with_grouper,test_groupby_nunique_with_grouper[by2],"KeyError: Grouper(level=1, axis=0, sort=False, dropna=True)",failed
19315,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-col3-by3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19323,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols4-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: [(10.0, 15), (1.1, 6)], 1: [(8.0, 3), (12.0, 16)], 2: [(3.1, 17), (4.0, 5)]}
Expected dict: {2: [(3.1, 17), (4.0, 5)], 1: [(8.0, 3), (12.0, 16)], 0: [(10.0, 15), (1.1, 6)]}",failed
19327,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-col3-None-groups],ValueError: Categorical categories cannot be null,failed
19329,tests.integ.modin.frame.test_merge,test_merge_left_index_right_on[left-False-right_i],KeyError: 'right_i',failed
19331,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols4-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [3, 5], 1: [1, 2], 2: [0, 4]}",failed
19337,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-col3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19341,tests.integ.modin.groupby.test_groupby_with_grouper,test_groupby_agg_level_resample[by1],"KeyError: TimeGrouper(level=1, freq=<90 * Seconds>, axis=0, sort=True, dropna=True, closed='left', label='left', how='mean', convention='e', origin='start_day')",failed
19342,tests.integ.modin.groupby.test_groupby_basic_agg,test_single_group_row_groupby_with_variant[<lambda>5-by_col_data1-expected_groupby_col1],TypeError: unhashable type: 'list',failed
19343,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols5-by5-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19350,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols5-by5-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19352,tests.integ.modin.frame.test_merge,test_merge_left_index_right_on[left-False-A],KeyError: 'None of [None] are in the columns',failed
19354,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-None-0-groups],ValueError: Categorical categories cannot be null,failed
19367,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-None-0-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19369,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-None-None-0-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [0], 1: [1], 2: [2], 3: [3], 4: [4], 5: [5]}",failed
19370,tests.integ.modin.frame.test_merge,test_merge_left_index_right_on[left-False-B],KeyError: 'None of [None] are in the columns',failed
19376,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-col3-col3-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: [1.1], 3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0], 1.1: [1.1]}",failed
19381,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-None-col3-groups],ValueError: Categorical categories cannot be null,failed
19384,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-col3-col3-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {1.1: [5], 3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
19388,tests.integ.modin.frame.test_merge,test_merge_left_index_right_on[inner-True-right_i],KeyError: 'right_i',failed
19391,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-None-col3-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19392,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-col3-None-0-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: [1.1], 3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0], 1.1: [1.1]}",failed
19399,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-col3-None-0-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {1.1: [5], 3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
19400,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset2-False-True-False-by-test_data1],"AssertionError: Series are different

Series length are different
[left]:  3, MultiIndex([('key 1',     nan),
            ('key 1', 'value'),
            ('key 2', 'value')],
           names=['by', 'value2'])
[right]: 4, MultiIndex([(    nan,     nan),
            ('key 1',     nan),
            ('key 1', 'value'),
            ('key 2', 'value')],
           names=['by', 'value2'])",failed
19407,tests.integ.modin.frame.test_merge,test_merge_left_index_right_on[inner-True-A],KeyError: 'None of [None] are in the columns',failed
19408,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols10-col3-None-groups],ValueError: Categorical categories cannot be null,failed
19411,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-col3-None-col3-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: [1.1], 3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0], 1.1: [1.1]}",failed
19412,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset2-False-True-False-by1-test_data1],"AssertionError: Series are different

Series length are different
[left]:  1, MultiIndex([('value', 'key 1', nan)],
           names=['value1', 'by', 'value2'])
[right]: 6, MultiIndex([(    nan, 'key 1', 'value'),
            ('value',     nan,     nan),
            (    nan,     nan,     nan),
            (    nan, 'key 1',     nan),
            (    nan, 'key 2', 'value'),
            ('value', 'key 1',     nan)],
           names=['value1', 'by', 'value2'])",failed
19417,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols10-col3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19418,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-col3-None-col3-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {1.1: [5], 3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
19420,tests.integ.modin.groupby.test_groupby_with_grouper,test_groupby_invalid_resample,"TypeError: Only valid with DatetimeIndex, TimedeltaIndex or PeriodIndex, but got an instance of 'Index'",failed
19424,tests.integ.modin.groupby.test_groupby_with_grouper,test_groupby_double_resample_unsupported,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
19427,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols10-col3-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: [(1.1, 6)], 3.1: [(3.1, 17)], 4.0: [(4.0, 5)], 8.0: [(8.0, 3)], 10.0: [(10.0, 15)], 12.0: [(12.0, 16)]}
Expected dict: {3.1: [(3.1, 17)], 8.0: [(8.0, 3)], 12.0: [(12.0, 16)], 10.0: [(10.0, 15)], 4.0: [(4.0, 5)], 1.1: [(1.1, 6)]}",failed
19429,tests.integ.modin.frame.test_merge,test_merge_left_index_right_on[inner-True-B],KeyError: 'None of [None] are in the columns',failed
19432,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols11-None-level11-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
19433,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols10-col3-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {1.1: [5], 3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
19435,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset2-False-False-True-by-test_data1],"AssertionError: Series are different

Series length are different
[left]:  3, MultiIndex([('key 1', 'value'),
            ('key 1',     nan),
            ('key 2', 'value')],
           names=['by', 'value2'])
[right]: 4, MultiIndex([('key 1', 'value'),
            ('key 1',     nan),
            ('key 2', 'value'),
            (    nan,     nan)],
           names=['by', 'value2'])",failed
19442,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols11-None-level11-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
19443,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols11-None-level11-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
19444,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset2-False-False-True-by1-test_data1],"AssertionError: Series are different

Series length are different
[left]:  1, MultiIndex([('value', 'key 1', nan)],
           names=['value1', 'by', 'value2'])
[right]: 6, MultiIndex([('value', 'key 1',     nan),
            ('value',     nan,     nan),
            (    nan, 'key 1', 'value'),
            (    nan, 'key 1',     nan),
            (    nan, 'key 2', 'value'),
            (    nan,     nan,     nan)],
           names=['value1', 'by', 'value2'])",failed
19447,tests.integ.modin.frame.test_merge,test_merge_left_index_right_on[inner-False-right_i],KeyError: 'right_i',failed
19454,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols11-None-level11-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
19461,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset2-False-False-False-by-test_data1],"AssertionError: Series are different

Series length are different
[left]:  3, MultiIndex([('key 1', 'value'),
            ('key 1',     nan),
            ('key 2', 'value')],
           names=['by', 'value2'])
[right]: 4, MultiIndex([('key 1', 'value'),
            (    nan,     nan),
            ('key 1',     nan),
            ('key 2', 'value')],
           names=['by', 'value2'])",failed
19462,tests.integ.modin.groupby.test_grouping,test_column_select[col3-by2],ValueError: Grouper for 'col2' not 1-dimensional,failed
19464,tests.integ.modin.groupby.test_groupby_basic_agg,test_single_group_row_groupby_with_variant[<lambda>6-by_col_data1-expected_groupby_col1],TypeError: unhashable type: 'list',failed
19471,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset2-False-False-False-by1-test_data1],"AssertionError: Series are different

Series length are different
[left]:  1, MultiIndex([('value', 'key 1', nan)],
           names=['value1', 'by', 'value2'])
[right]: 6, MultiIndex([(    nan, 'key 1', 'value'),
            ('value',     nan,     nan),
            (    nan,     nan,     nan),
            (    nan, 'key 1',     nan),
            (    nan, 'key 2', 'value'),
            ('value', 'key 1',     nan)],
           names=['value1', 'by', 'value2'])",failed
19477,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols12-None-level12-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
19478,tests.integ.modin.frame.test_merge,test_merge_left_index_right_on[inner-False-A],KeyError: 'None of [None] are in the columns',failed
19479,tests.integ.modin.groupby.test_grouping,test_column_select[cols2-col1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 2)
[right]: (3, 3)",failed
19484,tests.integ.modin.groupby.test_grouping,test_column_select[cols2-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 2)
[right]: (5, 3)",failed
19487,tests.integ.modin.groupby.test_grouping,test_column_select[cols2-by2],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 2)
[right]: (4, 3)",failed
19488,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols12-None-level12-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
19491,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_True-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols12-None-level12-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
19494,tests.integ.modin.groupby.test_grouping,test_column_select[cols3-col1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 3)
[right]: (3, 4)",failed
19495,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset3-True-True-True-by-test_data1],"AssertionError: Series are different

Series length are different
[left]:  4, MultiIndex([('key 1', 'value',     nan),
            ('key 1',     nan, 'value'),
            ('key 1',     nan,     nan),
            ('key 2',     nan, 'value')],
           names=['by', 'value1', 'value2'])
[right]: 6, MultiIndex([('key 1', 'value',     nan),
            ('key 1',     nan, 'value'),
            ('key 1',     nan,     nan),
            ('key 2',     nan, 'value'),
            (    nan, 'value',     nan),
            (    nan,     nan,     nan)],
           names=['by', 'value1', 'value2'])",failed
19498,tests.integ.modin.frame.test_merge,test_merge_left_index_right_on[inner-False-B],KeyError: 'None of [None] are in the columns',failed
19499,tests.integ.modin.groupby.test_grouping,test_column_select[cols3-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (5, 3)
[right]: (5, 4)",failed
19503,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols12-None-level12-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
19505,tests.integ.modin.groupby.test_grouping,test_column_select[cols3-by2],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 3)
[right]: (4, 4)",failed
19509,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-None-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [3, 5], 1: [1, 2], 2: [0, 4]}",failed
19512,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0.0 is not equal to expected key 1.0.
Actual dict: {0.0: [3, 5], 1.0: [1, 2]}
Expected dict: {1.0: [1, 2], 0.0: [3, 5]}",failed
19519,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-None-by1-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19520,tests.integ.modin.frame.test_merge,test_merge_left_index_right_on[right-True-right_i],KeyError: 'right_i',failed
19522,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0.0: [3, 5], 1.0: [1, 2]}",failed
19529,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-by1-None-groups],"AssertionError: Actual and expected dicts have different lengths 5 and 3 respectively.
Actual dict: {(nan, 4.0): [0, 4], (0.0, 5.0): [5], (0.0, 7.0): [3], (1.0, 5.0): [1], (1.0, nan): [2]}
Expected dict: {(1.0, 5.0): [1], (0.0, 7.0): [3], (0.0, 5.0): [5]}",failed
19530,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-None-by1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19531,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset3-True-True-False-by-test_data1],"AssertionError: Series are different

Series length are different
[left]:  4, MultiIndex([('key 1',     nan, 'value'),
            ('key 1',     nan,     nan),
            ('key 2',     nan, 'value'),
            ('key 1', 'value',     nan)],
           names=['by', 'value1', 'value2'])
[right]: 6, MultiIndex([('key 1',     nan, 'value'),
            (    nan, 'value',     nan),
            (    nan,     nan,     nan),
            ('key 1',     nan,     nan),
            ('key 2',     nan, 'value'),
            ('key 1', 'value',     nan)],
           names=['by', 'value1', 'value2'])",failed
19538,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-by1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19542,tests.integ.modin.frame.test_merge,test_merge_left_index_right_on[right-True-A],KeyError: 'None of [None] are in the columns',failed
19549,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0.0 is not equal to expected key 1.0.
Actual dict: {0.0: [10.0, nan], 1.0: [8.0, 12.0]}
Expected dict: {1.0: [8.0, 12.0], 0.0: [10.0, nan]}",failed
19551,tests.integ.modin.groupby.test_grouping,test_column_select_with_level[cols3-0],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (2, 2)
[right]: (2, 3)",failed
19552,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-col3-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [3, 5], 1: [1, 2], 2: [0, 4]}",failed
19556,tests.integ.modin.groupby.test_grouping,test_column_select_with_level[cols3-level1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (6, 2)
[right]: (6, 3)",failed
19559,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0.0: [3, 5], 1.0: [1, 2]}",failed
19560,tests.integ.modin.frame.test_merge,test_merge_left_index_right_on[right-True-B],KeyError: 'None of [None] are in the columns',failed
19562,tests.integ.modin.groupby.test_grouping,test_column_select_with_level[cols3-level2],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 2)
[right]: (3, 3)",failed
19565,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-col3-by3-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19570,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-by3-None-groups],"AssertionError: Actual and expected dicts have different lengths 5 and 3 respectively.
Actual dict: {(nan, 4.0): [3.1, 4.0], (0.0, 5.0): [nan], (0.0, 7.0): [10.0], (1.0, 5.0): [8.0], (1.0, nan): [12.0]}
Expected dict: {(1.0, 5.0): [8.0], (0.0, 7.0): [10.0], (0.0, 5.0): [nan]}",failed
19571,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset3-True-False-True-by-test_data1],"AssertionError: Series are different

Series length are different
[left]:  4, MultiIndex([('key 1', 'value',     nan),
            ('key 1',     nan, 'value'),
            ('key 1',     nan,     nan),
            ('key 2',     nan, 'value')],
           names=['by', 'value1', 'value2'])
[right]: 6, MultiIndex([('key 1', 'value',     nan),
            ('key 1',     nan, 'value'),
            ('key 1',     nan,     nan),
            ('key 2',     nan, 'value'),
            (    nan, 'value',     nan),
            (    nan,     nan,     nan)],
           names=['by', 'value1', 'value2'])",failed
19576,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-col3-by3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19579,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-by3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19582,tests.integ.modin.frame.test_merge,test_merge_left_index_right_on[right-False-right_i],KeyError: 'right_i',failed
19586,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols4-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0.0 is not equal to expected key 1.0.
Actual dict: {0.0: [(10.0, 15.0), (nan, nan)], 1.0: [(8.0, 3.0), (12.0, 16.0)]}
Expected dict: {1.0: [(8.0, 3.0), (12.0, 16.0)], 0.0: [(10.0, 15.0), (nan, nan)]}",failed
19591,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols4-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [3, 5], 1: [1, 2], 2: [0, 4]}",failed
19593,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols4-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0.0: [3, 5], 1.0: [1, 2]}",failed
19596,tests.integ.modin.groupby.test_groupby_basic_agg,test_single_group_row_groupby_with_variant[<lambda>7-by_col_data1-expected_groupby_col1],TypeError: unhashable type: 'list',failed
19599,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols5-by5-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19600,tests.integ.modin.frame.test_merge,test_merge_left_index_right_on[right-False-A],KeyError: 'None of [None] are in the columns',failed
19603,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols5-by5-None-groups],"AssertionError: Actual and expected dicts have different lengths 5 and 3 respectively.
Actual dict: {(nan, 4.0): [(3.1, 17.0), (4.0, nan)], (0.0, 5.0): [(nan, nan)], (0.0, 7.0): [(10.0, 15.0)], (1.0, 5.0): [(8.0, 3.0)], (1.0, nan): [(12.0, 16.0)]}
Expected dict: {(1.0, 5.0): [(8.0, 3.0)], (0.0, 7.0): [(10.0, 15.0)], (0.0, 5.0): [(nan, nan)]}",failed
19604,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset3-True-False-False-by-test_data1],"AssertionError: Series are different

Series length are different
[left]:  4, MultiIndex([('key 1',     nan, 'value'),
            ('key 1',     nan,     nan),
            ('key 2',     nan, 'value'),
            ('key 1', 'value',     nan)],
           names=['by', 'value1', 'value2'])
[right]: 6, MultiIndex([('key 1',     nan, 'value'),
            (    nan, 'value',     nan),
            (    nan,     nan,     nan),
            ('key 1',     nan,     nan),
            ('key 2',     nan, 'value'),
            ('key 1', 'value',     nan)],
           names=['by', 'value1', 'value2'])",failed
19605,tests.integ.modin.hybrid.test_switch_operations,test_groupby_agg_post_op_switch[tail],"pd.DataFrame([[0, 1], [2, 3]]).groupby(0)[1].tail() fails with some indexing error.",xfailed
19611,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols5-by5-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19614,tests.integ.modin.groupby.test_grouping,test_column_select_via_attr[by2],ValueError: Grouper for 'col2' not 1-dimensional,failed
19615,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols5-by5-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19620,tests.integ.modin.frame.test_merge,test_merge_left_index_right_on[right-False-B],KeyError: 'None of [None] are in the columns',failed
19624,tests.integ.modin.groupby.test_grouping,test_getitem_single_tuple_of_columns,SNOW-1057810: Indexing groupby with unwrapped lists should fail,xfailed
19629,tests.integ.modin.groupby.test_grouping,test_select_bad_cols_raise[C],Failed: DID NOT RAISE <class 'Exception'>,failed
19630,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-None-0-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [0], 1: [1], 2: [2], 3: [3], 4: [4], 5: [5]}",failed
19633,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-None-None-0-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [0], 1: [1], 2: [2], 3: [3], 4: [4], 5: [5]}",failed
19634,tests.integ.modin.groupby.test_grouping,test_select_bad_cols_raise[cols1],Failed: DID NOT RAISE <class 'Exception'>,failed
19638,tests.integ.modin.groupby.test_grouping,test_select_overlapped_by_cols_raise,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
19640,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-col3-None-groups],"AssertionError: Actual dict has the wrong key at position 1. Actual key 4.0 is not equal to expected key 8.0.
Actual dict: {3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0]}",failed
19642,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset3-False-True-True-by-test_data1],"AssertionError: Series are different

Series length are different
[left]:  4, MultiIndex([('key 1', 'value',     nan),
            ('key 1',     nan, 'value'),
            ('key 1',     nan,     nan),
            ('key 2',     nan, 'value')],
           names=['by', 'value1', 'value2'])
[right]: 6, MultiIndex([('key 1', 'value',     nan),
            ('key 1',     nan, 'value'),
            ('key 1',     nan,     nan),
            ('key 2',     nan, 'value'),
            (    nan, 'value',     nan),
            (    nan,     nan,     nan)],
           names=['by', 'value1', 'value2'])",failed
19644,tests.integ.modin.groupby.test_grouping,test_select_index_cols_raise,"AssertionError: Regex pattern did not match.
 Regex: ""Columns not found: 'A'""
 Input: ""'A'""",failed
19646,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-col3-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
19648,tests.integ.modin.groupby.test_grouping,test_select_cols_with_axis_1_raise,Failed: DID NOT RAISE <class 'Exception'>,failed
19649,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-col3-col3-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {1.1: [5], 3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
19654,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-None-0-groups],"AssertionError: Actual dict has the wrong key at position 1. Actual key 4.0 is not equal to expected key 8.0.
Actual dict: {3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0]}",failed
19658,tests.integ.modin.frame.test_reindex,test_reindex_multiindex_negative[0],"ValueError: Buffer dtype mismatch, expected 'Python object' but got 'long'",failed
19662,tests.integ.modin.groupby.test_grouping,test_groupby_as_index_select_column_sum_empty_df,SNOW-1057819: Investigate whether groupby operations should drop df.columns.name,xfailed
19665,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-None-0-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
19667,tests.integ.modin.frame.test_merge,test_merge_left_index_right_on[outer-True-right_i],KeyError: 'right_i',failed
19668,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-col3-None-0-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {1.1: [5], 3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
19675,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-None-col3-groups],"AssertionError: Actual dict has the wrong key at position 1. Actual key 4.0 is not equal to expected key 8.0.
Actual dict: {3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0]}",failed
19676,tests.integ.modin.frame.test_reindex,test_reindex_multiindex_negative[1],"ValueError: Buffer dtype mismatch, expected 'Python object' but got 'long'",failed
19677,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset3-False-True-False-by-test_data1],"AssertionError: Series are different

Series length are different
[left]:  4, MultiIndex([('key 1',     nan, 'value'),
            ('key 1',     nan,     nan),
            ('key 2',     nan, 'value'),
            ('key 1', 'value',     nan)],
           names=['by', 'value1', 'value2'])
[right]: 6, MultiIndex([('key 1',     nan, 'value'),
            (    nan, 'value',     nan),
            (    nan,     nan,     nan),
            ('key 1',     nan,     nan),
            ('key 2',     nan, 'value'),
            ('key 1', 'value',     nan)],
           names=['by', 'value1', 'value2'])",failed
19679,tests.integ.modin.frame.test_reindex,test_reindex_timedelta_axis_0_negative,[XPASS(strict)] ,failed
19681,tests.integ.modin.frame.test_reindex,test_reindex_timedelta_axis_1_negative,[XPASS(strict)] ,failed
19684,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-None-col3-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
19686,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-col3-None-col3-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {1.1: [5], 3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
19687,tests.integ.modin.frame.test_merge,test_merge_left_index_right_on[outer-True-A],KeyError: 'None of [None] are in the columns',failed
19694,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols10-col3-None-groups],"AssertionError: Actual dict has the wrong key at position 1. Actual key 4.0 is not equal to expected key 8.0.
Actual dict: {3.1: [(3.1, 17.0)], 4.0: [(4.0, nan)], 8.0: [(8.0, 3.0)], 10.0: [(10.0, 15.0)], 12.0: [(12.0, 16.0)]}
Expected dict: {3.1: [(3.1, 17.0)], 8.0: [(8.0, 3.0)], 12.0: [(12.0, 16.0)], 10.0: [(10.0, 15.0)], 4.0: [(4.0, nan)]}",failed
19702,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols10-col3-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
19708,tests.integ.modin.frame.test_merge,test_merge_left_index_right_on[outer-True-B],KeyError: 'None of [None] are in the columns',failed
19710,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols10-col3-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {1.1: [5], 3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
19716,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols11-None-level11-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
19718,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset3-False-False-True-by-test_data1],"AssertionError: Series are different

Series length are different
[left]:  4, MultiIndex([('key 1', 'value',     nan),
            ('key 1',     nan, 'value'),
            ('key 1',     nan,     nan),
            ('key 2',     nan, 'value')],
           names=['by', 'value1', 'value2'])
[right]: 6, MultiIndex([('key 1', 'value',     nan),
            ('key 1',     nan, 'value'),
            ('key 1',     nan,     nan),
            ('key 2',     nan, 'value'),
            (    nan, 'value',     nan),
            (    nan,     nan,     nan)],
           names=['by', 'value1', 'value2'])",failed
19726,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols11-None-level11-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
19730,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols11-None-level11-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
19732,tests.integ.modin.frame.test_merge,test_merge_left_index_right_on[outer-False-right_i],KeyError: 'right_i',failed
19741,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols11-None-level11-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
19746,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols12-None-level12-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
19750,tests.integ.modin.frame.test_merge,test_merge_left_index_right_on[outer-False-A],KeyError: 'None of [None] are in the columns',failed
19756,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset3-False-False-False-by-test_data1],"AssertionError: Series are different

Series length are different
[left]:  4, MultiIndex([('key 1',     nan, 'value'),
            ('key 1',     nan,     nan),
            ('key 2',     nan, 'value'),
            ('key 1', 'value',     nan)],
           names=['by', 'value1', 'value2'])
[right]: 6, MultiIndex([('key 1',     nan, 'value'),
            (    nan, 'value',     nan),
            (    nan,     nan,     nan),
            ('key 1',     nan,     nan),
            ('key 2',     nan, 'value'),
            ('key 1', 'value',     nan)],
           names=['by', 'value1', 'value2'])",failed
19757,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols12-None-level12-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
19759,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols12-None-level12-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
19767,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-None-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: [3, 5], 1: [1, 2], 2: [0, 4]}
Expected dict: {2: [0, 4], 1: [1, 2], 0: [3, 5]}",failed
19768,tests.integ.modin.frame.test_merge,test_merge_left_index_right_on[outer-False-B],KeyError: 'None of [None] are in the columns',failed
19776,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols12-None-level12-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
19781,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-None-col1-None-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: array([3, 5]), 1: array([1, 2]), 2: array([0, 4])}
Expected dict: {2: array([0, 4]), 1: array([1, 2]), 0: array([3, 5])}",failed
19785,tests.integ.modin.frame.test_rename,test_rename_mi[DataFrame],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
19792,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-None-by1-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19800,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0.0: [3, 5], 1.0: [1, 2]}",failed
19803,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-None-by1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19804,tests.integ.modin.groupby.test_min_max,test_groupby_min_count_string_nullable[3-min],"AssertionError: DataFrame.iloc[:, 0] (column name=""ts"") are different

DataFrame.iloc[:, 0] (column name=""ts"") values are different (50.0 %)
[index]: [1, 2]
[left]:  <StringArray>
[<NA>, 'a']
Length: 2, dtype: string
[right]: [nan, nan]
At positional index 1, first diff: a != nan",failed
19808,tests.integ.modin.groupby.test_min_max,test_groupby_min_count_string_nullable[3-max],"AssertionError: DataFrame.iloc[:, 0] (column name=""ts"") are different

DataFrame.iloc[:, 0] (column name=""ts"") values are different (50.0 %)
[index]: [1, 2]
[left]:  <StringArray>
[<NA>, 'b']
Length: 2, dtype: string
[right]: [nan, nan]
At positional index 1, first diff: b != nan",failed
19809,tests.integ.modin.frame.test_rename,test_rename,"AssertionError: Index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['name']",failed
19812,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-col3-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: [10.0, 1.1], 1: [8.0, 12.0], 2: [3.1, 4.0]}
Expected dict: {2: [3.1, 4.0], 1: [8.0, 12.0], 0: [10.0, 1.1]}",failed
19813,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-by1-None-groups],"AssertionError: Actual and expected dicts have different lengths 5 and 3 respectively.
Actual dict: {(nan, 4.0): [0, 4], (0.0, 5.0): [5], (0.0, 7.0): [3], (1.0, 5.0): [1], (1.0, nan): [2]}
Expected dict: {(0.0, 5.0): [5], (0.0, 7.0): [3], (1.0, 5.0): [1]}",failed
19814,tests.integ.modin.frame.test_rename,test_rename_str_upper_not_implemented,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
19815,tests.integ.modin.groupby.test_min_max,test_groupby_min_count_string_nullable[50-min],"AssertionError: DataFrame.iloc[:, 0] (column name=""ts"") are different

DataFrame.iloc[:, 0] (column name=""ts"") values are different (50.0 %)
[index]: [1, 2]
[left]:  <StringArray>
[<NA>, 'a']
Length: 2, dtype: string
[right]: [nan, nan]
At positional index 1, first diff: a != nan",failed
19820,tests.integ.modin.groupby.test_min_max,test_groupby_min_count_string_nullable[50-max],"AssertionError: DataFrame.iloc[:, 0] (column name=""ts"") are different

DataFrame.iloc[:, 0] (column name=""ts"") values are different (50.0 %)
[index]: [1, 2]
[left]:  <StringArray>
[<NA>, 'b']
Length: 2, dtype: string
[right]: [nan, nan]
At positional index 1, first diff: b != nan",failed
19823,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-col3-col1-None-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: array([3, 5]), 1: array([1, 2]), 2: array([0, 4])}
Expected dict: {2: array([0, 4]), 1: array([1, 2]), 0: array([3, 5])}",failed
19826,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-by1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19829,tests.integ.modin.frame.test_rename,test_rename_multiindex_not_implemented,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
19831,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-col3-by3-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19845,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-col3-by3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19849,tests.integ.modin.groupby.test_min_max,test_min_max_with_mixed_str_numeric_type,"TypeError: agg function failed [how->max,dtype->object]",failed
19854,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0.0: [3, 5], 1.0: [1, 2]}",failed
19860,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols4-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: [(10.0, 15), (1.1, 6)], 1: [(8.0, 3), (12.0, 16)], 2: [(3.1, 17), (4.0, 5)]}
Expected dict: {2: [(3.1, 17), (4.0, 5)], 1: [(8.0, 3), (12.0, 16)], 0: [(10.0, 15), (1.1, 6)]}",failed
19869,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-by3-None-groups],"AssertionError: Actual and expected dicts have different lengths 5 and 3 respectively.
Actual dict: {(nan, 4.0): [3.1, 4.0], (0.0, 5.0): [nan], (0.0, 7.0): [10.0], (1.0, 5.0): [8.0], (1.0, nan): [12.0]}
Expected dict: {(0.0, 5.0): [nan], (0.0, 7.0): [10.0], (1.0, 5.0): [8.0]}",failed
19873,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols4-col1-None-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: array([3, 5]), 1: array([1, 2]), 2: array([0, 4])}
Expected dict: {2: array([0, 4]), 1: array([1, 2]), 0: array([3, 5])}",failed
19879,tests.integ.modin.frame.test_rename,test_rename_axis_style_not_implemented,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
19880,tests.integ.modin.frame.test_rename,test_rename_mapper_multi,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
19883,tests.integ.modin.frame.test_rename,test_rename_positional_named,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
19884,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-by3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19885,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols5-by5-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19898,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols5-by5-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19911,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols4-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0.0: [3, 5], 1.0: [1, 2]}",failed
19913,tests.integ.modin.frame.test_rename,test_rename_copy_warning,"AssertionError: assert 'The argument `copy` of `dataframe.rename` has been ignored by Snowpark pandas API' in ''
 +  where '' = <_pytest.logging.LogCaptureFixture object at 0x33ed3a5c0>.text",failed
19915,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-None-None-0-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19925,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols5-by5-None-groups],"AssertionError: Actual and expected dicts have different lengths 5 and 3 respectively.
Actual dict: {(nan, 4.0): [(3.1, 17.0), (4.0, nan)], (0.0, 5.0): [(nan, nan)], (0.0, 7.0): [(10.0, 15.0)], (1.0, 5.0): [(8.0, 3.0)], (1.0, nan): [(12.0, 16.0)]}
Expected dict: {(0.0, 5.0): [(nan, nan)], (0.0, 7.0): [(10.0, 15.0)], (1.0, 5.0): [(8.0, 3.0)]}",failed
19928,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-col3-col3-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: [1.1], 3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0], 1.1: [1.1]}",failed
19935,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols5-by5-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
19936,tests.integ.modin.frame.test_merge,test_merge_on_index_single_index[outer-False],"AssertionError: DataFrame.index are different

DataFrame.index values are different (28.57143 %)
[left]:  Index([0, 1, 3, 2, 4, 8, 9], dtype='int64')
[right]: Index([0, 1, 2, 3, 4, 8, 9], dtype='int64')
At positional index 2, first diff: 3 != 2",failed
19937,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-col3-col3-None-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: array([5]), 3.1: array([0]), 4.0: array([4]), 8.0: array([1]), 10.0: array([3]), 12.0: array([2])}
Expected dict: {3.1: array([0]), 8.0: array([1]), 12.0: array([2]), 10.0: array([3]), 4.0: array([4]), 1.1: array([5])}",failed
19945,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-col3-None-0-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: [1.1], 3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0], 1.1: [1.1]}",failed
19955,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-col3-None-0-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: array([5]), 3.1: array([0]), 4.0: array([4]), 8.0: array([1]), 10.0: array([3]), 12.0: array([2])}
Expected dict: {3.1: array([0]), 8.0: array([1]), 12.0: array([2]), 10.0: array([3]), 4.0: array([4]), 1.1: array([5])}",failed
19957,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-None-0-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [0], 1: [1], 2: [2], 3: [3], 4: [4], 5: [5]}",failed
19966,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-col3-None-col3-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: [1.1], 3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0], 1.1: [1.1]}",failed
19976,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-None-True-True-True-by-test_data1],"AssertionError: Series are different

Series length are different
[left]:  4, MultiIndex([('key 1', 'value',     nan),
            ('key 1',     nan, 'value'),
            ('key 1',     nan,     nan),
            ('key 2',     nan, 'value')],
           names=['by', 'value1', 'value2'])
[right]: 6, MultiIndex([('key 1', 'value',     nan),
            ('key 1',     nan, 'value'),
            ('key 1',     nan,     nan),
            ('key 2',     nan, 'value'),
            (    nan, 'value',     nan),
            (    nan,     nan,     nan)],
           names=['by', 'value1', 'value2'])",failed
19978,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-col3-None-col3-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: array([5]), 3.1: array([0]), 4.0: array([4]), 8.0: array([1]), 10.0: array([3]), 12.0: array([2])}
Expected dict: {3.1: array([0]), 8.0: array([1]), 12.0: array([2]), 10.0: array([3]), 4.0: array([4]), 1.1: array([5])}",failed
19982,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-col3-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
19989,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols10-col3-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: [(1.1, 6)], 3.1: [(3.1, 17)], 4.0: [(4.0, 5)], 8.0: [(8.0, 3)], 10.0: [(10.0, 15)], 12.0: [(12.0, 16)]}
Expected dict: {3.1: [(3.1, 17)], 8.0: [(8.0, 3)], 12.0: [(12.0, 16)], 10.0: [(10.0, 15)], 4.0: [(4.0, 5)], 1.1: [(1.1, 6)]}",failed
19992,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-None-True-True-True-by1-test_data1],"AssertionError: Series are different

Series length are different
[left]:  1, MultiIndex([('value', 'key 1', nan)],
           names=['value1', 'by', 'value2'])
[right]: 6, MultiIndex([('value', 'key 1',     nan),
            ('value',     nan,     nan),
            (    nan, 'key 1', 'value'),
            (    nan, 'key 1',     nan),
            (    nan, 'key 2', 'value'),
            (    nan,     nan,     nan)],
           names=['value1', 'by', 'value2'])",failed
20002,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols10-col3-None-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: array([5]), 3.1: array([0]), 4.0: array([4]), 8.0: array([1]), 10.0: array([3]), 12.0: array([2])}
Expected dict: {3.1: array([0]), 8.0: array([1]), 12.0: array([2]), 10.0: array([3]), 4.0: array([4]), 1.1: array([5])}",failed
20008,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-None-0-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
20009,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-None-True-True-True-by2-test_data1],"AssertionError: Series are different

Series length are different
[left]:  2, MultiIndex([('key 1', 'value', nan),
            ('key 2', 'value', nan)],
           names=['by', 'value2', 'value1'])
[right]: 6, MultiIndex([('key 1', 'value',     nan),
            ('key 1',     nan, 'value'),
            ('key 1',     nan,     nan),
            ('key 2', 'value',     nan),
            (    nan,     nan, 'value'),
            (    nan,     nan,     nan)],
           names=['by', 'value2', 'value1'])",failed
20025,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-None-True-True-False-by-test_data1],"AssertionError: Series are different

Series length are different
[left]:  4, MultiIndex([('key 1',     nan, 'value'),
            ('key 1',     nan,     nan),
            ('key 2',     nan, 'value'),
            ('key 1', 'value',     nan)],
           names=['by', 'value1', 'value2'])
[right]: 6, MultiIndex([('key 1',     nan, 'value'),
            (    nan, 'value',     nan),
            (    nan,     nan,     nan),
            ('key 1',     nan,     nan),
            ('key 2',     nan, 'value'),
            ('key 1', 'value',     nan)],
           names=['by', 'value1', 'value2'])",failed
20028,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-None-col3-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
20041,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-None-True-True-False-by1-test_data1],"AssertionError: Series are different

Series length are different
[left]:  1, MultiIndex([('value', 'key 1', nan)],
           names=['value1', 'by', 'value2'])
[right]: 6, MultiIndex([(    nan, 'key 1', 'value'),
            ('value',     nan,     nan),
            (    nan,     nan,     nan),
            (    nan, 'key 1',     nan),
            (    nan, 'key 2', 'value'),
            ('value', 'key 1',     nan)],
           names=['value1', 'by', 'value2'])",failed
20052,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols10-col3-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
20056,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols11-None-level11-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
20057,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-None-True-True-False-by2-test_data1],"AssertionError: Series are different

Series length are different
[left]:  2, MultiIndex([('key 1', 'value', nan),
            ('key 2', 'value', nan)],
           names=['by', 'value2', 'value1'])
[right]: 6, MultiIndex([('key 1', 'value',     nan),
            (    nan,     nan, 'value'),
            (    nan,     nan,     nan),
            ('key 1',     nan,     nan),
            ('key 2', 'value',     nan),
            ('key 1',     nan, 'value')],
           names=['by', 'value2', 'value1'])",failed
20073,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-None-True-False-True-by-test_data1],"AssertionError: Series are different

Series length are different
[left]:  4, MultiIndex([('key 1', 'value',     nan),
            ('key 1',     nan, 'value'),
            ('key 1',     nan,     nan),
            ('key 2',     nan, 'value')],
           names=['by', 'value1', 'value2'])
[right]: 6, MultiIndex([('key 1', 'value',     nan),
            ('key 1',     nan, 'value'),
            ('key 1',     nan,     nan),
            ('key 2',     nan, 'value'),
            (    nan, 'value',     nan),
            (    nan,     nan,     nan)],
           names=['by', 'value1', 'value2'])",failed
20074,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols11-None-level11-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
20089,tests.integ.modin.frame.test_merge,test_merge_on_index_multiindex_common_labels[outer-False],"AssertionError: MultiIndex level [0] are different

MultiIndex level [0] values are different (60.0 %)
[left]:  Index([0, 1, 3, 2, 4, 8, 4, 2, 9, 1], dtype='int64')
[right]: Index([0, 1, 1, 2, 2, 3, 4, 4, 8, 9], dtype='int64')
At positional index 2, first diff: 3 != 1",failed
20091,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-None-True-False-True-by1-test_data1],"AssertionError: Series are different

Series length are different
[left]:  1, MultiIndex([('value', 'key 1', nan)],
           names=['value1', 'by', 'value2'])
[right]: 6, MultiIndex([('value', 'key 1',     nan),
            ('value',     nan,     nan),
            (    nan, 'key 1', 'value'),
            (    nan, 'key 1',     nan),
            (    nan, 'key 2', 'value'),
            (    nan,     nan,     nan)],
           names=['value1', 'by', 'value2'])",failed
20094,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols12-None-level12-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
20095,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols11-None-level11-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
20107,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-None-True-False-True-by2-test_data1],"AssertionError: Series are different

Series length are different
[left]:  2, MultiIndex([('key 1', 'value', nan),
            ('key 2', 'value', nan)],
           names=['by', 'value2', 'value1'])
[right]: 6, MultiIndex([('key 1', 'value',     nan),
            ('key 1',     nan, 'value'),
            ('key 1',     nan,     nan),
            ('key 2', 'value',     nan),
            (    nan,     nan, 'value'),
            (    nan,     nan,     nan)],
           names=['by', 'value2', 'value1'])",failed
20109,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols12-None-level12-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
20112,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols11-None-level11-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
20123,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-None-True-False-False-by-test_data1],"AssertionError: Series are different

Series length are different
[left]:  4, MultiIndex([('key 1',     nan, 'value'),
            ('key 1',     nan,     nan),
            ('key 2',     nan, 'value'),
            ('key 1', 'value',     nan)],
           names=['by', 'value1', 'value2'])
[right]: 6, MultiIndex([('key 1',     nan, 'value'),
            (    nan, 'value',     nan),
            (    nan,     nan,     nan),
            ('key 1',     nan,     nan),
            ('key 2',     nan, 'value'),
            ('key 1', 'value',     nan)],
           names=['by', 'value1', 'value2'])",failed
20130,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-col1-None-groups],ValueError: Categorical categories cannot be null,failed
20132,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols12-None-level12-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
20139,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-None-True-False-False-by1-test_data1],"AssertionError: Series are different

Series length are different
[left]:  1, MultiIndex([('value', 'key 1', nan)],
           names=['value1', 'by', 'value2'])
[right]: 6, MultiIndex([(    nan, 'key 1', 'value'),
            ('value',     nan,     nan),
            (    nan,     nan,     nan),
            (    nan, 'key 1',     nan),
            (    nan, 'key 2', 'value'),
            ('value', 'key 1',     nan)],
           names=['value1', 'by', 'value2'])",failed
20143,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-col1-None-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0.0 is not equal to expected key nan.
Actual dict: {0.0: array([3, 5]), 1.0: array([1, 2]), nan: array([0, 4])}
Expected dict: {nan: array([0, 4]), 1.0: array([1, 2]), 0.0: array([3, 5])}",failed
20152,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols12-None-level12-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
20154,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-by1-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20156,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-None-True-False-False-by2-test_data1],"AssertionError: Series are different

Series length are different
[left]:  2, MultiIndex([('key 1', 'value', nan),
            ('key 2', 'value', nan)],
           names=['by', 'value2', 'value1'])
[right]: 6, MultiIndex([('key 1', 'value',     nan),
            (    nan,     nan, 'value'),
            (    nan,     nan,     nan),
            ('key 1',     nan,     nan),
            ('key 2', 'value',     nan),
            ('key 1',     nan, 'value')],
           names=['by', 'value2', 'value1'])",failed
20158,tests.integ.modin.frame.test_merge,test_merge_on_index_multiindex_common_labels_with_none[left-True],pandas bug: https://github.com/pandas-dev/pandas/issues/58721,xfailed
20166,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-by1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20172,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-None-False-True-True-by-test_data1],"AssertionError: Series are different

Series length are different
[left]:  4, MultiIndex([('key 1', 'value',     nan),
            ('key 1',     nan, 'value'),
            ('key 1',     nan,     nan),
            ('key 2',     nan, 'value')],
           names=['by', 'value1', 'value2'])
[right]: 6, MultiIndex([('key 1', 'value',     nan),
            ('key 1',     nan, 'value'),
            ('key 1',     nan,     nan),
            ('key 2',     nan, 'value'),
            (    nan, 'value',     nan),
            (    nan,     nan,     nan)],
           names=['by', 'value1', 'value2'])",failed
20175,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-None-col1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20179,tests.integ.modin.frame.test_replace,test_replace_method_negative,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
20182,tests.integ.modin.frame.test_replace,test_replace_limit_negative,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
20184,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-col1-None-groups],ValueError: Categorical categories cannot be null,failed
20186,tests.integ.modin.frame.test_replace,test_replace_frame_with_timedelta_index_or_column_negative[pandas_df0],[XPASS(strict)] ,failed
20187,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-None-False-True-True-by1-test_data1],"AssertionError: Series are different

Series length are different
[left]:  1, MultiIndex([('value', 'key 1', nan)],
           names=['value1', 'by', 'value2'])
[right]: 6, MultiIndex([('value', 'key 1',     nan),
            ('value',     nan,     nan),
            (    nan, 'key 1', 'value'),
            (    nan, 'key 1',     nan),
            (    nan, 'key 2', 'value'),
            (    nan,     nan,     nan)],
           names=['value1', 'by', 'value2'])",failed
20188,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-None-by1-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20189,tests.integ.modin.frame.test_merge,test_merge_on_index_multiindex_common_labels_with_none[left-False],pandas bug: https://github.com/pandas-dev/pandas/issues/58721,xfailed
20190,tests.integ.modin.frame.test_replace,test_replace_frame_with_timedelta_index_or_column_negative[pandas_df1],[XPASS(strict)] ,failed
20193,tests.integ.modin.frame.test_replace,test_replace_integer_value_with_timedelta_negative[to_replace_dict_with_pandas_timedelta],[XPASS(strict)] ,failed
20195,tests.integ.modin.frame.test_replace,test_replace_integer_value_with_timedelta_negative[to_replace_dict_with_numpy_timedelta],[XPASS(strict)] ,failed
20196,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-col1-None-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0.0 is not equal to expected key nan.
Actual dict: {0.0: array([3, 5]), 1.0: array([1, 2]), nan: array([0, 4])}
Expected dict: {nan: array([0, 4]), 1.0: array([1, 2]), 0.0: array([3, 5])}",failed
20200,tests.integ.modin.frame.test_replace,test_replace_integer_value_with_timedelta_negative[to_replace_dict_with_datetime_timedelta],[XPASS(strict)] ,failed
20201,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-None-by1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20204,tests.integ.modin.frame.test_replace,test_replace_integer_value_with_timedelta_negative[value_timedelta_scalar],[XPASS(strict)] ,failed
20205,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-None-False-True-True-by2-test_data1],"AssertionError: Series are different

Series length are different
[left]:  2, MultiIndex([('key 1', 'value', nan),
            ('key 2', 'value', nan)],
           names=['by', 'value2', 'value1'])
[right]: 6, MultiIndex([('key 1', 'value',     nan),
            ('key 1',     nan, 'value'),
            ('key 1',     nan,     nan),
            ('key 2', 'value',     nan),
            (    nan,     nan, 'value'),
            (    nan,     nan,     nan)],
           names=['by', 'value2', 'value1'])",failed
20206,tests.integ.modin.frame.test_replace,test_replace_integer_value_with_timedelta_negative[value_timedelta_list],[XPASS(strict)] ,failed
20207,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-by3-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20211,tests.integ.modin.frame.test_replace,test_replace_no_value_negative,Failed: DID NOT RAISE <class 'ValueError'>,failed
20218,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-by3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20221,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-None-False-True-False-by-test_data1],"AssertionError: Series are different

Series length are different
[left]:  4, MultiIndex([('key 1',     nan, 'value'),
            ('key 1',     nan,     nan),
            ('key 2',     nan, 'value'),
            ('key 1', 'value',     nan)],
           names=['by', 'value1', 'value2'])
[right]: 6, MultiIndex([('key 1',     nan, 'value'),
            (    nan, 'value',     nan),
            (    nan,     nan,     nan),
            ('key 1',     nan,     nan),
            ('key 2',     nan, 'value'),
            ('key 1', 'value',     nan)],
           names=['by', 'value1', 'value2'])",failed
20224,tests.integ.modin.frame.test_merge,test_merge_on_index_multiindex_common_labels_with_none[inner-True],pandas bug: https://github.com/pandas-dev/pandas/issues/58721,xfailed
20225,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-col3-col1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20237,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-col3-by3-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20238,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-None-False-True-False-by1-test_data1],"AssertionError: Series are different

Series length are different
[left]:  1, MultiIndex([('value', 'key 1', nan)],
           names=['value1', 'by', 'value2'])
[right]: 6, MultiIndex([(    nan, 'key 1', 'value'),
            ('value',     nan,     nan),
            (    nan,     nan,     nan),
            (    nan, 'key 1',     nan),
            (    nan, 'key 2', 'value'),
            ('value', 'key 1',     nan)],
           names=['value1', 'by', 'value2'])",failed
20239,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols4-col1-None-groups],ValueError: Categorical categories cannot be null,failed
20249,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols4-col1-None-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0.0 is not equal to expected key nan.
Actual dict: {0.0: array([3, 5]), 1.0: array([1, 2]), nan: array([0, 4])}
Expected dict: {nan: array([0, 4]), 1.0: array([1, 2]), 0.0: array([3, 5])}",failed
20251,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-col3-by3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20255,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-None-False-True-False-by2-test_data1],"AssertionError: Series are different

Series length are different
[left]:  2, MultiIndex([('key 1', 'value', nan),
            ('key 2', 'value', nan)],
           names=['by', 'value2', 'value1'])
[right]: 6, MultiIndex([('key 1', 'value',     nan),
            (    nan,     nan, 'value'),
            (    nan,     nan,     nan),
            ('key 1',     nan,     nan),
            ('key 2', 'value',     nan),
            ('key 1',     nan, 'value')],
           names=['by', 'value2', 'value1'])",failed
20261,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols5-by5-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20262,tests.integ.modin.frame.test_merge,test_merge_on_index_multiindex_common_labels_with_none[inner-False],pandas bug: https://github.com/pandas-dev/pandas/issues/58721,xfailed
20265,tests.integ.modin.groupby.test_pct_change,test_series_groupby_pct_change_division_by_zero_negative,Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
20270,tests.integ.modin.groupby.test_pct_change,test_series_groupby_pct_change_nonnumeric_negative,TypeError: unsupported operand type for -: got object,failed
20271,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols5-by5-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20272,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-None-False-False-True-by-test_data1],"AssertionError: Series are different

Series length are different
[left]:  4, MultiIndex([('key 1', 'value',     nan),
            ('key 1',     nan, 'value'),
            ('key 1',     nan,     nan),
            ('key 2',     nan, 'value')],
           names=['by', 'value1', 'value2'])
[right]: 6, MultiIndex([('key 1', 'value',     nan),
            ('key 1',     nan, 'value'),
            ('key 1',     nan,     nan),
            ('key 2',     nan, 'value'),
            (    nan, 'value',     nan),
            (    nan,     nan,     nan)],
           names=['by', 'value1', 'value2'])",failed
20276,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols4-col1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20281,tests.integ.modin.groupby.test_pct_change,test_df_groupby_pct_change_unsupported[params0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
20288,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-None-False-False-True-by1-test_data1],"AssertionError: Series are different

Series length are different
[left]:  1, MultiIndex([('value', 'key 1', nan)],
           names=['value1', 'by', 'value2'])
[right]: 6, MultiIndex([('value', 'key 1',     nan),
            ('value',     nan,     nan),
            (    nan, 'key 1', 'value'),
            (    nan, 'key 1',     nan),
            (    nan, 'key 2', 'value'),
            (    nan,     nan,     nan)],
           names=['value1', 'by', 'value2'])",failed
20289,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-None-0-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20291,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols5-by5-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20293,tests.integ.modin.frame.test_merge,test_merge_on_index_multiindex_common_labels_with_none[right-True],pandas bug: https://github.com/pandas-dev/pandas/issues/58721,xfailed
20300,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols5-by5-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20301,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-None-False-False-True-by2-test_data1],"AssertionError: Series are different

Series length are different
[left]:  2, MultiIndex([('key 1', 'value', nan),
            ('key 2', 'value', nan)],
           names=['by', 'value2', 'value1'])
[right]: 6, MultiIndex([('key 1', 'value',     nan),
            ('key 1',     nan, 'value'),
            ('key 1',     nan,     nan),
            ('key 2', 'value',     nan),
            (    nan,     nan, 'value'),
            (    nan,     nan,     nan)],
           names=['by', 'value2', 'value1'])",failed
20303,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-col3-None-groups],ValueError: Categorical categories cannot be null,failed
20309,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-col3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20310,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-None-False-False-False-by-test_data1],"AssertionError: Series are different

Series length are different
[left]:  4, MultiIndex([('key 1',     nan, 'value'),
            ('key 1',     nan,     nan),
            ('key 2',     nan, 'value'),
            ('key 1', 'value',     nan)],
           names=['by', 'value1', 'value2'])
[right]: 6, MultiIndex([('key 1',     nan, 'value'),
            (    nan, 'value',     nan),
            (    nan,     nan,     nan),
            ('key 1',     nan,     nan),
            ('key 2',     nan, 'value'),
            ('key 1', 'value',     nan)],
           names=['by', 'value1', 'value2'])",failed
20312,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-None-None-0-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20318,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-None-False-False-False-by1-test_data1],"AssertionError: Series are different

Series length are different
[left]:  1, MultiIndex([('value', 'key 1', nan)],
           names=['value1', 'by', 'value2'])
[right]: 6, MultiIndex([(    nan, 'key 1', 'value'),
            ('value',     nan,     nan),
            (    nan,     nan,     nan),
            (    nan, 'key 1',     nan),
            (    nan, 'key 2', 'value'),
            ('value', 'key 1',     nan)],
           names=['value1', 'by', 'value2'])",failed
20323,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-col3-col3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20325,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-None-False-False-False-by2-test_data1],"AssertionError: Series are different

Series length are different
[left]:  2, MultiIndex([('key 1', 'value', nan),
            ('key 2', 'value', nan)],
           names=['by', 'value2', 'value1'])
[right]: 6, MultiIndex([('key 1', 'value',     nan),
            (    nan,     nan, 'value'),
            (    nan,     nan,     nan),
            ('key 1',     nan,     nan),
            ('key 2', 'value',     nan),
            ('key 1',     nan, 'value')],
           names=['by', 'value2', 'value1'])",failed
20327,tests.integ.modin.groupby.test_pct_change,test_df_groupby_pct_change_unsupported[params2],TypeError: unsupported operand type(s) for /: 'int' and 'str',failed
20335,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset1-True-True-True-by-test_data1],"AssertionError: Series are different

Series length are different
[left]:  3, MultiIndex([('key 1', 'value'),
            ('key 1',     nan),
            ('key 2',     nan)],
           names=['by', 'value1'])
[right]: 5, MultiIndex([('key 1', 'value'),
            ('key 1',     nan),
            ('key 2',     nan),
            (    nan, 'value'),
            (    nan,     nan)],
           names=['by', 'value1'])",failed
20337,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-col3-None-0-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20343,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-None-0-groups],ValueError: Categorical categories cannot be null,failed
20351,tests.integ.modin.frame.test_merge,test_merge_on_index_multiindex_common_labels_with_none[right-False],pandas bug: https://github.com/pandas-dev/pandas/issues/58721,xfailed
20354,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-None-0-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20358,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-col3-None-col3-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20362,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset1-True-True-True-by2-test_data1],"AssertionError: Series are different

Series length are different
[left]:  2, MultiIndex([('key 1', 'value', nan),
            ('key 2', 'value', nan)],
           names=['by', 'value2', 'value1'])
[right]: 6, MultiIndex([('key 1', 'value',     nan),
            ('key 1',     nan, 'value'),
            ('key 1',     nan,     nan),
            ('key 2', 'value',     nan),
            (    nan,     nan, 'value'),
            (    nan,     nan,     nan)],
           names=['by', 'value2', 'value1'])",failed
20365,tests.integ.modin.groupby.test_quantile,test_quantile[0-a_vals0-b_vals0-lower],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20372,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-None-col3-groups],ValueError: Categorical categories cannot be null,failed
20375,tests.integ.modin.frame.test_repr,test_repr_html[native_df2-4],"AssertionError: assert '<div>\n<styl...s</p>\n</div>' == '<div>\n<styl...s</p>\n</div>'
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {...

  ...Full output truncated (114 lines hidden), use '-vv' to show",failed
20376,tests.integ.modin.groupby.test_quantile,test_quantile[0-a_vals0-b_vals0-midpoint],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20377,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset1-True-True-False-by-test_data1],"AssertionError: Series are different

Series length are different
[left]:  3, MultiIndex([('key 2',     nan),
            ('key 1', 'value'),
            ('key 1',     nan)],
           names=['by', 'value1'])
[right]: 5, MultiIndex([(    nan, 'value'),
            (    nan,     nan),
            ('key 2',     nan),
            ('key 1', 'value'),
            ('key 1',     nan)],
           names=['by', 'value1'])",failed
20380,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols10-col3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20382,tests.integ.modin.frame.test_repr,test_repr_html[native_df4-4],"AssertionError: assert '<div>\n<styl...s</p>\n</div>' == '<div>\n<styl...s</p>\n</div>'
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {...

  ...Full output truncated (78 lines hidden), use '-vv' to show",failed
20383,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-None-col3-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20385,tests.integ.modin.frame.test_merge,test_merge_on_index_multiindex_common_labels_with_none[outer-True],pandas bug: https://github.com/pandas-dev/pandas/issues/58721,xfailed
20388,tests.integ.modin.groupby.test_quantile,test_quantile[0-a_vals1-b_vals1-lower],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20395,tests.integ.modin.groupby.test_quantile,test_quantile[0-a_vals1-b_vals1-midpoint],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20398,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols11-None-level11-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
20401,tests.integ.modin.frame.test_repr,test_repr_html[native_df7-4],"AssertionError: assert '<div>\n<styl...s</p>\n</div>' == '<div>\n<styl...s</p>\n</div>'
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {...

  ...Full output truncated (1026 lines hidden), use '-vv' to show",failed
20402,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols10-col3-None-groups],ValueError: Categorical categories cannot be null,failed
20404,tests.integ.modin.groupby.test_quantile,test_quantile[0-a_vals2-b_vals2-lower],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20405,tests.integ.modin.frame.test_repr,test_repr_and_repr_html_issue_same_query[native_df0-1],"assert 0 == 2
 +  where 0 = len([])
 +    where [] = <tests.integ.modin.frame.test_repr.ReprQueryListener object at 0x342b20970>.queries",failed
20406,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset1-True-True-False-by2-test_data1],"AssertionError: Series are different

Series length are different
[left]:  2, MultiIndex([('key 1', 'value', nan),
            ('key 2', 'value', nan)],
           names=['by', 'value2', 'value1'])
[right]: 6, MultiIndex([('key 1', 'value',     nan),
            (    nan,     nan, 'value'),
            (    nan,     nan,     nan),
            ('key 1',     nan,     nan),
            ('key 2', 'value',     nan),
            ('key 1',     nan, 'value')],
           names=['by', 'value2', 'value1'])",failed
20409,tests.integ.modin.frame.test_repr,test_repr_and_repr_html_issue_same_query[native_df1-1],"assert 0 == 2
 +  where 0 = len([])
 +    where [] = <tests.integ.modin.frame.test_repr.ReprQueryListener object at 0x344bd75e0>.queries",failed
20410,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols10-col3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20413,tests.integ.modin.frame.test_repr,test_repr_and_repr_html_issue_same_query[native_df2-4],"assert 0 == 2
 +  where 0 = len([])
 +    where [] = <tests.integ.modin.frame.test_repr.ReprQueryListener object at 0x342bbcac0>.queries",failed
20414,tests.integ.modin.groupby.test_quantile,test_quantile[0-a_vals2-b_vals2-midpoint],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20415,tests.integ.modin.frame.test_merge,test_merge_on_index_multiindex_common_labels_with_none[outer-False],pandas bug: https://github.com/pandas-dev/pandas/issues/58721,xfailed
20418,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols11-None-level11-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
20419,tests.integ.modin.frame.test_repr,test_repr_and_repr_html_issue_same_query[native_df3-1],"assert 0 == 2
 +  where 0 = len([])
 +    where [] = <tests.integ.modin.frame.test_repr.ReprQueryListener object at 0x33e193d60>.queries",failed
20421,tests.integ.modin.frame.test_repr,test_repr_and_repr_html_issue_same_query[native_df4-4],"assert 0 == 2
 +  where 0 = len([])
 +    where [] = <tests.integ.modin.frame.test_repr.ReprQueryListener object at 0x342f716f0>.queries",failed
20423,tests.integ.modin.groupby.test_quantile,test_quantile[0-a_vals3-b_vals3-lower],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20425,tests.integ.modin.frame.test_repr,test_repr_and_repr_html_issue_same_query[native_df5-1],"assert 0 == 2
 +  where 0 = len([])
 +    where [] = <tests.integ.modin.frame.test_repr.ReprQueryListener object at 0x3427098a0>.queries",failed
20426,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset1-True-False-True-by-test_data1],"AssertionError: Series are different

Series length are different
[left]:  3, MultiIndex([('key 1', 'value'),
            ('key 1',     nan),
            ('key 2',     nan)],
           names=['by', 'value1'])
[right]: 5, MultiIndex([('key 1', 'value'),
            ('key 1',     nan),
            ('key 2',     nan),
            (    nan, 'value'),
            (    nan,     nan)],
           names=['by', 'value1'])",failed
20427,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols11-None-level11-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
20430,tests.integ.modin.frame.test_repr,test_repr_and_repr_html_issue_same_query[native_df6-1],"assert 0 == 2
 +  where 0 = len([])
 +    where [] = <tests.integ.modin.frame.test_repr.ReprQueryListener object at 0x3419bfe50>.queries",failed
20432,tests.integ.modin.groupby.test_quantile,test_quantile[0-a_vals3-b_vals3-midpoint],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20434,tests.integ.modin.frame.test_repr,test_repr_and_repr_html_issue_same_query[native_df7-4],"assert 0 == 2
 +  where 0 = len([])
 +    where [] = <tests.integ.modin.frame.test_repr.ReprQueryListener object at 0x344215990>.queries",failed
20436,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols12-None-level12-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
20442,tests.integ.modin.groupby.test_quantile,test_quantile[0-a_vals4-b_vals4-lower],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20445,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols11-None-level11-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
20451,tests.integ.modin.groupby.test_quantile,test_quantile[0-a_vals4-b_vals4-midpoint],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20453,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df-index_cols12-None-level12-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
20455,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset1-True-False-True-by2-test_data1],"AssertionError: Series are different

Series length are different
[left]:  2, MultiIndex([('key 1', 'value', nan),
            ('key 2', 'value', nan)],
           names=['by', 'value2', 'value1'])
[right]: 6, MultiIndex([('key 1', 'value',     nan),
            ('key 1',     nan, 'value'),
            ('key 1',     nan,     nan),
            ('key 2', 'value',     nan),
            (    nan,     nan, 'value'),
            (    nan,     nan,     nan)],
           names=['by', 'value2', 'value1'])",failed
20460,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols12-None-level12-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
20467,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset1-True-False-False-by-test_data1],"AssertionError: Series are different

Series length are different
[left]:  3, MultiIndex([('key 1',     nan),
            ('key 2',     nan),
            ('key 1', 'value')],
           names=['by', 'value1'])
[right]: 5, MultiIndex([('key 1',     nan),
            (    nan, 'value'),
            (    nan,     nan),
            ('key 2',     nan),
            ('key 1', 'value')],
           names=['by', 'value1'])",failed
20471,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols12-None-level12-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
20475,tests.integ.modin.groupby.test_quantile,test_quantile[0-a_vals6-b_vals6-lower],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20478,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-None-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: [3, 5], 1: [1, 2], 2: [0, 4]}
Expected dict: {2: [0, 4], 1: [1, 2], 0: [3, 5]}",failed
20482,tests.integ.modin.groupby.test_quantile,test_quantile[0-a_vals6-b_vals6-midpoint],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20485,tests.integ.modin.frame.test_merge,test_merge_on_index_multiindex_equal_labels[inner-True],pandas.errors.InvalidIndexError: Reindexing only valid with uniquely valued Index objects,failed
20486,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-None-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [3, 5], 1: [1, 2], 2: [0, 4]}",failed
20489,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset1-True-False-False-by2-test_data1],"AssertionError: Series are different

Series length are different
[left]:  2, MultiIndex([('key 1', 'value', nan),
            ('key 2', 'value', nan)],
           names=['by', 'value2', 'value1'])
[right]: 6, MultiIndex([('key 1', 'value',     nan),
            (    nan,     nan, 'value'),
            (    nan,     nan,     nan),
            ('key 1',     nan,     nan),
            ('key 2', 'value',     nan),
            ('key 1',     nan, 'value')],
           names=['by', 'value2', 'value1'])",failed
20490,tests.integ.modin.groupby.test_quantile,test_quantile[0-timedelta-lower],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20491,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-None-by1-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20497,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-col1-None-groups],ValueError: Categorical categories cannot be null,failed
20498,tests.integ.modin.groupby.test_quantile,test_quantile[0-timedelta-midpoint],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20499,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-None-by1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20501,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset1-False-True-True-by-test_data1],"AssertionError: Series are different

Series length are different
[left]:  3, MultiIndex([('key 1',     nan),
            ('key 1', 'value'),
            ('key 2',     nan)],
           names=['by', 'value1'])
[right]: 5, MultiIndex([('key 1',     nan),
            ('key 1', 'value'),
            ('key 2',     nan),
            (    nan, 'value'),
            (    nan,     nan)],
           names=['by', 'value1'])",failed
20505,tests.integ.modin.groupby.test_quantile,test_quantile[0.5-a_vals0-b_vals0-lower],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20506,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-col1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20508,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-col3-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: [10.0, 1.1], 1: [8.0, 12.0], 2: [3.1, 4.0]}
Expected dict: {2: [3.1, 4.0], 1: [8.0, 12.0], 0: [10.0, 1.1]}",failed
20513,tests.integ.modin.groupby.test_quantile,test_quantile[0.5-a_vals0-b_vals0-midpoint],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20519,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-col3-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [3, 5], 1: [1, 2], 2: [0, 4]}",failed
20521,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-by1-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20523,tests.integ.modin.groupby.test_quantile,test_quantile[0.5-a_vals1-b_vals1-lower],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20524,tests.integ.modin.groupby.test_quantile,test_quantile[0.5-a_vals1-b_vals1-nearest],reason: Unclear numpy expectation for nearest result with equidistant data,xfailed
20528,tests.integ.modin.groupby.test_quantile,test_quantile[0.5-a_vals1-b_vals1-midpoint],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20529,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset1-False-True-True-by2-test_data1],"AssertionError: Series are different

Series length are different
[left]:  2, MultiIndex([('key 1', 'value', nan),
            ('key 2', 'value', nan)],
           names=['by', 'value2', 'value1'])
[right]: 6, MultiIndex([('key 1', 'value',     nan),
            ('key 1',     nan, 'value'),
            ('key 1',     nan,     nan),
            ('key 2', 'value',     nan),
            (    nan,     nan, 'value'),
            (    nan,     nan,     nan)],
           names=['by', 'value2', 'value1'])",failed
20531,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-col3-by3-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20536,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-by1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20540,tests.integ.modin.groupby.test_quantile,test_quantile[0.5-a_vals2-b_vals2-lower],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20541,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-col3-by3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20543,tests.integ.modin.frame.test_merge,test_merge_on_index_multiindex_equal_labels[inner-False],pandas.errors.InvalidIndexError: Reindexing only valid with uniquely valued Index objects,failed
20549,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset1-False-True-False-by-test_data1],"AssertionError: Series are different

Series length are different
[left]:  3, MultiIndex([('key 1',     nan),
            ('key 2',     nan),
            ('key 1', 'value')],
           names=['by', 'value1'])
[right]: 5, MultiIndex([('key 1',     nan),
            (    nan, 'value'),
            (    nan,     nan),
            ('key 2',     nan),
            ('key 1', 'value')],
           names=['by', 'value1'])",failed
20551,tests.integ.modin.groupby.test_quantile,test_quantile[0.5-a_vals2-b_vals2-midpoint],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20552,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols4-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: [(10.0, 15), (1.1, 6)], 1: [(8.0, 3), (12.0, 16)], 2: [(3.1, 17), (4.0, 5)]}
Expected dict: {2: [(3.1, 17), (4.0, 5)], 1: [(8.0, 3), (12.0, 16)], 0: [(10.0, 15), (1.1, 6)]}",failed
20558,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-col1-None-groups],ValueError: Categorical categories cannot be null,failed
20561,tests.integ.modin.groupby.test_quantile,test_quantile[0.5-a_vals3-b_vals3-lower],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20563,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols4-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [3, 5], 1: [1, 2], 2: [0, 4]}",failed
20569,tests.integ.modin.groupby.test_quantile,test_quantile[0.5-a_vals3-b_vals3-midpoint],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20573,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-col1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20577,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols5-by5-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20579,tests.integ.modin.groupby.test_quantile,test_quantile[0.5-a_vals4-b_vals4-lower],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20583,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset1-False-True-False-by2-test_data1],"AssertionError: Series are different

Series length are different
[left]:  2, MultiIndex([('key 1', 'value', nan),
            ('key 2', 'value', nan)],
           names=['by', 'value2', 'value1'])
[right]: 6, MultiIndex([('key 1', 'value',     nan),
            (    nan,     nan, 'value'),
            (    nan,     nan,     nan),
            ('key 1',     nan,     nan),
            ('key 2', 'value',     nan),
            ('key 1',     nan, 'value')],
           names=['by', 'value2', 'value1'])",failed
20585,tests.integ.modin.groupby.test_quantile,test_quantile[0.5-a_vals4-b_vals4-midpoint],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20588,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-by3-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20591,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols5-by5-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20601,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset1-False-False-True-by-test_data1],"AssertionError: Series are different

Series length are different
[left]:  3, MultiIndex([('key 1', 'value'),
            ('key 1',     nan),
            ('key 2',     nan)],
           names=['by', 'value1'])
[right]: 5, MultiIndex([('key 1', 'value'),
            ('key 1',     nan),
            ('key 2',     nan),
            (    nan, 'value'),
            (    nan,     nan)],
           names=['by', 'value1'])",failed
20603,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-by3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20610,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-None-None-0-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [0], 1: [1], 2: [2], 3: [3], 4: [4], 5: [5]}",failed
20617,tests.integ.modin.groupby.test_quantile,test_quantile[0.5-a_vals6-b_vals6-lower],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20620,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-col3-col3-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: [1.1], 3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0], 1.1: [1.1]}",failed
20622,tests.integ.modin.frame.test_merge,test_merge_on_index_multiindex_equal_labels[outer-True],pandas.errors.InvalidIndexError: Reindexing only valid with uniquely valued Index objects,failed
20623,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols4-col1-None-groups],ValueError: Categorical categories cannot be null,failed
20626,tests.integ.modin.frame.test_reset_index,test_reset_index_allow_duplicates,"ValueError: cannot insert level_0, already exists",failed
20627,tests.integ.modin.groupby.test_quantile,test_quantile[0.5-a_vals6-b_vals6-midpoint],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20630,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset1-False-False-True-by2-test_data1],"AssertionError: Series are different

Series length are different
[left]:  2, MultiIndex([('key 1', 'value', nan),
            ('key 2', 'value', nan)],
           names=['by', 'value2', 'value1'])
[right]: 6, MultiIndex([('key 1', 'value',     nan),
            ('key 1',     nan, 'value'),
            ('key 1',     nan,     nan),
            ('key 2', 'value',     nan),
            (    nan,     nan, 'value'),
            (    nan,     nan,     nan)],
           names=['by', 'value2', 'value1'])",failed
20631,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-col3-col3-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {1.1: [5], 3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
20635,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols4-col1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20637,tests.integ.modin.groupby.test_quantile,test_quantile[0.5-timedelta-lower],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20643,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-col3-None-0-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: [1.1], 3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0], 1.1: [1.1]}",failed
20646,tests.integ.modin.groupby.test_quantile,test_quantile[0.5-timedelta-midpoint],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20647,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset1-False-False-False-by-test_data1],"AssertionError: Series are different

Series length are different
[left]:  3, MultiIndex([('key 1',     nan),
            ('key 2',     nan),
            ('key 1', 'value')],
           names=['by', 'value1'])
[right]: 5, MultiIndex([('key 1',     nan),
            (    nan, 'value'),
            (    nan,     nan),
            ('key 2',     nan),
            ('key 1', 'value')],
           names=['by', 'value1'])",failed
20650,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols5-by5-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20654,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-col3-None-0-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {1.1: [5], 3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
20657,tests.integ.modin.groupby.test_quantile,test_quantile[1-a_vals0-b_vals0-lower],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20659,tests.integ.modin.frame.test_merge,test_merge_on_index_multiindex_equal_labels[outer-False],pandas.errors.InvalidIndexError: Reindexing only valid with uniquely valued Index objects,failed
20662,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols5-by5-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20665,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-col3-None-col3-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: [1.1], 3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0], 1.1: [1.1]}",failed
20669,tests.integ.modin.groupby.test_quantile,test_quantile[1-a_vals0-b_vals0-midpoint],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20676,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-col3-None-col3-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {1.1: [5], 3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
20678,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset1-False-False-False-by2-test_data1],"AssertionError: Series are different

Series length are different
[left]:  2, MultiIndex([('key 1', 'value', nan),
            ('key 2', 'value', nan)],
           names=['by', 'value2', 'value1'])
[right]: 6, MultiIndex([('key 1', 'value',     nan),
            (    nan,     nan, 'value'),
            (    nan,     nan,     nan),
            ('key 1',     nan,     nan),
            ('key 2', 'value',     nan),
            ('key 1',     nan, 'value')],
           names=['by', 'value2', 'value1'])",failed
20679,tests.integ.modin.groupby.test_quantile,test_quantile[1-a_vals1-b_vals1-lower],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20686,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-None-0-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20689,tests.integ.modin.groupby.test_quantile,test_quantile[1-a_vals1-b_vals1-midpoint],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20691,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols10-col3-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: [(1.1, 6)], 3.1: [(3.1, 17)], 4.0: [(4.0, 5)], 8.0: [(8.0, 3)], 10.0: [(10.0, 15)], 12.0: [(12.0, 16)]}
Expected dict: {3.1: [(3.1, 17)], 8.0: [(8.0, 3)], 12.0: [(12.0, 16)], 10.0: [(10.0, 15)], 4.0: [(4.0, 5)], 1.1: [(1.1, 6)]}",failed
20692,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset2-True-True-True-by-test_data1],"AssertionError: Series are different

Series length are different
[left]:  3, MultiIndex([('key 1', 'value'),
            ('key 1',     nan),
            ('key 2', 'value')],
           names=['by', 'value2'])
[right]: 4, MultiIndex([('key 1', 'value'),
            ('key 1',     nan),
            ('key 2', 'value'),
            (    nan,     nan)],
           names=['by', 'value2'])",failed
20700,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols10-col3-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {1.1: [5], 3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
20701,tests.integ.modin.groupby.test_quantile,test_quantile[1-a_vals2-b_vals2-lower],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20708,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset2-True-True-True-by1-test_data1],"AssertionError: Series are different

Series length are different
[left]:  1, MultiIndex([('value', 'key 1', nan)],
           names=['value1', 'by', 'value2'])
[right]: 6, MultiIndex([('value', 'key 1',     nan),
            ('value',     nan,     nan),
            (    nan, 'key 1', 'value'),
            (    nan, 'key 1',     nan),
            (    nan, 'key 2', 'value'),
            (    nan,     nan,     nan)],
           names=['value1', 'by', 'value2'])",failed
20709,tests.integ.modin.frame.test_merge,test_merge_left_index_right_index_single_to_multi[left-True],ValueError: cannot join with no overlapping index names,failed
20712,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-col3-None-groups],ValueError: Categorical categories cannot be null,failed
20714,tests.integ.modin.groupby.test_quantile,test_quantile[1-a_vals2-b_vals2-midpoint],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20723,tests.integ.modin.groupby.test_quantile,test_quantile[1-a_vals3-b_vals3-lower],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20726,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-col3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20733,tests.integ.modin.groupby.test_quantile,test_quantile[1-a_vals3-b_vals3-midpoint],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20737,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset2-True-True-False-by-test_data1],"AssertionError: Series are different

Series length are different
[left]:  3, MultiIndex([('key 1', 'value'),
            ('key 2', 'value'),
            ('key 1',     nan)],
           names=['by', 'value2'])
[right]: 4, MultiIndex([('key 1', 'value'),
            ('key 2', 'value'),
            (    nan,     nan),
            ('key 1',     nan)],
           names=['by', 'value2'])",failed
20744,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-None-0-groups],ValueError: Categorical categories cannot be null,failed
20745,tests.integ.modin.groupby.test_quantile,test_quantile[1-a_vals4-b_vals4-lower],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20752,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset2-True-True-False-by1-test_data1],"AssertionError: Series are different

Series length are different
[left]:  1, MultiIndex([('value', 'key 1', nan)],
           names=['value1', 'by', 'value2'])
[right]: 6, MultiIndex([(    nan, 'key 1', 'value'),
            ('value',     nan,     nan),
            (    nan,     nan,     nan),
            (    nan, 'key 1',     nan),
            (    nan, 'key 2', 'value'),
            ('value', 'key 1',     nan)],
           names=['value1', 'by', 'value2'])",failed
20753,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols11-None-level11-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
20754,tests.integ.modin.frame.test_reset_index,test_reset_index_level_duplicates,"AssertionError: assert None == 'b'
 +  where None = RangeIndex(start=0, stop=2, step=1).name
 +    where RangeIndex(start=0, stop=2, step=1) =      a    c    d\n0  aaa  one  one\n1  bbb  two  two.index",failed
20755,tests.integ.modin.groupby.test_quantile,test_quantile[1-a_vals4-b_vals4-midpoint],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20756,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-None-0-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20771,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols11-None-level11-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
20775,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-None-col3-groups],ValueError: Categorical categories cannot be null,failed
20780,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset2-True-False-True-by-test_data1],"AssertionError: Series are different

Series length are different
[left]:  3, MultiIndex([('key 1', 'value'),
            ('key 1',     nan),
            ('key 2', 'value')],
           names=['by', 'value2'])
[right]: 4, MultiIndex([('key 1', 'value'),
            ('key 1',     nan),
            ('key 2', 'value'),
            (    nan,     nan)],
           names=['by', 'value2'])",failed
20783,tests.integ.modin.groupby.test_quantile,test_quantile[1-a_vals6-b_vals6-lower],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20786,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-None-col3-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20788,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols12-None-level12-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
20794,tests.integ.modin.groupby.test_quantile,test_quantile[1-a_vals6-b_vals6-midpoint],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20796,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset2-True-False-True-by1-test_data1],"AssertionError: Series are different

Series length are different
[left]:  1, MultiIndex([('value', 'key 1', nan)],
           names=['value1', 'by', 'value2'])
[right]: 6, MultiIndex([('value', 'key 1',     nan),
            ('value',     nan,     nan),
            (    nan, 'key 1', 'value'),
            (    nan, 'key 1',     nan),
            (    nan, 'key 2', 'value'),
            (    nan,     nan,     nan)],
           names=['value1', 'by', 'value2'])",failed
20800,tests.integ.modin.frame.test_merge,test_merge_left_index_right_index_single_to_multi[left-False],ValueError: cannot join with no overlapping index names,failed
20804,tests.integ.modin.groupby.test_quantile,test_quantile[1-timedelta-lower],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20805,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols12-None-level12-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
20813,tests.integ.modin.groupby.test_quantile,test_quantile[1-timedelta-midpoint],[XPASS(strict)] Quantile with lower or midpoint interpolation not yet supported,failed
20816,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0.0 is not equal to expected key 1.0.
Actual dict: {0.0: [3, 5], 1.0: [1, 2]}
Expected dict: {1.0: [1, 2], 0.0: [3, 5]}",failed
20821,tests.integ.modin.groupby.test_quantile,test_quantile_array,"[XPASS(strict)] SNOW-1062878: Because list-like q would return multiple rows, calling quantile through the aggregate frontend in this manner is unsupported.",failed
20824,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset2-True-False-False-by-test_data1],"AssertionError: Series are different

Series length are different
[left]:  3, MultiIndex([('key 1', 'value'),
            ('key 1',     nan),
            ('key 2', 'value')],
           names=['by', 'value2'])
[right]: 4, MultiIndex([('key 1', 'value'),
            (    nan,     nan),
            ('key 1',     nan),
            ('key 2', 'value')],
           names=['by', 'value2'])",failed
20825,tests.integ.modin.groupby.test_quantile,test_quantile_array_list_like_q,"[XPASS(strict)] SNOW-1062878: Because list-like q would return multiple rows, calling quantile through the aggregate frontend in this manner is unsupported.",failed
20826,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0.0: [3, 5], 1.0: [1, 2]}",failed
20831,tests.integ.modin.groupby.test_quantile,test_quantile_array_no_sort,"[XPASS(strict)] SNOW-1062878: Because list-like q would return multiple rows, calling quantile through the aggregate frontend in this manner is unsupported.",failed
20834,tests.integ.modin.groupby.test_quantile,test_quantile_array_multiple_levels,"[XPASS(strict)] SNOW-1062878: Because list-like q would return multiple rows, calling quantile through the aggregate frontend in this manner is unsupported.",failed
20836,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-by1-None-groups],"AssertionError: Actual and expected dicts have different lengths 5 and 3 respectively.
Actual dict: {(nan, 4.0): [0, 4], (0.0, 5.0): [5], (0.0, 7.0): [3], (1.0, 5.0): [1], (1.0, nan): [2]}
Expected dict: {(1.0, 5.0): [1], (0.0, 7.0): [3], (0.0, 5.0): [5]}",failed
20837,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset2-True-False-False-by1-test_data1],"AssertionError: Series are different

Series length are different
[left]:  1, MultiIndex([('value', 'key 1', nan)],
           names=['value1', 'by', 'value2'])
[right]: 6, MultiIndex([(    nan, 'key 1', 'value'),
            ('value',     nan,     nan),
            (    nan,     nan,     nan),
            (    nan, 'key 1',     nan),
            (    nan, 'key 2', 'value'),
            ('value', 'key 1',     nan)],
           names=['value1', 'by', 'value2'])",failed
20839,tests.integ.modin.frame.test_merge,test_merge_left_index_right_index_single_to_multi[inner-True],ValueError: cannot join with no overlapping index names,failed
20840,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols10-col3-None-groups],ValueError: Categorical categories cannot be null,failed
20841,tests.integ.modin.groupby.test_quantile,test_groupby_quantile_with_arraylike_q_and_int_columns[q0-groupby0-frame_size0],"[XPASS(strict)] SNOW-1062878: Because list-like q would return multiple rows, calling quantile through the aggregate frontend in this manner is unsupported.",failed
20845,tests.integ.modin.groupby.test_quantile,test_groupby_quantile_with_arraylike_q_and_int_columns[q0-groupby0-frame_size1],"[XPASS(strict)] SNOW-1062878: Because list-like q would return multiple rows, calling quantile through the aggregate frontend in this manner is unsupported.",failed
20849,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-by1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20850,tests.integ.modin.groupby.test_quantile,test_groupby_quantile_with_arraylike_q_and_int_columns[q0-groupby1-frame_size0],"[XPASS(strict)] SNOW-1062878: Because list-like q would return multiple rows, calling quantile through the aggregate frontend in this manner is unsupported.",failed
20852,tests.integ.modin.groupby.test_value_counts,test_value_counts_bad_subset[subset0-KeyError],AssertionError: exception type <class 'ValueError'> does not match with expected type <class 'KeyError'>,failed
20854,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols10-col3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20856,tests.integ.modin.groupby.test_quantile,test_groupby_quantile_with_arraylike_q_and_int_columns[q0-groupby1-frame_size1],"[XPASS(strict)] SNOW-1062878: Because list-like q would return multiple rows, calling quantile through the aggregate frontend in this manner is unsupported.",failed
20861,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0.0 is not equal to expected key 1.0.
Actual dict: {0.0: [10.0, nan], 1.0: [8.0, 12.0]}
Expected dict: {1.0: [8.0, 12.0], 0.0: [10.0, nan]}",failed
20867,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset2-False-True-True-by-test_data1],"AssertionError: Series are different

Series length are different
[left]:  3, MultiIndex([('key 1',     nan),
            ('key 1', 'value'),
            ('key 2', 'value')],
           names=['by', 'value2'])
[right]: 4, MultiIndex([('key 1',     nan),
            ('key 1', 'value'),
            ('key 2', 'value'),
            (    nan,     nan)],
           names=['by', 'value2'])",failed
20869,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0.0: [3, 5], 1.0: [1, 2]}",failed
20870,tests.integ.modin.groupby.test_value_counts,test_value_counts_bins_unimplemented,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
20873,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols11-None-level11-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
20874,tests.integ.modin.groupby.test_quantile,test_quantile_raises,TypeError: 'quantile' cannot be performed against 'object' dtypes!,failed
20877,tests.integ.modin.groupby.test_value_counts,test_value_counts_basic[False-subset2-False-True-True-by1-test_data1],"AssertionError: Series are different

Series length are different
[left]:  1, MultiIndex([('value', 'key 1', nan)],
           names=['value1', 'by', 'value2'])
[right]: 6, MultiIndex([('value', 'key 1',     nan),
            ('value',     nan,     nan),
            (    nan, 'key 1', 'value'),
            (    nan, 'key 1',     nan),
            (    nan, 'key 2', 'value'),
            (    nan,     nan,     nan)],
           names=['value1', 'by', 'value2'])",failed
20879,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-by3-None-groups],"AssertionError: Actual and expected dicts have different lengths 5 and 3 respectively.
Actual dict: {(nan, 4.0): [3.1, 4.0], (0.0, 5.0): [nan], (0.0, 7.0): [10.0], (1.0, 5.0): [8.0], (1.0, nan): [12.0]}
Expected dict: {(1.0, 5.0): [8.0], (0.0, 7.0): [10.0], (0.0, 5.0): [nan]}",failed
20885,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-by3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20886,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols11-None-level11-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
20889,tests.integ.modin.groupby.test_quantile,test_quantile_out_of_bounds_q_raises,ValueError: Each 'q' must be between 0 and 1. Got '50.0' instead,failed
20891,tests.integ.modin.frame.test_merge,test_merge_left_index_right_index_single_to_multi[right-True],ValueError: cannot join with no overlapping index names,failed
20895,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols4-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0.0 is not equal to expected key 1.0.
Actual dict: {0.0: [(10.0, 15.0), (nan, nan)], 1.0: [(8.0, 3.0), (12.0, 16.0)]}
Expected dict: {1.0: [(8.0, 3.0), (12.0, 16.0)], 0.0: [(10.0, 15.0), (nan, nan)]}",failed
20901,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols12-None-level12-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
20902,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols4-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0.0: [3, 5], 1.0: [1, 2]}",failed
20906,tests.integ.modin.frame.test_reset_index,test_reset_index_col_fill_none[names0-expected_names0],"AssertionError: MultiIndex level [1] are different

MultiIndex level [1] values are different (25.0 %)
[left]:  Index(['b', 'b', 'max', 'type'], dtype='object', name='cl2')
[right]: Index(['a', 'b', 'max', 'type'], dtype='object', name='cl2')
At positional index 0, first diff: b != a",failed
20907,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols5-by5-None-groups],"AssertionError: Actual and expected dicts have different lengths 5 and 3 respectively.
Actual dict: {(nan, 4.0): [(3.1, 17.0), (4.0, nan)], (0.0, 5.0): [(nan, nan)], (0.0, 7.0): [(10.0, 15.0)], (1.0, 5.0): [(8.0, 3.0)], (1.0, nan): [(12.0, 16.0)]}
Expected dict: {(1.0, 5.0): [(8.0, 3.0)], (0.0, 7.0): [(10.0, 15.0)], (0.0, 5.0): [(nan, nan)]}",failed
20910,tests.integ.modin.groupby.test_quantile,test_groupby_quantile_all_na_group_masked[lower-2-2],TypeError: 'quantile' cannot be performed against 'object' dtypes!,failed
20911,tests.integ.modin.frame.test_merge,test_merge_left_index_right_index_single_to_multi[right-False],ValueError: cannot join with no overlapping index names,failed
20913,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols5-by5-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20914,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_True-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols12-None-level12-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
20918,tests.integ.modin.frame.test_reset_index,"test_reset_index_invalid_level_raises[level2-names2-2--ValueError-Constructed Label has 4 levels, which is larger than target level 3-False]","AssertionError: Regex pattern did not match.
 Regex: 'Constructed Label has 4 levels, which is larger than target level 3'
 Input: 'Item must have length equal to number of levels.'",failed
20920,tests.integ.modin.groupby.test_quantile,test_groupby_quantile_all_na_group_masked[higher-2-3],TypeError: 'quantile' cannot be performed against 'object' dtypes!,failed
20921,tests.integ.modin.frame.test_reset_index,"test_reset_index_invalid_level_raises[level3-names3-0--ValueError-Constructed Label has 4 levels, which is larger than target level 3-False]","AssertionError: Regex pattern did not match.
 Regex: 'Constructed Label has 4 levels, which is larger than target level 3'
 Input: 'Item must have length equal to number of levels.'",failed
20922,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-None-0-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [0], 1: [1], 2: [2], 3: [3], 4: [4], 5: [5]}",failed
20924,tests.integ.modin.frame.test_merge,test_merge_left_index_right_index_single_to_multi[outer-True],"AssertionError: assert FrozenList([None]) == ['right_i', 'left_i']
  At index 0 diff: None != 'right_i'
  Right contains one more item: 'left_i'
  Full diff:
  - ['right_i', 'left_i']
  + FrozenList([None])",failed
20925,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-None-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [3, 5], 1: [1, 2], 2: [0, 4]}",failed
20926,tests.integ.modin.groupby.test_quantile,test_groupby_quantile_all_na_group_masked[nearest-2-2],TypeError: 'quantile' cannot be performed against 'object' dtypes!,failed
20927,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-col3-None-groups],"AssertionError: Actual dict has the wrong key at position 1. Actual key 4.0 is not equal to expected key 8.0.
Actual dict: {3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0]}",failed
20928,tests.integ.modin.groupby.test_quantile,test_groupby_quantile_nonmulti_levels_order,"[XPASS(strict)] SNOW-1062878: Because list-like q would return multiple rows, calling quantile through the aggregate frontend in this manner is unsupported.",failed
20929,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-None-by1-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20930,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_multiindex_and_columns[columns2-index_name1-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
20931,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-col3-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
20932,tests.integ.modin.frame.test_merge,test_merge_left_index_right_index_single_to_multi[outer-False],"AssertionError: assert FrozenList([None]) == ['right_i', 'left_i']
  At index 0 diff: None != 'right_i'
  Right contains one more item: 'left_i'
  Full diff:
  - ['right_i', 'left_i']
  + FrozenList([None])",failed
20936,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-None-by1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20937,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-None-0-groups],"AssertionError: Actual dict has the wrong key at position 1. Actual key 4.0 is not equal to expected key 8.0.
Actual dict: {3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0]}",failed
20938,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_multiindex_and_columns[columns3-index_name1-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
20939,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-None-0-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
20945,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-None-col3-groups],"AssertionError: Actual dict has the wrong key at position 1. Actual key 4.0 is not equal to expected key 8.0.
Actual dict: {3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0]}",failed
20946,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-col3-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [3, 5], 1: [1, 2], 2: [0, 4]}",failed
20947,tests.integ.modin.frame.test_merge,test_merge_left_index_right_index_multi_to_single[left-True],ValueError: cannot join with no overlapping index names,failed
20948,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_multiindex_and_columns[columns4-index_name1-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
20949,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-None-col3-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
20951,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-col3-by3-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20955,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols10-col3-None-groups],"AssertionError: Actual dict has the wrong key at position 1. Actual key 4.0 is not equal to expected key 8.0.
Actual dict: {3.1: [(3.1, 17.0)], 4.0: [(4.0, nan)], 8.0: [(8.0, 3.0)], 10.0: [(10.0, 15.0)], 12.0: [(12.0, 16.0)]}
Expected dict: {3.1: [(3.1, 17.0)], 8.0: [(8.0, 3.0)], 12.0: [(12.0, 16.0)], 10.0: [(10.0, 15.0)], 4.0: [(4.0, nan)]}",failed
20959,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_multiindex_and_columns[columns5-index_name1-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
20960,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-col3-by3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20964,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols10-col3-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
20974,tests.integ.modin.frame.test_merge,test_merge_left_index_right_index_multi_to_single[left-False],ValueError: cannot join with no overlapping index names,failed
20976,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_multiindex_and_columns[columns6-index_name1-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
20978,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols11-None-level11-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
20980,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols4-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [3, 5], 1: [1, 2], 2: [0, 4]}",failed
20991,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols5-by5-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
20992,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_multiindex_and_columns[columns7-index_name1-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
20995,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols11-None-level11-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
20999,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols5-by5-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21005,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols12-None-level12-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
21011,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns_match,"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 1)
[right]: (0, 1)",failed
21014,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-None-None-0-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [0], 1: [1], 2: [2], 3: [3], 4: [4], 5: [5]}",failed
21017,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols12-None-level12-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
21020,tests.integ.modin.frame.test_merge,test_merge_left_index_right_index_multi_to_single[inner-True],ValueError: cannot join with no overlapping index names,failed
21026,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-None-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: [3, 5], 1: [1, 2], 2: [0, 4]}
Expected dict: {2: [0, 4], 1: [1, 2], 0: [3, 5]}",failed
21029,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-col3-col3-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {1.1: [5], 3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
21032,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-None-col1-None-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: array([3, 5]), 1: array([1, 2]), 2: array([0, 4])}
Expected dict: {2: array([0, 4]), 1: array([1, 2]), 0: array([3, 5])}",failed
21040,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-None-by1-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21044,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-col3-None-0-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {1.1: [5], 3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
21046,tests.integ.modin.frame.test_merge,test_merge_left_index_right_index_multi_to_single[inner-False],ValueError: cannot join with no overlapping index names,failed
21048,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-None-by1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21049,tests.integ.modin.frame.test_round,test_df_round_neg_even_half[0],"AssertionError: DataFrame.iloc[:, 0] (column name=""0"") are different

DataFrame.iloc[:, 0] (column name=""0"") values are different (100.0 %)
[index]: [0]
[left]:  [-2.0]
[right]: [-3.0]
At positional index 0, first diff: -2.0 != -3.0",failed
21055,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-col3-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: [10.0, 1.1], 1: [8.0, 12.0], 2: [3.1, 4.0]}
Expected dict: {2: [3.1, 4.0], 1: [8.0, 12.0], 0: [10.0, 1.1]}",failed
21061,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-col3-col1-None-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: array([3, 5]), 1: array([1, 2]), 2: array([0, 4])}
Expected dict: {2: array([0, 4]), 1: array([1, 2]), 0: array([3, 5])}",failed
21062,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-col3-None-col3-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {1.1: [5], 3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
21063,tests.integ.modin.frame.test_round,test_df_round_pos_even_half[0],"AssertionError: DataFrame.iloc[:, 0] (column name=""0"") are different

DataFrame.iloc[:, 0] (column name=""0"") values are different (100.0 %)
[index]: [0]
[left]:  [2.0]
[right]: [3.0]
At positional index 0, first diff: 2.0 != 3.0",failed
21065,tests.integ.modin.frame.test_round,test_df_round_invalid_in_sf_negative[invalid_value0-Invalid argument types for function--2],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
21067,tests.integ.modin.frame.test_round,test_df_round_invalid_in_sf_negative[invalid_value0-Invalid argument types for function--1],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
21068,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-col3-by3-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21070,tests.integ.modin.frame.test_round,test_df_round_invalid_in_sf_negative[invalid_value0-Invalid argument types for function-0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
21072,tests.integ.modin.frame.test_round,test_df_round_invalid_in_sf_negative[invalid_value0-Invalid argument types for function-1],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
21074,tests.integ.modin.frame.test_round,test_df_round_invalid_in_sf_negative[invalid_value0-Invalid argument types for function-2],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
21075,tests.integ.modin.frame.test_merge,test_merge_left_index_right_index_multi_to_single[right-True],ValueError: cannot join with no overlapping index names,failed
21076,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-col3-by3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21078,tests.integ.modin.frame.test_round,test_df_round_invalid_in_sf_negative[invalid_value1-Invalid argument types for function--2],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
21079,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols10-col3-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {1.1: [5], 3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
21081,tests.integ.modin.frame.test_round,test_df_round_invalid_in_sf_negative[invalid_value1-Invalid argument types for function--1],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
21082,tests.integ.modin.frame.test_round,test_df_round_invalid_in_sf_negative[invalid_value1-Invalid argument types for function-0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
21083,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols4-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: [(10.0, 15), (1.1, 6)], 1: [(8.0, 3), (12.0, 16)], 2: [(3.1, 17), (4.0, 5)]}
Expected dict: {2: [(3.1, 17), (4.0, 5)], 1: [(8.0, 3), (12.0, 16)], 0: [(10.0, 15), (1.1, 6)]}",failed
21084,tests.integ.modin.frame.test_round,test_df_round_invalid_in_sf_negative[invalid_value1-Invalid argument types for function-1],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
21085,tests.integ.modin.frame.test_round,test_df_round_invalid_in_sf_negative[invalid_value1-Invalid argument types for function-2],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
21086,tests.integ.modin.frame.test_round,test_df_round_invalid_in_sf_negative[invalid_value2-is not recognized--2],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
21087,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols11-None-level11-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
21088,tests.integ.modin.frame.test_round,test_df_round_invalid_in_sf_negative[invalid_value2-is not recognized--1],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
21089,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols4-col1-None-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: array([3, 5]), 1: array([1, 2]), 2: array([0, 4])}
Expected dict: {2: array([0, 4]), 1: array([1, 2]), 0: array([3, 5])}",failed
21090,tests.integ.modin.frame.test_round,test_df_round_invalid_in_sf_negative[invalid_value2-is not recognized-0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
21091,tests.integ.modin.frame.test_round,test_df_round_invalid_in_sf_negative[invalid_value2-is not recognized-1],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
21092,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols5-by5-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21093,tests.integ.modin.frame.test_round,test_df_round_invalid_in_sf_negative[invalid_value2-is not recognized-2],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
21094,tests.integ.modin.frame.test_round,test_df_round_invalid_in_sf_negative[invalid_value3- Numeric value 'bad_str' is not recognized--2],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
21095,tests.integ.modin.frame.test_merge,test_merge_left_index_right_index_multi_to_single[right-False],ValueError: cannot join with no overlapping index names,failed
21096,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols11-None-level11-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
21097,tests.integ.modin.frame.test_round,test_df_round_invalid_in_sf_negative[invalid_value3- Numeric value 'bad_str' is not recognized--1],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
21099,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols5-by5-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21100,tests.integ.modin.frame.test_round,test_df_round_invalid_in_sf_negative[invalid_value3- Numeric value 'bad_str' is not recognized-0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
21102,tests.integ.modin.frame.test_round,test_df_round_invalid_in_sf_negative[invalid_value3- Numeric value 'bad_str' is not recognized-1],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
21104,tests.integ.modin.frame.test_round,test_df_round_invalid_in_sf_negative[invalid_value3- Numeric value 'bad_str' is not recognized-2],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
21107,tests.integ.modin.frame.test_round,test_df_round_unsupported_series_decimals,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
21108,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-None-None-0-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21109,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols12-None-level12-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
21110,tests.integ.modin.frame.test_round,test_round_timedelta_negative[-2],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
21112,tests.integ.modin.frame.test_round,test_round_timedelta_negative[-1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
21114,tests.integ.modin.frame.test_round,test_round_timedelta_negative[0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
21115,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-col3-col3-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: [1.1], 3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0], 1.1: [1.1]}",failed
21117,tests.integ.modin.frame.test_round,test_round_timedelta_negative[1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
21119,tests.integ.modin.frame.test_round,test_round_timedelta_negative[2],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
21120,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_as_data_and_index_as_index_and_different_columns[list-native_df0-native_index0-columns0-True],NotImplementedError: Passing non-existant columns or index values to constructor not yet implemented.,failed
21121,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-col3-col3-None-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: array([5]), 3.1: array([0]), 4.0: array([4]), 8.0: array([1]), 10.0: array([3]), 12.0: array([2])}
Expected dict: {3.1: array([0]), 8.0: array([1]), 12.0: array([2]), 10.0: array([3]), 4.0: array([4]), 1.1: array([5])}",failed
21124,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-col3-None-0-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: [1.1], 3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0], 1.1: [1.1]}",failed
21127,tests.integ.modin.frame.test_merge,test_merge_left_index_right_index_multi_to_single[outer-True],"NotImplementedError: Can only union MultiIndex with MultiIndex or Index of tuples, try mi.to_flat_index().union(other) instead.",failed
21130,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df-index_cols12-None-level12-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
21135,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0.0: [3, 5], 1.0: [1, 2]}",failed
21136,tests.integ.modin.frame.test_merge,test_merge_left_index_right_index_multi_to_single[outer-False],"NotImplementedError: Can only union MultiIndex with MultiIndex or Index of tuples, try mi.to_flat_index().union(other) instead.",failed
21137,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-col3-None-0-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: array([5]), 3.1: array([0]), 4.0: array([4]), 8.0: array([1]), 10.0: array([3]), 12.0: array([2])}
Expected dict: {3.1: array([0]), 8.0: array([1]), 12.0: array([2]), 10.0: array([3]), 4.0: array([4]), 1.1: array([5])}",failed
21138,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-by1-None-groups],"AssertionError: Actual and expected dicts have different lengths 5 and 3 respectively.
Actual dict: {(nan, 4.0): [0, 4], (0.0, 5.0): [5], (0.0, 7.0): [3], (1.0, 5.0): [1], (1.0, nan): [2]}
Expected dict: {(0.0, 5.0): [5], (0.0, 7.0): [3], (1.0, 5.0): [1]}",failed
21139,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-col3-None-col3-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: [1.1], 3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0], 1.1: [1.1]}",failed
21140,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-by1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21142,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_as_data_and_index_as_index_and_different_columns[list-native_df1-native_index1-columns1-True],NotImplementedError: Passing non-existant columns or index values to constructor not yet implemented.,failed
21143,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-col3-None-col3-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: array([5]), 3.1: array([0]), 4.0: array([4]), 8.0: array([1]), 10.0: array([3]), 12.0: array([2])}
Expected dict: {3.1: array([0]), 8.0: array([1]), 12.0: array([2]), 10.0: array([3]), 4.0: array([4]), 1.1: array([5])}",failed
21144,tests.integ.modin.frame.test_merge,test_merge_left_index_right_index_no_common_names_negative,Failed: DID NOT RAISE <class 'Exception'>,failed
21146,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols10-col3-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: [(1.1, 6)], 3.1: [(3.1, 17)], 4.0: [(4.0, 5)], 8.0: [(8.0, 3)], 10.0: [(10.0, 15)], 12.0: [(12.0, 16)]}
Expected dict: {3.1: [(3.1, 17)], 8.0: [(8.0, 3)], 12.0: [(12.0, 16)], 10.0: [(10.0, 15)], 4.0: [(4.0, 5)], 1.1: [(1.1, 6)]}",failed
21147,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0.0: [3, 5], 1.0: [1, 2]}",failed
21149,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols10-col3-None-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: array([5]), 3.1: array([0]), 4.0: array([4]), 8.0: array([1]), 10.0: array([3]), 12.0: array([2])}
Expected dict: {3.1: array([0]), 8.0: array([1]), 12.0: array([2]), 10.0: array([3]), 4.0: array([4]), 1.1: array([5])}",failed
21151,tests.integ.modin.frame.test_merge,test_merge_left_index_right_index_none_as_common_label_negative,Failed: DID NOT RAISE <class 'Exception'>,failed
21153,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-by3-None-groups],"AssertionError: Actual and expected dicts have different lengths 5 and 3 respectively.
Actual dict: {(nan, 4.0): [3.1, 4.0], (0.0, 5.0): [nan], (0.0, 7.0): [10.0], (1.0, 5.0): [8.0], (1.0, nan): [12.0]}
Expected dict: {(0.0, 5.0): [nan], (0.0, 7.0): [10.0], (1.0, 5.0): [8.0]}",failed
21158,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols11-None-level11-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
21160,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-by3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21164,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_as_data_and_index_as_index_and_different_columns[list-native_df2-native_index2-columns2-True],NotImplementedError: Passing non-existant columns or index values to constructor not yet implemented.,failed
21168,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols11-None-level11-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
21174,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols4-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0.0: [3, 5], 1.0: [1, 2]}",failed
21181,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols5-by5-None-groups],"AssertionError: Actual and expected dicts have different lengths 5 and 3 respectively.
Actual dict: {(nan, 4.0): [(3.1, 17.0), (4.0, nan)], (0.0, 5.0): [(nan, nan)], (0.0, 7.0): [(10.0, 15.0)], (1.0, 5.0): [(8.0, 3.0)], (1.0, nan): [(12.0, 16.0)]}
Expected dict: {(0.0, 5.0): [(nan, nan)], (0.0, 7.0): [(10.0, 15.0)], (1.0, 5.0): [(8.0, 3.0)]}",failed
21184,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols12-None-level12-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
21189,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols5-by5-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21193,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_as_data_and_index_as_index_and_different_columns[list-native_df3-native_index3-columns3-True],NotImplementedError: Passing non-existant columns or index values to constructor not yet implemented.,failed
21195,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols12-None-level12-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
21203,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-None-0-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [0], 1: [1], 2: [2], 3: [3], 4: [4], 5: [5]}",failed
21207,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-col1-None-groups],ValueError: Categorical categories cannot be null,failed
21215,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-col1-None-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0.0 is not equal to expected key nan.
Actual dict: {0.0: array([3, 5]), 1.0: array([1, 2]), nan: array([0, 4])}
Expected dict: {nan: array([0, 4]), 1.0: array([1, 2]), 0.0: array([3, 5])}",failed
21216,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_as_data_and_index_as_index_and_different_columns[list-native_df4-native_index4-columns4-True],NotImplementedError: Passing non-existant columns or index values to constructor not yet implemented.,failed
21219,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-col3-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
21224,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-by1-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21229,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-by1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21231,tests.integ.modin.hybrid.test_switch_operations,test_applying_snowpark_function_to_dataframe_causes_backend_switch[func1],,xfailed
21233,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-None-0-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
21240,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-col1-None-groups],ValueError: Categorical categories cannot be null,failed
21243,tests.integ.modin.frame.test_merge,test_merge_non_empty_with_empty[left-True-kwargs2],KeyError: 'left_i',failed
21246,tests.integ.modin.hybrid.test_switch_operations,test_applying_snowpark_function_to_dataframe_causes_backend_switch[func2],,xfailed
21250,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-col1-None-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0.0 is not equal to expected key nan.
Actual dict: {0.0: array([3, 5]), 1.0: array([1, 2]), nan: array([0, 4])}
Expected dict: {nan: array([0, 4]), 1.0: array([1, 2]), 0.0: array([3, 5])}",failed
21252,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-None-col3-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
21254,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_as_data_and_index_as_index_and_different_columns[list-native_df5-native_index5-columns5-True],NotImplementedError: Passing non-existant columns or index values to constructor not yet implemented.,failed
21261,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-by3-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21264,tests.integ.modin.frame.test_merge,test_merge_non_empty_with_empty[left-True-kwargs3],KeyError: 'None of [None] are in the columns',failed
21265,tests.integ.modin.hybrid.test_switch_operations,test_applying_snowpark_function_to_dataframe_causes_backend_switch[func3],,xfailed
21268,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-by3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21269,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols10-col3-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
21273,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_as_data_and_index_as_index_and_different_columns[list-native_df6-native_index6-columns6-True],NotImplementedError: Passing non-existant columns or index values to constructor not yet implemented.,failed
21274,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols11-None-level11-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
21275,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols4-col1-None-groups],ValueError: Categorical categories cannot be null,failed
21281,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols4-col1-None-indices],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0.0 is not equal to expected key nan.
Actual dict: {0.0: array([3, 5]), 1.0: array([1, 2]), nan: array([0, 4])}
Expected dict: {nan: array([0, 4]), 1.0: array([1, 2]), 0.0: array([3, 5])}",failed
21283,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_as_data_and_index_as_index_and_different_columns[list-native_df7-native_index7-columns7-False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['empty index']",failed
21286,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols11-None-level11-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
21287,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols5-by5-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21289,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_named_index[series-index name!-series-index0],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
21292,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_named_index[series-index name!-series-index1],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
21293,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols5-by5-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21294,tests.integ.modin.frame.test_select_dtypes,test_select_dtypes_basic[include5-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 3)
[right]: (4, 4)",failed
21296,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_named_index[series-index name!-series-index2],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
21297,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols12-None-level12-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
21300,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_named_index[series-index name!-series-index3],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
21303,tests.integ.modin.frame.test_merge,test_merge_non_empty_with_empty[left-False-kwargs2],KeyError: 'left_i',failed
21305,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-None-0-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21308,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols12-None-level12-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
21309,tests.integ.modin.frame.test_select_dtypes,test_select_dtypes_basic[number-int],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 3)
[right]: (4, 2)",failed
21310,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_as_data_and_index_as_index_and_different_columns[list-native_df8-native_index8-columns8-True],NotImplementedError: Passing non-existant columns or index values to constructor not yet implemented.,failed
21312,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_named_index[series-index name!-index-index0],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
21318,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_as_data_and_index_as_index_and_different_columns[list-native_df9-native_index9-columns9-True],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['non-empty index']",failed
21319,tests.integ.modin.frame.test_merge,test_merge_non_empty_with_empty[left-False-kwargs3],KeyError: 'None of [None] are in the columns',failed
21320,tests.integ.modin.frame.test_select_dtypes,test_select_dtypes_sized_int_negative[int32-snow_result0],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 1)
[right]: (4, 0)",failed
21321,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_named_index[series-index name!-index-index1],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
21322,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-None-col1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21324,tests.integ.modin.frame.test_select_dtypes,test_select_dtypes_sized_int_negative[int64-snow_result1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (4, 3)
[right]: (4, 4)",failed
21328,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-None-by1-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21331,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_named_index[series-index name!-index-index2],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
21336,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-None-by1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21337,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-col3-None-groups],ValueError: Categorical categories cannot be null,failed
21339,tests.integ.modin.hybrid.test_switch_operations,test_applying_snowpark_function_to_series_causes_backend_switch[func1],,xfailed
21340,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_named_index[series-index name!-index-index3],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
21344,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_named_index[series-index_name2-series-index0],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('tuple', 'name')]",failed
21345,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_as_data_and_index_as_index_and_different_columns[index-native_df0-native_index0-columns0-True],NotImplementedError: Passing non-existant columns or index values to constructor not yet implemented.,failed
21346,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-col3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21348,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_named_index[series-index_name2-series-index1],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('tuple', 'name')]",failed
21352,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_named_index[series-index_name2-series-index2],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('tuple', 'name')]",failed
21355,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_named_index[series-index_name2-series-index3],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('tuple', 'name')]",failed
21356,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-col3-col1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21359,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-None-0-groups],ValueError: Categorical categories cannot be null,failed
21361,tests.integ.modin.frame.test_select_dtypes,test_select_dtypes_duplicate_col_names[include0-exclude0],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 0)
[right]: (3, 1)",failed
21362,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_named_index[series-index_name2-index-index0],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('tuple', 'name')]",failed
21363,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-col3-by3-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21364,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-None-0-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21365,tests.integ.modin.frame.test_select_dtypes,test_select_dtypes_duplicate_col_names[number-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 0)
[right]: (3, 2)",failed
21367,tests.integ.modin.frame.test_select_dtypes,test_select_dtypes_duplicate_col_names[include2-O],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 0)
[right]: (3, 2)",failed
21368,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_as_data_and_index_as_index_and_different_columns[index-native_df1-native_index1-columns1-True],NotImplementedError: Passing non-existant columns or index values to constructor not yet implemented.,failed
21369,tests.integ.modin.frame.test_select_dtypes,test_select_dtypes_duplicate_col_names[object-exclude3],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 3)
[right]: (3, 1)",failed
21370,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_named_index[series-index_name2-index-index1],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('tuple', 'name')]",failed
21372,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-col3-by3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21373,tests.integ.modin.frame.test_select_dtypes,test_select_dtypes_duplicate_col_names[include4-number],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 3)
[right]: (3, 1)",failed
21375,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-None-col3-groups],ValueError: Categorical categories cannot be null,failed
21376,tests.integ.modin.frame.test_select_dtypes,test_select_dtypes_duplicate_col_names[include5-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 0)
[right]: (3, 1)",failed
21379,tests.integ.modin.frame.test_select_dtypes,test_select_dtypes_duplicate_col_names[float-None],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 0)
[right]: (3, 1)",failed
21380,tests.integ.modin.frame.test_merge,test_merge_non_empty_with_empty[inner-True-kwargs2],KeyError: 'left_i',failed
21382,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-None-col3-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21386,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_named_index[series-index_name2-index-index2],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('tuple', 'name')]",failed
21389,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_as_data_and_index_as_index_and_different_columns[index-native_df2-native_index2-columns2-True],NotImplementedError: Passing non-existant columns or index values to constructor not yet implemented.,failed
21391,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols4-col1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21393,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_named_index[series-index_name2-index-index3],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('tuple', 'name')]",failed
21395,tests.integ.modin.frame.test_select_dtypes,test_select_dtypes_duplicate_col_names[object-exclude10],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 3)
[right]: (3, 1)",failed
21398,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols10-col3-None-groups],ValueError: Categorical categories cannot be null,failed
21400,tests.integ.modin.frame.test_merge,test_merge_non_empty_with_empty[inner-True-kwargs3],KeyError: 'None of [None] are in the columns',failed
21402,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols5-by5-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21403,tests.integ.modin.frame.test_select_dtypes,test_select_dtypes_duplicate_col_names[number-int],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 0)
[right]: (3, 1)",failed
21410,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols10-col3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21413,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols5-by5-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21428,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_as_data_and_index_as_index_and_different_columns[index-native_df3-native_index3-columns3-True],NotImplementedError: Passing non-existant columns or index values to constructor not yet implemented.,failed
21431,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols11-None-level11-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
21437,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-None-None-0-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21444,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols11-None-level11-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
21451,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-col3-col3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21454,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols12-None-level12-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
21456,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_as_data_and_index_as_index_and_different_columns[index-native_df4-native_index4-columns4-True],NotImplementedError: Passing non-existant columns or index values to constructor not yet implemented.,failed
21457,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_named_index[df-index name!-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
21459,tests.integ.modin.frame.test_merge,test_merge_non_empty_with_empty[inner-False-kwargs2],KeyError: 'left_i',failed
21460,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols12-None-level12-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
21463,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_named_index[df-index name!-series-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
21465,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices_column_name_conflicts_with_index_name[groups],AttributeError: 'numpy.int64' object has no attribute 'values',failed
21467,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_named_index[df-index name!-series-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
21468,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-col3-None-0-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21471,tests.integ.modin.frame.test_merge,test_merge_non_empty_with_empty[inner-False-kwargs3],KeyError: 'None of [None] are in the columns',failed
21472,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_named_index[df-index name!-series-index3],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
21475,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices_column_name_conflicts_with_index_name[indices],AttributeError: 'numpy.int64' object has no attribute 'values',failed
21476,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_as_data_and_index_as_index_and_different_columns[index-native_df5-native_index5-columns5-True],NotImplementedError: Passing non-existant columns or index values to constructor not yet implemented.,failed
21492,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_named_index[df-index name!-index-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
21499,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-col3-None-col3-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21503,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_named_index[df-index name!-index-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
21508,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_as_data_and_index_as_index_and_different_columns[index-native_df6-native_index6-columns6-True],NotImplementedError: Passing non-existant columns or index values to constructor not yet implemented.,failed
21518,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_named_index[df-index name!-index-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
21529,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols10-col3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21532,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_named_index[df-index name!-index-index3],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
21537,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_named_index[df-index_name2-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('tuple', 'name')]",failed
21538,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[max-1-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21539,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_as_data_and_index_as_index_and_different_columns[index-native_df7-native_index7-columns7-False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['empty index']",failed
21552,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_named_index[df-index_name2-series-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('tuple', 'name')]",failed
21559,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols11-None-level11-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
21562,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_named_index[df-index_name2-series-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('tuple', 'name')]",failed
21563,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[max-1-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21566,tests.integ.modin.frame.test_merge,test_merge_non_empty_with_empty[right-True-kwargs2],KeyError: 'left_i',failed
21568,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_named_index[df-index_name2-series-index3],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('tuple', 'name')]",failed
21573,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[max-1-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21575,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_named_index[df-index_name2-index-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('tuple', 'name')]",failed
21578,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols11-None-level11-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
21579,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_as_data_and_index_as_index_and_different_columns[index-native_df8-native_index8-columns8-True],NotImplementedError: Passing non-existant columns or index values to constructor not yet implemented.,failed
21583,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[max-1-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21584,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_named_index[df-index_name2-index-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('tuple', 'name')]",failed
21586,tests.integ.modin.frame.test_merge,test_merge_non_empty_with_empty[right-True-kwargs3],KeyError: 'None of [None] are in the columns',failed
21594,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[max-3-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21599,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_as_data_and_index_as_index_and_different_columns[index-native_df9-native_index9-columns9-True],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['non-empty index']",failed
21602,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[max-3-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21610,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_named_index[df-index_name2-index-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('tuple', 'name')]",failed
21611,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[max-3-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21615,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols12-None-level12-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
21619,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_named_index[df-index_name2-index-index3],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('tuple', 'name')]",failed
21624,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[max-3-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21625,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_name_not_in_columns_and_index,NotImplementedError: Passing non-existant columns or index values to constructor not yet implemented.,failed
21633,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df-index_cols12-None-level12-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
21634,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_copy,assert 100 == 1,failed
21640,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[max-5-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21641,tests.integ.modin.index.test_df_series_creation_with_index,test_create_series_with_copy,assert 100 == 1,failed
21654,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[max-5-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21656,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_data_and_dtype,"AssertionError: Attributes of DataFrame.iloc[:, 0] (column name=""0"") are different

Attribute ""dtype"" are different
[left]:  int64
[right]: object",failed
21657,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-col1-None-groups],ValueError: Categorical categories cannot be null,failed
21666,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[max-5-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21668,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-col1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21676,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-by1-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21677,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[max-5-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21679,tests.integ.modin.groupby.test_groupby_basic_agg,test_string_sum_with_all_nulls_in_group_produces_empty_string,"AssertionError: DataFrame.iloc[:, 0] (column name=""string_col"") are different

DataFrame.iloc[:, 0] (column name=""string_col"") values are different (50.0 %)
[index]: [0, 1]
[left]:  [0, a]
[right]: [, a]
At positional index 0, first diff: 0 !=",failed
21682,tests.integ.modin.frame.test_merge,test_merge_non_empty_with_empty[right-False-kwargs2],KeyError: 'left_i',failed
21685,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-by1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21688,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[max-15-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21694,tests.integ.modin.index.test_df_series_creation_with_index,test_create_series_with_pandas_data_and_dtype,"AssertionError: Attributes of Series are different

Attribute ""dtype"" are different
[left]:  int64
[right]: object",failed
21697,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[max-15-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21699,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-col1-None-groups],ValueError: Categorical categories cannot be null,failed
21701,tests.integ.modin.frame.test_merge,test_merge_non_empty_with_empty[right-False-kwargs3],KeyError: 'None of [None] are in the columns',failed
21707,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-col1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21714,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-by3-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21719,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_all_params,NotImplementedError: Passing non-existant columns or index values to constructor not yet implemented.,failed
21721,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-by3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21730,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[max-15-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21732,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_lazy_columns[None-series-columns3],"AssertionError: assert ['A', ['B', 'C']] == ['A', ('B', 'C')]
  At index 1 diff: ['B', 'C'] != ('B', 'C')
  Full diff:
  - ['A', ('B', 'C')]
  ?       ^        -
  + ['A', ['B', 'C']]
  ?       ^         +",failed
21736,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[max-15-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21738,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols4-col1-None-groups],ValueError: Categorical categories cannot be null,failed
21741,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_lazy_columns[index name!-index-columns0],"AssertionError: DataFrame.columns are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
21743,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols4-col1-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21745,tests.integ.modin.index.test_df_series_creation_with_index,test_create_series_with_all_params,NotImplementedError: Passing non-existent columns or index values to constructor not yet implemented.,failed
21746,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[mean-1-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21749,tests.integ.modin.frame.test_merge,test_merge_non_empty_with_empty[outer-True-kwargs2],KeyError: 'left_i',failed
21753,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols5-by5-None-groups],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21755,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[mean-1-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21756,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_lazy_columns[index name!-index-columns1],"AssertionError: DataFrame.columns are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
21758,tests.integ.modin.groupby.test_groupby_basic_agg,test_groupby_agg_on_groupby_columns_named_agg[True-False-by1],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (6, 4)
[right]: (6, 6)",failed
21760,tests.integ.modin.index.test_df_series_creation_with_index,test_create_series_with_df_data_negative,"AssertionError: Regex pattern did not match.
 Regex: 'Data cannot be a DataFrame'
 Input: 'Data must be 1-dimensional, got ndarray of shape (3, 2) instead'",failed
21763,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols5-by5-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21764,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[mean-1-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21768,tests.integ.modin.frame.test_merge,test_merge_non_empty_with_empty[outer-True-kwargs3],KeyError: 'None of [None] are in the columns',failed
21769,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_lazy_columns[index name!-index-columns2],"AssertionError: DataFrame.columns are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
21772,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[mean-1-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21775,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-None-None-0-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21777,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[mean-3-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21779,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_mixed_series_index_list_data_negative,NotImplementedError: Index.take is not yet implemented,failed
21783,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[mean-3-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21785,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_lazy_columns[index name!-series-columns0],"AssertionError: DataFrame.columns are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
21786,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-col3-None-groups],ValueError: Categorical categories cannot be null,failed
21788,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_lazy_columns[index name!-series-columns1],"AssertionError: DataFrame.columns are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
21790,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[mean-3-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21792,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_lazy_columns[index name!-series-columns2],"AssertionError: DataFrame.columns are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
21793,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_lazy_columns[index name!-series-columns3],"AssertionError: assert ['A', ['B', 'C']] == ['A', ('B', 'C')]
  At index 1 diff: ['B', 'C'] != ('B', 'C')
  Full diff:
  - ['A', ('B', 'C')]
  ?       ^        -
  + ['A', ['B', 'C']]
  ?       ^         +",failed
21795,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-col3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21797,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[mean-3-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21800,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[mean-5-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21801,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_lazy_columns[column_name2-index-columns0],"AssertionError: DataFrame.columns are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('tuple', 'name')]",failed
21802,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[mean-15-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21804,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-None-0-groups],ValueError: Categorical categories cannot be null,failed
21805,tests.integ.modin.frame.test_merge,test_merge_non_empty_with_empty[outer-False-kwargs2],KeyError: 'left_i',failed
21806,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[mean-5-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21807,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[mean-15-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21809,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-None-0-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21810,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[mean-5-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21811,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_lazy_columns[column_name2-index-columns1],"AssertionError: DataFrame.columns are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('tuple', 'name')]",failed
21813,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[mean-15-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21814,tests.integ.modin.frame.test_merge,test_merge_non_empty_with_empty[outer-False-kwargs3],KeyError: 'None of [None] are in the columns',failed
21818,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[mean-5-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21823,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[mean-15-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21824,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[median-1-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21826,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[mean-15-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21828,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[median-1-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21829,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index0-True-None],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
21830,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-None-col3-groups],ValueError: Categorical categories cannot be null,failed
21831,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[mean-15-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21832,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_lazy_columns[column_name2-index-columns2],"AssertionError: DataFrame.columns are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('tuple', 'name')]",failed
21833,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[median-1-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21834,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-col3-None-col3-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21838,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[mean-15-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21841,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index0-True-name],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
21842,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[median-1-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21844,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[median-1-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21846,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols10-col3-None-groups],ValueError: Categorical categories cannot be null,failed
21847,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[median-3-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21848,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_lazy_columns[column_name2-series-columns0],"AssertionError: DataFrame.columns are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('tuple', 'name')]",failed
21850,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[median-1-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21851,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols10-col3-None-indices],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
21852,tests.integ.modin.frame.test_merge,test_merge_empty_with_non_empty[left-True-kwargs2],KeyError: 'i',failed
21853,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_lazy_columns[column_name2-series-columns1],"AssertionError: DataFrame.columns are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('tuple', 'name')]",failed
21854,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[median-3-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21855,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[median-1-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21856,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_lazy_columns[column_name2-series-columns2],"AssertionError: DataFrame.columns are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('tuple', 'name')]",failed
21857,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[median-3-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21859,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_lazy_columns[column_name2-series-columns3],"AssertionError: assert ['A', ['B', 'C']] == ['A', ('B', 'C')]
  At index 1 diff: ['B', 'C'] != ('B', 'C')
  Full diff:
  - ['A', ('B', 'C')]
  ?       ^        -
  + ['A', ['B', 'C']]
  ?       ^         +",failed
21860,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols11-None-level11-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
21861,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[median-1-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21863,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[median-3-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21864,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index0-True-True],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
21865,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[median-3-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21866,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols11-None-level11-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
21867,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[median-5-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21868,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[median-3-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21870,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_lazy_multiindex_columns[None-index-columns0],"AssertionError: DataFrame.columns are different

DataFrame.columns classes are different
[left]:  Index([('A', 'B')], dtype='object')
[right]: MultiIndex([('A', 'B')],
           )",failed
21871,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index0-True-1],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
21872,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols12-None-level12-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
21873,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[median-3-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21875,tests.integ.modin.frame.test_merge,test_merge_empty_with_non_empty[left-True-kwargs3],KeyError: 'None of [None] are in the columns',failed
21876,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[median-5-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21877,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[median-3-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21878,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_True-as_index_False-group_series_False-dropna_False-basic_snowpark_pandas_df_with_missing_values-index_cols12-None-level12-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
21879,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index0-True-_NoDefault.no_default],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
21880,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[median-5-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21881,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_lazy_multiindex_columns[None-index-columns1],"AssertionError: DataFrame.columns are different

DataFrame.columns classes are different
[left]:  Index([('A', 'B'), ('C', 'D')], dtype='object')
[right]: MultiIndex([('A', 'B'),
            ('C', 'D')],
           )",failed
21883,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-None-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: [3, 5], 1: [1, 2], 2: [0, 4]}
Expected dict: {2: [0, 4], 1: [1, 2], 0: [3, 5]}",failed
21884,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[median-5-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21885,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_lazy_multiindex_columns[None-series-columns0],"AssertionError: assert [['A', 'B']] == [('A', 'B')]
  At index 0 diff: ['A', 'B'] != ('A', 'B')
  Full diff:
  - [('A', 'B')]
  ?  ^        -
  + [['A', 'B']]
  ?  ^         +",failed
21887,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[median-5-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21889,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_lazy_multiindex_columns[None-series-columns1],"AssertionError: assert [['A', 'B'], ['C', 'D']] == [('A', 'B'), ('C', 'D')]
  At index 0 diff: ['A', 'B'] != ('A', 'B')
  Full diff:
  - [('A', 'B'), ('C', 'D')]
  ?  ^        ^  ^        -
  + [['A', 'B'], ['C', 'D']]
  ?  ^        ^  ^         +",failed
21890,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-None-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [3, 5], 1: [1, 2], 2: [0, 4]}",failed
21891,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[median-5-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21892,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[median-15-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21895,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[median-5-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21896,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_lazy_multiindex_columns[column_name1-index-columns0],"AssertionError: DataFrame.columns are different

DataFrame.columns classes are different
[left]:  Index([('A', 'B')], dtype='object')
[right]: MultiIndex([('A', 'B')],
           names=['tuple', 'name'])",failed
21897,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-None-by1-None-groups],KeyError: 'col1',failed
21898,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[median-15-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21901,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[median-5-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21903,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[median-15-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21904,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_lazy_multiindex_columns[column_name1-index-columns1],"AssertionError: DataFrame.columns are different

DataFrame.columns classes are different
[left]:  Index([('A', 'B'), ('C', 'D')], dtype='object')
[right]: MultiIndex([('A', 'B'),
            ('C', 'D')],
           names=['tuple', 'name'])",failed
21905,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-None-by1-None-indices],KeyError: 'col1',failed
21906,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[median-15-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21907,tests.integ.modin.frame.test_merge,test_merge_empty_with_non_empty[left-False-kwargs2],KeyError: 'i',failed
21909,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[median-15-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21910,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_lazy_multiindex_columns[column_name1-series-columns0],"AssertionError: assert [['A', 'B']] == [('A', 'B')]
  At index 0 diff: ['A', 'B'] != ('A', 'B')
  Full diff:
  - [('A', 'B')]
  ?  ^        -
  + [['A', 'B']]
  ?  ^         +",failed
21912,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_lazy_multiindex_columns[column_name1-series-columns1],"AssertionError: assert [['A', 'B'], ['C', 'D']] == [('A', 'B'), ('C', 'D')]
  At index 0 diff: ['A', 'B'] != ('A', 'B')
  Full diff:
  - [('A', 'B'), ('C', 'D')]
  ?  ^        ^  ^        -
  + [['A', 'B'], ['C', 'D']]
  ?  ^        ^  ^         +",failed
21913,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[median-15-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21914,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-col3-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: [10.0, 1.1], 1: [8.0, 12.0], 2: [3.1, 4.0]}
Expected dict: {2: [3.1, 4.0], 1: [8.0, 12.0], 0: [10.0, 1.1]}",failed
21915,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[min-1-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21917,tests.integ.modin.frame.test_merge,test_merge_empty_with_non_empty[left-False-kwargs3],KeyError: 'None of [None] are in the columns',failed
21918,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[median-15-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21919,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-col3-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [3, 5], 1: [1, 2], 2: [0, 4]}",failed
21920,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[min-1-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21921,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_index_as_index[series-data0-native_idx0],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['some name']",failed
21922,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[median-15-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21924,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index1-True-None],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
21926,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[min-1-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21928,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[min-1-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21929,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[min-1-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21932,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[min-1-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21934,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[min-3-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21936,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[min-1-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21937,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[min-3-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21938,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-col3-by3-None-groups],KeyError: 'col1',failed
21939,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_index_as_index[series-data3-native_idx3],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['empty index']",failed
21940,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[min-1-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21941,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[min-3-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21942,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index1-True-name],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
21943,tests.integ.modin.frame.test_merge,test_merge_empty_with_non_empty[inner-True-kwargs2],KeyError: 'i',failed
21944,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_index_as_index[df-data0-native_idx0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['some name']",failed
21946,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-col3-by3-None-indices],KeyError: 'col1',failed
21947,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[min-3-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21948,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[min-3-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21950,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols4-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0 is not equal to expected key 2.
Actual dict: {0: [(10.0, 15), (1.1, 6)], 1: [(8.0, 3), (12.0, 16)], 2: [(3.1, 17), (4.0, 5)]}
Expected dict: {2: [(3.1, 17), (4.0, 5)], 1: [(8.0, 3), (12.0, 16)], 0: [(10.0, 15), (1.1, 6)]}",failed
21951,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[min-5-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21952,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[min-3-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21953,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index1-True-True],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
21955,tests.integ.modin.frame.test_merge,test_merge_empty_with_non_empty[inner-True-kwargs3],KeyError: 'None of [None] are in the columns',failed
21956,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols4-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [3, 5], 1: [1, 2], 2: [0, 4]}",failed
21958,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[min-3-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21959,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[min-5-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21960,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_index_as_index[df-data3-native_idx3],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['empty index']",failed
21963,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[min-3-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21964,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[min-5-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21965,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index1-True-1],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
21967,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols5-by5-None-groups],KeyError: 'col1',failed
21969,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[min-5-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21970,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[min-5-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21971,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_index_as_data_and_index[series-native_idx_data0-native_idx_index0],"AssertionError: Series are different

Attribute ""name"" are different
[left]:  None
[right]: data name",failed
21972,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[min-5-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21973,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index1-True-_NoDefault.no_default],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
21974,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols5-by5-None-indices],KeyError: 'col1',failed
21976,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[min-5-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21978,tests.integ.modin.frame.test_merge,test_merge_empty_with_non_empty[inner-False-kwargs2],KeyError: 'i',failed
21979,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_index_as_data_and_index[series-native_idx_data1-native_idx_index1],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name']",failed
21981,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-None-None-0-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [0], 1: [1], 2: [2], 3: [3], 4: [4], 5: [5]}",failed
21982,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[min-5-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21983,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[min-15-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21985,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-col3-col3-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: [1.1], 3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0], 1.1: [1.1]}",failed
21987,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[min-15-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21989,tests.integ.modin.frame.test_merge,test_merge_empty_with_non_empty[inner-False-kwargs3],KeyError: 'None of [None] are in the columns',failed
21990,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[min-15-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21991,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-col3-col3-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {1.1: [5], 3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
21992,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_index_as_data_and_index[series-native_idx_data2-native_idx_index2],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name']",failed
21993,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[min-15-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21994,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[min-15-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
21996,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-col3-None-0-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: [1.1], 3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0], 1.1: [1.1]}",failed
21999,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[min-15-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22001,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-col3-None-0-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {1.1: [5], 3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
22003,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[min-15-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22005,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[min-15-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22006,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-col3-None-col3-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: [1.1], 3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0], 1.1: [1.1]}",failed
22008,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[sum-1-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22009,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_index_as_data_and_index[df-native_idx_data0-native_idx_index0],"AssertionError: DataFrame.columns are different

Attribute ""inferred_type"" are different
[left]:  integer
[right]: string",failed
22010,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-col3-None-col3-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {1.1: [5], 3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
22014,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[sum-1-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22016,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[sum-1-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22017,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols10-col3-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 1.1 is not equal to expected key 3.1.
Actual dict: {1.1: [(1.1, 6)], 3.1: [(3.1, 17)], 4.0: [(4.0, 5)], 8.0: [(8.0, 3)], 10.0: [(10.0, 15)], 12.0: [(12.0, 16)]}
Expected dict: {3.1: [(3.1, 17)], 8.0: [(8.0, 3)], 12.0: [(12.0, 16)], 10.0: [(10.0, 15)], 4.0: [(4.0, 5)], 1.1: [(1.1, 6)]}",failed
22018,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[sum-1-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22019,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[sum-1-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22020,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_index_as_data_and_index[df-native_idx_data1-native_idx_index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name']",failed
22021,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols10-col3-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {1.1: [5], 3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
22022,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[sum-1-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22023,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[sum-1-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22024,tests.integ.modin.frame.test_merge,test_merge_empty_with_non_empty[right-True-kwargs2],KeyError: 'i',failed
22025,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[sum-1-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22026,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols11-None-level11-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
22027,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[sum-3-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22028,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_index_as_data_and_index[df-native_idx_data2-native_idx_index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name']",failed
22029,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[sum-3-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22030,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index2-True-None],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22031,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[sum-3-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22032,tests.integ.modin.frame.test_merge,test_merge_empty_with_non_empty[right-True-kwargs3],KeyError: 'None of [None] are in the columns',failed
22033,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols11-None-level11-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
22034,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[sum-3-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22036,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[sum-3-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22038,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_index_as_data_and_index[df-native_idx_data3-native_idx_index3],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 0)
[right]: (0, 1)",failed
22039,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[sum-3-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22040,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index2-True-name],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22042,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols12-None-level12-groups],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
22043,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[sum-3-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22045,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[sum-3-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22046,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_index_as_data_and_series_as_index[series-native_index0-native_series0],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index series name']",failed
22047,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[sum-5-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22048,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[sum-5-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22050,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index2-True-True],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22052,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[sum-5-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22054,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[sum-5-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22055,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[sum-5-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22057,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_index_as_data_and_series_as_index[series-native_index1-native_series1],"AssertionError: Series are different

Attribute ""name"" are different
[left]:  None
[right]: AAAAA",failed
22058,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[sum-5-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22059,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index2-True-1],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22060,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[sum-5-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22062,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[sum-5-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22064,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df-index_cols12-None-level12-indices],ValueError: Cannot remove 2 levels from an index with 2 levels: at least one level must be left.,failed
22066,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[sum-15-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22068,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[sum-15-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22069,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0.0 is not equal to expected key 1.0.
Actual dict: {0.0: [3, 5], 1.0: [1, 2]}
Expected dict: {1.0: [1, 2], 0.0: [3, 5]}",failed
22070,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_index_as_data_and_series_as_index[series-native_index3-native_series3],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['empty series']",failed
22071,tests.integ.modin.frame.test_merge,test_merge_empty_with_non_empty[right-False-kwargs2],KeyError: 'i',failed
22073,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[sum-15-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22074,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[sum-15-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22075,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0.0: [3, 5], 1.0: [1, 2]}",failed
22077,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_index_as_data_and_series_as_index[df-native_index0-native_series0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index series name']",failed
22078,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[sum-15-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22079,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[sum-15-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22081,tests.integ.modin.frame.test_merge,test_merge_empty_with_non_empty[right-False-kwargs3],KeyError: 'None of [None] are in the columns',failed
22082,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index2-True-_NoDefault.no_default],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22083,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-by1-None-groups],KeyError: 'col1',failed
22084,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a[sum-15-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22085,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[sum-15-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22086,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_index_as_data_and_series_as_index[df-native_index1-native_series1],"AssertionError: DataFrame.columns are different

Attribute ""inferred_type"" are different
[left]:  integer
[right]: string",failed
22087,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_diff_freq[s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22090,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[max-1-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22092,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_diff_freq[min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22093,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-by1-None-indices],KeyError: 'col1',failed
22096,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_diff_freq[h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22097,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[max-1-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22098,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_diff_freq[D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22099,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0.0 is not equal to expected key 1.0.
Actual dict: {0.0: [10.0, nan], 1.0: [8.0, 12.0]}
Expected dict: {1.0: [8.0, 12.0], 0.0: [10.0, nan]}",failed
22104,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_index_as_data_and_series_as_index[df-native_index3-native_series3],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 0)
[right]: (0, 1)",failed
22105,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[max-1-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22106,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[max-1-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22109,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0.0: [3, 5], 1.0: [1, 2]}",failed
22111,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[max-1-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22112,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[max-1-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22115,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-by3-None-groups],KeyError: 'col1',failed
22116,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[max-1-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22117,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[max-3-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22121,tests.integ.modin.frame.test_merge,test_merge_empty_with_non_empty[outer-True-kwargs2],KeyError: 'i',failed
22125,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_series_as_data_and_index_as_index[series-native_series0-native_index0-True],NotImplementedError: Passing non-existent columns or index values to constructor not yet implemented.,failed
22126,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[max-1-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22128,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-by3-None-indices],KeyError: 'col1',failed
22129,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[max-3-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22134,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[max-3-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22138,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols4-col1-None-groups],"AssertionError: Actual dict has the wrong key at position 0. Actual key 0.0 is not equal to expected key 1.0.
Actual dict: {0.0: [(10.0, 15.0), (nan, nan)], 1.0: [(8.0, 3.0), (12.0, 16.0)]}
Expected dict: {1.0: [(8.0, 3.0), (12.0, 16.0)], 0.0: [(10.0, 15.0), (nan, nan)]}",failed
22139,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[max-3-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22142,tests.integ.modin.frame.test_merge,test_merge_empty_with_non_empty[outer-True-kwargs3],KeyError: 'None of [None] are in the columns',failed
22145,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[max-3-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22147,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[max-3-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22148,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols4-col1-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0.0: [3, 5], 1.0: [1, 2]}",failed
22149,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[max-3-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22151,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[max-5-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22152,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_series_as_data_and_index_as_index[series-native_series1-native_index1-True],NotImplementedError: Passing non-existent columns or index values to constructor not yet implemented.,failed
22154,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index3-True-None],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22155,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols5-by5-None-groups],KeyError: 'col1',failed
22157,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[max-5-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22158,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[max-3-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22159,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index3-True-name],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22161,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[max-5-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22163,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-index_cols5-by5-None-indices],KeyError: 'col1',failed
22165,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[max-5-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22168,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[max-5-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22170,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[max-5-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22171,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_series_as_data_and_index_as_index[series-native_series2-native_index2-True],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  ['mixed']
[right]: [None]",failed
22172,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-None-None-0-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {0: [0], 1: [1], 2: [2], 3: [3], 4: [4], 5: [5]}",failed
22173,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[max-15-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22174,tests.integ.modin.frame.test_merge,test_merge_empty_with_non_empty[outer-False-kwargs2],KeyError: 'i',failed
22175,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-col3-None-groups],"AssertionError: Actual dict has the wrong key at position 1. Actual key 4.0 is not equal to expected key 8.0.
Actual dict: {3.1: [3.1], 4.0: [4.0], 8.0: [8.0], 10.0: [10.0], 12.0: [12.0]}
Expected dict: {3.1: [3.1], 8.0: [8.0], 12.0: [12.0], 10.0: [10.0], 4.0: [4.0]}",failed
22177,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[max-5-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22178,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[max-15-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22180,tests.integ.modin.groupby.test_groupby_property,test_groups_and_indices[sort_False-as_index_True-group_series_True-dropna_True-basic_snowpark_pandas_df_with_missing_values-col3-col3-None-indices],"AssertionError: Actual type is not the same as expected type <class 'dict'>, and instead is type <class 'pandas.io.formats.printing.PrettyDict'>. Actual value is {3.1: [0], 4.0: [4], 8.0: [1], 10.0: [3], 12.0: [2]}",failed
22181,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index3-True-True],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22182,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[max-5-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22183,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_series_as_data_and_index_as_index[series-native_series3-native_index3-True],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
22185,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[max-15-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22187,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[max-15-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22188,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index3-True-1],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22190,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[max-15-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22191,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_series_as_data_and_index_as_index[series-native_series4-native_index4-True],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [20]
[right]: [None]",failed
22192,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[mean-1-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22193,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[max-15-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22194,tests.integ.modin.frame.test_merge,test_merge_empty_with_non_empty[outer-False-kwargs3],KeyError: 'None of [None] are in the columns',failed
22197,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[max-15-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22198,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[mean-1-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22200,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index3-True-_NoDefault.no_default],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22203,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[max-15-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22204,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[mean-1-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22207,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[mean-1-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22209,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_series_as_data_and_index_as_index[series-native_series5-native_index5-True],NotImplementedError: Passing non-existent columns or index values to constructor not yet implemented.,failed
22213,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[mean-3-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22215,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[mean-1-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22218,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[mean-3-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22219,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[mean-1-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22223,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[mean-1-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22224,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[mean-3-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22225,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[mean-1-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22226,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[mean-3-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22232,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[mean-5-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22233,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[mean-3-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22234,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_series_as_data_and_index_as_index[series-native_series6-native_index6-True],"AssertionError: Series.index are different

Attribute ""inferred_type"" are different
[left]:  integer
[right]: empty",failed
22236,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[mean-3-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22239,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[mean-5-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22241,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[mean-3-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22242,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_series_as_data_and_index_as_index[series-native_series7-native_index7-False],"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['empty index']",failed
22243,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[mean-5-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22246,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[mean-5-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22247,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index4-True-None],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22248,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_a_closed_left[mean-15-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22250,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[mean-3-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22254,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_series_as_data_and_index_as_index[df-native_series0-native_index0-True],NotImplementedError: Passing non-existant columns or index values to constructor not yet implemented.,failed
22255,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[mean-5-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22260,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[mean-5-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22263,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_series_as_data_and_index_as_index[df-native_series1-native_index1-True],NotImplementedError: Passing non-existant columns or index values to constructor not yet implemented.,failed
22265,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index4-True-name],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22266,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[mean-5-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22268,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[mean-5-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22271,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[mean-15-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22272,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index4-True-True],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22275,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[mean-15-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22278,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_series_as_data_and_index_as_index[df-native_series2-native_index2-True],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  ['mixed']
[right]: [None]",failed
22281,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index4-True-1],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22282,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[mean-15-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22285,tests.integ.modin.frame.test_merge,test_merge_mis_specified_negative[None-None-None-left_index11-True],Failed: DID NOT RAISE <class 'Exception'>,failed
22286,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_series_as_data_and_index_as_index[df-native_series3-native_index3-True],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
22287,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[mean-15-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22289,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index4-True-_NoDefault.no_default],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22294,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[median-1-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22295,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_series_as_data_and_index_as_index[df-native_series4-native_index4-True],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [20]
[right]: [None]",failed
22297,tests.integ.modin.frame.test_merge,test_merge_mis_specified_negative[None-None-None-True-right_index12],Failed: DID NOT RAISE <class 'Exception'>,failed
22298,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[median-1-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22301,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[median-1-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22306,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[median-1-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22308,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_series_as_data_and_index_as_index[df-native_series5-native_index5-True],NotImplementedError: Passing non-existant columns or index values to constructor not yet implemented.,failed
22309,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[median-3-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22312,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[median-3-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22316,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_series_as_data_and_index_as_index[df-native_series6-native_index6-True],"AssertionError: DataFrame.index are different

Attribute ""inferred_type"" are different
[left]:  integer
[right]: empty",failed
22319,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[median-3-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22325,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_series_as_data_and_index_as_index[df-native_series7-native_index7-False],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['empty index']",failed
22327,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[median-3-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22329,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[median-5-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22334,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[median-5-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22335,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[median-5-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22339,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_as_data_and_index_as_index[native_df0-native_index0],NotImplementedError: Passing non-existant columns or index values to constructor not yet implemented.,failed
22340,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index5-True-None],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22341,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[median-5-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22346,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[median-15-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22347,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index5-True-name],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22348,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[median-15-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22351,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_as_data_and_index_as_index[native_df1-native_index1],NotImplementedError: Passing non-existant columns or index values to constructor not yet implemented.,failed
22353,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[median-15-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22354,tests.integ.modin.index.test_datetime_index_methods,test_datetime_index_construction,"AssertionError: assert False
 +  where False = isinstance(DatetimeIndex(['2021-01-01', '2021-01-02', '2021-01-03'], dtype='datetime64[ns]', freq=None), <class 'snowflake.snowpark.modin.plugin.extensions.datetime_index.DatetimeIndex'>)
 +    where <class 'snowflake.snowpark.modin.plugin.extensions.datetime_index.DatetimeIndex'> = pd.DatetimeIndex",failed
22357,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index5-True-True],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22359,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[median-15-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22365,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[min-1-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22367,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index5-True-1],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22368,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_as_data_and_index_as_index[native_df2-native_index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  ['mixed']
[right]: [None]",failed
22374,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[min-1-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22375,tests.integ.modin.index.test_datetime_index_methods,test_datetime_index_construction_negative,AttributeError: 'NativeQueryCompiler' object has no attribute 'is_datetime64_any_dtype',failed
22387,tests.integ.modin.index.test_datetime_index_methods,test_index_parent,AttributeError: 'DatetimeIndex' object has no attribute '_parent',failed
22389,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[min-1-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22392,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_as_data_and_index_as_index[native_df3-native_index3],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
22394,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[min-1-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22396,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[min-3-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22399,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index5-True-_NoDefault.no_default],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22400,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[min-3-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22405,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[min-3-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22410,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[min-3-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22416,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[min-5-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22424,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_as_data_and_index_as_index[native_df5-native_index5],NotImplementedError: Passing non-existant columns or index values to constructor not yet implemented.,failed
22426,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[min-5-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22441,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[min-5-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22443,tests.integ.modin.index.test_index_methods,test_df_index_equals[native_df0],AttributeError: 'RangeIndex' object has no attribute 'to_pandas',failed
22445,tests.integ.modin.index.test_index_methods,test_df_index_equals[native_df1],AttributeError: 'RangeIndex' object has no attribute 'to_pandas',failed
22448,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[min-5-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22449,tests.integ.modin.index.test_index_methods,test_df_index_equals[native_df2],AttributeError: 'Index' object has no attribute 'to_pandas',failed
22450,tests.integ.modin.index.test_index_methods,test_df_index_equals[native_df3],AttributeError: 'RangeIndex' object has no attribute 'to_pandas',failed
22451,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[min-15-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22452,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_as_data_and_index_as_index[native_df6-native_index6],NotImplementedError: Passing non-existant columns or index values to constructor not yet implemented.,failed
22453,tests.integ.modin.index.test_index_methods,test_df_index_equals[native_df4],AttributeError: 'DatetimeIndex' object has no attribute 'to_pandas',failed
22457,tests.integ.modin.index.test_index_methods,test_df_index_equals[native_df5],AttributeError: 'TimedeltaIndex' object has no attribute 'to_pandas',failed
22461,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[min-15-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22464,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[min-15-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22466,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index6-True-None],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22472,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[min-15-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22474,tests.integ.modin.index.test_index_methods,test_valid_level[None-0-empty-TimedeltaIndex],reason: SNOW-2288735,xfailed
22475,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_as_data_and_index_as_index[native_df7-native_index7],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  ['mixed']
[right]: [None]",failed
22477,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index6-True-name],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22479,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[sum-1-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22484,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[sum-1-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22485,tests.integ.modin.io.test_read_snowflake_select_query,test_read_snowflake_query_aliased_columns_and_columns_kwarg_specified[True-col_name_and_alias_tuple0],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
22490,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[sum-1-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22494,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_as_data_and_index_as_index[native_df8-native_index8],NotImplementedError: Passing non-existant columns or index values to constructor not yet implemented.,failed
22496,tests.integ.modin.index.test_index_methods,test_valid_level[None-None-empty-TimedeltaIndex],reason: SNOW-2288735,xfailed
22497,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[sum-1-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22503,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index6-True-True],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22506,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[sum-3-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22510,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[sum-3-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22513,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_as_data_and_index_as_index[native_df9-native_index9],NotImplementedError: Passing non-existant columns or index values to constructor not yet implemented.,failed
22516,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index6-True-1],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22518,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[sum-3-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22521,tests.integ.modin.index.test_index_methods,test_valid_level[None--1-empty-TimedeltaIndex],reason: SNOW-2288735,xfailed
22523,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[sum-3-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22526,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index6-True-_NoDefault.no_default],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22529,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[sum-5-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22533,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_as_data_and_index_as_index[native_df10-native_index10],NotImplementedError: Passing non-existant columns or index values to constructor not yet implemented.,failed
22538,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[sum-5-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22540,tests.integ.modin.index.test_index_methods,test_valid_level[0-0-empty-TimedeltaIndex],reason: SNOW-2288735,xfailed
22541,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_empty_df_as_data_and_index_as_index[native_df0-native_index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['empty index']",failed
22546,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[sum-5-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22551,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[sum-5-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22563,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[sum-15-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22570,tests.integ.modin.index.test_index_methods,test_valid_level[1-0-empty-TimedeltaIndex],reason: SNOW-2288735,xfailed
22572,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[sum-15-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22573,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_empty_df_as_data_and_index_as_index[native_df1-native_index1],NotImplementedError: Passing non-existant columns or index values to constructor not yet implemented.,failed
22583,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[sum-15-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22585,tests.integ.modin.io.test_read_snowflake_select_query,test_read_snowflake_query_aliased_columns_and_columns_kwarg_specified[True-col_name_and_alias_tuple1],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
22588,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_by_b[sum-15-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22594,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[max-1-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22596,tests.integ.modin.index.test_index_methods,test_valid_level[1-1.0-empty-TimedeltaIndex],reason: SNOW-2288735,xfailed
22602,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[max-1-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22606,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index7-True-None],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22610,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[max-1-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22615,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[max-1-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22617,tests.integ.modin.index.test_index_methods,test_valid_level[1-1-empty-TimedeltaIndex],reason: SNOW-2288735,xfailed
22618,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_series_index_dict_data[series-series],"AssertionError: Attributes of DataFrame.iloc[:, 2] (column name=""C"") are different

Attribute ""dtype"" are different
[left]:  float64
[right]: object",failed
22622,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[max-3-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22629,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[max-3-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22630,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index7-True-name],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22634,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[max-3-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22636,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index7-True-True],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22638,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[max-3-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22643,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[max-5-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22646,tests.integ.modin.index.test_index_methods,test_valid_level[1--1-empty-TimedeltaIndex],reason: SNOW-2288735,xfailed
22650,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index7-True-1],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22654,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[max-5-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22658,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[max-5-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22662,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[max-5-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22663,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index7-True-_NoDefault.no_default],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22667,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[max-15-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22668,tests.integ.modin.io.test_read_snowflake_select_query,test_read_snowflake_query_aliased_columns_and_columns_kwarg_specified[True-col_name_and_alias_tuple2],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
22670,tests.integ.modin.index.test_index_methods,test_valid_level[2-0-empty-TimedeltaIndex],reason: SNOW-2288735,xfailed
22676,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[max-15-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22685,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[max-15-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22686,tests.integ.modin.frame.test_merge,test_merge_invalid_how_negative,UnboundLocalError: local variable 'lidx' referenced before assignment,failed
22692,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[max-15-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22694,tests.integ.modin.index.test_index_methods,test_valid_level[2--1-empty-TimedeltaIndex],reason: SNOW-2288735,xfailed
22699,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[mean-1-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22705,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[mean-1-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22711,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[mean-1-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22715,tests.integ.modin.index.test_index_methods,test_valid_level[name-name-empty-TimedeltaIndex],reason: SNOW-2288735,xfailed
22719,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[mean-1-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22722,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[mean-3-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22727,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[mean-3-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22733,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index8-True-None],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22734,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[mean-3-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22737,tests.integ.modin.index.test_index_methods,test_valid_level[name-0-empty-TimedeltaIndex],reason: SNOW-2288735,xfailed
22739,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[mean-3-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22742,tests.integ.modin.io.test_read_snowflake_select_query,test_read_snowflake_query_aliased_columns_and_columns_kwarg_specified[True-col_name_and_alias_tuple3],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
22744,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index8-True-name],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22747,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[mean-5-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22750,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[mean-5-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22751,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index8-True-True],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22756,tests.integ.modin.index.test_index_methods,test_valid_level[name--1-empty-TimedeltaIndex],reason: SNOW-2288735,xfailed
22757,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[mean-5-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22761,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[mean-5-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22762,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index8-True-1],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22767,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[mean-15-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22771,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[mean-15-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22775,tests.integ.modin.index.test_index_methods,test_valid_level[0 days 00:00:00.000000001-0 days 00:00:00.000000001-empty-TimedeltaIndex],reason: SNOW-2288735,xfailed
22778,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[mean-15-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22782,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[mean-15-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22784,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index8-True-_NoDefault.no_default],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22788,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[median-1-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22790,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_series_index_list_data[series-index],NotImplementedError: Index.take is not yet implemented,failed
22796,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[median-1-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22799,tests.integ.modin.index.test_index_methods,test_valid_level[1994-07-29 00:00:00-1994-07-29 00:00:00-empty-TimedeltaIndex],reason: SNOW-2288735,xfailed
22801,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[median-1-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22817,tests.integ.modin.index.test_index_methods,"test_valid_level[('name',)-('name',)-empty-TimedeltaIndex]",reason: SNOW-2288735,xfailed
22819,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[median-1-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22825,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[median-3-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22827,tests.integ.modin.io.test_read_snowflake_select_query,test_read_snowflake_query_aliased_columns_and_columns_kwarg_specified[True-col_name_and_alias_tuple4],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
22828,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index9-True-None],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22830,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[median-3-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22834,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[median-3-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22836,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index9-True-name],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22841,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[median-3-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22846,tests.integ.modin.index.test_index_methods,test_valid_level[3.5-3.5-empty-TimedeltaIndex],reason: SNOW-2288735,xfailed
22847,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[median-5-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22852,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[median-5-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22855,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[median-5-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22862,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[median-5-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22873,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index9-True-True],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22875,tests.integ.modin.index.test_index_methods,test_valid_level[nan-nan-empty-DatetimeIndex],https://github.com/pandas-dev/pandas/issues/62169,xfailed
22876,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[median-15-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22877,tests.integ.modin.index.test_index_methods,test_valid_level[nan-nan-empty-TimedeltaIndex],reason: SNOW-2288735,xfailed
22880,tests.integ.modin.index.test_index_methods,test_valid_level[nan-nan-empty-Index],https://github.com/pandas-dev/pandas/issues/62169,xfailed
22881,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index9-True-1],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22882,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[median-15-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22883,tests.integ.modin.index.test_index_methods,test_valid_level[nan-nan-not_empty-DatetimeIndex],https://github.com/pandas-dev/pandas/issues/62169,xfailed
22886,tests.integ.modin.index.test_index_methods,test_valid_level[nan-nan-not_empty-TimedeltaIndex],https://github.com/pandas-dev/pandas/issues/62169,xfailed
22889,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[median-15-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22890,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index9-True-_NoDefault.no_default],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22893,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[median-15-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22894,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df0-True-None],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22897,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df0-True-name],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22898,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[min-1-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22900,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df0-True-True],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22903,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df0-True-1],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22904,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[min-1-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22905,tests.integ.modin.index.test_index_methods,test_valid_level[nan-nan-not_empty-Index],https://github.com/pandas-dev/pandas/issues/62169,xfailed
22906,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df0-True-_NoDefault.no_default],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22910,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df0-False-None],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22911,tests.integ.modin.index.test_index_methods,test_valid_level[NaT-NaT-empty-DatetimeIndex],https://github.com/pandas-dev/pandas/issues/62169,xfailed
22912,tests.integ.modin.index.test_index_methods,test_valid_level[NaT-NaT-empty-TimedeltaIndex],reason: SNOW-2288735,xfailed
22913,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[min-1-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22916,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df0-False-name],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22917,tests.integ.modin.index.test_index_methods,test_valid_level[NaT-NaT-empty-Index],https://github.com/pandas-dev/pandas/issues/62169,xfailed
22918,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df0-False-True],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22920,tests.integ.modin.io.test_read_snowflake_select_query,test_read_snowflake_query_aliased_columns_and_columns_kwarg_specified[True-col_name_and_alias_tuple5],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
22922,tests.integ.modin.index.test_index_methods,test_valid_level[NaT-NaT-not_empty-DatetimeIndex],https://github.com/pandas-dev/pandas/issues/62169,xfailed
22923,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[min-1-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22924,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df0-False-1],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22926,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df0-False-_NoDefault.no_default],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22927,tests.integ.modin.index.test_index_methods,test_valid_level[NaT-NaT-not_empty-TimedeltaIndex],https://github.com/pandas-dev/pandas/issues/62169,xfailed
22930,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df1-True-None],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22931,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[min-3-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22932,tests.integ.modin.index.test_index_methods,test_valid_level[NaT-NaT-not_empty-Index],https://github.com/pandas-dev/pandas/issues/62169,xfailed
22933,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df1-True-name],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22934,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df1-True-True],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22936,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df1-True-1],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22937,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[min-3-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22938,tests.integ.modin.index.test_index_methods,test_valid_level[<NA>-<NA>-empty-DatetimeIndex],SNOW-2288761,xfailed
22939,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df1-True-_NoDefault.no_default],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22940,tests.integ.modin.index.test_index_methods,test_valid_level[<NA>-<NA>-empty-TimedeltaIndex],reason: SNOW-2288735,xfailed
22943,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df1-False-None],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22944,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[min-3-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22945,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df1-False-name],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22946,tests.integ.modin.frame.test_merge,test_merge_different_index_names,KeyError: 'd',failed
22947,tests.integ.modin.index.test_index_methods,test_valid_level[<NA>-<NA>-empty-Index],SNOW-2288761,xfailed
22948,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df1-False-True],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22949,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df1-False-1],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22952,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[min-3-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22953,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df1-False-_NoDefault.no_default],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22954,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df2-True-None],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22956,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[min-5-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22957,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df2-True-name],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22959,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df2-True-True],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22961,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df2-True-1],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22962,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index10-True-None],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22963,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[min-5-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22965,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df2-True-_NoDefault.no_default],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22967,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df2-False-None],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22968,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[min-5-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22969,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df2-False-name],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22971,tests.integ.modin.index.test_index_methods,test_valid_level[<NA>-<NA>-not_empty-DatetimeIndex],SNOW-2288761,xfailed
22972,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df2-False-True],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22974,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df2-False-1],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22975,tests.integ.modin.index.test_index_methods,test_valid_level[<NA>-<NA>-not_empty-TimedeltaIndex],SNOW-2288761,xfailed
22976,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[min-5-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
22978,tests.integ.modin.index.test_index_methods,test_valid_level[<NA>-<NA>-not_empty-Index],SNOW-2288761,xfailed
22988,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index10-True-name],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
22990,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[min-15-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23005,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[min-15-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23035,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[min-15-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23036,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df2-False-_NoDefault.no_default],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23037,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index10-True-True],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
23049,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df3-True-None],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23058,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df3-True-name],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23060,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[min-15-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23067,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df3-True-True],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23090,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df3-True-1],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23091,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[sum-1-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23093,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index10-True-1],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
23100,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df3-True-_NoDefault.no_default],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23107,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df3-False-None],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23112,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[sum-1-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23119,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df3-False-name],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23125,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df3-False-True],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23127,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[sum-1-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23128,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index10-True-_NoDefault.no_default],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
23129,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df3-False-1],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23130,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df3-False-_NoDefault.no_default],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23131,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[sum-1-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23137,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df4-True-None],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23142,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df4-True-name],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23143,tests.integ.modin.io.test_read_snowflake_select_query,test_read_snowflake_query_aliased_columns_and_columns_kwarg_specified[True-col_name_and_alias_tuple6],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
23144,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[sum-3-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23145,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df4-True-True],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23147,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df4-True-1],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23148,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[sum-3-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23149,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df4-True-_NoDefault.no_default],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23150,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df4-False-None],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23152,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df4-False-name],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23153,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[sum-3-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23154,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df4-False-True],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23157,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df4-False-1],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23158,tests.integ.modin.index.test_df_series_creation_with_index,test_create_series_with_series_index_list_data[index-index],AttributeError: 'DataFrame' object has no attribute 'ensure_row_position_column',failed
23159,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df4-False-_NoDefault.no_default],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23161,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[sum-3-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23162,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df5-True-None],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23165,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df5-True-name],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23166,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[sum-5-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23170,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df5-True-True],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23171,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df5-True-1],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23172,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[sum-5-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23174,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df5-True-_NoDefault.no_default],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23177,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df5-False-None],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23178,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[sum-5-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23180,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df5-False-name],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23183,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df5-False-True],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23184,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[sum-5-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23186,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df5-False-1],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23188,tests.integ.modin.index.test_index_methods,test_df_index_to_frame[native_df5-False-_NoDefault.no_default],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23190,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[sum-15-s],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23200,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[sum-15-min],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23205,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index11-True-None],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
23208,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[sum-15-h],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23215,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_multiple_by_cols[sum-15-D],AssertionError: Got type: <class 'pandas.core.frame.DataFrame'>,failed
23223,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index11-True-name],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
23231,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_week_to_year_negative[W],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
23234,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index11-True-True],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
23240,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_week_to_year_negative[ME],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
23245,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index11-True-1],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
23248,tests.integ.modin.groupby.test_groupby_resample,test_groupby_resample_week_to_year_negative[YE],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
23260,tests.integ.modin.groupby.test_groupby_resample,test_resample_series_negative,KeyError: 'grp_col',failed
23262,tests.integ.modin.io.test_read_snowflake_select_query,test_read_snowflake_query_aliased_columns_and_columns_kwarg_specified[True-col_name_and_alias_tuple7],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
23265,tests.integ.modin.index.test_df_series_creation_with_index,test_create_series_with_series_index_dict_data[index-index],AttributeError: 'DataFrame' object has no attribute 'ensure_row_position_column',failed
23271,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index11-True-_NoDefault.no_default],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
23286,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_series_data_and_series_index,SNOW-1638397 DataFrame creation fails: reindex does not work with string index,xfailed
23297,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_data_and_new_columns,NotImplementedError: Passing non-existant columns or index values to constructor not yet implemented.,failed
23303,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_data_and_name_in_columns,"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 1)
[right]: (3, 2)",failed
23312,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_df_data_and_tuple_name_in_columns,"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (3, 1)
[right]: (3, 2)",failed
23321,tests.integ.modin.index.test_index_methods,test_index_parent,AttributeError: 'Index' object has no attribute '_parent',failed
23331,tests.integ.modin.index.test_index_methods,test_create_index_from_series,AttributeError: 'Index' object has no attribute '_query_compiler',failed
23364,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index12-True-None],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
23372,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns0-A-index-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
23375,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index12-True-name],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
23403,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns0-A-index-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
23405,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index12-True-True],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
23414,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns0-A-index-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
23419,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index12-True-1],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
23421,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns0-A-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
23429,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns0-A-series-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
23435,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns0-A-series-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
23437,tests.integ.modin.index.test_index_methods,test_index_to_series[native_index12-True-_NoDefault.no_default],AttributeError: 'DataFrame' object has no attribute 'data_column_pandas_labels',failed
23444,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns0-index name!-index-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
23451,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns0-index name!-index-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
23466,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns0-index name!-index-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
23471,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns0-index name!-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
23477,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns0-index name!-series-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
23483,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns0-index name!-series-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
23494,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns0-index_name3-index-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
23503,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns0-index_name3-index-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
23515,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns0-index_name3-index-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
23522,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns0-index_name3-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
23528,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns0-index_name3-series-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
23535,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns0-index_name3-series-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
23578,tests.integ.modin.frame.test_merge,test_merge_on_array_like_keys_length_mismatch_negative[left_on0],"AssertionError: Regex pattern did not match.
 Regex: 'array-like join key must be of same length as dataframe'
 Input: 'The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()'",failed
23594,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns1-A-index-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
23603,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns1-A-index-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
23614,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns1-A-index-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
23621,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns1-A-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
23628,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns1-A-series-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
23629,tests.integ.modin.frame.test_merge,test_merge_on_array_like_keys_length_mismatch_negative[left_on1],"AssertionError: Regex pattern did not match.
 Regex: 'array-like join key must be of same length as dataframe'
 Input: 'The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()'",failed
23635,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns1-A-series-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
23642,tests.integ.modin.groupby.test_groupby_series,test_groupby_series_numeric_only[False],KeyError: 'grp_col',failed
23644,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns1-index name!-index-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
23649,tests.integ.modin.frame.test_merge,test_merge_with_indicator[left],"AssertionError: Categorical Expected type <class 'pandas.core.arrays.categorical.Categorical'>, found <class 'numpy.ndarray'> instead",failed
23652,tests.integ.modin.groupby.test_groupby_series,test_groupby_series_numeric_only[None],KeyError: 'grp_col',failed
23654,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns1-index name!-index-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
23666,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns1-index name!-index-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
23667,tests.integ.modin.frame.test_merge,test_merge_with_indicator[inner],"AssertionError: Categorical Expected type <class 'pandas.core.arrays.categorical.Categorical'>, found <class 'numpy.ndarray'> instead",failed
23673,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns1-index name!-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
23679,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns1-index name!-series-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
23687,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns1-index name!-series-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
23690,tests.integ.modin.frame.test_merge,test_merge_with_indicator[right],"AssertionError: Categorical Expected type <class 'pandas.core.arrays.categorical.Categorical'>, found <class 'numpy.ndarray'> instead",failed
23695,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns1-index_name3-index-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
23703,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns1-index_name3-index-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
23704,tests.integ.modin.frame.test_merge,test_merge_with_indicator[outer],"AssertionError: Categorical Expected type <class 'pandas.core.arrays.categorical.Categorical'>, found <class 'numpy.ndarray'> instead",failed
23707,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns1-index_name3-index-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
23713,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns1-index_name3-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
23715,tests.integ.modin.frame.test_merge,test_merge_with_indicator_cross_join,"AssertionError: Categorical Expected type <class 'pandas.core.arrays.categorical.Categorical'>, found <class 'numpy.ndarray'> instead",failed
23717,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns1-index_name3-series-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
23720,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns1-index_name3-series-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
23730,tests.integ.modin.frame.test_merge,test_merge_with_indicator_explicit_name,"AssertionError: Categorical Expected type <class 'pandas.core.arrays.categorical.Categorical'>, found <class 'numpy.ndarray'> instead",failed
23764,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns2-A-index-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
23767,tests.integ.modin.frame.test_merge,test_merge_validate[lvalues0-rvalues0-1:1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
23773,tests.integ.modin.frame.test_merge,test_merge_validate[lvalues1-rvalues1-1:m],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
23774,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns2-A-index-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
23779,tests.integ.modin.frame.test_merge,test_merge_validate[lvalues2-rvalues2-m:1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
23784,tests.integ.modin.frame.test_merge,test_merge_validate[lvalues3-rvalues3-m:m],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
23787,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns2-A-index-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
23790,tests.integ.modin.frame.test_merge,test_merge_validate[lvalues4-rvalues4-1:m],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
23791,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns2-A-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
23794,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns2-A-series-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
23795,tests.integ.modin.frame.test_merge,test_merge_validate[lvalues5-rvalues5-m:m],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
23799,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns2-A-series-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
23801,tests.integ.modin.frame.test_merge,test_merge_validate[lvalues6-rvalues6-m:1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
23807,tests.integ.modin.frame.test_merge,test_merge_validate[lvalues7-rvalues7-m:m],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
23809,tests.integ.modin.frame.test_merge,test_merge_validate[lvalues8-rvalues8-m:m],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
23818,tests.integ.modin.frame.test_merge,test_merge_validate_negative[lvalues0-rvalues0-1:1],pandas.errors.MergeError: Merge keys are not unique in right dataset; not a one-to-one merge,failed
23829,tests.integ.modin.frame.test_merge,test_merge_validate_negative[lvalues1-rvalues1-m:1],pandas.errors.MergeError: Merge keys are not unique in right dataset; not a many-to-one merge,failed
23830,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns2-index name!-index-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
23836,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns2-index name!-index-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
23844,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns2-index name!-index-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
23847,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns2-index name!-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
23852,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns2-index name!-series-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
23855,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns2-index name!-series-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
23863,tests.integ.modin.frame.test_merge,test_merge_validate_negative[lvalues2-rvalues2-1:1],pandas.errors.MergeError: Merge keys are not unique in left dataset; not a one-to-one merge,failed
23864,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns2-index_name3-index-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
23880,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns2-index_name3-index-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
23885,tests.integ.modin.frame.test_merge,test_merge_validate_negative[lvalues3-rvalues3-1:m],pandas.errors.MergeError: Merge keys are not unique in left dataset; not a one-to-many merge,failed
23900,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns2-index_name3-index-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
23918,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns2-index_name3-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
23939,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns2-index_name3-series-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
23942,tests.integ.modin.frame.test_merge,test_merge_validate_negative[lvalues4-rvalues4-1:1],pandas.errors.MergeError: Merge keys are not unique in either left or right dataset; not a one-to-one merge,failed
23956,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns2-index_name3-series-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
23970,tests.integ.modin.frame.test_merge,test_merge_validate_negative[lvalues5-rvalues5-1:m],pandas.errors.MergeError: Merge keys are not unique in left dataset; not a one-to-many merge,failed
23981,tests.integ.modin.frame.test_merge,test_merge_validate_negative[lvalues6-rvalues6-m:1],pandas.errors.MergeError: Merge keys are not unique in right dataset; not a many-to-one merge,failed
24007,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns3-A-index-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
24013,tests.integ.modin.frame.test_merge,test_merge_timedelta_how[kwargs3],"AssertionError: Regex pattern did not match.
 Regex: ""You are trying to merge on LongType and TimedeltaType columns for key 'c'. If you wish to proceed you should use pd.concat""
 Input: ""You are trying to merge on int64 and timedelta64[ns] columns for key 'c'. If you wish to proceed you should use pd.concat""",failed
24016,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns3-A-index-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
24022,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns3-A-index-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
24026,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns3-A-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
24030,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns3-A-series-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
24036,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns3-A-series-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
24047,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns3-index name!-index-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
24059,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns3-index name!-index-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
24067,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns3-index name!-index-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
24071,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns3-index name!-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
24076,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns3-index name!-series-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
24083,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns3-index name!-series-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
24089,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns3-index_name3-index-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
24096,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns3-index_name3-index-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
24106,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns3-index_name3-index-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
24109,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns3-index_name3-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
24117,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns3-index_name3-series-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
24122,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns3-index_name3-series-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
24170,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns4-A-index-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
24174,tests.integ.modin.io.test_read_snowflake_select_query,test_read_snowflake_query_additional_derived_column[True],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
24178,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns4-A-index-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
24186,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns4-A-index-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
24192,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns4-A-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
24198,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns4-A-series-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
24203,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns4-A-series-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
24218,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns4-index name!-index-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
24227,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns4-index name!-index-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
24245,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns4-index name!-index-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
24251,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns4-index name!-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
24257,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns4-index name!-series-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
24292,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns4-index name!-series-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
24299,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns4-index_name3-index-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
24307,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns4-index_name3-index-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
24315,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns4-index_name3-index-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
24321,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns4-index_name3-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
24323,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns4-index_name3-series-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
24328,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns4-index_name3-series-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
24385,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns5-A-index-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
24392,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns5-A-index-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
24397,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns5-A-index-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
24405,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns5-A-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
24408,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns5-A-series-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
24412,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns5-A-series-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
24418,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns5-index name!-index-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
24425,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns5-index name!-index-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
24433,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns5-index name!-index-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
24439,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns5-index name!-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
24441,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns5-index name!-series-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
24447,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns5-index name!-series-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
24449,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns5-index_name3-index-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
24456,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns5-index_name3-index-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
24462,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns5-index_name3-index-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
24469,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns5-index_name3-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
24475,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns5-index_name3-series-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
24478,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns5-index_name3-series-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
24518,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns6-A-index-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
24523,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns6-A-index-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
24529,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns6-A-index-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
24534,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns6-A-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
24535,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns6-A-series-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
24542,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns6-A-series-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
24552,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns6-index name!-index-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
24557,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns6-index name!-index-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
24565,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns6-index name!-index-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
24568,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns6-index name!-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
24573,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns6-index name!-series-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
24582,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns6-index name!-series-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
24589,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns6-index_name3-index-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
24593,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns6-index_name3-index-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
24600,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns6-index_name3-index-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
24604,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns6-index_name3-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
24630,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns6-index_name3-series-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
24636,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns6-index_name3-series-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
24677,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns7-A-index-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
24685,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns7-A-index-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
24696,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns7-A-index-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
24704,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns7-A-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
24710,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns7-A-series-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
24715,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns7-A-series-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['A']",failed
24722,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns7-index name!-index-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
24728,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns7-index name!-index-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
24736,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns7-index name!-index-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
24739,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns7-index name!-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
24743,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns7-index name!-series-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
24745,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns7-index name!-series-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index name!']",failed
24755,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns7-index_name3-index-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
24764,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns7-index_name3-index-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
24770,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns7-index_name3-index-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
24775,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns7-index_name3-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
24778,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns7-index_name3-series-index1],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
24781,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_index_and_columns[columns7-index_name3-series-index2],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
24794,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_multiindex_and_columns[columns0-index_name1-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
24807,tests.integ.modin.index.test_df_series_creation_with_index,test_create_df_with_multiindex_and_columns[columns1-index_name1-series-index0],"AssertionError: DataFrame.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: [('A', 'B')]",failed
24863,tests.integ.modin.io.test_read_json,test_read_json_unimplemented_parameter_negative[typ-series],FileNotFoundError: File file.json does not exist,failed
24867,tests.integ.modin.io.test_read_json,test_read_json_unimplemented_parameter_negative[dtype-True],FileNotFoundError: File file.json does not exist,failed
24872,tests.integ.modin.io.test_read_json,test_read_json_unimplemented_parameter_negative[convert_axes-True],FileNotFoundError: File file.json does not exist,failed
24873,tests.integ.modin.io.test_read_json,test_read_json_unimplemented_parameter_negative[convert_dates-True],FileNotFoundError: File file.json does not exist,failed
24880,tests.integ.modin.io.test_read_json,test_read_json_unimplemented_parameter_negative[keep_default_dates-True],FileNotFoundError: File file.json does not exist,failed
24888,tests.integ.modin.io.test_read_json,test_read_json_unimplemented_parameter_negative[precise_float-True],FileNotFoundError: File file.json does not exist,failed
24893,tests.integ.modin.io.test_read_json,test_read_json_unimplemented_parameter_negative[date_unit-s],FileNotFoundError: File file.json does not exist,failed
24898,tests.integ.modin.io.test_read_json,test_read_json_unimplemented_parameter_negative[encoding_errors-ignore],FileNotFoundError: File file.json does not exist,failed
24928,tests.integ.modin.io.test_read_json,test_read_json_unimplemented_parameter_negative[lines-True],FileNotFoundError: File file.json does not exist,failed
24932,tests.integ.modin.io.test_read_json,test_read_json_unimplemented_parameter_negative[chunksize-100],ValueError: chunksize can only be passed if lines=True,failed
24935,tests.integ.modin.io.test_read_json,test_read_json_unimplemented_parameter_negative[nrows-10],ValueError: nrows can only be passed if lines=True,failed
24939,tests.integ.modin.io.test_read_json,test_read_json_warning[storage_options-random_option],ValueError: storage_options passed with file object or non-fsspec file path,failed
24947,tests.integ.modin.io.test_read_json,test_read_json_warning[engine-ujson],"ValueError: If using all scalar values, you must pass an index",failed
24953,tests.integ.modin.io.test_read_json,test_read_json_filepath_negative,ValueError: Expected object or value,failed
25018,tests.integ.modin.index.test_indexing,test_index_indexing[key3-index0],AssertionError,failed
25029,tests.integ.modin.io.test_read_snowflake_select_query,test_read_snowflake_query_complex_query_with_join[True],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
25033,tests.integ.modin.index.test_indexing,test_index_indexing[key4-index0],AssertionError,failed
25103,tests.integ.modin.index.test_indexing,test_index_indexing_other_list_like_key[key0-index0],AssertionError,failed
25259,tests.integ.modin.index.test_indexing,test_index_indexing_other_list_like_key[key2-index0],AssertionError,failed
25477,tests.integ.modin.index.test_index_methods,test_invalid_level[name70-1-empty-DatetimeIndex],SNOW-2288761,xfailed
25483,tests.integ.modin.index.test_index_methods,test_invalid_level[name70-1-empty-TimedeltaIndex],SNOW-2288761,xfailed
25514,tests.integ.modin.index.test_index_methods,test_invalid_level[name70-1-empty-Index],SNOW-2288761,xfailed
25519,tests.integ.modin.index.test_index_methods,test_invalid_level[name70-1-not_empty-DatetimeIndex],SNOW-2288761,xfailed
25526,tests.integ.modin.index.test_index_methods,test_invalid_level[name70-1-not_empty-TimedeltaIndex],SNOW-2288761,xfailed
25533,tests.integ.modin.index.test_index_methods,test_invalid_level[name70-1-not_empty-Index],SNOW-2288761,xfailed
25560,tests.integ.modin.index.test_index_methods,test_invalid_level[name71-1.0-empty-DatetimeIndex],SNOW-2288761,xfailed
25566,tests.integ.modin.index.test_index_methods,test_invalid_level[name71-1.0-empty-TimedeltaIndex],SNOW-2288761,xfailed
25573,tests.integ.modin.index.test_index_methods,test_invalid_level[name71-1.0-empty-Index],SNOW-2288761,xfailed
25584,tests.integ.modin.index.test_index_methods,test_invalid_level[name71-1.0-not_empty-DatetimeIndex],SNOW-2288761,xfailed
25590,tests.integ.modin.index.test_index_methods,test_invalid_level[name71-1.0-not_empty-TimedeltaIndex],SNOW-2288761,xfailed
25624,tests.integ.modin.index.test_index_methods,test_invalid_level[name71-1.0-not_empty-Index],SNOW-2288761,xfailed
25629,tests.integ.modin.index.test_index_methods,test_invalid_level[name72-name-empty-DatetimeIndex],SNOW-2288761,xfailed
25641,tests.integ.modin.index.test_index_methods,test_invalid_level[name72-name-empty-TimedeltaIndex],SNOW-2288761,xfailed
25648,tests.integ.modin.index.test_index_methods,test_invalid_level[name72-name-empty-Index],SNOW-2288761,xfailed
25668,tests.integ.modin.io.test_read_snowflake_select_query,test_read_snowflake_query_connect_by[True],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
25675,tests.integ.modin.index.test_index_methods,test_invalid_level[name72-name-not_empty-DatetimeIndex],SNOW-2288761,xfailed
25682,tests.integ.modin.index.test_index_methods,test_invalid_level[name72-name-not_empty-TimedeltaIndex],SNOW-2288761,xfailed
25719,tests.integ.modin.index.test_index_methods,test_invalid_level[name72-name-not_empty-Index],SNOW-2288761,xfailed
25727,tests.integ.modin.index.test_index_methods,test_invalid_level[name73-level73-empty-DatetimeIndex],SNOW-2288761,xfailed
25734,tests.integ.modin.index.test_index_methods,test_invalid_level[name73-level73-empty-TimedeltaIndex],SNOW-2288761,xfailed
25755,tests.integ.modin.index.test_datetime_index_methods,test_datetime_index_mean[True-native_index2],TODO: SNOW-1625233 Snowpark pandas to_datetime does not support timezone,xfailed
25763,tests.integ.modin.index.test_index_methods,test_invalid_level[name73-level73-empty-Index],SNOW-2288761,xfailed
25770,tests.integ.modin.index.test_index_methods,test_invalid_level[name73-level73-not_empty-DatetimeIndex],SNOW-2288761,xfailed
25774,tests.integ.modin.index.test_index_methods,test_invalid_level[name73-level73-not_empty-TimedeltaIndex],SNOW-2288761,xfailed
25778,tests.integ.modin.index.test_index_methods,test_invalid_level[name73-level73-not_empty-Index],SNOW-2288761,xfailed
25793,tests.integ.modin.resample.test_resample,test_resample_numeric_only[sum],TypeError: Resampler.sum() got multiple values for argument 'numeric_only',failed
25805,tests.integ.modin.index.test_index_methods,test_invalid_level[name74-level74-empty-DatetimeIndex],SNOW-2288761,xfailed
25812,tests.integ.modin.index.test_index_methods,test_invalid_level[name74-level74-empty-TimedeltaIndex],SNOW-2288761,xfailed
25820,tests.integ.modin.index.test_index_methods,test_invalid_level[name74-level74-empty-Index],SNOW-2288761,xfailed
25826,tests.integ.modin.index.test_index_methods,test_invalid_level[name74-level74-not_empty-DatetimeIndex],SNOW-2288761,xfailed
25849,tests.integ.modin.index.test_index_methods,test_invalid_level[name74-level74-not_empty-TimedeltaIndex],SNOW-2288761,xfailed
25856,tests.integ.modin.index.test_index_methods,test_invalid_level[name74-level74-not_empty-Index],SNOW-2288761,xfailed
25864,tests.integ.modin.index.test_index_methods,test_invalid_level[name75-True-empty-DatetimeIndex],SNOW-2288761,xfailed
25869,tests.integ.modin.index.test_index_methods,test_invalid_level[name75-True-empty-TimedeltaIndex],SNOW-2288761,xfailed
25878,tests.integ.modin.index.test_index_methods,test_invalid_level[name75-True-empty-Index],SNOW-2288761,xfailed
25903,tests.integ.modin.index.test_index_methods,test_invalid_level[name75-True-not_empty-DatetimeIndex],SNOW-2288761,xfailed
25913,tests.integ.modin.index.test_index_methods,test_invalid_level[name75-True-not_empty-TimedeltaIndex],SNOW-2288761,xfailed
25919,tests.integ.modin.index.test_index_methods,test_invalid_level[name75-True-not_empty-Index],SNOW-2288761,xfailed
25926,tests.integ.modin.index.test_index_methods,test_invalid_level[name76-False-empty-DatetimeIndex],SNOW-2288761,xfailed
25948,tests.integ.modin.interoperability.plotly.test_plotly,test_scatter,ValueError: invalid literal for int() with base 10: '',failed
25949,tests.integ.modin.index.test_index_methods,test_invalid_level[name76-False-empty-TimedeltaIndex],SNOW-2288761,xfailed
25951,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_data[series-native_data0],"AssertionError: Series are different

Attribute ""name"" are different
[left]:  None
[right]: some name",failed
25956,tests.integ.modin.index.test_index_methods,test_invalid_level[name76-False-empty-Index],SNOW-2288761,xfailed
25966,tests.integ.modin.index.test_index_methods,test_invalid_level[name76-False-not_empty-DatetimeIndex],SNOW-2288761,xfailed
25973,tests.integ.modin.index.test_index_methods,test_invalid_level[name76-False-not_empty-TimedeltaIndex],SNOW-2288761,xfailed
25974,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_data[series-native_data2],"AssertionError: Series are different

Attribute ""name"" are different
[left]:  None
[right]: AAAAA",failed
25978,tests.integ.modin.interoperability.plotly.test_plotly,test_line,ValueError: invalid literal for int() with base 10: '',failed
25991,tests.integ.modin.interoperability.plotly.test_plotly,test_area,ValueError: invalid literal for int() with base 10: '',failed
26000,tests.integ.modin.interoperability.plotly.test_plotly,test_timeline,ValueError: invalid literal for int() with base 10: '',failed
26003,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_data[df-native_data0],"AssertionError: DataFrame.columns are different

DataFrame.columns values are different (100.0 %)
[left]:  RangeIndex(start=0, stop=1, step=1)
[right]: Index(['some name'], dtype='object')
At positional index 0, first diff: 0 != some name",failed
26020,tests.integ.modin.interoperability.plotly.test_plotly,test_violin,ValueError: invalid literal for int() with base 10: '',failed
26022,tests.integ.modin.index.test_index_methods,test_invalid_level[name76-False-not_empty-Index],SNOW-2288761,xfailed
26030,tests.integ.modin.interoperability.plotly.test_plotly,test_bar,ValueError: invalid literal for int() with base 10: '',failed
26031,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_data[df-native_data2],"AssertionError: DataFrame.columns are different

DataFrame.columns values are different (100.0 %)
[left]:  RangeIndex(start=0, stop=1, step=1)
[right]: Index(['AAAAA'], dtype='object')
At positional index 0, first diff: 0 != AAAAA",failed
26032,tests.integ.modin.index.test_index_methods,test_invalid_level[name77-None-empty-DatetimeIndex],SNOW-2288761,xfailed
26040,tests.integ.modin.interoperability.plotly.test_plotly,test_histogram,ValueError: invalid literal for int() with base 10: '',failed
26041,tests.integ.modin.index.test_index_methods,test_invalid_level[name77-None-empty-TimedeltaIndex],SNOW-2288761,xfailed
26044,tests.integ.modin.index.test_df_series_creation_with_index,test_create_with_data[df-native_data3],"AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (0, 0)
[right]: (0, 1)",failed
26050,tests.integ.modin.interoperability.plotly.test_plotly,test_pie,ValueError: invalid literal for int() with base 10: '',failed
26055,tests.integ.modin.index.test_index_methods,test_invalid_level[name77-None-empty-Index],SNOW-2288761,xfailed
26064,tests.integ.modin.interoperability.plotly.test_plotly,test_treemap,ValueError: invalid literal for int() with base 10: '',failed
26068,tests.integ.modin.index.test_index_methods,test_invalid_level[name77-None-not_empty-DatetimeIndex],SNOW-2288761,xfailed
26078,tests.integ.modin.index.test_name,test_df_index_rename_copy[None],"AssertionError: assert 'score' == None
 +  where 'score' = Index(['A', 'C'], dtype='object', name='score').name
 +    where Index(['A', 'C'], dtype='object', name='score') =        0  1\nscore      \nA      1  2\nC      3  4.index
 +  and   None = Index(['A', 'C'], dtype='object').name
 +    where Index(['A', 'C'], dtype='object') =    0  1\nA  1  2\nC  3  4.index",failed
26080,tests.integ.modin.test_numpy,test_np_unique,Failed: DID NOT RAISE <class 'TypeError'>,failed
26083,tests.integ.modin.test_numpy,test_full_like,Failed: DID NOT RAISE <class 'TypeError'>,failed
26084,tests.integ.modin.interoperability.plotly.test_plotly,test_sunburst,ValueError: invalid literal for int() with base 10: '',failed
26092,tests.integ.modin.index.test_name,test_df_index_rename_copy[grade],"AssertionError: assert 'score' == None
 +  where 'score' = Index(['A', 'C'], dtype='object', name='score').name
 +    where Index(['A', 'C'], dtype='object', name='score') =        0  1\nscore      \nA      1  2\nC      3  4.index
 +  and   None = Index(['A', 'C'], dtype='object').name
 +    where Index(['A', 'C'], dtype='object') =    0  1\nA  1  2\nC  3  4.index",failed
26102,tests.integ.modin.interoperability.plotly.test_plotly,test_icicle,ValueError: invalid literal for int() with base 10: '',failed
26108,tests.integ.modin.index.test_name,test_df_index_rename_copy[new_name2],"AssertionError: assert 'score' == None
 +  where 'score' = Index(['A', 'C'], dtype='object', name='score').name
 +    where Index(['A', 'C'], dtype='object', name='score') =        0  1\nscore      \nA      1  2\nC      3  4.index
 +  and   None = Index(['A', 'C'], dtype='object').name
 +    where Index(['A', 'C'], dtype='object') =    0  1\nA  1  2\nC  3  4.index",failed
26124,tests.integ.modin.index.test_name,test_df_index_rename_copy[new_name3],"AssertionError: assert 'score' == None
 +  where 'score' = Index(['A', 'C'], dtype='object', name='score').name
 +    where Index(['A', 'C'], dtype='object', name='score') =        0  1\nscore      \nA      1  2\nC      3  4.index
 +  and   None = Index(['A', 'C'], dtype='object').name
 +    where Index(['A', 'C'], dtype='object') =    0  1\nA  1  2\nC  3  4.index",failed
26145,tests.integ.modin.index.test_index_methods,test_invalid_level[name77-None-not_empty-TimedeltaIndex],SNOW-2288761,xfailed
26180,tests.integ.modin.index.test_index_methods,test_invalid_level[name77-None-not_empty-Index],SNOW-2288761,xfailed
26194,tests.integ.modin.interoperability.plotly.test_plotly,test_scatter_matrix,ValueError: invalid literal for int() with base 10: '',failed
26203,tests.integ.modin.test_numpy,test_np_ufunc_notimplemented,Failed: DID NOT RAISE <class 'TypeError'>,failed
26205,tests.integ.modin.test_numpy,test_np_ufunc_with_out_notimpl,Failed: DID NOT RAISE <class 'TypeError'>,failed
26208,tests.integ.modin.test_numpy,test_np_where_notimplemented,Failed: DID NOT RAISE <class 'TypeError'>,failed
26209,tests.integ.modin.index.test_index_methods,test_invalid_level[name78-nan-empty-DatetimeIndex],SNOW-2288761,xfailed
26223,tests.integ.modin.interoperability.plotly.test_plotly,test_funnel,ValueError: invalid literal for int() with base 10: '',failed
26237,tests.integ.modin.index.test_index_methods,test_invalid_level[name78-nan-empty-TimedeltaIndex],SNOW-2288761,xfailed
26253,tests.integ.modin.io.test_to_csv,test_to_csv_series_stage[kwargs0-False],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_CUY3LZ57U7',failed
26255,tests.integ.modin.interoperability.plotly.test_plotly,test_density_heatmap,ValueError: invalid literal for int() with base 10: '',failed
26260,tests.integ.modin.index.test_name,test_df_index_set_names_copy[None],"AssertionError: assert 'score' == None
 +  where 'score' = Index(['A', 'C'], dtype='object', name='score').name
 +    where Index(['A', 'C'], dtype='object', name='score') =        0  1\nscore      \nA      1  2\nC      3  4.index
 +  and   None = Index(['A', 'C'], dtype='object').name
 +    where Index(['A', 'C'], dtype='object') =    0  1\nA  1  2\nC  3  4.index",failed
26280,tests.integ.modin.test_numpy,test_where_with_different_indexes,Failed: DID NOT RAISE <class 'AssertionError'>,failed
26288,tests.integ.modin.index.test_name,test_df_index_set_names_copy[grade],"AssertionError: assert 'score' == None
 +  where 'score' = Index(['A', 'C'], dtype='object', name='score').name
 +    where Index(['A', 'C'], dtype='object', name='score') =        0  1\nscore      \nA      1  2\nC      3  4.index
 +  and   None = Index(['A', 'C'], dtype='object').name
 +    where Index(['A', 'C'], dtype='object') =    0  1\nA  1  2\nC  3  4.index",failed
26289,tests.integ.modin.interoperability.plotly.test_plotly,test_box,ValueError: invalid literal for int() with base 10: '',failed
26290,tests.integ.modin.test_numpy,test_where_with_different_columns_negative,Failed: DID NOT RAISE <class 'TypeError'>,failed
26310,tests.integ.modin.index.test_name,test_df_index_set_names_copy[new_name2],"AssertionError: assert 'score' == None
 +  where 'score' = Index(['A', 'C'], dtype='object', name='score').name
 +    where Index(['A', 'C'], dtype='object', name='score') =        0  1\nscore      \nA      1  2\nC      3  4.index
 +  and   None = Index(['A', 'C'], dtype='object').name
 +    where Index(['A', 'C'], dtype='object') =    0  1\nA  1  2\nC  3  4.index",failed
26314,tests.integ.modin.interoperability.plotly.test_plotly,test_imshow,ValueError: invalid literal for int() with base 10: '',failed
26319,tests.integ.modin.io.test_to_csv,test_to_csv_series_stage[kwargs1-False],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_K4WCE4XQXZ',failed
26325,tests.integ.modin.index.test_name,test_df_index_set_names_copy[new_name3],"AssertionError: assert 'score' == None
 +  where 'score' = Index(['A', 'C'], dtype='object', name='score').name
 +    where Index(['A', 'C'], dtype='object', name='score') =        0  1\nscore      \nA      1  2\nC      3  4.index
 +  and   None = Index(['A', 'C'], dtype='object').name
 +    where Index(['A', 'C'], dtype='object') =    0  1\nA  1  2\nC  3  4.index",failed
26344,tests.integ.modin.index.test_index_methods,test_invalid_level[name78-nan-empty-Index],SNOW-2288761,xfailed
26352,tests.integ.modin.io.test_to_csv,test_to_csv_series_stage[kwargs2-False],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_1OU8FVP2O4',failed
26356,tests.integ.modin.index.test_index_methods,test_invalid_level[name78-nan-not_empty-DatetimeIndex],SNOW-2288761,xfailed
26370,tests.integ.modin.index.test_index_methods,test_invalid_level[name78-nan-not_empty-TimedeltaIndex],SNOW-2288761,xfailed
26386,tests.integ.modin.io.test_to_csv,test_to_csv_series_stage[kwargs3-False],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_00EKMNXG0Z',failed
26392,tests.integ.modin.index.test_index_methods,test_invalid_level[name78-nan-not_empty-Index],SNOW-2288761,xfailed
26431,tests.integ.modin.io.test_to_csv,test_to_csv_series_stage[kwargs5-False],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_Q21RE9Q35K',failed
26503,tests.integ.modin.index.test_reindex,test_basic_reorder,AttributeError: 'DataFrame' object has no attribute 'data_column_snowflake_quoted_identifiers',failed
26509,tests.integ.modin.io.test_to_csv,test_to_csv_series_stage[kwargs6-False],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_UWCSY09HZF',failed
26547,tests.integ.modin.index.test_reindex,test_basic_add_elements,AttributeError: 'DataFrame' object has no attribute 'data_column_snowflake_quoted_identifiers',failed
26558,tests.integ.modin.io.test_to_csv,test_to_csv_series_stage[kwargs7-False],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_4H7BRVWU3N',failed
26584,tests.integ.modin.io.test_to_csv,test_to_csv_series_stage[kwargs8-True],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_6CMTG71S15',failed
26617,tests.integ.modin.io.test_to_csv,test_to_csv_series_stage[kwargs9-False],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_HWM3HCQ5DI',failed
26633,tests.integ.modin.index.test_reindex,test_basic_remove_elements,AttributeError: 'DataFrame' object has no attribute 'data_column_snowflake_quoted_identifiers',failed
26660,tests.integ.modin.io.test_to_csv,test_to_csv_series_stage[kwargs10-False],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_V2YNQRHPWH',failed
26667,tests.integ.modin.index.test_reindex,test_basic_add_remove_elements,AttributeError: 'DataFrame' object has no attribute 'data_column_snowflake_quoted_identifiers',failed
26694,tests.integ.modin.io.test_read_csv,test_read_csv_engine_snowflake,"ValueError: Unknown engine: snowflake (valid options are dict_keys(['c', 'python', 'pyarrow', 'python-fwf']))",failed
26695,tests.integ.modin.io.test_to_csv,test_to_csv_series_stage[kwargs11-False],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_5WQWTRI9F9',failed
26708,tests.integ.modin.index.test_reindex,test_fill_method[None-bfill],AttributeError: 'DataFrame' object has no attribute 'data_column_snowflake_quoted_identifiers',failed
26728,tests.integ.modin.resample.test_resample_asfreq,test_asfreq_parameter_negative,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
26729,tests.integ.modin.index.test_reindex,test_fill_method[None-backfill],AttributeError: 'DataFrame' object has no attribute 'data_column_snowflake_quoted_identifiers',failed
26733,tests.integ.modin.resample.test_resample_asfreq,test_asfreq_rule_negative,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
26757,tests.integ.modin.io.test_to_csv,test_to_csv_series_stage[kwargs12-True],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_R76MTKYE5Y',failed
26767,tests.integ.modin.io.test_to_csv,test_to_csv_series_stage[kwargs13-True],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_76Y75TIMYB',failed
26769,tests.integ.modin.series.test_apply_and_map,test_SNOW_1344784_udf_decorator[apply],"TypeError: Cannot convert a Column object into bool: please use '&' for 'and', '|' for 'or', '~' for 'not' if you're building DataFrame filter expressions. For example, use df.filter((col1 > 1) & (col2 > 2)) instead of df.filter(col1 > 1 and col2 > 2).",failed
26779,tests.integ.modin.io.test_read_csv,test_read_csv_filepath_starting_with_stage_symbol,FileNotFoundError: [Errno 2] No such file or directory: '\\@test_read_csv_backslash_0ba0efab-aa7d-46cb-a128-4e8d0fe63fb8',failed
26781,tests.integ.modin.io.test_to_csv,test_to_csv_series_stage[kwargs14-False],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_IPFXGWR998',failed
26782,tests.integ.modin.io.test_read_csv,test_read_csv_filepath_negative,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
26787,tests.integ.modin.index.test_reindex,test_fill_method[None-pad],AttributeError: 'DataFrame' object has no attribute 'data_column_snowflake_quoted_identifiers',failed
26789,tests.integ.modin.io.test_read_csv,test_read_csv_with_warning_params[engine-c],FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
26790,tests.integ.modin.series.test_apply_and_map,test_SNOW_1344784_udf_decorator[map],"TypeError: Cannot convert a Column object into bool: please use '&' for 'and', '|' for 'or', '~' for 'not' if you're building DataFrame filter expressions. For example, use df.filter((col1 > 1) & (col2 > 2)) instead of df.filter(col1 > 1 and col2 > 2).",failed
26794,tests.integ.modin.series.test_apply_and_map,test_args_and_kwargs_with_snowpark_pandas_object_not_implemented,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
26796,tests.integ.modin.series.test_apply_and_map,test_input_type_str_list_dict[func0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
26797,tests.integ.modin.io.test_read_csv,test_read_csv_with_warning_params[cache_dates-True],FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
26798,tests.integ.modin.series.test_apply_and_map,test_input_type_str_list_dict[func1],AttributeError: 'Series' object has no attribute 'columns',failed
26800,tests.integ.modin.series.test_apply_and_map,test_na_action_ignore_not_implemented,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
26808,tests.integ.modin.io.test_to_csv,test_to_csv_dataframe_stage[kwargs0-False],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_E0V5AKCHKA',failed
26811,tests.integ.modin.io.test_read_csv,test_read_csv_with_warning_params[infer_datetime_format-True],FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
26814,tests.integ.modin.series.test_aggregate,test_agg_series[data3-string-<lambda>-False-True-21],"AssertionError: One of the passed functions has an invalid type: <class 'NoneType'>: None, only callable or string is acceptable.",failed
26815,tests.integ.modin.index.test_reindex,test_fill_method[None-ffill],AttributeError: 'DataFrame' object has no attribute 'data_column_snowflake_quoted_identifiers',failed
26819,tests.integ.modin.io.test_read_csv,test_read_csv_with_warning_params[chunksize-1000],FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
26825,tests.integ.modin.io.test_to_csv,test_to_csv_dataframe_stage[kwargs1-False],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_MLQB5K8K2I',failed
26834,tests.integ.modin.index.test_reindex,test_fill_method[1-bfill],AttributeError: 'DataFrame' object has no attribute 'data_column_snowflake_quoted_identifiers',failed
26836,tests.integ.modin.series.test_aggregate,test_agg_series[data3-string-<lambda>-True-False-00],TypeError: boolean value of NA is ambiguous,failed
26839,tests.integ.modin.series.test_apply_and_map,test_dict[custom_defaultdict_mapping_string_to_string],TypeError: boolean value of NA is ambiguous,failed
26840,tests.integ.modin.series.test_aggregate,test_agg_series[data3-string-<lambda>-True-False-01],"AssertionError: Input are different

Input classes are different
[left]:  str_
[right]: str",failed
26842,tests.integ.modin.series.test_apply_and_map,test_dict[custom_defaultdict_empty],"AssertionError: Series are different

Series values are different (75.0 %)
[index]: [0, 1, 2, 3]
[left]:  [nan, nan, nan, nan]
[right]: [cat, dog, None, rabbit]
At positional index 0, first diff: nan != cat",failed
26845,tests.integ.modin.series.test_apply_and_map,test_defaultdict_missing_values_but_no_default_factory,Failed: DID NOT RAISE <class 'Exception'>,failed
26846,tests.integ.modin.io.test_to_csv,test_to_csv_dataframe_stage[kwargs2-False],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_J8WBPGBMWQ',failed
26848,tests.integ.modin.series.test_apply_and_map,test_invalid_arg_type,"AssertionError: Regex pattern did not match.
 Regex: '`arg`\\ should\\ be\\ a\\ callable,\\ a\\ Mapping,\\ or\\ a\\ pandas\\ Series,\\ but\\ instead\\ it\\ is\\ of\\ type\\ int'
 Input: ""'int' object is not callable""",failed
26849,tests.integ.modin.series.test_apply_and_map,test_incorrect_inferred_type,Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
26855,tests.integ.modin.io.test_read_csv,test_read_csv_with_warning_params[memory_map-True],FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
26858,tests.integ.modin.index.test_reindex,test_fill_method[1-backfill],AttributeError: 'DataFrame' object has no attribute 'data_column_snowflake_quoted_identifiers',failed
26863,tests.integ.modin.io.test_read_csv,test_read_csv_with_warning_params[storage_options-arg5],FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
26873,tests.integ.modin.io.test_read_csv,test_read_csv_with_warning_params[low_memory-True],FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
26876,tests.integ.modin.index.test_reindex,test_fill_method[1-pad],AttributeError: 'DataFrame' object has no attribute 'data_column_snowflake_quoted_identifiers',failed
26881,tests.integ.modin.io.test_read_csv,test_read_csv_with_warning_params[float_precision-high],FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
26888,tests.integ.modin.series.test_aggregate,test_agg_series[data4-datetime64[ns]-<lambda>-False-False-01],"AssertionError: One of the passed functions has an invalid type: <class 'NoneType'>: None, only callable or string is acceptable.",failed
26891,tests.integ.modin.io.test_read_csv,test_read_csv_with_warning_params[dtype_backend-numpy_nullable],FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
26894,tests.integ.modin.io.test_to_csv,test_to_csv_dataframe_stage[kwargs3-False],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_I1OFDCIIAX',failed
26912,tests.integ.modin.series.test_argmax_argmin,test_argmax_argmin_series[False-argmax-timedelta],NotImplementedError,failed
26920,tests.integ.modin.io.test_to_csv,test_to_csv_dataframe_stage[kwargs4-False],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_DBB1BD68FD',failed
26923,tests.integ.modin.series.test_aggregate,test_agg_series[data4-datetime64[ns]-<lambda>-False-False-11],"AssertionError: One of the passed functions has an invalid type: <class 'NoneType'>: None, only callable or string is acceptable.",failed
26927,tests.integ.modin.io.test_read_csv,test_read_csv_stage,FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
26928,tests.integ.modin.series.test_aggregate,test_agg_series[data4-datetime64[ns]-<lambda>-False-False-12],"AssertionError: One of the passed functions has an invalid type: <class 'NoneType'>: None, only callable or string is acceptable.",failed
26933,tests.integ.modin.io.test_read_csv,test_read_staged_csv_negative[verbose-True],FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
26938,tests.integ.modin.io.test_to_csv,test_to_csv_dataframe_stage[kwargs5-False],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_629LW3HSII',failed
26940,tests.integ.modin.io.test_read_csv,test_read_staged_csv_negative[dayfirst-True],FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
26941,tests.integ.modin.series.test_aggregate,test_agg_series[data4-datetime64[ns]-<lambda>-False-True-21],"AssertionError: One of the passed functions has an invalid type: <class 'NoneType'>: None, only callable or string is acceptable.",failed
26944,tests.integ.modin.index.test_reindex,test_fill_method[1-ffill],AttributeError: 'DataFrame' object has no attribute 'data_column_snowflake_quoted_identifiers',failed
26947,tests.integ.modin.series.test_argmax_argmin,test_argmax_argmin_series[False-argmin-timedelta],NotImplementedError,failed
26948,tests.integ.modin.series.test_argmax_argmin,test_series_argmax_argmin_with_multiindex_negative[True-argmax],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
26949,tests.integ.modin.series.test_argmax_argmin,test_series_argmax_argmin_with_multiindex_negative[True-argmin],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
26950,tests.integ.modin.series.test_argmax_argmin,test_series_argmax_argmin_with_multiindex_negative[False-argmax],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
26951,tests.integ.modin.series.test_argmax_argmin,test_series_argmax_argmin_with_multiindex_negative[False-argmin],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
26952,tests.integ.modin.io.test_read_csv,test_read_staged_csv_negative[date_parser-True],FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
26961,tests.integ.modin.io.test_to_csv,test_to_csv_dataframe_stage[kwargs6-False],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_N5IJRAXA6K',failed
26962,tests.integ.modin.io.test_read_csv,test_read_staged_csv_negative[date_format-%Y-%m-%d],FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
26966,tests.integ.modin.index.test_reindex,test_fill_method[2-bfill],AttributeError: 'DataFrame' object has no attribute 'data_column_snowflake_quoted_identifiers',failed
26969,tests.integ.modin.io.test_read_csv,test_read_staged_csv_negative[keep_date_col-True],FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
26975,tests.integ.modin.io.test_read_csv,test_read_staged_csv_negative[parse_dates-True],FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
26981,tests.integ.modin.series.test_astype,test_astype_basic[int64-uint64],"AssertionError: assert dtype('uint64') == dtype('int64')
 +  where dtype('uint64') = 0    0\n1    1\n2    2\n3    3\ndtype: uint64.dtype",failed
26983,tests.integ.modin.io.test_to_csv,test_to_csv_dataframe_stage[kwargs7-False],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_106IZ7F3B2',failed
26984,tests.integ.modin.series.test_astype,test_astype_basic[int64-int32],"AssertionError: assert dtype('int32') == dtype('int64')
 +  where dtype('int32') = 0    0\n1    1\n2    2\n3    3\ndtype: int32.dtype",failed
26987,tests.integ.modin.series.test_astype,test_astype_basic[int64-uint32],"AssertionError: assert dtype('uint32') == dtype('int64')
 +  where dtype('uint32') = 0    0\n1    1\n2    2\n3    3\ndtype: uint32.dtype",failed
26988,tests.integ.modin.index.test_reindex,test_fill_method[2-backfill],AttributeError: 'DataFrame' object has no attribute 'data_column_snowflake_quoted_identifiers',failed
26990,tests.integ.modin.series.test_astype,test_astype_basic[int64-int16],"AssertionError: assert dtype('int16') == dtype('int64')
 +  where dtype('int16') = 0    0\n1    1\n2    2\n3    3\ndtype: int16.dtype",failed
26994,tests.integ.modin.series.test_astype,test_astype_basic[int64-uint16],"AssertionError: assert dtype('uint16') == dtype('int64')
 +  where dtype('uint16') = 0    0\n1    1\n2    2\n3    3\ndtype: uint16.dtype",failed
26996,tests.integ.modin.series.test_astype,test_astype_basic[int64-int8],"AssertionError: assert dtype('int8') == dtype('int64')
 +  where dtype('int8') = 0    0\n1    1\n2    2\n3    3\ndtype: int8.dtype",failed
26997,tests.integ.modin.series.test_astype,test_astype_basic[int64-uint8],"AssertionError: assert dtype('uint8') == dtype('int64')
 +  where dtype('uint8') = 0    0\n1    1\n2    2\n3    3\ndtype: uint8.dtype",failed
26998,tests.integ.modin.series.test_astype,test_astype_basic[int64-float32],"AssertionError: assert dtype('float32') == dtype('float64')
 +  where dtype('float32') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float32.dtype",failed
26999,tests.integ.modin.series.test_astype,test_astype_basic[int64-float160],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
27000,tests.integ.modin.series.test_astype,test_astype_basic[int64-float161],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
27007,tests.integ.modin.series.test_aggregate,test_string_aggregation_numeric_only[sum],Failed: DID NOT RAISE <class 'Exception'>,failed
27008,tests.integ.modin.series.test_astype,test_astype_basic[int64-boolean],TypeError: Need to pass bool-like values,failed
27010,tests.integ.modin.series.test_astype,test_astype_basic[int64-to_dtype15],"AssertionError: assert Float32Dtype() == dtype('float64')
 +  where Float32Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float32.dtype",failed
27011,tests.integ.modin.series.test_aggregate,test_string_aggregation_numeric_only[var],Failed: DID NOT RAISE <class 'Exception'>,failed
27012,tests.integ.modin.series.test_astype,test_astype_basic[int64-to_dtype16],"AssertionError: assert Float64Dtype() == dtype('float64')
 +  where Float64Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float64.dtype",failed
27014,tests.integ.modin.series.test_astype,test_astype_basic[int64-to_dtype17],"AssertionError: assert Int64Dtype() == dtype('int64')
 +  where Int64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int64.dtype",failed
27016,tests.integ.modin.index.test_reindex,test_fill_method[2-pad],AttributeError: 'DataFrame' object has no attribute 'data_column_snowflake_quoted_identifiers',failed
27017,tests.integ.modin.series.test_astype,test_astype_basic[int64-to_dtype18],"AssertionError: assert UInt64Dtype() == dtype('int64')
 +  where UInt64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt64.dtype",failed
27018,tests.integ.modin.series.test_aggregate,test_string_aggregation_numeric_only[mean],Failed: DID NOT RAISE <class 'Exception'>,failed
27020,tests.integ.modin.series.test_astype,test_astype_basic[int64-to_dtype19],"AssertionError: assert Int32Dtype() == dtype('int64')
 +  where Int32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int32.dtype",failed
27022,tests.integ.modin.series.test_astype,test_astype_basic[int64-to_dtype20],"AssertionError: assert UInt32Dtype() == dtype('int64')
 +  where UInt32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt32.dtype",failed
27023,tests.integ.modin.series.test_astype,test_astype_basic[int64-to_dtype21],"AssertionError: assert Int16Dtype() == dtype('int64')
 +  where Int16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int16.dtype",failed
27024,tests.integ.modin.series.test_aggregate,test_string_aggregation_numeric_only[std],Failed: DID NOT RAISE <class 'Exception'>,failed
27026,tests.integ.modin.series.test_astype,test_astype_basic[int64-to_dtype22],"AssertionError: assert UInt16Dtype() == dtype('int64')
 +  where UInt16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt16.dtype",failed
27027,tests.integ.modin.io.test_read_csv,test_read_staged_csv_negative[iterator-True],FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
27029,tests.integ.modin.series.test_astype,test_astype_basic[int64-to_dtype23],"AssertionError: assert Int8Dtype() == dtype('int64')
 +  where Int8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int8.dtype",failed
27031,tests.integ.modin.series.test_astype,test_astype_basic[int64-to_dtype24],"AssertionError: assert UInt8Dtype() == dtype('int64')
 +  where UInt8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt8.dtype",failed
27033,tests.integ.modin.series.test_aggregate,test_string_aggregation_numeric_only[min],Failed: DID NOT RAISE <class 'Exception'>,failed
27034,tests.integ.modin.series.test_astype,test_astype_basic[int64-to_dtype25],"AssertionError: assert string[python] == dtype('O')
 +  where string[python] = 0    0\n1    1\n2    2\n3    3\ndtype: string.dtype",failed
27039,tests.integ.modin.series.test_aggregate,test_string_aggregation_numeric_only[max],Failed: DID NOT RAISE <class 'Exception'>,failed
27040,tests.integ.modin.io.test_read_csv,test_read_staged_csv_negative[na_filter-False],FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
27046,tests.integ.modin.series.test_astype,test_astype_basic[uint64-uint64],"AssertionError: assert dtype('uint64') == dtype('int64')
 +  where dtype('uint64') = 0    0\n1    1\n2    2\n3    3\ndtype: uint64.dtype",failed
27048,tests.integ.modin.series.test_aggregate,test_string_aggregation_numeric_only[median],Failed: DID NOT RAISE <class 'Exception'>,failed
27049,tests.integ.modin.series.test_astype,test_astype_basic[uint64-int32],"AssertionError: assert dtype('int32') == dtype('int64')
 +  where dtype('int32') = 0    0\n1    1\n2    2\n3    3\ndtype: int32.dtype",failed
27050,tests.integ.modin.series.test_astype,test_astype_basic[uint64-uint32],"AssertionError: assert dtype('uint32') == dtype('int64')
 +  where dtype('uint32') = 0    0\n1    1\n2    2\n3    3\ndtype: uint32.dtype",failed
27052,tests.integ.modin.series.test_astype,test_astype_basic[uint64-int16],"AssertionError: assert dtype('int16') == dtype('int64')
 +  where dtype('int16') = 0    0\n1    1\n2    2\n3    3\ndtype: int16.dtype",failed
27055,tests.integ.modin.io.test_read_csv,test_read_staged_csv_negative[skipfooter-3],FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
27056,tests.integ.modin.io.test_to_csv,test_to_csv_dataframe_stage[kwargs8-True],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_1NS1CEEL60',failed
27057,tests.integ.modin.series.test_astype,test_astype_basic[uint64-uint16],"AssertionError: assert dtype('uint16') == dtype('int64')
 +  where dtype('uint16') = 0    0\n1    1\n2    2\n3    3\ndtype: uint16.dtype",failed
27058,tests.integ.modin.series.test_astype,test_astype_basic[uint64-int8],"AssertionError: assert dtype('int8') == dtype('int64')
 +  where dtype('int8') = 0    0\n1    1\n2    2\n3    3\ndtype: int8.dtype",failed
27059,tests.integ.modin.series.test_astype,test_astype_basic[uint64-uint8],"AssertionError: assert dtype('uint8') == dtype('int64')
 +  where dtype('uint8') = 0    0\n1    1\n2    2\n3    3\ndtype: uint8.dtype",failed
27060,tests.integ.modin.series.test_astype,test_astype_basic[uint64-float32],"AssertionError: assert dtype('float32') == dtype('float64')
 +  where dtype('float32') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float32.dtype",failed
27061,tests.integ.modin.series.test_astype,test_astype_basic[uint64-float160],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
27062,tests.integ.modin.series.test_astype,test_astype_basic[uint64-float161],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
27069,tests.integ.modin.io.test_read_csv,test_read_staged_csv_negative[nrows-100],FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
27071,tests.integ.modin.series.test_astype,test_astype_basic[uint64-boolean],TypeError: Need to pass bool-like values,failed
27072,tests.integ.modin.series.test_astype,test_astype_basic[uint64-to_dtype44],"AssertionError: assert Float32Dtype() == dtype('float64')
 +  where Float32Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float32.dtype",failed
27075,tests.integ.modin.series.test_astype,test_astype_basic[uint64-to_dtype45],"AssertionError: assert Float64Dtype() == dtype('float64')
 +  where Float64Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float64.dtype",failed
27077,tests.integ.modin.io.test_to_csv,test_to_csv_dataframe_stage[kwargs9-False],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_OPO6SF43OE',failed
27078,tests.integ.modin.series.test_aggregate,test_string_sum_with_nulls,"TypeError: can only concatenate str (not ""int"") to str",failed
27079,tests.integ.modin.series.test_astype,test_astype_basic[uint64-to_dtype46],"AssertionError: assert Int64Dtype() == dtype('int64')
 +  where Int64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int64.dtype",failed
27080,tests.integ.modin.io.test_read_csv,"test_read_staged_csv_negative[thousands-,]",FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
27081,tests.integ.modin.series.test_astype,test_astype_basic[uint64-to_dtype47],"AssertionError: assert UInt64Dtype() == dtype('int64')
 +  where UInt64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt64.dtype",failed
27083,tests.integ.modin.series.test_astype,test_astype_basic[uint64-to_dtype48],"AssertionError: assert Int32Dtype() == dtype('int64')
 +  where Int32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int32.dtype",failed
27085,tests.integ.modin.series.test_astype,test_astype_basic[uint64-to_dtype49],"AssertionError: assert UInt32Dtype() == dtype('int64')
 +  where UInt32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt32.dtype",failed
27088,tests.integ.modin.series.test_astype,test_astype_basic[uint64-to_dtype50],"AssertionError: assert Int16Dtype() == dtype('int64')
 +  where Int16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int16.dtype",failed
27091,tests.integ.modin.io.test_read_csv,"test_read_staged_csv_negative[decimal-,]",FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
27092,tests.integ.modin.series.test_astype,test_astype_basic[uint64-to_dtype51],"AssertionError: assert UInt16Dtype() == dtype('int64')
 +  where UInt16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt16.dtype",failed
27093,tests.integ.modin.series.test_astype,test_astype_basic[uint64-to_dtype52],"AssertionError: assert Int8Dtype() == dtype('int64')
 +  where Int8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int8.dtype",failed
27096,tests.integ.modin.series.test_astype,test_astype_basic[uint64-to_dtype53],"AssertionError: assert UInt8Dtype() == dtype('int64')
 +  where UInt8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt8.dtype",failed
27098,tests.integ.modin.series.test_astype,test_astype_basic[uint64-to_dtype54],"AssertionError: assert string[python] == dtype('O')
 +  where string[python] = 0    0\n1    1\n2    2\n3    3\ndtype: string.dtype",failed
27099,tests.integ.modin.index.test_reindex,test_fill_method[2-ffill],AttributeError: 'DataFrame' object has no attribute 'data_column_snowflake_quoted_identifiers',failed
27102,tests.integ.modin.io.test_to_csv,test_to_csv_dataframe_stage[kwargs10-False],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_LHTDOLRKO7',failed
27104,tests.integ.modin.io.test_read_csv,test_read_staged_csv_negative[lineterminator-q],FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
27113,tests.integ.modin.series.test_astype,test_astype_basic[int32-uint64],"AssertionError: assert dtype('uint64') == dtype('int64')
 +  where dtype('uint64') = 0    0\n1    1\n2    2\n3    3\ndtype: uint64.dtype",failed
27117,tests.integ.modin.series.test_astype,test_astype_basic[int32-int32],"AssertionError: assert dtype('int32') == dtype('int64')
 +  where dtype('int32') = 0    0\n1    1\n2    2\n3    3\ndtype: int32.dtype",failed
27118,tests.integ.modin.series.test_astype,test_astype_basic[int32-uint32],"AssertionError: assert dtype('uint32') == dtype('int64')
 +  where dtype('uint32') = 0    0\n1    1\n2    2\n3    3\ndtype: uint32.dtype",failed
27119,tests.integ.modin.io.test_read_csv,test_read_staged_csv_negative[dialect-excel],FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
27122,tests.integ.modin.series.test_astype,test_astype_basic[int32-int16],"AssertionError: assert dtype('int16') == dtype('int64')
 +  where dtype('int16') = 0    0\n1    1\n2    2\n3    3\ndtype: int16.dtype",failed
27124,tests.integ.modin.series.test_astype,test_astype_basic[int32-uint16],"AssertionError: assert dtype('uint16') == dtype('int64')
 +  where dtype('uint16') = 0    0\n1    1\n2    2\n3    3\ndtype: uint16.dtype",failed
27126,tests.integ.modin.series.test_astype,test_astype_basic[int32-int8],"AssertionError: assert dtype('int8') == dtype('int64')
 +  where dtype('int8') = 0    0\n1    1\n2    2\n3    3\ndtype: int8.dtype",failed
27127,tests.integ.modin.series.test_astype,test_astype_basic[int32-uint8],"AssertionError: assert dtype('uint8') == dtype('int64')
 +  where dtype('uint8') = 0    0\n1    1\n2    2\n3    3\ndtype: uint8.dtype",failed
27129,tests.integ.modin.series.test_astype,test_astype_basic[int32-float32],"AssertionError: assert dtype('float32') == dtype('float64')
 +  where dtype('float32') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float32.dtype",failed
27130,tests.integ.modin.series.test_astype,test_astype_basic[int32-float160],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
27131,tests.integ.modin.series.test_astype,test_astype_basic[int32-float161],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
27136,tests.integ.modin.io.test_to_csv,test_to_csv_dataframe_stage[kwargs11-False],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_MSPAF4C0BD',failed
27138,tests.integ.modin.io.test_read_csv,test_read_staged_csv_negative[quoting-2],FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
27140,tests.integ.modin.index.test_reindex,test_fill_method[100-bfill],AttributeError: 'DataFrame' object has no attribute 'data_column_snowflake_quoted_identifiers',failed
27142,tests.integ.modin.series.test_astype,test_astype_basic[int32-boolean],TypeError: Need to pass bool-like values,failed
27144,tests.integ.modin.series.test_astype,test_astype_basic[int32-to_dtype73],"AssertionError: assert Float32Dtype() == dtype('float64')
 +  where Float32Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float32.dtype",failed
27147,tests.integ.modin.series.test_astype,test_astype_basic[int32-to_dtype74],"AssertionError: assert Float64Dtype() == dtype('float64')
 +  where Float64Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float64.dtype",failed
27148,tests.integ.modin.series.test_astype,test_astype_basic[int32-to_dtype75],"AssertionError: assert Int64Dtype() == dtype('int64')
 +  where Int64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int64.dtype",failed
27151,tests.integ.modin.series.test_astype,test_astype_basic[int32-to_dtype76],"AssertionError: assert UInt64Dtype() == dtype('int64')
 +  where UInt64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt64.dtype",failed
27152,tests.integ.modin.io.test_read_csv,test_read_staged_csv_negative[doublequote-False],FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
27155,tests.integ.modin.series.test_astype,test_astype_basic[int32-to_dtype77],"AssertionError: assert Int32Dtype() == dtype('int64')
 +  where Int32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int32.dtype",failed
27157,tests.integ.modin.series.test_astype,test_astype_basic[int32-to_dtype78],"AssertionError: assert UInt32Dtype() == dtype('int64')
 +  where UInt32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt32.dtype",failed
27158,tests.integ.modin.io.test_to_csv,test_to_csv_dataframe_stage[kwargs12-True],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_CJOBJ62QXI',failed
27159,tests.integ.modin.series.test_astype,test_astype_basic[int32-to_dtype79],"AssertionError: assert Int16Dtype() == dtype('int64')
 +  where Int16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int16.dtype",failed
27163,tests.integ.modin.series.test_astype,test_astype_basic[int32-to_dtype80],"AssertionError: assert UInt16Dtype() == dtype('int64')
 +  where UInt16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt16.dtype",failed
27164,tests.integ.modin.series.test_astype,test_astype_basic[int32-to_dtype81],"AssertionError: assert Int8Dtype() == dtype('int64')
 +  where Int8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int8.dtype",failed
27166,tests.integ.modin.io.test_read_csv,test_read_staged_csv_negative[encoding_errors-replace],FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
27170,tests.integ.modin.index.test_reindex,test_fill_method[100-backfill],AttributeError: 'DataFrame' object has no attribute 'data_column_snowflake_quoted_identifiers',failed
27171,tests.integ.modin.series.test_astype,test_astype_basic[int32-to_dtype82],"AssertionError: assert UInt8Dtype() == dtype('int64')
 +  where UInt8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt8.dtype",failed
27175,tests.integ.modin.series.test_astype,test_astype_basic[int32-to_dtype83],"AssertionError: assert string[python] == dtype('O')
 +  where string[python] = 0    0\n1    1\n2    2\n3    3\ndtype: string.dtype",failed
27178,tests.integ.modin.test_ordered_dataframe,test_join_no_column_conflict[outer],reason: SNOW-1321662 - outer join issue,xfailed
27183,tests.integ.modin.io.test_read_csv,test_read_staged_csv_negative[comment-#],FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
27191,tests.integ.modin.series.test_astype,test_astype_basic[uint32-uint64],"AssertionError: assert dtype('uint64') == dtype('int64')
 +  where dtype('uint64') = 0    0\n1    1\n2    2\n3    3\ndtype: uint64.dtype",failed
27193,tests.integ.modin.io.test_to_csv,test_to_csv_dataframe_stage[kwargs13-True],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_81G86OWD98',failed
27194,tests.integ.modin.io.test_read_csv,test_read_staged_csv_negative[converters-arg18],FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
27196,tests.integ.modin.series.test_astype,test_astype_basic[uint32-int32],"AssertionError: assert dtype('int32') == dtype('int64')
 +  where dtype('int32') = 0    0\n1    1\n2    2\n3    3\ndtype: int32.dtype",failed
27199,tests.integ.modin.series.test_astype,test_astype_basic[uint32-uint32],"AssertionError: assert dtype('uint32') == dtype('int64')
 +  where dtype('uint32') = 0    0\n1    1\n2    2\n3    3\ndtype: uint32.dtype",failed
27200,tests.integ.modin.series.test_astype,test_astype_basic[uint32-int16],"AssertionError: assert dtype('int16') == dtype('int64')
 +  where dtype('int16') = 0    0\n1    1\n2    2\n3    3\ndtype: int16.dtype",failed
27201,tests.integ.modin.series.test_astype,test_astype_basic[uint32-uint16],"AssertionError: assert dtype('uint16') == dtype('int64')
 +  where dtype('uint16') = 0    0\n1    1\n2    2\n3    3\ndtype: uint16.dtype",failed
27202,tests.integ.modin.series.test_astype,test_astype_basic[uint32-int8],"AssertionError: assert dtype('int8') == dtype('int64')
 +  where dtype('int8') = 0    0\n1    1\n2    2\n3    3\ndtype: int8.dtype",failed
27206,tests.integ.modin.series.test_astype,test_astype_basic[uint32-uint8],"AssertionError: assert dtype('uint8') == dtype('int64')
 +  where dtype('uint8') = 0    0\n1    1\n2    2\n3    3\ndtype: uint8.dtype",failed
27207,tests.integ.modin.index.test_reindex,test_fill_method[100-pad],AttributeError: 'DataFrame' object has no attribute 'data_column_snowflake_quoted_identifiers',failed
27208,tests.integ.modin.series.test_astype,test_astype_basic[uint32-float32],"AssertionError: assert dtype('float32') == dtype('float64')
 +  where dtype('float32') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float32.dtype",failed
27209,tests.integ.modin.series.test_astype,test_astype_basic[uint32-float160],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
27210,tests.integ.modin.series.test_astype,test_astype_basic[uint32-float161],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
27229,tests.integ.modin.index.test_reindex,test_fill_method[100-ffill],AttributeError: 'DataFrame' object has no attribute 'data_column_snowflake_quoted_identifiers',failed
27236,tests.integ.modin.series.test_astype,test_astype_basic[uint32-boolean],TypeError: Need to pass bool-like values,failed
27237,tests.integ.modin.io.test_read_csv,test_read_staged_csv_negative[true_values-arg19],FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
27239,tests.integ.modin.series.test_astype,test_astype_basic[uint32-to_dtype102],"AssertionError: assert Float32Dtype() == dtype('float64')
 +  where Float32Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float32.dtype",failed
27241,tests.integ.modin.series.test_astype,test_astype_basic[uint32-to_dtype103],"AssertionError: assert Float64Dtype() == dtype('float64')
 +  where Float64Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float64.dtype",failed
27244,tests.integ.modin.series.test_astype,test_astype_basic[uint32-to_dtype104],"AssertionError: assert Int64Dtype() == dtype('int64')
 +  where Int64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int64.dtype",failed
27248,tests.integ.modin.series.test_astype,test_astype_basic[uint32-to_dtype105],"AssertionError: assert UInt64Dtype() == dtype('int64')
 +  where UInt64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt64.dtype",failed
27249,tests.integ.modin.series.test_astype,test_astype_basic[uint32-to_dtype106],"AssertionError: assert Int32Dtype() == dtype('int64')
 +  where Int32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int32.dtype",failed
27250,tests.integ.modin.series.test_astype,test_astype_basic[uint32-to_dtype107],"AssertionError: assert UInt32Dtype() == dtype('int64')
 +  where UInt32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt32.dtype",failed
27251,tests.integ.modin.series.test_astype,test_astype_basic[uint32-to_dtype108],"AssertionError: assert Int16Dtype() == dtype('int64')
 +  where Int16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int16.dtype",failed
27252,tests.integ.modin.io.test_read_csv,test_read_staged_csv_negative[false_values-arg20],FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
27253,tests.integ.modin.series.test_astype,test_astype_basic[uint32-to_dtype109],"AssertionError: assert UInt16Dtype() == dtype('int64')
 +  where UInt16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt16.dtype",failed
27255,tests.integ.modin.series.test_astype,test_astype_basic[uint32-to_dtype110],"AssertionError: assert Int8Dtype() == dtype('int64')
 +  where Int8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int8.dtype",failed
27256,tests.integ.modin.series.test_astype,test_astype_basic[uint32-to_dtype111],"AssertionError: assert UInt8Dtype() == dtype('int64')
 +  where UInt8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt8.dtype",failed
27257,tests.integ.modin.io.test_to_csv,test_to_csv_dataframe_stage[kwargs14-False],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_XNE9BQ2WUH',failed
27258,tests.integ.modin.series.test_astype,test_astype_basic[uint32-to_dtype112],"AssertionError: assert string[python] == dtype('O')
 +  where string[python] = 0    0\n1    1\n2    2\n3    3\ndtype: string.dtype",failed
27265,tests.integ.modin.series.test_astype,test_astype_basic[int16-uint64],"AssertionError: assert dtype('uint64') == dtype('int64')
 +  where dtype('uint64') = 0    0\n1    1\n2    2\n3    3\ndtype: uint64.dtype",failed
27267,tests.integ.modin.series.test_astype,test_astype_basic[int16-int32],"AssertionError: assert dtype('int32') == dtype('int64')
 +  where dtype('int32') = 0    0\n1    1\n2    2\n3    3\ndtype: int32.dtype",failed
27270,tests.integ.modin.series.test_astype,test_astype_basic[int16-uint32],"AssertionError: assert dtype('uint32') == dtype('int64')
 +  where dtype('uint32') = 0    0\n1    1\n2    2\n3    3\ndtype: uint32.dtype",failed
27272,tests.integ.modin.series.test_astype,test_astype_basic[int16-int16],"AssertionError: assert dtype('int16') == dtype('int64')
 +  where dtype('int16') = 0    0\n1    1\n2    2\n3    3\ndtype: int16.dtype",failed
27273,tests.integ.modin.io.test_read_csv,test_read_staged_csv_negative[keep_default_na-False],FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
27275,tests.integ.modin.series.test_astype,test_astype_basic[int16-uint16],"AssertionError: assert dtype('uint16') == dtype('int64')
 +  where dtype('uint16') = 0    0\n1    1\n2    2\n3    3\ndtype: uint16.dtype",failed
27276,tests.integ.modin.series.test_astype,test_astype_basic[int16-int8],"AssertionError: assert dtype('int8') == dtype('int64')
 +  where dtype('int8') = 0    0\n1    1\n2    2\n3    3\ndtype: int8.dtype",failed
27277,tests.integ.modin.series.test_astype,test_astype_basic[int16-uint8],"AssertionError: assert dtype('uint8') == dtype('int64')
 +  where dtype('uint8') = 0    0\n1    1\n2    2\n3    3\ndtype: uint8.dtype",failed
27280,tests.integ.modin.series.test_astype,test_astype_basic[int16-float32],"AssertionError: assert dtype('float32') == dtype('float64')
 +  where dtype('float32') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float32.dtype",failed
27282,tests.integ.modin.io.test_to_csv,test_to_csv_dataframe_stage[kwargs15-False],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_9NHN2WO03C',failed
27283,tests.integ.modin.series.test_astype,test_astype_basic[int16-float160],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
27284,tests.integ.modin.io.test_read_csv,test_read_staged_csv_negative[delim_whitespace-True],FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
27285,tests.integ.modin.series.test_astype,test_astype_basic[int16-float161],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
27293,tests.integ.modin.io.test_read_csv,test_read_staged_csv_negative[skipinitialspace-True],FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
27297,tests.integ.modin.io.test_read_csv,test_read_staged_csv_negative[on_bad_lines-skip],FileNotFoundError: [Errno 2] No such file or directory: '@SNOWPARK_TEMP_STAGE_7O7ULDOZIC/testCSV.csv',failed
27298,tests.integ.modin.io.test_to_csv,test_to_csv_dataframe_stage[kwargs16-False],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_AC1H750M8B',failed
27300,tests.integ.modin.series.test_astype,test_astype_basic[int16-boolean],TypeError: Need to pass bool-like values,failed
27302,tests.integ.modin.series.test_astype,test_astype_basic[int16-to_dtype131],"AssertionError: assert Float32Dtype() == dtype('float64')
 +  where Float32Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float32.dtype",failed
27304,tests.integ.modin.index.test_reindex,test_fill_method_non_monotonic_new_index[None-bfill],AttributeError: 'DataFrame' object has no attribute 'data_column_snowflake_quoted_identifiers',failed
27306,tests.integ.modin.series.test_astype,test_astype_basic[int16-to_dtype132],"AssertionError: assert Float64Dtype() == dtype('float64')
 +  where Float64Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float64.dtype",failed
27308,tests.integ.modin.series.test_astype,test_astype_basic[int16-to_dtype133],"AssertionError: assert Int64Dtype() == dtype('int64')
 +  where Int64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int64.dtype",failed
27311,tests.integ.modin.series.test_astype,test_astype_basic[int16-to_dtype134],"AssertionError: assert UInt64Dtype() == dtype('int64')
 +  where UInt64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt64.dtype",failed
27312,tests.integ.modin.series.test_astype,test_astype_basic[int16-to_dtype135],"AssertionError: assert Int32Dtype() == dtype('int64')
 +  where Int32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int32.dtype",failed
27315,tests.integ.modin.series.test_astype,test_astype_basic[int16-to_dtype136],"AssertionError: assert UInt32Dtype() == dtype('int64')
 +  where UInt32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt32.dtype",failed
27316,tests.integ.modin.series.test_astype,test_astype_basic[int16-to_dtype137],"AssertionError: assert Int16Dtype() == dtype('int64')
 +  where Int16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int16.dtype",failed
27317,tests.integ.modin.series.test_astype,test_astype_basic[int16-to_dtype138],"AssertionError: assert UInt16Dtype() == dtype('int64')
 +  where UInt16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt16.dtype",failed
27318,tests.integ.modin.series.test_astype,test_astype_basic[int16-to_dtype139],"AssertionError: assert Int8Dtype() == dtype('int64')
 +  where Int8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int8.dtype",failed
27320,tests.integ.modin.series.test_astype,test_astype_basic[int16-to_dtype140],"AssertionError: assert UInt8Dtype() == dtype('int64')
 +  where UInt8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt8.dtype",failed
27321,tests.integ.modin.series.test_astype,test_astype_basic[int16-to_dtype141],"AssertionError: assert string[python] == dtype('O')
 +  where string[python] = 0    0\n1    1\n2    2\n3    3\ndtype: string.dtype",failed
27329,tests.integ.modin.series.test_astype,test_astype_basic[uint16-uint64],"AssertionError: assert dtype('uint64') == dtype('int64')
 +  where dtype('uint64') = 0    0\n1    1\n2    2\n3    3\ndtype: uint64.dtype",failed
27332,tests.integ.modin.series.test_astype,test_astype_basic[uint16-int32],"AssertionError: assert dtype('int32') == dtype('int64')
 +  where dtype('int32') = 0    0\n1    1\n2    2\n3    3\ndtype: int32.dtype",failed
27335,tests.integ.modin.series.test_astype,test_astype_basic[uint16-uint32],"AssertionError: assert dtype('uint32') == dtype('int64')
 +  where dtype('uint32') = 0    0\n1    1\n2    2\n3    3\ndtype: uint32.dtype",failed
27337,tests.integ.modin.series.test_astype,test_astype_basic[uint16-int16],"AssertionError: assert dtype('int16') == dtype('int64')
 +  where dtype('int16') = 0    0\n1    1\n2    2\n3    3\ndtype: int16.dtype",failed
27340,tests.integ.modin.series.test_astype,test_astype_basic[uint16-uint16],"AssertionError: assert dtype('uint16') == dtype('int64')
 +  where dtype('uint16') = 0    0\n1    1\n2    2\n3    3\ndtype: uint16.dtype",failed
27342,tests.integ.modin.series.test_astype,test_astype_basic[uint16-int8],"AssertionError: assert dtype('int8') == dtype('int64')
 +  where dtype('int8') = 0    0\n1    1\n2    2\n3    3\ndtype: int8.dtype",failed
27344,tests.integ.modin.series.test_astype,test_astype_basic[uint16-uint8],"AssertionError: assert dtype('uint8') == dtype('int64')
 +  where dtype('uint8') = 0    0\n1    1\n2    2\n3    3\ndtype: uint8.dtype",failed
27346,tests.integ.modin.index.test_reindex,test_fill_method_non_monotonic_new_index[None-backfill],AttributeError: 'DataFrame' object has no attribute 'data_column_snowflake_quoted_identifiers',failed
27349,tests.integ.modin.series.test_astype,test_astype_basic[uint16-float32],"AssertionError: assert dtype('float32') == dtype('float64')
 +  where dtype('float32') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float32.dtype",failed
27351,tests.integ.modin.series.test_astype,test_astype_basic[uint16-float160],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
27353,tests.integ.modin.series.test_astype,test_astype_basic[uint16-float161],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
27357,tests.integ.modin.io.test_to_csv,test_to_csv_unsupported_params_default_value[kwargs0],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_N8TAM0LH6M',failed
27372,tests.integ.modin.series.test_astype,test_astype_basic[uint16-boolean],TypeError: Need to pass bool-like values,failed
27375,tests.integ.modin.io.test_read_csv,test_read_csv_usecols_empty_negative,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
27377,tests.integ.modin.index.test_reindex,test_fill_method_non_monotonic_new_index[None-pad],AttributeError: 'DataFrame' object has no attribute 'data_column_snowflake_quoted_identifiers',failed
27378,tests.integ.modin.series.test_astype,test_astype_basic[uint16-to_dtype160],"AssertionError: assert Float32Dtype() == dtype('float64')
 +  where Float32Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float32.dtype",failed
27380,tests.integ.modin.series.test_astype,test_astype_basic[uint16-to_dtype161],"AssertionError: assert Float64Dtype() == dtype('float64')
 +  where Float64Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float64.dtype",failed
27382,tests.integ.modin.io.test_to_csv,test_to_csv_unsupported_params_default_value[kwargs1],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_IQNWGQPQMG',failed
27385,tests.integ.modin.series.test_astype,test_astype_basic[uint16-to_dtype162],"AssertionError: assert Int64Dtype() == dtype('int64')
 +  where Int64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int64.dtype",failed
27388,tests.integ.modin.series.test_astype,test_astype_basic[uint16-to_dtype163],"AssertionError: assert UInt64Dtype() == dtype('int64')
 +  where UInt64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt64.dtype",failed
27391,tests.integ.modin.series.test_astype,test_astype_basic[uint16-to_dtype164],"AssertionError: assert Int32Dtype() == dtype('int64')
 +  where Int32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int32.dtype",failed
27393,tests.integ.modin.series.test_astype,test_astype_basic[uint16-to_dtype165],"AssertionError: assert UInt32Dtype() == dtype('int64')
 +  where UInt32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt32.dtype",failed
27394,tests.integ.modin.series.test_astype,test_astype_basic[uint16-to_dtype166],"AssertionError: assert Int16Dtype() == dtype('int64')
 +  where Int16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int16.dtype",failed
27396,tests.integ.modin.series.test_astype,test_astype_basic[uint16-to_dtype167],"AssertionError: assert UInt16Dtype() == dtype('int64')
 +  where UInt16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt16.dtype",failed
27397,tests.integ.modin.series.test_astype,test_astype_basic[uint16-to_dtype168],"AssertionError: assert Int8Dtype() == dtype('int64')
 +  where Int8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int8.dtype",failed
27398,tests.integ.modin.series.test_astype,test_astype_basic[uint16-to_dtype169],"AssertionError: assert UInt8Dtype() == dtype('int64')
 +  where UInt8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt8.dtype",failed
27399,tests.integ.modin.series.test_astype,test_astype_basic[uint16-to_dtype170],"AssertionError: assert string[python] == dtype('O')
 +  where string[python] = 0    0\n1    1\n2    2\n3    3\ndtype: string.dtype",failed
27407,tests.integ.modin.series.test_astype,test_astype_basic[int8-uint64],"AssertionError: assert dtype('uint64') == dtype('int64')
 +  where dtype('uint64') = 0    0\n1    1\n2    2\n3    3\ndtype: uint64.dtype",failed
27408,tests.integ.modin.series.test_astype,test_astype_basic[int8-int32],"AssertionError: assert dtype('int32') == dtype('int64')
 +  where dtype('int32') = 0    0\n1    1\n2    2\n3    3\ndtype: int32.dtype",failed
27409,tests.integ.modin.series.test_astype,test_astype_basic[int8-uint32],"AssertionError: assert dtype('uint32') == dtype('int64')
 +  where dtype('uint32') = 0    0\n1    1\n2    2\n3    3\ndtype: uint32.dtype",failed
27410,tests.integ.modin.series.test_astype,test_astype_basic[int8-int16],"AssertionError: assert dtype('int16') == dtype('int64')
 +  where dtype('int16') = 0    0\n1    1\n2    2\n3    3\ndtype: int16.dtype",failed
27415,tests.integ.modin.series.test_astype,test_astype_basic[int8-uint16],"AssertionError: assert dtype('uint16') == dtype('int64')
 +  where dtype('uint16') = 0    0\n1    1\n2    2\n3    3\ndtype: uint16.dtype",failed
27416,tests.integ.modin.series.test_astype,test_astype_basic[int8-int8],"AssertionError: assert dtype('int8') == dtype('int64')
 +  where dtype('int8') = 0    0\n1    1\n2    2\n3    3\ndtype: int8.dtype",failed
27419,tests.integ.modin.index.test_reindex,test_fill_method_non_monotonic_new_index[None-ffill],AttributeError: 'DataFrame' object has no attribute 'data_column_snowflake_quoted_identifiers',failed
27420,tests.integ.modin.series.test_astype,test_astype_basic[int8-uint8],"AssertionError: assert dtype('uint8') == dtype('int64')
 +  where dtype('uint8') = 0    0\n1    1\n2    2\n3    3\ndtype: uint8.dtype",failed
27422,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype480-to_dtype480],"AssertionError: assert Float64Dtype() == dtype('float64')
 +  where Float64Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float64.dtype",failed
27426,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype481-to_dtype481],"AssertionError: assert Int64Dtype() == dtype('int64')
 +  where Int64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int64.dtype",failed
27427,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype482-to_dtype482],"AssertionError: assert UInt64Dtype() == dtype('int64')
 +  where UInt64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt64.dtype",failed
27429,tests.integ.modin.io.test_read_csv,test_read_csv_usecols_nonexistent_negative[usecols0],"AssertionError: Regex pattern did not match.
 Regex: ""'usecols' do not match columns, columns expected but not found""
 Input: ""Usecols do not match columns, columns expected but not found: ['non_existent_col']""",failed
27430,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype483-to_dtype483],"AssertionError: assert Int32Dtype() == dtype('int64')
 +  where Int32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int32.dtype",failed
27433,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype484-to_dtype484],"AssertionError: assert UInt32Dtype() == dtype('int64')
 +  where UInt32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt32.dtype",failed
27435,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype485-to_dtype485],"AssertionError: assert Int16Dtype() == dtype('int64')
 +  where Int16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int16.dtype",failed
27438,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype486-to_dtype486],"AssertionError: assert UInt16Dtype() == dtype('int64')
 +  where UInt16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt16.dtype",failed
27440,tests.integ.modin.io.test_read_csv,test_read_csv_usecols_nonexistent_negative[usecols1],"AssertionError: Regex pattern did not match.
 Regex: ""'usecols' do not match columns, columns expected but not found""
 Input: ""Usecols do not match columns, columns expected but not found: ['non_existent_col', 'rating']""",failed
27441,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype487-to_dtype487],"AssertionError: assert Int8Dtype() == dtype('int64')
 +  where Int8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int8.dtype",failed
27443,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype488-to_dtype488],"AssertionError: assert UInt8Dtype() == dtype('int64')
 +  where UInt8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt8.dtype",failed
27446,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype489-to_dtype489],"AssertionError: assert string[python] == dtype('O')
 +  where string[python] = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: string.dtype",failed
27452,tests.integ.modin.index.test_reindex,test_fill_method_non_monotonic_new_index[1-bfill],AssertionError: exception type <class 'AttributeError'> does not match with expected type <class 'ValueError'>,failed
27453,tests.integ.modin.io.test_read_csv,test_read_csv_usecols_nonexistent_negative[usecols2],"AssertionError: Regex pattern did not match.
 Regex: ""'usecols' do not match columns, columns expected but not found""
 Input: 'Usecols do not match columns, columns expected but not found: [-1]'",failed
27457,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype492-str],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2, 3]
[left]:  [0.0, 1.0, 2.0, 3.0]
[right]: [0, 1, 2, 3]
At positional index 0, first diff: 0.0 != 0",failed
27461,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype494-uint64],"AssertionError: assert dtype('uint64') == dtype('int64')
 +  where dtype('uint64') = 0    0\n1    1\n2    2\n3    3\ndtype: uint64.dtype",failed
27462,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype495-int32],"AssertionError: assert dtype('int32') == dtype('int64')
 +  where dtype('int32') = 0    0\n1    1\n2    2\n3    3\ndtype: int32.dtype",failed
27463,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype496-uint32],"AssertionError: assert dtype('uint32') == dtype('int64')
 +  where dtype('uint32') = 0    0\n1    1\n2    2\n3    3\ndtype: uint32.dtype",failed
27464,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype497-int16],"AssertionError: assert dtype('int16') == dtype('int64')
 +  where dtype('int16') = 0    0\n1    1\n2    2\n3    3\ndtype: int16.dtype",failed
27465,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype498-uint16],"AssertionError: assert dtype('uint16') == dtype('int64')
 +  where dtype('uint16') = 0    0\n1    1\n2    2\n3    3\ndtype: uint16.dtype",failed
27466,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype499-int8],"AssertionError: assert dtype('int8') == dtype('int64')
 +  where dtype('int8') = 0    0\n1    1\n2    2\n3    3\ndtype: int8.dtype",failed
27467,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype500-uint8],"AssertionError: assert dtype('uint8') == dtype('int64')
 +  where dtype('uint8') = 0    0\n1    1\n2    2\n3    3\ndtype: uint8.dtype",failed
27469,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype501-float32],"AssertionError: assert dtype('float32') == dtype('float64')
 +  where dtype('float32') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float32.dtype",failed
27471,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype502-float16],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
27473,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype503-float16],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
27474,tests.integ.modin.io.test_to_csv,test_to_csv_unsupported_params_default_value[kwargs2],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_LUENLVLJG8',failed
27475,tests.integ.modin.io.test_read_csv,test_read_csv_usecols_nonexistent_negative[usecols3],"AssertionError: Regex pattern did not match.
 Regex: ""'usecols' do not match columns, columns expected but not found""
 Input: 'Usecols do not match columns, columns expected but not found: [0, 4]'",failed
27480,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype507-boolean],"AssertionError: assert BooleanDtype == dtype('bool')
 +  where BooleanDtype = 0    False\n1     True\n2     True\n3     True\ndtype: boolean.dtype",failed
27481,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype508-to_dtype508],"AssertionError: assert Float32Dtype() == dtype('float64')
 +  where Float32Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float32.dtype",failed
27483,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype509-to_dtype509],"AssertionError: assert Float64Dtype() == dtype('float64')
 +  where Float64Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float64.dtype",failed
27486,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype510-to_dtype510],"AssertionError: assert Int64Dtype() == dtype('int64')
 +  where Int64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int64.dtype",failed
27488,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype511-to_dtype511],"AssertionError: assert UInt64Dtype() == dtype('int64')
 +  where UInt64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt64.dtype",failed
27492,tests.integ.modin.io.test_read_csv,test_read_csv_usecols_nonexistent_negative[rating],"AssertionError: Regex pattern did not match.
 Regex: ""'usecols' do not match columns, columns expected but not found""
 Input: ""'usecols' must either be list-like of all strings, all unicode, all integers or a callable.""",failed
27493,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype512-to_dtype512],"AssertionError: assert Int32Dtype() == dtype('int64')
 +  where Int32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int32.dtype",failed
27494,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype513-to_dtype513],"AssertionError: assert UInt32Dtype() == dtype('int64')
 +  where UInt32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt32.dtype",failed
27498,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype514-to_dtype514],"AssertionError: assert Int16Dtype() == dtype('int64')
 +  where Int16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int16.dtype",failed
27500,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype515-to_dtype515],"AssertionError: assert UInt16Dtype() == dtype('int64')
 +  where UInt16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt16.dtype",failed
27501,tests.integ.modin.io.test_to_csv,test_to_csv_unsupported_params_default_value[kwargs3],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_QQ1T8YOAE9',failed
27505,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype516-to_dtype516],"AssertionError: assert Int8Dtype() == dtype('int64')
 +  where Int8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int8.dtype",failed
27508,tests.integ.modin.index.test_reindex,test_fill_method_non_monotonic_new_index[1-backfill],AssertionError: exception type <class 'AttributeError'> does not match with expected type <class 'ValueError'>,failed
27511,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype517-to_dtype517],"AssertionError: assert UInt8Dtype() == dtype('int64')
 +  where UInt8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt8.dtype",failed
27515,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype518-to_dtype518],"AssertionError: assert string[python] == dtype('O')
 +  where string[python] = 0    0\n1    1\n2    2\n3    3\ndtype: string.dtype",failed
27528,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype523-uint64],"AssertionError: assert dtype('uint64') == dtype('int64')
 +  where dtype('uint64') = 0    0\n1    1\n2    2\n3    3\ndtype: uint64.dtype",failed
27532,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype524-int32],"AssertionError: assert dtype('int32') == dtype('int64')
 +  where dtype('int32') = 0    0\n1    1\n2    2\n3    3\ndtype: int32.dtype",failed
27533,tests.integ.modin.io.test_to_csv,test_to_csv_unsupported_params_default_value[kwargs4],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_FYOXRA7WJK',failed
27537,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype525-uint32],"AssertionError: assert dtype('uint32') == dtype('int64')
 +  where dtype('uint32') = 0    0\n1    1\n2    2\n3    3\ndtype: uint32.dtype",failed
27539,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype526-int16],"AssertionError: assert dtype('int16') == dtype('int64')
 +  where dtype('int16') = 0    0\n1    1\n2    2\n3    3\ndtype: int16.dtype",failed
27540,tests.integ.modin.index.test_reindex,test_fill_method_non_monotonic_new_index[1-pad],AssertionError: exception type <class 'AttributeError'> does not match with expected type <class 'ValueError'>,failed
27543,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype527-uint16],"AssertionError: assert dtype('uint16') == dtype('int64')
 +  where dtype('uint16') = 0    0\n1    1\n2    2\n3    3\ndtype: uint16.dtype",failed
27545,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype528-int8],"AssertionError: assert dtype('int8') == dtype('int64')
 +  where dtype('int8') = 0    0\n1    1\n2    2\n3    3\ndtype: int8.dtype",failed
27546,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype529-uint8],"AssertionError: assert dtype('uint8') == dtype('int64')
 +  where dtype('uint8') = 0    0\n1    1\n2    2\n3    3\ndtype: uint8.dtype",failed
27547,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype530-float32],"AssertionError: assert dtype('float32') == dtype('float64')
 +  where dtype('float32') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float32.dtype",failed
27549,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype531-float16],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
27550,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype532-float16],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
27557,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype536-boolean],"AssertionError: assert BooleanDtype == dtype('bool')
 +  where BooleanDtype = 0    False\n1     True\n2     True\n3     True\ndtype: boolean.dtype",failed
27558,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype537-to_dtype537],"AssertionError: assert Float32Dtype() == dtype('float64')
 +  where Float32Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float32.dtype",failed
27559,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype538-to_dtype538],"AssertionError: assert Float64Dtype() == dtype('float64')
 +  where Float64Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float64.dtype",failed
27567,tests.integ.modin.io.test_to_csv,test_to_csv_unsupported_params_default_value[kwargs5],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_SEXDCRPMU4',failed
27572,tests.integ.modin.io.test_read_csv,test_read_csv_usecols_with_names_negative,"AssertionError: Regex pattern did not match.
 Regex: ""'usecols' do not match columns, columns expected but not found""
 Input: ""Usecols do not match columns, columns expected but not found: ['id']""",failed
27577,tests.integ.modin.index.test_reindex,test_fill_method_non_monotonic_new_index[1-ffill],AssertionError: exception type <class 'AttributeError'> does not match with expected type <class 'ValueError'>,failed
27586,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype539-to_dtype539],"AssertionError: assert Int64Dtype() == dtype('int64')
 +  where Int64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int64.dtype",failed
27589,tests.integ.modin.io.test_to_csv,test_to_csv_unsupported_params_default_value[kwargs6],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_K0EVAR70XK',failed
27590,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype540-to_dtype540],"AssertionError: assert UInt64Dtype() == dtype('int64')
 +  where UInt64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt64.dtype",failed
27593,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype541-to_dtype541],"AssertionError: assert Int32Dtype() == dtype('int64')
 +  where Int32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int32.dtype",failed
27595,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype542-to_dtype542],"AssertionError: assert UInt32Dtype() == dtype('int64')
 +  where UInt32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt32.dtype",failed
27598,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype543-to_dtype543],"AssertionError: assert Int16Dtype() == dtype('int64')
 +  where Int16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int16.dtype",failed
27601,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype544-to_dtype544],"AssertionError: assert UInt16Dtype() == dtype('int64')
 +  where UInt16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt16.dtype",failed
27602,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype545-to_dtype545],"AssertionError: assert Int8Dtype() == dtype('int64')
 +  where Int8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int8.dtype",failed
27603,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype546-to_dtype546],"AssertionError: assert UInt8Dtype() == dtype('int64')
 +  where UInt8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt8.dtype",failed
27604,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype547-to_dtype547],"AssertionError: assert string[python] == dtype('O')
 +  where string[python] = 0    0\n1    1\n2    2\n3    3\ndtype: string.dtype",failed
27609,tests.integ.modin.index.test_reindex,test_fill_method_non_monotonic_new_index[2-bfill],AssertionError: exception type <class 'AttributeError'> does not match with expected type <class 'ValueError'>,failed
27613,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype552-uint64],"AssertionError: assert dtype('uint64') == dtype('int64')
 +  where dtype('uint64') = 0    0\n1    1\n2    2\n3    3\ndtype: uint64.dtype",failed
27614,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype553-int32],"AssertionError: assert dtype('int32') == dtype('int64')
 +  where dtype('int32') = 0    0\n1    1\n2    2\n3    3\ndtype: int32.dtype",failed
27616,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype554-uint32],"AssertionError: assert dtype('uint32') == dtype('int64')
 +  where dtype('uint32') = 0    0\n1    1\n2    2\n3    3\ndtype: uint32.dtype",failed
27618,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype555-int16],"AssertionError: assert dtype('int16') == dtype('int64')
 +  where dtype('int16') = 0    0\n1    1\n2    2\n3    3\ndtype: int16.dtype",failed
27621,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype556-uint16],"AssertionError: assert dtype('uint16') == dtype('int64')
 +  where dtype('uint16') = 0    0\n1    1\n2    2\n3    3\ndtype: uint16.dtype",failed
27622,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype557-int8],"AssertionError: assert dtype('int8') == dtype('int64')
 +  where dtype('int8') = 0    0\n1    1\n2    2\n3    3\ndtype: int8.dtype",failed
27624,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype558-uint8],"AssertionError: assert dtype('uint8') == dtype('int64')
 +  where dtype('uint8') = 0    0\n1    1\n2    2\n3    3\ndtype: uint8.dtype",failed
27627,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype559-float32],"AssertionError: assert dtype('float32') == dtype('float64')
 +  where dtype('float32') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float32.dtype",failed
27628,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype560-float16],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
27632,tests.integ.modin.io.test_to_csv,test_to_csv_unsupported_params_default_value[kwargs7],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_39BZKZ723H',failed
27634,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype561-float16],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
27642,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype565-boolean],"AssertionError: assert BooleanDtype == dtype('bool')
 +  where BooleanDtype = 0    False\n1     True\n2     True\n3     True\ndtype: boolean.dtype",failed
27645,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype566-to_dtype566],"AssertionError: assert Float32Dtype() == dtype('float64')
 +  where Float32Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float32.dtype",failed
27648,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype567-to_dtype567],"AssertionError: assert Float64Dtype() == dtype('float64')
 +  where Float64Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float64.dtype",failed
27650,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype568-to_dtype568],"AssertionError: assert Int64Dtype() == dtype('int64')
 +  where Int64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int64.dtype",failed
27651,tests.integ.modin.index.test_reindex,test_fill_method_non_monotonic_new_index[2-backfill],AssertionError: exception type <class 'AttributeError'> does not match with expected type <class 'ValueError'>,failed
27653,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype569-to_dtype569],"AssertionError: assert UInt64Dtype() == dtype('int64')
 +  where UInt64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt64.dtype",failed
27655,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype570-to_dtype570],"AssertionError: assert Int32Dtype() == dtype('int64')
 +  where Int32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int32.dtype",failed
27658,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype571-to_dtype571],"AssertionError: assert UInt32Dtype() == dtype('int64')
 +  where UInt32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt32.dtype",failed
27661,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype572-to_dtype572],"AssertionError: assert Int16Dtype() == dtype('int64')
 +  where Int16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int16.dtype",failed
27662,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype573-to_dtype573],"AssertionError: assert UInt16Dtype() == dtype('int64')
 +  where UInt16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt16.dtype",failed
27665,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype574-to_dtype574],"AssertionError: assert Int8Dtype() == dtype('int64')
 +  where Int8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int8.dtype",failed
27668,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype575-to_dtype575],"AssertionError: assert UInt8Dtype() == dtype('int64')
 +  where UInt8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt8.dtype",failed
27671,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype576-to_dtype576],"AssertionError: assert string[python] == dtype('O')
 +  where string[python] = 0    0\n1    1\n2    2\n3    3\ndtype: string.dtype",failed
27678,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype581-uint64],"AssertionError: assert dtype('uint64') == dtype('int64')
 +  where dtype('uint64') = 0    0\n1    1\n2    2\n3    3\ndtype: uint64.dtype",failed
27679,tests.integ.modin.index.test_reindex,test_fill_method_non_monotonic_new_index[2-pad],AssertionError: exception type <class 'AttributeError'> does not match with expected type <class 'ValueError'>,failed
27680,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype582-int32],"AssertionError: assert dtype('int32') == dtype('int64')
 +  where dtype('int32') = 0    0\n1    1\n2    2\n3    3\ndtype: int32.dtype",failed
27681,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype583-uint32],"AssertionError: assert dtype('uint32') == dtype('int64')
 +  where dtype('uint32') = 0    0\n1    1\n2    2\n3    3\ndtype: uint32.dtype",failed
27682,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype584-int16],"AssertionError: assert dtype('int16') == dtype('int64')
 +  where dtype('int16') = 0    0\n1    1\n2    2\n3    3\ndtype: int16.dtype",failed
27683,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype585-uint16],"AssertionError: assert dtype('uint16') == dtype('int64')
 +  where dtype('uint16') = 0    0\n1    1\n2    2\n3    3\ndtype: uint16.dtype",failed
27686,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype586-int8],"AssertionError: assert dtype('int8') == dtype('int64')
 +  where dtype('int8') = 0    0\n1    1\n2    2\n3    3\ndtype: int8.dtype",failed
27687,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype587-uint8],"AssertionError: assert dtype('uint8') == dtype('int64')
 +  where dtype('uint8') = 0    0\n1    1\n2    2\n3    3\ndtype: uint8.dtype",failed
27688,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype588-float32],"AssertionError: assert dtype('float32') == dtype('float64')
 +  where dtype('float32') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float32.dtype",failed
27689,tests.integ.modin.io.test_read_csv,test_read_csv_dtype_usecols_negative,Failed: DID NOT RAISE <class 'ValueError'>,failed
27691,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype589-float16],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
27692,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype590-float16],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
27700,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype594-boolean],"AssertionError: assert BooleanDtype == dtype('bool')
 +  where BooleanDtype = 0    False\n1     True\n2     True\n3     True\ndtype: boolean.dtype",failed
27705,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype595-to_dtype595],"AssertionError: assert Float32Dtype() == dtype('float64')
 +  where Float32Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float32.dtype",failed
27706,tests.integ.modin.io.test_to_csv,test_to_csv_unsupported_params_error[kwargs0],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_GHJU9PBJ9P',failed
27707,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype596-to_dtype596],"AssertionError: assert Float64Dtype() == dtype('float64')
 +  where Float64Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float64.dtype",failed
27712,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype597-to_dtype597],"AssertionError: assert Int64Dtype() == dtype('int64')
 +  where Int64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int64.dtype",failed
27715,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype598-to_dtype598],"AssertionError: assert UInt64Dtype() == dtype('int64')
 +  where UInt64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt64.dtype",failed
27718,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype599-to_dtype599],"AssertionError: assert Int32Dtype() == dtype('int64')
 +  where Int32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int32.dtype",failed
27721,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype600-to_dtype600],"AssertionError: assert UInt32Dtype() == dtype('int64')
 +  where UInt32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt32.dtype",failed
27722,tests.integ.modin.index.test_reindex,test_fill_method_non_monotonic_new_index[2-ffill],AssertionError: exception type <class 'AttributeError'> does not match with expected type <class 'ValueError'>,failed
27725,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype601-to_dtype601],"AssertionError: assert Int16Dtype() == dtype('int64')
 +  where Int16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int16.dtype",failed
27728,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype602-to_dtype602],"AssertionError: assert UInt16Dtype() == dtype('int64')
 +  where UInt16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt16.dtype",failed
27731,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype603-to_dtype603],"AssertionError: assert Int8Dtype() == dtype('int64')
 +  where Int8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int8.dtype",failed
27735,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype604-to_dtype604],"AssertionError: assert UInt8Dtype() == dtype('int64')
 +  where UInt8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt8.dtype",failed
27737,tests.integ.modin.io.test_to_csv,test_to_csv_unsupported_params_error[kwargs1],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_J13192YCFH',failed
27740,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype605-to_dtype605],"AssertionError: assert string[python] == dtype('O')
 +  where string[python] = 0    0\n1    1\n2    2\n3    3\ndtype: string.dtype",failed
27753,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype610-uint64],"AssertionError: assert dtype('uint64') == dtype('int64')
 +  where dtype('uint64') = 0    0\n1    1\n2    2\n3    3\ndtype: uint64.dtype",failed
27754,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype611-int32],"AssertionError: assert dtype('int32') == dtype('int64')
 +  where dtype('int32') = 0    0\n1    1\n2    2\n3    3\ndtype: int32.dtype",failed
27756,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype612-uint32],"AssertionError: assert dtype('uint32') == dtype('int64')
 +  where dtype('uint32') = 0    0\n1    1\n2    2\n3    3\ndtype: uint32.dtype",failed
27757,tests.integ.modin.index.test_reindex,test_fill_method_non_monotonic_new_index[100-bfill],AssertionError: exception type <class 'AttributeError'> does not match with expected type <class 'ValueError'>,failed
27758,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype613-int16],"AssertionError: assert dtype('int16') == dtype('int64')
 +  where dtype('int16') = 0    0\n1    1\n2    2\n3    3\ndtype: int16.dtype",failed
27760,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype614-uint16],"AssertionError: assert dtype('uint16') == dtype('int64')
 +  where dtype('uint16') = 0    0\n1    1\n2    2\n3    3\ndtype: uint16.dtype",failed
27762,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype615-int8],"AssertionError: assert dtype('int8') == dtype('int64')
 +  where dtype('int8') = 0    0\n1    1\n2    2\n3    3\ndtype: int8.dtype",failed
27763,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype616-uint8],"AssertionError: assert dtype('uint8') == dtype('int64')
 +  where dtype('uint8') = 0    0\n1    1\n2    2\n3    3\ndtype: uint8.dtype",failed
27764,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype617-float32],"AssertionError: assert dtype('float32') == dtype('float64')
 +  where dtype('float32') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float32.dtype",failed
27765,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype618-float16],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
27766,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype619-float16],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
27772,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype623-boolean],"AssertionError: assert BooleanDtype == dtype('bool')
 +  where BooleanDtype = 0    False\n1     True\n2     True\n3     True\ndtype: boolean.dtype",failed
27775,tests.integ.modin.io.test_to_csv,test_to_csv_unsupported_params_error[kwargs2],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_MM0FQK6A0B',failed
27776,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype624-to_dtype624],"AssertionError: assert Float32Dtype() == dtype('float64')
 +  where Float32Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float32.dtype",failed
27778,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype625-to_dtype625],"AssertionError: assert Float64Dtype() == dtype('float64')
 +  where Float64Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float64.dtype",failed
27781,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype626-to_dtype626],"AssertionError: assert Int64Dtype() == dtype('int64')
 +  where Int64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int64.dtype",failed
27784,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype627-to_dtype627],"AssertionError: assert UInt64Dtype() == dtype('int64')
 +  where UInt64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt64.dtype",failed
27785,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype628-to_dtype628],"AssertionError: assert Int32Dtype() == dtype('int64')
 +  where Int32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int32.dtype",failed
27786,tests.integ.modin.series.test_aggregate,test_min_max_with_mixed_str_numeric_type,TypeError: '>=' not supported between instances of 'int' and 'str',failed
27788,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype629-to_dtype629],"AssertionError: assert UInt32Dtype() == dtype('int64')
 +  where UInt32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt32.dtype",failed
27790,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype630-to_dtype630],"AssertionError: assert Int16Dtype() == dtype('int64')
 +  where Int16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int16.dtype",failed
27791,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype631-to_dtype631],"AssertionError: assert UInt16Dtype() == dtype('int64')
 +  where UInt16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt16.dtype",failed
27794,tests.integ.modin.io.test_read_csv,test_read_csv_index_col_negative[index_col3-ValueError-Duplicate columns in index_col are not allowed.],"AssertionError: Regex pattern did not match.
 Regex: 'Duplicate columns in index_col are not allowed.'
 Input: 'list.remove(x): x not in list'",failed
27795,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype632-to_dtype632],"AssertionError: assert Int8Dtype() == dtype('int64')
 +  where Int8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int8.dtype",failed
27797,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype633-to_dtype633],"AssertionError: assert UInt8Dtype() == dtype('int64')
 +  where UInt8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt8.dtype",failed
27798,tests.integ.modin.io.test_to_csv,test_to_csv_unsupported_params_error[kwargs3],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_9TRDTDQWAX',failed
27801,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype634-to_dtype634],"AssertionError: assert string[python] == dtype('O')
 +  where string[python] = 0    0\n1    1\n2    2\n3    3\ndtype: string.dtype",failed
27802,tests.integ.modin.index.test_reindex,test_fill_method_non_monotonic_new_index[100-backfill],AssertionError: exception type <class 'AttributeError'> does not match with expected type <class 'ValueError'>,failed
27804,tests.integ.modin.io.test_read_csv,test_read_csv_index_col_negative[index_col4-ValueError-Duplicate columns in index_col are not allowed.],"AssertionError: Regex pattern did not match.
 Regex: 'Duplicate columns in index_col are not allowed.'
 Input: 'list.remove(x): x not in list'",failed
27813,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype639-uint64],"AssertionError: assert dtype('uint64') == dtype('int64')
 +  where dtype('uint64') = 0    0\n1    1\n2    2\n3    3\ndtype: uint64.dtype",failed
27815,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype640-int32],"AssertionError: assert dtype('int32') == dtype('int64')
 +  where dtype('int32') = 0    0\n1    1\n2    2\n3    3\ndtype: int32.dtype",failed
27816,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype641-uint32],"AssertionError: assert dtype('uint32') == dtype('int64')
 +  where dtype('uint32') = 0    0\n1    1\n2    2\n3    3\ndtype: uint32.dtype",failed
27817,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype642-int16],"AssertionError: assert dtype('int16') == dtype('int64')
 +  where dtype('int16') = 0    0\n1    1\n2    2\n3    3\ndtype: int16.dtype",failed
27820,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype643-uint16],"AssertionError: assert dtype('uint16') == dtype('int64')
 +  where dtype('uint16') = 0    0\n1    1\n2    2\n3    3\ndtype: uint16.dtype",failed
27822,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype644-int8],"AssertionError: assert dtype('int8') == dtype('int64')
 +  where dtype('int8') = 0    0\n1    1\n2    2\n3    3\ndtype: int8.dtype",failed
27823,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype645-uint8],"AssertionError: assert dtype('uint8') == dtype('int64')
 +  where dtype('uint8') = 0    0\n1    1\n2    2\n3    3\ndtype: uint8.dtype",failed
27824,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype646-float32],"AssertionError: assert dtype('float32') == dtype('float64')
 +  where dtype('float32') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float32.dtype",failed
27825,tests.integ.modin.io.test_to_csv,test_to_csv_unsupported_params_error[kwargs4],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_M1CBQS6KGK',failed
27826,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype647-float16],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
27827,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype648-float16],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
27830,tests.integ.modin.index.test_reindex,test_fill_method_non_monotonic_new_index[100-pad],AssertionError: exception type <class 'AttributeError'> does not match with expected type <class 'ValueError'>,failed
27833,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype652-boolean],"AssertionError: assert BooleanDtype == dtype('bool')
 +  where BooleanDtype = 0    False\n1     True\n2     True\n3     True\ndtype: boolean.dtype",failed
27835,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype653-to_dtype653],"AssertionError: assert Float32Dtype() == dtype('float64')
 +  where Float32Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float32.dtype",failed
27836,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype654-to_dtype654],"AssertionError: assert Float64Dtype() == dtype('float64')
 +  where Float64Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float64.dtype",failed
27838,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype655-to_dtype655],"AssertionError: assert Int64Dtype() == dtype('int64')
 +  where Int64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int64.dtype",failed
27839,tests.integ.modin.series.test_aggregate,test_duplicate_named_agg_funcs_succeeds,"AssertionError: One of the passed functions has an invalid type: <class 'NoneType'>: None, only callable or string is acceptable.",failed
27840,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype656-to_dtype656],"AssertionError: assert UInt64Dtype() == dtype('int64')
 +  where UInt64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt64.dtype",failed
27842,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype657-to_dtype657],"AssertionError: assert Int32Dtype() == dtype('int64')
 +  where Int32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int32.dtype",failed
27843,tests.integ.modin.series.test_aggregate,test_agg_invalid_dtype_raise[data0-Array-sum],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
27844,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype658-to_dtype658],"AssertionError: assert UInt32Dtype() == dtype('int64')
 +  where UInt32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt32.dtype",failed
27846,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype659-to_dtype659],"AssertionError: assert Int16Dtype() == dtype('int64')
 +  where Int16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int16.dtype",failed
27848,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype660-to_dtype660],"AssertionError: assert UInt16Dtype() == dtype('int64')
 +  where UInt16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt16.dtype",failed
27849,tests.integ.modin.io.test_to_csv,test_to_csv_unsupported_params_error[kwargs5],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_LOMMMP6ZMW',failed
27850,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype661-to_dtype661],"AssertionError: assert Int8Dtype() == dtype('int64')
 +  where Int8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int8.dtype",failed
27852,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype662-to_dtype662],"AssertionError: assert UInt8Dtype() == dtype('int64')
 +  where UInt8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt8.dtype",failed
27854,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype663-to_dtype663],"AssertionError: assert string[python] == dtype('O')
 +  where string[python] = 0    0\n1    1\n2    2\n3    3\ndtype: string.dtype",failed
27855,tests.integ.modin.resample.test_resample_negative,test_resample_invalid_index_type_negative[index_col0],"AssertionError: Regex pattern did not match.
 Regex: ""Only valid with DatetimeIndex, but got an instance of 'MultiIndex'""
 Input: ""Only valid with DatetimeIndex, TimedeltaIndex or PeriodIndex, but got an instance of 'MultiIndex'""",failed
27858,tests.integ.modin.index.test_reindex,test_fill_method_non_monotonic_new_index[100-ffill],AssertionError: exception type <class 'AttributeError'> does not match with expected type <class 'ValueError'>,failed
27864,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype668-uint64],"AssertionError: assert dtype('uint64') == dtype('int64')
 +  where dtype('uint64') = 0    0\n1    1\n2    2\n3    3\ndtype: uint64.dtype",failed
27866,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype669-int32],"AssertionError: assert dtype('int32') == dtype('int64')
 +  where dtype('int32') = 0    0\n1    1\n2    2\n3    3\ndtype: int32.dtype",failed
27867,tests.integ.modin.series.test_aggregate,test_agg_invalid_dtype_raise[data0-Array-std],TypeError: setting an array element with a sequence.,failed
27868,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype670-uint32],"AssertionError: assert dtype('uint32') == dtype('int64')
 +  where dtype('uint32') = 0    0\n1    1\n2    2\n3    3\ndtype: uint32.dtype",failed
27870,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype671-int16],"AssertionError: assert dtype('int16') == dtype('int64')
 +  where dtype('int16') = 0    0\n1    1\n2    2\n3    3\ndtype: int16.dtype",failed
27871,tests.integ.modin.resample.test_resample_negative,test_resample_invalid_index_type_negative[index_col1],ValueError: MultiIndex has no single backing array. Use 'MultiIndex.to_numpy()' to get a NumPy array of tuples.,failed
27873,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype672-uint16],"AssertionError: assert dtype('uint16') == dtype('int64')
 +  where dtype('uint16') = 0    0\n1    1\n2    2\n3    3\ndtype: uint16.dtype",failed
27874,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype673-int8],"AssertionError: assert dtype('int8') == dtype('int64')
 +  where dtype('int8') = 0    0\n1    1\n2    2\n3    3\ndtype: int8.dtype",failed
27877,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype674-uint8],"AssertionError: assert dtype('uint8') == dtype('int64')
 +  where dtype('uint8') = 0    0\n1    1\n2    2\n3    3\ndtype: uint8.dtype",failed
27879,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype675-float32],"AssertionError: assert dtype('float32') == dtype('float64')
 +  where dtype('float32') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float32.dtype",failed
27880,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype676-float16],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
27881,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype677-float16],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
27887,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype681-boolean],"AssertionError: assert BooleanDtype == dtype('bool')
 +  where BooleanDtype = 0    False\n1     True\n2     True\n3     True\ndtype: boolean.dtype",failed
27888,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype682-to_dtype682],"AssertionError: assert Float32Dtype() == dtype('float64')
 +  where Float32Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float32.dtype",failed
27890,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype683-to_dtype683],"AssertionError: assert Float64Dtype() == dtype('float64')
 +  where Float64Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float64.dtype",failed
27891,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype684-to_dtype684],"AssertionError: assert Int64Dtype() == dtype('int64')
 +  where Int64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int64.dtype",failed
27892,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype685-to_dtype685],"AssertionError: assert UInt64Dtype() == dtype('int64')
 +  where UInt64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt64.dtype",failed
27893,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype686-to_dtype686],"AssertionError: assert Int32Dtype() == dtype('int64')
 +  where Int32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int32.dtype",failed
27894,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype687-to_dtype687],"AssertionError: assert UInt32Dtype() == dtype('int64')
 +  where UInt32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt32.dtype",failed
27895,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype688-to_dtype688],"AssertionError: assert Int16Dtype() == dtype('int64')
 +  where Int16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int16.dtype",failed
27896,tests.integ.modin.resample.test_resample_negative,test_resample_unsupported_freq_negative[B],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
27897,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype689-to_dtype689],"AssertionError: assert UInt16Dtype() == dtype('int64')
 +  where UInt16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt16.dtype",failed
27900,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype690-to_dtype690],"AssertionError: assert Int8Dtype() == dtype('int64')
 +  where Int8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int8.dtype",failed
27901,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype691-to_dtype691],"AssertionError: assert UInt8Dtype() == dtype('int64')
 +  where UInt8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt8.dtype",failed
27902,tests.integ.modin.resample.test_resample_negative,test_resample_unsupported_freq_negative[BME],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
27903,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype692-to_dtype692],"AssertionError: assert string[python] == dtype('O')
 +  where string[python] = 0    0\n1    1\n2    2\n3    3\ndtype: string.dtype",failed
27908,tests.integ.modin.resample.test_resample_negative,test_resample_unsupported_freq_negative[BMS],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
27910,tests.integ.modin.io.test_to_csv,test_to_csv_unsupported_params_error[kwargs6],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_OQYK5AEYIE',failed
27913,tests.integ.modin.resample.test_resample_negative,test_resample_unsupported_freq_negative[BQE],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
27914,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype697-uint64],"AssertionError: assert dtype('uint64') == dtype('int64')
 +  where dtype('uint64') = 0    0\n1    1\n2    2\n3    3\ndtype: uint64.dtype",failed
27915,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype698-int32],"AssertionError: assert dtype('int32') == dtype('int64')
 +  where dtype('int32') = 0    0\n1    1\n2    2\n3    3\ndtype: int32.dtype",failed
27918,tests.integ.modin.resample.test_resample_negative,test_resample_unsupported_freq_negative[BQS],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
27919,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype699-uint32],"AssertionError: assert dtype('uint32') == dtype('int64')
 +  where dtype('uint32') = 0    0\n1    1\n2    2\n3    3\ndtype: uint32.dtype",failed
27920,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[America/Los_Angeles-from_dtype16],"AssertionError: assert datetime64[ns, America/Los_Angeles] == datetime64[ns, UTC-08:00]
 +  where datetime64[ns, America/Los_Angeles] = 0             1969-12-31 16:00:00-08:00\n1   1969-12-31 16:00:00.000000001-08:00\n2   1969-12-31 16:00:00.000000002-08:00\n3   1969-12-31 16:00:00.000000003-08:00\ndtype: datetime64[ns, America/Los_Angeles].dtype
 +  and   datetime64[ns, UTC-08:00] = DatetimeTZDtype(tz='UTC-08:00')",failed
27922,tests.integ.modin.resample.test_resample_negative,test_resample_unsupported_freq_negative[BYE],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
27923,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[America/Los_Angeles-from_dtype17],"AssertionError: assert datetime64[ns, America/Los_Angeles] == datetime64[ns, UTC-08:00]
 +  where datetime64[ns, America/Los_Angeles] = 0             1969-12-31 16:00:00-08:00\n1   1969-12-31 16:00:00.000000001-08:00\n2   1969-12-31 16:00:00.000000002-08:00\n3   1969-12-31 16:00:00.000000003-08:00\ndtype: datetime64[ns, America/Los_Angeles].dtype
 +  and   datetime64[ns, UTC-08:00] = DatetimeTZDtype(tz='UTC-08:00')",failed
27924,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[America/Los_Angeles-from_dtype18],"AssertionError: assert datetime64[ns, America/Los_Angeles] == datetime64[ns, UTC-08:00]
 +  where datetime64[ns, America/Los_Angeles] = 0             1969-12-31 16:00:00-08:00\n1   1969-12-31 16:00:00.000000001-08:00\n2   1969-12-31 16:00:00.000000002-08:00\n3   1969-12-31 16:00:00.000000003-08:00\ndtype: datetime64[ns, America/Los_Angeles].dtype
 +  and   datetime64[ns, UTC-08:00] = DatetimeTZDtype(tz='UTC-08:00')",failed
27927,tests.integ.modin.resample.test_resample_negative,test_resample_unsupported_freq_negative[BYS],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
27928,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[America/Los_Angeles-from_dtype19],"AssertionError: assert datetime64[ns, America/Los_Angeles] == datetime64[ns, UTC-08:00]
 +  where datetime64[ns, America/Los_Angeles] = 0             1969-12-31 16:00:00-08:00\n1   1969-12-31 16:00:00.000000001-08:00\n2   1969-12-31 16:00:00.000000002-08:00\n3   1969-12-31 16:00:00.000000003-08:00\ndtype: datetime64[ns, America/Los_Angeles].dtype
 +  and   datetime64[ns, UTC-08:00] = DatetimeTZDtype(tz='UTC-08:00')",failed
27929,tests.integ.modin.index.test_reindex,test_ordered_index_unordered_new_index,AttributeError: 'DataFrame' object has no attribute 'data_column_snowflake_quoted_identifiers',failed
27930,tests.integ.modin.io.test_to_csv,test_to_csv_unsupported_params_error[kwargs7],OSError: Cannot save file into a non-existent directory: '@SNOWPARK_TEMP_STAGE_NXSSNYFN7C',failed
27931,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[America/Los_Angeles-from_dtype20],"AssertionError: assert datetime64[ns, America/Los_Angeles] == datetime64[ns, UTC-08:00]
 +  where datetime64[ns, America/Los_Angeles] = 0             1969-12-31 16:00:00-08:00\n1   1969-12-31 16:00:00.000000001-08:00\n2   1969-12-31 16:00:00.000000002-08:00\n3   1969-12-31 16:00:00.000000003-08:00\ndtype: datetime64[ns, America/Los_Angeles].dtype
 +  and   datetime64[ns, UTC-08:00] = DatetimeTZDtype(tz='UTC-08:00')",failed
27933,tests.integ.modin.resample.test_resample_negative,test_resample_unsupported_freq_negative[C],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
27935,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[America/Los_Angeles-from_dtype21],"AssertionError: assert datetime64[ns, America/Los_Angeles] == datetime64[ns, UTC-08:00]
 +  where datetime64[ns, America/Los_Angeles] = 0             1969-12-31 16:00:00-08:00\n1   1969-12-31 16:00:00.000000001-08:00\n2   1969-12-31 16:00:00.000000002-08:00\n3   1969-12-31 16:00:00.000000003-08:00\ndtype: datetime64[ns, America/Los_Angeles].dtype
 +  and   datetime64[ns, UTC-08:00] = DatetimeTZDtype(tz='UTC-08:00')",failed
27937,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[America/Los_Angeles-from_dtype22],"AssertionError: assert datetime64[ns, America/Los_Angeles] == datetime64[ns, UTC-08:00]
 +  where datetime64[ns, America/Los_Angeles] = 0             1969-12-31 16:00:00-08:00\n1   1969-12-31 16:00:00.000000001-08:00\n2   1969-12-31 16:00:00.000000002-08:00\n3   1969-12-31 16:00:00.000000003-08:00\ndtype: datetime64[ns, America/Los_Angeles].dtype
 +  and   datetime64[ns, UTC-08:00] = DatetimeTZDtype(tz='UTC-08:00')",failed
27938,tests.integ.modin.resample.test_resample_negative,test_resample_unsupported_freq_negative[CBME],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
27939,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[America/Los_Angeles-from_dtype23],"AssertionError: assert datetime64[ns, America/Los_Angeles] == datetime64[ns, UTC-08:00]
 +  where datetime64[ns, America/Los_Angeles] = 0             1969-12-31 16:00:00-08:00\n1   1969-12-31 16:00:00.000000001-08:00\n2   1969-12-31 16:00:00.000000002-08:00\n3   1969-12-31 16:00:00.000000003-08:00\ndtype: datetime64[ns, America/Los_Angeles].dtype
 +  and   datetime64[ns, UTC-08:00] = DatetimeTZDtype(tz='UTC-08:00')",failed
27941,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[America/Los_Angeles-from_dtype24],"AssertionError: assert datetime64[ns, America/Los_Angeles] == datetime64[ns, UTC-08:00]
 +  where datetime64[ns, America/Los_Angeles] = 0             1969-12-31 16:00:00-08:00\n1   1969-12-31 16:00:00.000000001-08:00\n2   1969-12-31 16:00:00.000000002-08:00\n3   1969-12-31 16:00:00.000000003-08:00\ndtype: datetime64[ns, America/Los_Angeles].dtype
 +  and   datetime64[ns, UTC-08:00] = DatetimeTZDtype(tz='UTC-08:00')",failed
27944,tests.integ.modin.resample.test_resample_negative,test_resample_unsupported_freq_negative[CBMS],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
27945,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[America/Los_Angeles-from_dtype25],pandas._libs.tslibs.parsing.DateParseError: day is out of range for month: 0,failed
27946,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[America/Los_Angeles-int],"AssertionError: assert datetime64[ns, America/Los_Angeles] == datetime64[ns, UTC-08:00]
 +  where datetime64[ns, America/Los_Angeles] = 0             1969-12-31 16:00:00-08:00\n1   1969-12-31 16:00:00.000000001-08:00\n2   1969-12-31 16:00:00.000000002-08:00\n3   1969-12-31 16:00:00.000000003-08:00\ndtype: datetime64[ns, America/Los_Angeles].dtype
 +  and   datetime64[ns, UTC-08:00] = DatetimeTZDtype(tz='UTC-08:00')",failed
27947,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[America/Los_Angeles-float],"AssertionError: assert datetime64[ns, America/Los_Angeles] == datetime64[ns, UTC-08:00]
 +  where datetime64[ns, America/Los_Angeles] = 0             1969-12-31 16:00:00-08:00\n1   1969-12-31 16:00:00.000000001-08:00\n2   1969-12-31 16:00:00.000000002-08:00\n3   1969-12-31 16:00:00.000000003-08:00\ndtype: datetime64[ns, America/Los_Angeles].dtype
 +  and   datetime64[ns, UTC-08:00] = DatetimeTZDtype(tz='UTC-08:00')",failed
27948,tests.integ.modin.series.test_aggregate,test_agg_invalid_dtype_raise[data0-Array-var],TypeError: setting an array element with a sequence.,failed
27951,tests.integ.modin.resample.test_resample_negative,test_resample_unsupported_freq_negative[SME],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
27954,tests.integ.modin.resample.test_resample_negative,test_resample_unsupported_freq_negative[SMS],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
27955,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[America/Los_Angeles-str],pandas._libs.tslibs.parsing.DateParseError: day is out of range for month: 0,failed
27957,tests.integ.modin.resample.test_resample_negative,test_resample_unsupported_freq_negative[bh],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
27960,tests.integ.modin.resample.test_resample_negative,test_resample_unsupported_freq_negative[cbh],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
27962,tests.integ.modin.series.test_aggregate,test_agg_invalid_dtype_raise[data0-Array-mean],"TypeError: Could not convert [list([1, 2, 10, 20])] to numeric",failed
27970,tests.integ.modin.series.test_astype,test_astype_from_DatetimeTZDtype_to_datetime64[UTC],TypeError: Cannot use .astype to convert from timezone-aware dtype to timezone-naive dtype. Use obj.tz_localize(None) or obj.tz_convert('UTC').tz_localize(None) instead.,failed
27972,tests.integ.modin.series.test_astype,test_astype_from_DatetimeTZDtype_to_datetime64[Asia/Tokyo],TypeError: Cannot use .astype to convert from timezone-aware dtype to timezone-naive dtype. Use obj.tz_localize(None) or obj.tz_convert('UTC').tz_localize(None) instead.,failed
27976,tests.integ.modin.series.test_astype,test_astype_from_DatetimeTZDtype_to_datetime64[America/Los_Angeles],TypeError: Cannot use .astype to convert from timezone-aware dtype to timezone-naive dtype. Use obj.tz_localize(None) or obj.tz_convert('UTC').tz_localize(None) instead.,failed
27978,tests.integ.modin.series.test_aggregate,test_agg_invalid_dtype_raise[data0-Array-median],TypeError: Cannot convert [[list([1]) list([2]) list([10]) list([20])]] to numeric,failed
27981,tests.integ.modin.series.test_astype,test_astype_uint,"AssertionError: assert dtype('uint8') == 'int64'
 +  where dtype('uint8') = 0    255\n1      0\n2      1\ndtype: uint8.dtype",failed
27983,tests.integ.modin.series.test_aggregate,test_agg_invalid_dtype_raise[data1-Array-sum],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
27986,tests.integ.modin.series.test_astype,test_astype_none,TypeError: boolean value of NA is ambiguous,failed
27988,tests.integ.modin.io.test_to_dict,test_series_to_dict[index0-into2],"AssertionError: assert <class 'collections.defaultdict'> == <class 'dict'>
 +  where <class 'collections.defaultdict'> = type(defaultdict(<class 'int'>, {'a': 1.0, 'b': 2.0, 'c': nan, 'd': 4.0}))
 +  and   <class 'dict'> = type({'a': 1.0, 'b': 2.0, 'c': nan, 'd': 4.0})",failed
27990,tests.integ.modin.series.test_astype,test_python_date_and_time[seed0-int64],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.date'""",failed
27992,tests.integ.modin.io.test_to_dict,test_series_to_dict[index0-into3],"AssertionError: assert <class 'collections.defaultdict'> == <class 'dict'>
 +  where <class 'collections.defaultdict'> = type(defaultdict(<class 'list'>, {'a': 1.0, 'b': 2.0, 'c': nan, 'd': 4.0}))
 +  and   <class 'dict'> = type({'a': 1.0, 'b': 2.0, 'c': nan, 'd': 4.0})",failed
27998,tests.integ.modin.series.test_aggregate,test_agg_invalid_dtype_raise[data1-Array-std],TypeError: setting an array element with a sequence.,failed
28002,tests.integ.modin.io.test_to_dict,test_series_to_dict[index1-into2],"AssertionError: assert <class 'collections.defaultdict'> == <class 'dict'>
 +  where <class 'collections.defaultdict'> = type(defaultdict(<class 'int'>, {(1, 'row1'): 1.0, (1, 'row2'): 2.0, (2, 'row1'): nan, (2, 'row2'): 4.0}))
 +  and   <class 'dict'> = type({(1, 'row1'): 1.0, (1, 'row2'): 2.0, (2, 'row1'): nan, (2, 'row2'): 4.0})",failed
28003,tests.integ.modin.series.test_astype,test_python_date_and_time[seed0-uint64],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.date'""",failed
28005,tests.integ.modin.io.test_to_dict,test_series_to_dict[index1-into3],"AssertionError: assert <class 'collections.defaultdict'> == <class 'dict'>
 +  where <class 'collections.defaultdict'> = type(defaultdict(<class 'list'>, {(1, 'row1'): 1.0, (1, 'row2'): 2.0, (2, 'row1'): nan, (2, 'row2'): 4.0}))
 +  and   <class 'dict'> = type({(1, 'row1'): 1.0, (1, 'row2'): 2.0, (2, 'row1'): nan, (2, 'row2'): 4.0})",failed
28008,tests.integ.modin.series.test_astype,test_python_date_and_time[seed0-int32],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.date'""",failed
28011,tests.integ.modin.series.test_astype,test_python_date_and_time[seed0-uint32],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.date'""",failed
28014,tests.integ.modin.series.test_astype,test_python_date_and_time[seed0-int16],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.date'""",failed
28019,tests.integ.modin.series.test_astype,test_python_date_and_time[seed0-uint16],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.date'""",failed
28029,tests.integ.modin.series.test_astype,test_python_date_and_time[seed0-int8],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.date'""",failed
28030,tests.integ.modin.series.test_aggregate,test_agg_invalid_dtype_raise[data1-Array-var],TypeError: setting an array element with a sequence.,failed
28034,tests.integ.modin.series.test_astype,test_python_date_and_time[seed0-uint8],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.date'""",failed
28041,tests.integ.modin.series.test_astype,test_python_date_and_time[seed0-float32],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""float() argument must be a string or a real number, not 'datetime.date'""",failed
28046,tests.integ.modin.series.test_aggregate,test_agg_invalid_dtype_raise[data1-Array-mean],"TypeError: Could not convert [list([1, 2, 10, 20])] to numeric",failed
28048,tests.integ.modin.series.test_astype,test_python_date_and_time[seed0-float160],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""float() argument must be a string or a real number, not 'datetime.date'""",failed
28051,tests.integ.modin.series.test_astype,test_python_date_and_time[seed0-float161],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""float() argument must be a string or a real number, not 'datetime.date'""",failed
28059,tests.integ.modin.series.test_aggregate,test_agg_invalid_dtype_raise[data1-Array-median],TypeError: Cannot convert [[list([1]) list([2]) list([10]) list([20])]] to numeric,failed
28065,tests.integ.modin.series.test_astype,test_python_date_and_time[seed0-float64],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""float() argument must be a string or a real number, not 'datetime.date'""",failed
28073,tests.integ.modin.test_ordered_dataframe,test_join_with_column_conflict[outer],reason: SNOW-1321662 - outer join issue,xfailed
28077,tests.integ.modin.series.test_astype,test_python_date_and_time[seed0-boolean],TypeError: Need to pass bool-like values,failed
28082,tests.integ.modin.series.test_astype,test_python_date_and_time[seed0-to_dtype15],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""float() argument must be a string or a real number, not 'datetime.date'""",failed
28086,tests.integ.modin.series.test_astype,test_python_date_and_time[seed0-to_dtype16],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""float() argument must be a string or a real number, not 'datetime.date'""",failed
28100,tests.integ.modin.series.test_aggregate,test_agg_invalid_dtype_raise[data2-Timestamp-sum],TypeError: 'DatetimeArray' with dtype datetime64[ns] does not support reduction 'sum',failed
28103,tests.integ.modin.series.test_astype,test_python_date_and_time[seed0-to_dtype17],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.date'""",failed
28104,tests.integ.modin.series.test_aggregate,test_agg_invalid_dtype_raise[data2-Timestamp-std],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
28111,tests.integ.modin.series.test_astype,test_python_date_and_time[seed0-to_dtype18],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.date'""",failed
28115,tests.integ.modin.series.test_astype,test_python_date_and_time[seed0-to_dtype19],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.date'""",failed
28116,tests.integ.modin.series.test_astype,test_python_date_and_time[seed0-to_dtype20],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.date'""",failed
28119,tests.integ.modin.series.test_aggregate,test_agg_invalid_dtype_raise[data2-Timestamp-var],TypeError: 'DatetimeArray' with dtype datetime64[ns] does not support reduction 'var',failed
28124,tests.integ.modin.series.test_aggregate,test_agg_invalid_dtype_raise[data2-Timestamp-mean],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
28126,tests.integ.modin.series.test_astype,test_python_date_and_time[seed0-to_dtype21],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.date'""",failed
28129,tests.integ.modin.series.test_aggregate,test_agg_invalid_dtype_raise[data2-Timestamp-median],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
28139,tests.integ.modin.series.test_aggregate,test_agg_invalid_dtype_raise[data3-Variant-sum],TypeError: unsupported operand type(s) for +: 'int' and 'str',failed
28146,tests.integ.modin.series.test_astype,test_python_date_and_time[seed0-to_dtype22],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.date'""",failed
28149,tests.integ.modin.series.test_astype,test_python_date_and_time[seed0-to_dtype23],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.date'""",failed
28153,tests.integ.modin.series.test_aggregate,test_agg_invalid_dtype_raise[data3-Variant-std],TypeError: could not convert string to float: 'A',failed
28155,tests.integ.modin.series.test_astype,test_python_date_and_time[seed0-to_dtype24],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.date'""",failed
28157,tests.integ.modin.series.test_astype,test_python_date_and_time[seed0-to_dtype25],"AssertionError: assert string[python] == dtype('O')
 +  where string[python] = 0    2011-01-01\n1    2011-01-01\n2    2011-01-01\ndtype: string.dtype",failed
28160,tests.integ.modin.series.test_astype,test_python_date_and_time[seed0-int],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.date'""",failed
28164,tests.integ.modin.series.test_astype,test_python_date_and_time[seed0-float],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""float() argument must be a string or a real number, not 'datetime.date'""",failed
28171,tests.integ.modin.io.test_read_json,test_read_json_basic,"ValueError: If using all scalar values, you must pass an index",failed
28172,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype700-int16],"AssertionError: assert dtype('int16') == dtype('int64')
 +  where dtype('int16') = 0    0\n1    1\n2    2\n3    3\ndtype: int16.dtype",failed
28173,tests.integ.modin.series.test_astype,test_python_date_and_time[seed1-int64],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.time'""",failed
28176,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype701-uint16],"AssertionError: assert dtype('uint16') == dtype('int64')
 +  where dtype('uint16') = 0    0\n1    1\n2    2\n3    3\ndtype: uint16.dtype",failed
28177,tests.integ.modin.io.test_read_json,test_read_json_single_ndjson_file,ValueError: Trailing data,failed
28179,tests.integ.modin.series.test_astype,test_python_date_and_time[seed1-uint64],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.time'""",failed
28180,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype702-int8],"AssertionError: assert dtype('int8') == dtype('int64')
 +  where dtype('int8') = 0    0\n1    1\n2    2\n3    3\ndtype: int8.dtype",failed
28183,tests.integ.modin.series.test_aggregate,test_agg_invalid_dtype_raise[data3-Variant-var],TypeError: could not convert string to float: 'A',failed
28184,tests.integ.modin.io.test_read_json,test_read_json_ndjson_different_keys[ndjsondata0],ValueError: Trailing data,failed
28185,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype703-uint8],"AssertionError: assert dtype('uint8') == dtype('int64')
 +  where dtype('uint8') = 0    0\n1    1\n2    2\n3    3\ndtype: uint8.dtype",failed
28186,tests.integ.modin.series.test_astype,test_python_date_and_time[seed1-int32],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.time'""",failed
28188,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype704-float32],"AssertionError: assert dtype('float32') == dtype('float64')
 +  where dtype('float32') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float32.dtype",failed
28189,tests.integ.modin.io.test_read_json,test_read_json_ndjson_different_keys[ndjsondata1],ValueError: Trailing data,failed
28192,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype705-float16],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
28193,tests.integ.modin.series.test_astype,test_python_date_and_time[seed1-uint32],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.time'""",failed
28196,tests.integ.modin.io.test_read_json,test_read_json_ndjson_different_keys[ndjsondata2],ValueError: Trailing data,failed
28197,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype706-float16],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
28199,tests.integ.modin.io.test_read_json,test_read_json_staged_file,FileNotFoundError: File @SNOWPARK_TEMP_STAGE_X63MVRPEJL/test_read_json.json does not exist,failed
28200,tests.integ.modin.io.test_read_json,test_read_json_staged_folder,ValueError: Expected object or value,failed
28201,tests.integ.modin.io.test_read_json,test_read_json_empty_file,SNOW-1336174: Remove xfail by handling empty JSON files,xfailed
28202,tests.integ.modin.io.test_read_json,test_read_json_malformed_file_negative,ValueError: Expected object or value,failed
28203,tests.integ.modin.series.test_aggregate,test_agg_invalid_dtype_raise[data3-Variant-mean],TypeError: unsupported operand type(s) for +: 'int' and 'str',failed
28204,tests.integ.modin.series.test_aggregate,test_agg_invalid_dtype_raise[data3-Variant-median],TypeError: could not convert string to float: 'A',failed
28205,tests.integ.modin.series.test_aggregate,test_agg_invalid_min_max_dtype_raise[data0-Array-min],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
28211,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype710-boolean],"AssertionError: assert BooleanDtype == dtype('bool')
 +  where BooleanDtype = 0    False\n1     True\n2     True\n3     True\ndtype: boolean.dtype",failed
28212,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype711-to_dtype711],"AssertionError: assert Float32Dtype() == dtype('float64')
 +  where Float32Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float32.dtype",failed
28213,tests.integ.modin.series.test_astype,test_python_date_and_time[seed1-int16],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.time'""",failed
28214,tests.integ.modin.series.test_astype,test_python_date_and_time[seed1-uint16],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.time'""",failed
28215,tests.integ.modin.series.test_astype,test_python_date_and_time[seed1-int8],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.time'""",failed
28221,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype712-to_dtype712],"AssertionError: assert Float64Dtype() == dtype('float64')
 +  where Float64Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float64.dtype",failed
28222,tests.integ.modin.series.test_astype,test_python_date_and_time[seed1-uint8],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.time'""",failed
28223,tests.integ.modin.io.test_read_json,test_read_json_unimplemented_parameter_negative[orient-records],FileNotFoundError: File file.json does not exist,failed
28224,tests.integ.modin.series.test_aggregate,test_agg_invalid_min_max_dtype_raise[data0-Array-max],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
28225,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype713-to_dtype713],"AssertionError: assert Int64Dtype() == dtype('int64')
 +  where Int64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int64.dtype",failed
28226,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype714-to_dtype714],"AssertionError: assert UInt64Dtype() == dtype('int64')
 +  where UInt64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt64.dtype",failed
28227,tests.integ.modin.series.test_astype,test_python_date_and_time[seed1-float32],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""float() argument must be a string or a real number, not 'datetime.time'""",failed
28229,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype715-to_dtype715],"AssertionError: assert Int32Dtype() == dtype('int64')
 +  where Int32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int32.dtype",failed
28230,tests.integ.modin.io.test_to_pandas,test_to_pandas_with_attrs,AttributeError: can't set attribute,failed
28231,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype716-to_dtype716],"AssertionError: assert UInt32Dtype() == dtype('int64')
 +  where UInt32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt32.dtype",failed
28233,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype717-to_dtype717],"AssertionError: assert Int16Dtype() == dtype('int64')
 +  where Int16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int16.dtype",failed
28236,tests.integ.modin.series.test_astype,test_python_date_and_time[seed1-float160],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""float() argument must be a string or a real number, not 'datetime.time'""",failed
28237,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype718-to_dtype718],"AssertionError: assert UInt16Dtype() == dtype('int64')
 +  where UInt16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt16.dtype",failed
28239,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype719-to_dtype719],"AssertionError: assert Int8Dtype() == dtype('int64')
 +  where Int8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int8.dtype",failed
28240,tests.integ.modin.series.test_astype,test_python_date_and_time[seed1-float161],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""float() argument must be a string or a real number, not 'datetime.time'""",failed
28241,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype720-to_dtype720],"AssertionError: assert UInt8Dtype() == dtype('int64')
 +  where UInt8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt8.dtype",failed
28242,tests.integ.modin.series.test_astype,test_astype_basic[int8-float32],"AssertionError: assert dtype('float32') == dtype('float64')
 +  where dtype('float32') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float32.dtype",failed
28243,tests.integ.modin.series.test_astype,test_astype_basic[int8-float160],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
28245,tests.integ.modin.series.test_astype,test_python_date_and_time[seed1-float64],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""float() argument must be a string or a real number, not 'datetime.time'""",failed
28246,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype721-to_dtype721],"AssertionError: assert string[python] == dtype('O')
 +  where string[python] = 0    0\n1    1\n2    2\n3    3\ndtype: string.dtype",failed
28248,tests.integ.modin.series.test_astype,test_astype_basic[int8-float161],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
28254,tests.integ.modin.series.test_astype,test_python_date_and_time[seed1-datetime64[ns]],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""<class 'datetime.time'> is not convertible to datetime, at position 0""",failed
28258,tests.integ.modin.series.test_aggregate,test_agg_invalid_min_max_dtype_raise[data1-Object-min],TypeError: '<=' not supported between instances of 'dict' and 'dict',failed
28262,tests.integ.modin.series.test_astype,test_python_date_and_time[seed1-boolean],TypeError: Need to pass bool-like values,failed
28266,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype726-uint64],"AssertionError: assert dtype('uint64') == dtype('int64')
 +  where dtype('uint64') = 0    0\n1    1\n2    2\n3    3\ndtype: uint64.dtype",failed
28267,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype727-int32],"AssertionError: assert dtype('int32') == dtype('int64')
 +  where dtype('int32') = 0    0\n1    1\n2    2\n3    3\ndtype: int32.dtype",failed
28269,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype728-uint32],"AssertionError: assert dtype('uint32') == dtype('int64')
 +  where dtype('uint32') = 0    0\n1    1\n2    2\n3    3\ndtype: uint32.dtype",failed
28270,tests.integ.modin.series.test_aggregate,test_agg_invalid_min_max_dtype_raise[data1-Object-max],TypeError: '>=' not supported between instances of 'dict' and 'dict',failed
28271,tests.integ.modin.series.test_astype,test_python_date_and_time[seed1-to_dtype15],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""float() argument must be a string or a real number, not 'datetime.time'""",failed
28272,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype729-int16],"AssertionError: assert dtype('int16') == dtype('int64')
 +  where dtype('int16') = 0    0\n1    1\n2    2\n3    3\ndtype: int16.dtype",failed
28275,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype730-uint16],"AssertionError: assert dtype('uint16') == dtype('int64')
 +  where dtype('uint16') = 0    0\n1    1\n2    2\n3    3\ndtype: uint16.dtype",failed
28278,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype731-int8],"AssertionError: assert dtype('int8') == dtype('int64')
 +  where dtype('int8') = 0    0\n1    1\n2    2\n3    3\ndtype: int8.dtype",failed
28279,tests.integ.modin.series.test_astype,test_python_date_and_time[seed1-to_dtype16],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""float() argument must be a string or a real number, not 'datetime.time'""",failed
28280,tests.integ.modin.series.test_aggregate,test_2_tuple_named_agg_errors_for_series[2-tuple],AssertionError: exception type <class 'AssertionError'> does not match with expected type <class 'pandas.errors.SpecificationError'>,failed
28282,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype732-uint8],"AssertionError: assert dtype('uint8') == dtype('int64')
 +  where dtype('uint8') = 0    0\n1    1\n2    2\n3    3\ndtype: uint8.dtype",failed
28284,tests.integ.modin.series.test_aggregate,test_2_tuple_named_agg_errors_for_series[NamedAgg],AssertionError: exception type <class 'AssertionError'> does not match with expected type <class 'pandas.errors.SpecificationError'>,failed
28286,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype733-float32],"AssertionError: assert dtype('float32') == dtype('float64')
 +  where dtype('float32') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float32.dtype",failed
28287,tests.integ.modin.series.test_astype,test_python_date_and_time[seed1-to_dtype17],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.time'""",failed
28291,tests.integ.modin.series.test_astype,test_python_date_and_time[seed1-to_dtype18],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.time'""",failed
28292,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype734-float16],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
28293,tests.integ.modin.series.test_astype,test_python_date_and_time[seed1-to_dtype19],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.time'""",failed
28297,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype735-float16],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
28303,tests.integ.modin.series.test_astype,test_astype_basic[int8-boolean],TypeError: Need to pass bool-like values,failed
28306,tests.integ.modin.series.test_astype,test_astype_basic[int8-to_dtype189],"AssertionError: assert Float32Dtype() == dtype('float64')
 +  where Float32Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float32.dtype",failed
28309,tests.integ.modin.series.test_astype,test_astype_basic[int8-to_dtype190],"AssertionError: assert Float64Dtype() == dtype('float64')
 +  where Float64Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float64.dtype",failed
28312,tests.integ.modin.series.test_astype,test_astype_basic[int8-to_dtype191],"AssertionError: assert Int64Dtype() == dtype('int64')
 +  where Int64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int64.dtype",failed
28316,tests.integ.modin.series.test_astype,test_astype_basic[int8-to_dtype192],"AssertionError: assert UInt64Dtype() == dtype('int64')
 +  where UInt64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt64.dtype",failed
28318,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype738-datetime64[ns]],"pandas._libs.tslibs.parsing.DateParseError: day is out of range for month: 0, at position 0",failed
28320,tests.integ.modin.series.test_astype,test_python_date_and_time[seed1-to_dtype20],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.time'""",failed
28321,tests.integ.modin.series.test_astype,test_astype_basic[int8-to_dtype193],"AssertionError: assert Int32Dtype() == dtype('int64')
 +  where Int32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int32.dtype",failed
28324,tests.integ.modin.series.test_astype,test_python_date_and_time[seed1-to_dtype21],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.time'""",failed
28329,tests.integ.modin.series.test_astype,test_python_date_and_time[seed1-to_dtype22],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.time'""",failed
28330,tests.integ.modin.series.test_astype,test_astype_basic[int8-to_dtype194],"AssertionError: assert UInt32Dtype() == dtype('int64')
 +  where UInt32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt32.dtype",failed
28334,tests.integ.modin.series.test_astype,test_astype_basic[int8-to_dtype195],"AssertionError: assert Int16Dtype() == dtype('int64')
 +  where Int16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int16.dtype",failed
28335,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype739-boolean],TypeError: Need to pass bool-like values,failed
28337,tests.integ.modin.series.test_astype,test_python_date_and_time[seed1-to_dtype23],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.time'""",failed
28339,tests.integ.modin.series.test_astype,test_astype_basic[int8-to_dtype196],"AssertionError: assert UInt16Dtype() == dtype('int64')
 +  where UInt16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt16.dtype",failed
28341,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype740-to_dtype740],"AssertionError: assert Float32Dtype() == dtype('float64')
 +  where Float32Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float32.dtype",failed
28343,tests.integ.modin.series.test_astype,test_astype_basic[int8-to_dtype197],"AssertionError: assert Int8Dtype() == dtype('int64')
 +  where Int8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int8.dtype",failed
28346,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype741-to_dtype741],"AssertionError: assert Float64Dtype() == dtype('float64')
 +  where Float64Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float64.dtype",failed
28347,tests.integ.modin.series.test_aggregate,test_var_invalid,"AssertionError: Regex pattern did not match.
 Regex: 'timedelta64\\ type\\ does\\ not\\ support\\ var\\ operations'
 Input: ""'TimedeltaArray' with dtype timedelta64[ns] does not support reduction 'var'""",failed
28348,tests.integ.modin.series.test_astype,test_astype_basic[int8-to_dtype198],"AssertionError: assert UInt8Dtype() == dtype('int64')
 +  where UInt8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt8.dtype",failed
28350,tests.integ.modin.series.test_astype,test_astype_basic[int8-to_dtype199],"AssertionError: assert string[python] == dtype('O')
 +  where string[python] = 0    0\n1    1\n2    2\n3    3\ndtype: string.dtype",failed
28351,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype742-to_dtype742],"AssertionError: assert Int64Dtype() == dtype('int64')
 +  where Int64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int64.dtype",failed
28354,tests.integ.modin.series.test_aggregate,test_unsupported_due_to_concat,"[XPASS(strict)] requires concat(), which we cannot do with Timedelta.",failed
28355,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype743-to_dtype743],"AssertionError: assert UInt64Dtype() == dtype('int64')
 +  where UInt64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt64.dtype",failed
28358,tests.integ.modin.series.test_astype,test_python_date_and_time[seed1-to_dtype24],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.time'""",failed
28360,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype744-to_dtype744],"AssertionError: assert Int32Dtype() == dtype('int64')
 +  where Int32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int32.dtype",failed
28361,tests.integ.modin.series.test_astype,test_python_date_and_time[seed1-to_dtype25],"AssertionError: assert string[python] == dtype('O')
 +  where string[python] = 0    00:00:00\n1    01:00:00\n2    02:00:00\ndtype: string.dtype",failed
28363,tests.integ.modin.series.test_astype,test_python_date_and_time[seed1-int],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""int() argument must be a string, a bytes-like object or a real number, not 'datetime.time'""",failed
28364,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype745-to_dtype745],"AssertionError: assert UInt32Dtype() == dtype('int64')
 +  where UInt32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt32.dtype",failed
28368,tests.integ.modin.series.test_astype,test_astype_basic[uint8-uint64],"AssertionError: assert dtype('uint64') == dtype('int64')
 +  where dtype('uint64') = 0    0\n1    1\n2    2\n3    3\ndtype: uint64.dtype",failed
28369,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype746-to_dtype746],"AssertionError: assert Int16Dtype() == dtype('int64')
 +  where Int16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int16.dtype",failed
28372,tests.integ.modin.series.test_astype,test_python_date_and_time[seed1-float],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""float() argument must be a string or a real number, not 'datetime.time'""",failed
28373,tests.integ.modin.series.test_astype,test_astype_basic[uint8-int32],"AssertionError: assert dtype('int32') == dtype('int64')
 +  where dtype('int32') = 0    0\n1    1\n2    2\n3    3\ndtype: int32.dtype",failed
28375,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype747-to_dtype747],"AssertionError: assert UInt16Dtype() == dtype('int64')
 +  where UInt16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt16.dtype",failed
28376,tests.integ.modin.series.test_astype,test_astype_basic[uint8-uint32],"AssertionError: assert dtype('uint32') == dtype('int64')
 +  where dtype('uint32') = 0    0\n1    1\n2    2\n3    3\ndtype: uint32.dtype",failed
28377,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype748-to_dtype748],"AssertionError: assert Int8Dtype() == dtype('int64')
 +  where Int8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int8.dtype",failed
28378,tests.integ.modin.series.test_astype,test_astype_basic[uint8-int16],"AssertionError: assert dtype('int16') == dtype('int64')
 +  where dtype('int16') = 0    0\n1    1\n2    2\n3    3\ndtype: int16.dtype",failed
28379,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype749-to_dtype749],"AssertionError: assert UInt8Dtype() == dtype('int64')
 +  where UInt8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt8.dtype",failed
28381,tests.integ.modin.series.test_astype,test_python_datetime_astype_DatetimeTZDtype[seed0],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: ""Cannot convert input [00:00:00] of type <class 'datetime.time'> to Timestamp""",failed
28382,tests.integ.modin.series.test_astype,test_astype_basic[uint8-uint16],"AssertionError: assert dtype('uint16') == dtype('int64')
 +  where dtype('uint16') = 0    0\n1    1\n2    2\n3    3\ndtype: uint16.dtype",failed
28384,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype750-to_dtype750],"AssertionError: assert string[python] == dtype('O')
 +  where string[python] = 0    0\n1    1\n2    2\n3    3\ndtype: string.dtype",failed
28387,tests.integ.modin.series.test_astype,test_astype_basic[uint8-int8],"AssertionError: assert dtype('int8') == dtype('int64')
 +  where dtype('int8') = 0    0\n1    1\n2    2\n3    3\ndtype: int8.dtype",failed
28394,tests.integ.modin.series.test_astype,test_astype_basic[uint8-uint8],"AssertionError: assert dtype('uint8') == dtype('int64')
 +  where dtype('uint8') = 0    0\n1    1\n2    2\n3    3\ndtype: uint8.dtype",failed
28396,tests.integ.modin.series.test_astype,test_astype_to_timedelta_negative,"AssertionError: Regex pattern did not match.
 Regex: 'dtype\\ datetime64\\[ns\\]\\ cannot\\ be\\ converted\\ to\\ timedelta64\\[ns\\]'
 Input: 'Cannot cast DatetimeArray to dtype timedelta64[ns]'",failed
28398,tests.integ.modin.series.test_astype,test_astype_copy,"AssertionError: assert dtype('int64') == 'object'
 +  where dtype('int64') = 0    1\n1    2\n2    3\ndtype: int64.dtype",failed
28399,tests.integ.modin.series.test_astype,test_astype_errors_ignore_not_implemented[data0-expected0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
28400,tests.integ.modin.series.test_astype,test_astype_errors_ignore_not_implemented[data1-expected1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
28401,tests.integ.modin.series.test_astype,test_astype_int64_warning,"AssertionError: assert 'Snowpark pandas API auto cast all integers to int64' in ''
 +  where '' = <_pytest.logging.LogCaptureFixture object at 0x3d77ec1f0>.text",failed
28404,tests.integ.modin.series.test_astype,test_astype_basic[uint8-float32],"AssertionError: assert dtype('float32') == dtype('float64')
 +  where dtype('float32') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float32.dtype",failed
28408,tests.integ.modin.series.test_astype,test_astype_basic[uint8-float160],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
28414,tests.integ.modin.series.test_astype,test_astype_basic[uint8-float161],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
28417,tests.integ.modin.series.test_astype,test_astype_basic[int-uint64],"AssertionError: assert dtype('uint64') == dtype('int64')
 +  where dtype('uint64') = 0    0\n1    1\n2    2\n3    3\ndtype: uint64.dtype",failed
28422,tests.integ.modin.series.test_astype,test_astype_basic[int-int32],"AssertionError: assert dtype('int32') == dtype('int64')
 +  where dtype('int32') = 0    0\n1    1\n2    2\n3    3\ndtype: int32.dtype",failed
28427,tests.integ.modin.series.test_astype,test_astype_basic[int-uint32],"AssertionError: assert dtype('uint32') == dtype('int64')
 +  where dtype('uint32') = 0    0\n1    1\n2    2\n3    3\ndtype: uint32.dtype",failed
28431,tests.integ.modin.series.test_astype,test_astype_basic[int-int16],"AssertionError: assert dtype('int16') == dtype('int64')
 +  where dtype('int16') = 0    0\n1    1\n2    2\n3    3\ndtype: int16.dtype",failed
28437,tests.integ.modin.series.test_astype,test_astype_basic[int-uint16],"AssertionError: assert dtype('uint16') == dtype('int64')
 +  where dtype('uint16') = 0    0\n1    1\n2    2\n3    3\ndtype: uint16.dtype",failed
28444,tests.integ.modin.series.test_astype,test_astype_basic[int-int8],"AssertionError: assert dtype('int8') == dtype('int64')
 +  where dtype('int8') = 0    0\n1    1\n2    2\n3    3\ndtype: int8.dtype",failed
28445,tests.integ.modin.series.test_astype,test_astype_basic[uint8-boolean],TypeError: Need to pass bool-like values,failed
28448,tests.integ.modin.series.test_at,test_at_get_multiindex,pandas.errors.IndexingError: Too many indexers,failed
28449,tests.integ.modin.pivot.test_pivot_table_fill_value,test_pivot_table_single_with_dropna_type_incompatible_fill_value,Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
28450,tests.integ.modin.series.test_at,test_at_set_multiindex_neg,"KeyError: array(['one'], dtype='<U3')",failed
28451,tests.integ.modin.series.test_at,test_at_neg[key0],Failed: DID NOT RAISE <class 'KeyError'>,failed
28453,tests.integ.modin.series.test_astype,test_astype_basic[uint8-to_dtype218],"AssertionError: assert Float32Dtype() == dtype('float64')
 +  where Float32Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float32.dtype",failed
28455,tests.integ.modin.series.test_astype,test_astype_basic[int-uint8],"AssertionError: assert dtype('uint8') == dtype('int64')
 +  where dtype('uint8') = 0    0\n1    1\n2    2\n3    3\ndtype: uint8.dtype",failed
28457,tests.integ.modin.series.test_astype,test_astype_basic[uint8-to_dtype219],"AssertionError: assert Float64Dtype() == dtype('float64')
 +  where Float64Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float64.dtype",failed
28459,tests.integ.modin.series.test_astype,test_astype_basic[int-float32],"AssertionError: assert dtype('float32') == dtype('float64')
 +  where dtype('float32') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float32.dtype",failed
28462,tests.integ.modin.series.test_astype,test_astype_basic[uint8-to_dtype220],"AssertionError: assert Int64Dtype() == dtype('int64')
 +  where Int64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int64.dtype",failed
28464,tests.integ.modin.series.test_astype,test_astype_basic[int-float160],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
28467,tests.integ.modin.series.test_astype,test_astype_basic[uint8-to_dtype221],"AssertionError: assert UInt64Dtype() == dtype('int64')
 +  where UInt64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt64.dtype",failed
28468,tests.integ.modin.series.test_astype,test_astype_basic[int-float161],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
28469,tests.integ.modin.series.test_at,test_at_neg[key1],"TypeError: int() argument must be a string, a bytes-like object or a real number, not 'dict'",failed
28471,tests.integ.modin.series.test_at,test_at_neg[key2],Failed: DID NOT RAISE <class 'KeyError'>,failed
28474,tests.integ.modin.series.test_astype,test_astype_basic[uint8-to_dtype222],"AssertionError: assert Int32Dtype() == dtype('int64')
 +  where Int32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int32.dtype",failed
28477,tests.integ.modin.series.test_at,test_at_neg[key3],"TypeError: int() argument must be a string, a bytes-like object or a real number, not 'dict'",failed
28478,tests.integ.modin.series.test_astype,test_astype_basic[uint8-to_dtype223],"AssertionError: assert UInt32Dtype() == dtype('int64')
 +  where UInt32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt32.dtype",failed
28480,tests.integ.modin.series.test_at,test_at_neg[key4],pandas.errors.IndexingError: Too many indexers,failed
28485,tests.integ.modin.series.test_at,test_at_neg[key5],"TypeError: int() argument must be a string, a bytes-like object or a real number, not 'dict'",failed
28486,tests.integ.modin.series.test_astype,test_astype_basic[uint8-to_dtype224],"AssertionError: assert Int16Dtype() == dtype('int64')
 +  where Int16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int16.dtype",failed
28489,tests.integ.modin.series.test_at,test_at_neg[key6],pandas.errors.IndexingError: Too many indexers,failed
28491,tests.integ.modin.series.test_at,test_at_neg[key7],pandas.errors.IndexingError: Too many indexers,failed
28492,tests.integ.modin.series.test_at,test_at_neg[key8],pandas.errors.IndexingError: Too many indexers,failed
28495,tests.integ.modin.series.test_astype,test_astype_basic[uint8-to_dtype225],"AssertionError: assert UInt16Dtype() == dtype('int64')
 +  where UInt16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt16.dtype",failed
28496,tests.integ.modin.index.test_reindex,test_non_overlapping_index,AttributeError: 'DataFrame' object has no attribute 'data_column_snowflake_quoted_identifiers',failed
28499,tests.integ.modin.series.test_astype,test_astype_basic[uint8-to_dtype226],"AssertionError: assert Int8Dtype() == dtype('int64')
 +  where Int8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int8.dtype",failed
28501,tests.integ.modin.series.test_astype,test_astype_basic[uint8-to_dtype227],"AssertionError: assert UInt8Dtype() == dtype('int64')
 +  where UInt8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt8.dtype",failed
28503,tests.integ.modin.series.test_dt_accessor,test_tz_localize_negative[None-infer-raise],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
28504,tests.integ.modin.series.test_astype,test_astype_basic[uint8-to_dtype228],"AssertionError: assert string[python] == dtype('O')
 +  where string[python] = 0    0\n1    1\n2    2\n3    3\ndtype: string.dtype",failed
28505,tests.integ.modin.series.test_dt_accessor,test_tz_localize_negative[None-NaT-raise],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
28508,tests.integ.modin.series.test_astype,test_astype_basic[int-boolean],TypeError: Need to pass bool-like values,failed
28510,tests.integ.modin.series.test_dt_accessor,test_tz_localize_negative[None-ambiguous2-raise],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
28513,tests.integ.modin.series.test_dt_accessor,test_tz_localize_negative[None-raise-shift_forward],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
28514,tests.integ.modin.series.test_astype,test_astype_basic[int-to_dtype769],"AssertionError: assert Float32Dtype() == dtype('float64')
 +  where Float32Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float32.dtype",failed
28518,tests.integ.modin.series.test_dt_accessor,test_tz_localize_negative[None-raise-shift_backward],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
28521,tests.integ.modin.series.test_astype,test_astype_basic[int-to_dtype770],"AssertionError: assert Float64Dtype() == dtype('float64')
 +  where Float64Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float64.dtype",failed
28523,tests.integ.modin.series.test_dt_accessor,test_tz_localize_negative[None-raise-NaT],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
28529,tests.integ.modin.series.test_astype,test_astype_basic[int-to_dtype771],"AssertionError: assert Int64Dtype() == dtype('int64')
 +  where Int64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int64.dtype",failed
28530,tests.integ.modin.series.test_dt_accessor,test_tz_localize_negative[None-raise-nonexistent6],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
28533,tests.integ.modin.series.test_astype,test_astype_basic[float32-uint64],"AssertionError: assert dtype('uint64') == dtype('int64')
 +  where dtype('uint64') = 0    0\n1    1\n2    2\n3    3\ndtype: uint64.dtype",failed
28536,tests.integ.modin.series.test_dt_accessor,test_tz_localize_negative[None-infer-shift_forward],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
28537,tests.integ.modin.series.test_astype,test_astype_basic[int-to_dtype772],"AssertionError: assert UInt64Dtype() == dtype('int64')
 +  where UInt64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt64.dtype",failed
28543,tests.integ.modin.series.test_axis,test_set_axis_series_raises_value_error[ser0-indexes-labels0],AssertionError: Snowpark pandas Exception No axis named indexes for object type DataFrame doesn't match pandas Exception No axis named indexes for object type Series,failed
28544,tests.integ.modin.series.test_dt_accessor,test_tz_localize_negative[UTC+09:00-raise-raise],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
28545,tests.integ.modin.series.test_axis,test_set_axis_series_raises_value_error[ser1--1111.1111-labels1],AssertionError: Snowpark pandas Exception No axis named -1111.1111 for object type DataFrame doesn't match pandas Exception No axis named -1111.1111 for object type Series,failed
28546,tests.integ.modin.series.test_axis,test_set_axis_series_raises_value_error[ser2-4000000-labels2],AssertionError: Snowpark pandas Exception No axis named 4000000 for object type DataFrame doesn't match pandas Exception No axis named 4000000 for object type Series,failed
28547,tests.integ.modin.series.test_astype,test_astype_basic[float32-int32],"AssertionError: assert dtype('int32') == dtype('int64')
 +  where dtype('int32') = 0    0\n1    1\n2    2\n3    3\ndtype: int32.dtype",failed
28548,tests.integ.modin.series.test_axis,test_set_axis_series_raises_value_error[ser3-None-labels3],AssertionError: Snowpark pandas Exception No axis named None for object type DataFrame doesn't match pandas Exception No axis named None for object type Series,failed
28549,tests.integ.modin.series.test_axis,test_set_axis_series_raises_value_error[ser4--4.217391304347826-labels4],AssertionError: Snowpark pandas Exception No axis named -4.217391304347826 for object type DataFrame doesn't match pandas Exception No axis named -4.217391304347826 for object type Series,failed
28550,tests.integ.modin.series.test_axis,test_set_axis_series_raises_value_error[ser5-0-labels5],AssertionError: Snowpark pandas Exception No axis named 0 for object type DataFrame doesn't match pandas Exception No axis named 0 for object type Series,failed
28552,tests.integ.modin.series.test_astype,test_astype_basic[int-to_dtype773],"AssertionError: assert Int32Dtype() == dtype('int64')
 +  where Int32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int32.dtype",failed
28553,tests.integ.modin.series.test_axis,test_set_axis_series_raises_value_error[ser6--1e-05-labels6],AssertionError: Snowpark pandas Exception No axis named -1e-05 for object type DataFrame doesn't match pandas Exception No axis named -1e-05 for object type Series,failed
28554,tests.integ.modin.series.test_axis,test_set_axis_series_raises_value_error[ser7-1e-06-labels7],AssertionError: Snowpark pandas Exception No axis named 1e-06 for object type DataFrame doesn't match pandas Exception No axis named 1e-06 for object type Series,failed
28555,tests.integ.modin.series.test_astype,test_astype_basic[float32-uint32],"AssertionError: assert dtype('uint32') == dtype('int64')
 +  where dtype('uint32') = 0    0\n1    1\n2    2\n3    3\ndtype: uint32.dtype",failed
28556,tests.integ.modin.series.test_axis,test_set_axis_series_raises_value_error[ser8-1-labels8],Failed: DID NOT RAISE <class 'Exception'>,failed
28559,tests.integ.modin.series.test_axis,test_set_axis_series_raises_value_error[ser9-columns-None],Failed: DID NOT RAISE <class 'Exception'>,failed
28560,tests.integ.modin.series.test_astype,test_astype_basic[int-to_dtype774],"AssertionError: assert UInt32Dtype() == dtype('int64')
 +  where UInt32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt32.dtype",failed
28562,tests.integ.modin.series.test_astype,test_astype_basic[float32-int16],"AssertionError: assert dtype('int16') == dtype('int64')
 +  where dtype('int16') = 0    0\n1    1\n2    2\n3    3\ndtype: int16.dtype",failed
28564,tests.integ.modin.series.test_astype,test_astype_basic[int-to_dtype775],"AssertionError: assert Int16Dtype() == dtype('int64')
 +  where Int16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int16.dtype",failed
28565,tests.integ.modin.series.test_astype,test_astype_basic[float32-uint16],"AssertionError: assert dtype('uint16') == dtype('int64')
 +  where dtype('uint16') = 0    0\n1    1\n2    2\n3    3\ndtype: uint16.dtype",failed
28568,tests.integ.modin.series.test_axis,test_set_axis_series_raises_type_error[ser2-axis2-labels2-list is not a valid type for axis.],"AssertionError: Regex pattern did not match.
 Regex: 'list is not a valid type for axis.'
 Input: ""unhashable type: 'list'""",failed
28570,tests.integ.modin.series.test_astype,test_astype_basic[int-to_dtype776],"AssertionError: assert UInt16Dtype() == dtype('int64')
 +  where UInt16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt16.dtype",failed
28571,tests.integ.modin.series.test_astype,test_astype_basic[float32-int8],"AssertionError: assert dtype('int8') == dtype('int64')
 +  where dtype('int8') = 0    0\n1    1\n2    2\n3    3\ndtype: int8.dtype",failed
28572,tests.integ.modin.series.test_axis,test_set_axis_series_raises_type_error[ser3-axis3-labels3-Series is not a valid type for axis.],"AssertionError: Regex pattern did not match.
 Regex: 'Series is not a valid type for axis.'
 Input: ""unhashable type: 'Series'""",failed
28575,tests.integ.modin.series.test_astype,test_astype_basic[int-to_dtype777],"AssertionError: assert Int8Dtype() == dtype('int64')
 +  where Int8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int8.dtype",failed
28576,tests.integ.modin.series.test_astype,test_astype_basic[float32-uint8],"AssertionError: assert dtype('uint8') == dtype('int64')
 +  where dtype('uint8') = 0    0\n1    1\n2    2\n3    3\ndtype: uint8.dtype",failed
28577,tests.integ.modin.index.test_reindex,test_non_overlapping_different_types_index_negative_SNOW_1622502,AttributeError: 'DataFrame' object has no attribute 'data_column_snowflake_quoted_identifiers',failed
28578,tests.integ.modin.series.test_axis,test_set_axis_series_raises_type_error[ser4-axis4-labels4-DataFrame is not a valid type for axis.],"AssertionError: Regex pattern did not match.
 Regex: 'DataFrame is not a valid type for axis.'
 Input: ""unhashable type: 'DataFrame'""",failed
28579,tests.integ.modin.series.test_astype,test_astype_basic[float32-float32],"AssertionError: assert dtype('float32') == dtype('float64')
 +  where dtype('float32') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float32.dtype",failed
28580,tests.integ.modin.series.test_astype,test_astype_basic[int-to_dtype778],"AssertionError: assert UInt8Dtype() == dtype('int64')
 +  where UInt8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt8.dtype",failed
28582,tests.integ.modin.series.test_astype,test_astype_basic[float32-float160],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
28583,tests.integ.modin.series.test_axis,test_set_axis_series_raises_type_error[ser5-axis5-labels5-Index is not a valid type for axis.],"AssertionError: Regex pattern did not match.
 Regex: 'Index is not a valid type for axis.'
 Input: ""unhashable type: 'Index'""",failed
28585,tests.integ.modin.series.test_astype,test_astype_basic[int-to_dtype779],"AssertionError: assert string[python] == dtype('O')
 +  where string[python] = 0    0\n1    1\n2    2\n3    3\ndtype: string.dtype",failed
28587,tests.integ.modin.series.test_axis,test_set_axis_series_raises_type_error[ser6-axis6-labels6-MultiIndex is not a valid type for axis.],"AssertionError: Regex pattern did not match.
 Regex: 'MultiIndex is not a valid type for axis.'
 Input: ""unhashable type: 'MultiIndex'""",failed
28588,tests.integ.modin.series.test_axis,test_set_axis_series_raises_type_error[ser7-axis7-labels7-MultiIndex is not a valid type for axis.],"AssertionError: Regex pattern did not match.
 Regex: 'MultiIndex is not a valid type for axis.'
 Input: ""unhashable type: 'MultiIndex'""",failed
28589,tests.integ.modin.series.test_astype,test_astype_basic[float32-float161],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
28598,tests.integ.modin.index.test_reindex,test_duplicate_values[new_index0-result_index0-indices0],AttributeError: 'DataFrame' object has no attribute 'data_column_snowflake_quoted_identifiers',failed
28603,tests.integ.modin.pivot.test_pivot_table_margins,test_pivot_table_single_with_dropna_options[None-columns1-True-no_index],reason: SNOW-1435365 - pandas computes values differently than us: https://github.com/pandas-dev/pandas/issues/58722.,xfailed
28608,tests.integ.modin.pivot.test_pivot_table_margins,test_pivot_table_single_with_dropna_options[None-columns1-False-no_index],reason: SNOW-1435365 - pandas computes values differently than us: https://github.com/pandas-dev/pandas/issues/58722.,xfailed
28610,tests.integ.modin.series.test_astype,test_astype_basic[float-uint64],"AssertionError: assert dtype('uint64') == dtype('int64')
 +  where dtype('uint64') = 0    0\n1    1\n2    2\n3    3\ndtype: uint64.dtype",failed
28612,tests.integ.modin.series.test_astype,test_astype_basic[float-int32],"AssertionError: assert dtype('int32') == dtype('int64')
 +  where dtype('int32') = 0    0\n1    1\n2    2\n3    3\ndtype: int32.dtype",failed
28614,tests.integ.modin.series.test_axis,test_set_axis_series_raises_type_error[ser8-index-None-None is not a valid value for the parameter 'labels'.],"AssertionError: Regex pattern did not match.
 Regex: ""None is not a valid value for the parameter 'labels'.""
 Input: 'Index(...) must be called with a collection of some kind, None was passed'",failed
28615,tests.integ.modin.series.test_axis,test_series_set_axis_copy_true,"AssertionError: assert 'keyword is unused and is ignored.' in ''
 +  where '' = <_pytest.logging.LogCaptureFixture object at 0x3d6f32440>.text",failed
28617,tests.integ.modin.series.test_astype,test_astype_basic[float32-boolean],TypeError: Need to pass bool-like values,failed
28618,tests.integ.modin.series.test_astype,test_astype_basic[float-uint32],"AssertionError: assert dtype('uint32') == dtype('int64')
 +  where dtype('uint32') = 0    0\n1    1\n2    2\n3    3\ndtype: uint32.dtype",failed
28621,tests.integ.modin.series.test_astype,test_astype_basic[float32-to_dtype247],"AssertionError: assert Float32Dtype() == dtype('float64')
 +  where Float32Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float32.dtype",failed
28622,tests.integ.modin.series.test_astype,test_astype_basic[float-int16],"AssertionError: assert dtype('int16') == dtype('int64')
 +  where dtype('int16') = 0    0\n1    1\n2    2\n3    3\ndtype: int16.dtype",failed
28625,tests.integ.modin.series.test_astype,test_astype_basic[float32-to_dtype248],"AssertionError: assert Float64Dtype() == dtype('float64')
 +  where Float64Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float64.dtype",failed
28626,tests.integ.modin.series.test_astype,test_astype_basic[float-uint16],"AssertionError: assert dtype('uint16') == dtype('int64')
 +  where dtype('uint16') = 0    0\n1    1\n2    2\n3    3\ndtype: uint16.dtype",failed
28629,tests.integ.modin.series.test_astype,test_astype_basic[float32-to_dtype249],"AssertionError: assert Int64Dtype() == dtype('int64')
 +  where Int64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int64.dtype",failed
28630,tests.integ.modin.series.test_astype,test_astype_basic[float-int8],"AssertionError: assert dtype('int8') == dtype('int64')
 +  where dtype('int8') = 0    0\n1    1\n2    2\n3    3\ndtype: int8.dtype",failed
28634,tests.integ.modin.pivot.test_pivot_table_margins,test_pivot_table_single_with_dropna_options[99.99-columns1-True-no_index],reason: SNOW-1435365 - pandas computes values differently than us: https://github.com/pandas-dev/pandas/issues/58722.,xfailed
28635,tests.integ.modin.series.test_astype,test_astype_basic[float32-to_dtype250],"AssertionError: assert UInt64Dtype() == dtype('int64')
 +  where UInt64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt64.dtype",failed
28637,tests.integ.modin.series.test_astype,test_astype_basic[float-uint8],"AssertionError: assert dtype('uint8') == dtype('int64')
 +  where dtype('uint8') = 0    0\n1    1\n2    2\n3    3\ndtype: uint8.dtype",failed
28640,tests.integ.modin.series.test_astype,test_astype_basic[float32-to_dtype251],"AssertionError: assert Int32Dtype() == dtype('int64')
 +  where Int32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int32.dtype",failed
28642,tests.integ.modin.pivot.test_pivot_table_margins,test_pivot_table_single_with_dropna_options[99.99-columns1-False-no_index],reason: SNOW-1435365 - pandas computes values differently than us: https://github.com/pandas-dev/pandas/issues/58722.,xfailed
28645,tests.integ.modin.series.test_astype,test_astype_basic[float-float32],"AssertionError: assert dtype('float32') == dtype('float64')
 +  where dtype('float32') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float32.dtype",failed
28647,tests.integ.modin.series.test_astype,test_astype_basic[float32-to_dtype252],"AssertionError: assert UInt32Dtype() == dtype('int64')
 +  where UInt32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt32.dtype",failed
28652,tests.integ.modin.series.test_astype,test_astype_basic[float-float160],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
28653,tests.integ.modin.series.test_astype,test_astype_basic[float32-to_dtype253],"AssertionError: assert Int16Dtype() == dtype('int64')
 +  where Int16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int16.dtype",failed
28656,tests.integ.modin.series.test_astype,test_astype_basic[float32-to_dtype254],"AssertionError: assert UInt16Dtype() == dtype('int64')
 +  where UInt16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt16.dtype",failed
28658,tests.integ.modin.series.test_astype,test_astype_basic[float-float161],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
28661,tests.integ.modin.series.test_astype,test_astype_basic[float32-to_dtype255],"AssertionError: assert Int8Dtype() == dtype('int64')
 +  where Int8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int8.dtype",failed
28669,tests.integ.modin.series.test_astype,test_astype_basic[float32-to_dtype256],"AssertionError: assert UInt8Dtype() == dtype('int64')
 +  where UInt8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt8.dtype",failed
28682,tests.integ.modin.index.test_reindex,test_duplicate_values[new_index1-result_index1-indices1],AttributeError: 'DataFrame' object has no attribute 'data_column_snowflake_quoted_identifiers',failed
28683,tests.integ.modin.series.test_astype,test_astype_basic[float32-to_dtype257],"AssertionError: assert string[python] == dtype('O')
 +  where string[python] = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: string.dtype",failed
28699,tests.integ.modin.series.test_astype,test_astype_basic[float32-str],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2, 3]
[left]:  [0.0, 1.0, 2.0, 3.0]
[right]: [0, 1, 2, 3]
At positional index 0, first diff: 0.0 != 0",failed
28704,tests.integ.modin.index.test_reindex,test_duplicate_values[new_index2-result_index2-indices2],AttributeError: 'DataFrame' object has no attribute 'data_column_snowflake_quoted_identifiers',failed
28707,tests.integ.modin.series.test_astype,test_astype_basic[float16-uint640],"AssertionError: assert dtype('uint64') == dtype('int64')
 +  where dtype('uint64') = 0    0\n1    1\n2    2\n3    3\ndtype: uint64.dtype",failed
28710,tests.integ.modin.series.test_astype,test_astype_basic[float16-int320],"AssertionError: assert dtype('int32') == dtype('int64')
 +  where dtype('int32') = 0    0\n1    1\n2    2\n3    3\ndtype: int32.dtype",failed
28713,tests.integ.modin.series.test_astype,test_astype_basic[float16-uint320],"AssertionError: assert dtype('uint32') == dtype('int64')
 +  where dtype('uint32') = 0    0\n1    1\n2    2\n3    3\ndtype: uint32.dtype",failed
28715,tests.integ.modin.series.test_astype,test_astype_basic[float16-int160],"AssertionError: assert dtype('int16') == dtype('int64')
 +  where dtype('int16') = 0    0\n1    1\n2    2\n3    3\ndtype: int16.dtype",failed
28721,tests.integ.modin.series.test_astype,test_astype_basic[float16-uint160],"AssertionError: assert dtype('uint16') == dtype('int64')
 +  where dtype('uint16') = 0    0\n1    1\n2    2\n3    3\ndtype: uint16.dtype",failed
28729,tests.integ.modin.index.test_reindex,test_duplicate_values[new_index3-result_index3-indices3],AttributeError: 'DataFrame' object has no attribute 'data_column_snowflake_quoted_identifiers',failed
28733,tests.integ.modin.series.test_astype,test_astype_basic[float16-int80],"AssertionError: assert dtype('int8') == dtype('int64')
 +  where dtype('int8') = 0    0\n1    1\n2    2\n3    3\ndtype: int8.dtype",failed
28738,tests.integ.modin.series.test_astype,test_astype_basic[float16-uint80],"AssertionError: assert dtype('uint8') == dtype('int64')
 +  where dtype('uint8') = 0    0\n1    1\n2    2\n3    3\ndtype: uint8.dtype",failed
28741,tests.integ.modin.series.test_astype,test_astype_basic[float16-float320],"AssertionError: assert dtype('float32') == dtype('float64')
 +  where dtype('float32') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float32.dtype",failed
28743,tests.integ.modin.series.test_astype,test_astype_basic[float16-float160],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
28748,tests.integ.modin.series.test_astype,test_astype_basic[float-boolean],TypeError: Need to pass bool-like values,failed
28750,tests.integ.modin.series.test_astype,test_astype_basic[float16-float161],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
28752,tests.integ.modin.index.test_reindex,test_non_monotonic_index_no_overlapping_negative,AttributeError: 'DataFrame' object has no attribute 'data_column_snowflake_quoted_identifiers',failed
28753,tests.integ.modin.series.test_astype,test_astype_basic[float-to_dtype798],"AssertionError: assert Float32Dtype() == dtype('float64')
 +  where Float32Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float32.dtype",failed
28758,tests.integ.modin.series.test_astype,test_astype_basic[float-to_dtype799],"AssertionError: assert Float64Dtype() == dtype('float64')
 +  where Float64Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float64.dtype",failed
28762,tests.integ.modin.series.test_astype,test_astype_basic[float-to_dtype800],"AssertionError: assert Int64Dtype() == dtype('int64')
 +  where Int64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int64.dtype",failed
28765,tests.integ.modin.series.test_astype,test_astype_basic[float-to_dtype801],"AssertionError: assert UInt64Dtype() == dtype('int64')
 +  where UInt64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt64.dtype",failed
28767,tests.integ.modin.index.test_reindex,test_non_monotonic_index,AssertionError: exception type <class 'AttributeError'> does not match with expected type <class 'ValueError'>,failed
28769,tests.integ.modin.series.test_between,test_series_between_series_different_dimensions,"ValueError: Unable to coerce to Series, length must be 1: given 2",failed
28770,tests.integ.modin.series.test_between,test_series_between_invalid_comparison,TypeError: Invalid comparison between dtype=int64 and str,failed
28771,tests.integ.modin.series.test_astype,test_astype_basic[float-to_dtype802],"AssertionError: assert Int32Dtype() == dtype('int64')
 +  where Int32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int32.dtype",failed
28774,tests.integ.modin.series.test_astype,test_astype_basic[float-to_dtype803],"AssertionError: assert UInt32Dtype() == dtype('int64')
 +  where UInt32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt32.dtype",failed
28776,tests.integ.modin.series.test_astype,test_astype_basic[float-to_dtype804],"AssertionError: assert Int16Dtype() == dtype('int64')
 +  where Int16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int16.dtype",failed
28777,tests.integ.modin.series.test_astype,test_astype_basic[float-to_dtype805],"AssertionError: assert UInt16Dtype() == dtype('int64')
 +  where UInt16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt16.dtype",failed
28779,tests.integ.modin.series.test_astype,test_astype_basic[float-to_dtype806],"AssertionError: assert Int8Dtype() == dtype('int64')
 +  where Int8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int8.dtype",failed
28783,tests.integ.modin.series.test_astype,test_astype_basic[float-to_dtype807],"AssertionError: assert UInt8Dtype() == dtype('int64')
 +  where UInt8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt8.dtype",failed
28786,tests.integ.modin.series.test_astype,test_astype_basic[float-to_dtype808],"AssertionError: assert string[python] == dtype('O')
 +  where string[python] = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: string.dtype",failed
28797,tests.integ.modin.series.test_astype,test_astype_basic[float-str],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2, 3]
[left]:  [0.0, 1.0, 2.0, 3.0]
[right]: [0, 1, 2, 3]
At positional index 0, first diff: 0.0 != 0",failed
28801,tests.integ.modin.series.test_astype,test_astype_basic[float16-boolean0],TypeError: Need to pass bool-like values,failed
28802,tests.integ.modin.series.test_astype,test_astype_basic[str-uint64],"AssertionError: assert dtype('uint64') == dtype('int64')
 +  where dtype('uint64') = 0    0\n1    1\n2    2\n3    3\ndtype: uint64.dtype",failed
28803,tests.integ.modin.series.test_astype,test_astype_basic[float16-to_dtype276],"AssertionError: assert Float32Dtype() == dtype('float64')
 +  where Float32Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float32.dtype",failed
28805,tests.integ.modin.series.test_astype,test_astype_basic[str-int32],"AssertionError: assert dtype('int32') == dtype('int64')
 +  where dtype('int32') = 0    0\n1    1\n2    2\n3    3\ndtype: int32.dtype",failed
28806,tests.integ.modin.series.test_astype,test_astype_basic[float16-to_dtype277],"AssertionError: assert Float64Dtype() == dtype('float64')
 +  where Float64Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float64.dtype",failed
28809,tests.integ.modin.series.test_astype,test_astype_basic[float16-to_dtype278],"AssertionError: assert Int64Dtype() == dtype('int64')
 +  where Int64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int64.dtype",failed
28810,tests.integ.modin.series.test_astype,test_astype_basic[str-uint32],"AssertionError: assert dtype('uint32') == dtype('int64')
 +  where dtype('uint32') = 0    0\n1    1\n2    2\n3    3\ndtype: uint32.dtype",failed
28814,tests.integ.modin.pivot.test_pivot_table_margins,test_pivot_table_multiple_pivot_values_null_data_with_margins[None-no_index],[XPASS(strict)] SNOW-1435365 - pandas computes values differently than us: https://github.com/pandas-dev/pandas/issues/58722.,failed
28815,tests.integ.modin.series.test_astype,test_astype_basic[float16-to_dtype279],"AssertionError: assert UInt64Dtype() == dtype('int64')
 +  where UInt64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt64.dtype",failed
28817,tests.integ.modin.series.test_astype,test_astype_basic[str-int16],"AssertionError: assert dtype('int16') == dtype('int64')
 +  where dtype('int16') = 0    0\n1    1\n2    2\n3    3\ndtype: int16.dtype",failed
28821,tests.integ.modin.series.test_astype,test_astype_basic[float16-to_dtype280],"AssertionError: assert Int32Dtype() == dtype('int64')
 +  where Int32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int32.dtype",failed
28822,tests.integ.modin.series.test_astype,test_astype_basic[str-uint16],"AssertionError: assert dtype('uint16') == dtype('int64')
 +  where dtype('uint16') = 0    0\n1    1\n2    2\n3    3\ndtype: uint16.dtype",failed
28825,tests.integ.modin.series.test_astype,test_astype_basic[float16-to_dtype281],"AssertionError: assert UInt32Dtype() == dtype('int64')
 +  where UInt32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt32.dtype",failed
28826,tests.integ.modin.series.test_astype,test_astype_basic[str-int8],"AssertionError: assert dtype('int8') == dtype('int64')
 +  where dtype('int8') = 0    0\n1    1\n2    2\n3    3\ndtype: int8.dtype",failed
28828,tests.integ.modin.series.test_astype,test_astype_basic[float16-to_dtype282],"AssertionError: assert Int16Dtype() == dtype('int64')
 +  where Int16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int16.dtype",failed
28829,tests.integ.modin.pivot.test_pivot_table_margins,test_pivot_table_multiple_pivot_values_null_data_with_margins[99.99-no_index],[XPASS(strict)] SNOW-1201908: fill_value should not affect margin,failed
28830,tests.integ.modin.series.test_astype,test_astype_basic[str-uint8],"AssertionError: assert dtype('uint8') == dtype('int64')
 +  where dtype('uint8') = 0    0\n1    1\n2    2\n3    3\ndtype: uint8.dtype",failed
28832,tests.integ.modin.series.test_astype,test_astype_basic[float16-to_dtype283],"AssertionError: assert UInt16Dtype() == dtype('int64')
 +  where UInt16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt16.dtype",failed
28837,tests.integ.modin.series.test_astype,test_astype_basic[str-float32],"AssertionError: assert dtype('float32') == dtype('float64')
 +  where dtype('float32') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float32.dtype",failed
28840,tests.integ.modin.series.test_astype,test_astype_basic[float16-to_dtype284],"AssertionError: assert Int8Dtype() == dtype('int64')
 +  where Int8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int8.dtype",failed
28842,tests.integ.modin.pivot.test_pivot_table_margins,test_pivot_table_multiple_pivot_values_null_data_with_margins[99.99-multiple_index],[XPASS(strict)] SNOW-1201908: fill_value should not affect margin,failed
28845,tests.integ.modin.series.test_astype,test_astype_basic[str-float160],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
28849,tests.integ.modin.series.test_astype,test_astype_basic[float16-to_dtype285],"AssertionError: assert UInt8Dtype() == dtype('int64')
 +  where UInt8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt8.dtype",failed
28850,tests.integ.modin.series.test_astype,test_astype_basic[str-float161],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
28853,tests.integ.modin.series.test_astype,test_astype_basic[float16-to_dtype286],"AssertionError: assert string[python] == dtype('O')
 +  where string[python] = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: string.dtype",failed
28863,tests.integ.modin.pivot.test_pivot_table_margins,test_pivot_table_multiple_pivot_values_null_data_with_margins_nan_blocked[99.99-no_index],[XPASS(strict)] SNOW-1201908: fill_value should not affect margin,failed
28865,tests.integ.modin.series.test_astype,test_astype_basic[float16-str0],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2, 3]
[left]:  [0.0, 1.0, 2.0, 3.0]
[right]: [0, 1, 2, 3]
At positional index 0, first diff: 0.0 != 0",failed
28867,tests.integ.modin.pivot.test_pivot_table_margins,test_pivot_table_multiple_pivot_values_null_data_with_margins_nan_blocked[99.99-multiple_index],[XPASS(strict)] SNOW-1201908: fill_value should not affect margin,failed
28871,tests.integ.modin.series.test_astype,test_astype_basic[float16-uint641],"AssertionError: assert dtype('uint64') == dtype('int64')
 +  where dtype('uint64') = 0    0\n1    1\n2    2\n3    3\ndtype: uint64.dtype",failed
28872,tests.integ.modin.series.test_astype,test_astype_basic[str-datetime64[ns]],"pandas._libs.tslibs.parsing.DateParseError: day is out of range for month: 0, at position 0",failed
28874,tests.integ.modin.series.test_astype,test_astype_basic[float16-int321],"AssertionError: assert dtype('int32') == dtype('int64')
 +  where dtype('int32') = 0    0\n1    1\n2    2\n3    3\ndtype: int32.dtype",failed
28878,tests.integ.modin.series.test_astype,test_astype_basic[float16-uint321],"AssertionError: assert dtype('uint32') == dtype('int64')
 +  where dtype('uint32') = 0    0\n1    1\n2    2\n3    3\ndtype: uint32.dtype",failed
28883,tests.integ.modin.series.test_astype,test_astype_basic[float16-int161],"AssertionError: assert dtype('int16') == dtype('int64')
 +  where dtype('int16') = 0    0\n1    1\n2    2\n3    3\ndtype: int16.dtype",failed
28886,tests.integ.modin.series.test_astype,test_astype_basic[float16-uint161],"AssertionError: assert dtype('uint16') == dtype('int64')
 +  where dtype('uint16') = 0    0\n1    1\n2    2\n3    3\ndtype: uint16.dtype",failed
28888,tests.integ.modin.series.test_astype,test_astype_basic[str-boolean],TypeError: Need to pass bool-like values,failed
28889,tests.integ.modin.series.test_astype,test_astype_basic[float16-int81],"AssertionError: assert dtype('int8') == dtype('int64')
 +  where dtype('int8') = 0    0\n1    1\n2    2\n3    3\ndtype: int8.dtype",failed
28890,tests.integ.modin.pivot.test_pivot_table_margins,test_pivot_table_unsupported_dropna_with_expanded_aggregation_margins_unsupported,"AssertionError: Regex pattern did not match.
 Regex: 'Margins not supported if list of aggregation functions'
 Input: 'The name None occurs multiple times, use a level number'",failed
28891,tests.integ.modin.series.test_astype,test_astype_basic[str-to_dtype827],"AssertionError: assert Float32Dtype() == dtype('float64')
 +  where Float32Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float32.dtype",failed
28893,tests.integ.modin.series.test_astype,test_astype_basic[float16-uint81],"AssertionError: assert dtype('uint8') == dtype('int64')
 +  where dtype('uint8') = 0    0\n1    1\n2    2\n3    3\ndtype: uint8.dtype",failed
28894,tests.integ.modin.series.test_astype,test_astype_basic[float16-float321],"AssertionError: assert dtype('float32') == dtype('float64')
 +  where dtype('float32') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float32.dtype",failed
28895,tests.integ.modin.series.test_astype,test_astype_basic[str-to_dtype828],"AssertionError: assert Float64Dtype() == dtype('float64')
 +  where Float64Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float64.dtype",failed
28898,tests.integ.modin.series.test_astype,test_astype_basic[float16-float162],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
28899,tests.integ.modin.series.test_astype,test_astype_basic[str-to_dtype829],"AssertionError: assert Int64Dtype() == dtype('int64')
 +  where Int64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int64.dtype",failed
28902,tests.integ.modin.series.test_astype,test_astype_basic[str-to_dtype830],"AssertionError: assert UInt64Dtype() == dtype('int64')
 +  where UInt64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt64.dtype",failed
28903,tests.integ.modin.series.test_astype,test_astype_basic[float16-float163],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
28908,tests.integ.modin.series.test_astype,test_astype_basic[str-to_dtype831],"AssertionError: assert Int32Dtype() == dtype('int64')
 +  where Int32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int32.dtype",failed
28915,tests.integ.modin.series.test_astype,test_astype_basic[str-to_dtype832],"AssertionError: assert UInt32Dtype() == dtype('int64')
 +  where UInt32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt32.dtype",failed
28916,tests.integ.modin.series.test_bitwise_operators,test_bitwise_binary_between_series_with_deviating_behavior_or[lhs0-rhs0-expected_pandas0-expected_snowpark_pandas0],"AssertionError: Series are different

Series values are different (50.0 %)
[index]: [1, 2, 3, 4, 5, 7]
[left]:  [True, False, True, False, True, False]
[right]: [True, True, True, None, True, None]",failed
28918,tests.integ.modin.series.test_bitwise_operators,test_bitwise_binary_between_series_with_deviating_behavior_or[lhs1-rhs1-expected_pandas1-expected_snowpark_pandas1],"AssertionError: Series are different

Series values are different (44.44444 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8]
[left]:  [True, True, False, True, False, False, True, False, False]
[right]: [True, True, True, True, False, None, True, None, None]",failed
28919,tests.integ.modin.series.test_bitwise_operators,test_bitwise_binary_between_series_with_deviating_behavior_or[lhs2-rhs2-expected_pandas2-expected_snowpark_pandas2],"AssertionError: Series are different

Series values are different (33.33333 %)
[index]: [(2.0, 0, 0), (0.0, 0, 0), (1.0, 0, 0), (2.0, 1, 0), (nan, 2, 0), (nan, 2, 1)]
[left]:  [True, True, True, True, False, False]
[right]: [True, True, True, True, None, None]",failed
28921,tests.integ.modin.series.test_bitwise_operators,test_bitwise_binary_between_series_with_deviating_behavior_and[lhs0-rhs0-expected_pandas0-expected_snowpark_pandas0],"AssertionError: Series are different

Series values are different (33.33333 %)
[index]: [1, 2, 3, 4, 5, 7]
[left]:  [False, False, False, False, False, False]
[right]: [None, None, False, False, False, False]",failed
28922,tests.integ.modin.series.test_bitwise_operators,test_bitwise_binary_between_series_with_deviating_behavior_and[lhs1-rhs1-expected_pandas1-expected_snowpark_pandas1],"AssertionError: Series are different

Series values are different (33.33333 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8]
[left]:  [True, False, False, False, False, False, False, False, False]
[right]: [True, False, None, False, False, False, None, False, None]",failed
28924,tests.integ.modin.series.test_astype,test_astype_basic[str-to_dtype833],"AssertionError: assert Int16Dtype() == dtype('int64')
 +  where Int16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int16.dtype",failed
28926,tests.integ.modin.series.test_dt_accessor,test_day_month_name_negative[day_name],locale.Error: unsupported locale setting,failed
28927,tests.integ.modin.series.test_astype,test_astype_basic[str-to_dtype834],"AssertionError: assert UInt16Dtype() == dtype('int64')
 +  where UInt16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt16.dtype",failed
28929,tests.integ.modin.series.test_astype,test_astype_basic[float16-boolean1],TypeError: Need to pass bool-like values,failed
28930,tests.integ.modin.series.test_astype,test_astype_basic[str-to_dtype835],"AssertionError: assert Int8Dtype() == dtype('int64')
 +  where Int8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int8.dtype",failed
28932,tests.integ.modin.series.test_dt_accessor,test_day_month_name_negative[month_name],locale.Error: unsupported locale setting,failed
28933,tests.integ.modin.series.test_astype,test_astype_basic[float16-to_dtype305],"AssertionError: assert Float32Dtype() == dtype('float64')
 +  where Float32Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float32.dtype",failed
28934,tests.integ.modin.series.test_astype,test_astype_basic[str-to_dtype836],"AssertionError: assert UInt8Dtype() == dtype('int64')
 +  where UInt8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt8.dtype",failed
28937,tests.integ.modin.series.test_astype,test_astype_basic[float16-to_dtype306],"AssertionError: assert Float64Dtype() == dtype('float64')
 +  where Float64Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float64.dtype",failed
28940,tests.integ.modin.series.test_astype,test_astype_basic[str-to_dtype837],"AssertionError: assert string[python] == dtype('O')
 +  where string[python] = 0    0\n1    1\n2    2\n3    3\ndtype: string.dtype",failed
28944,tests.integ.modin.series.test_cache_result,test_cache_result_empty_series[True-no_index],"NotImplementedError: Modin supports the method Series.cache_result on the Snowflake backend, but not on the backend Pandas.",failed
28945,tests.integ.modin.series.test_cache_result,test_cache_result_empty_series[True-index],"NotImplementedError: Modin supports the method Series.cache_result on the Snowflake backend, but not on the backend Pandas.",failed
28946,tests.integ.modin.series.test_astype,test_astype_basic[float16-to_dtype307],"AssertionError: assert Int64Dtype() == dtype('int64')
 +  where Int64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int64.dtype",failed
28947,tests.integ.modin.series.test_cache_result,test_cache_result_empty_series[False-no_index],"NotImplementedError: Modin supports the method Series.cache_result on the Snowflake backend, but not on the backend Pandas.",failed
28948,tests.integ.modin.series.test_cache_result,test_cache_result_empty_series[False-index],"NotImplementedError: Modin supports the method Series.cache_result on the Snowflake backend, but not on the backend Pandas.",failed
28949,tests.integ.modin.series.test_cache_result,test_cache_result_series_complex_correctness[True],"NotImplementedError: Modin supports the method Series.cache_result on the Snowflake backend, but not on the backend Pandas.",failed
28952,tests.integ.modin.series.test_cache_result,test_cache_result_series_complex_correctness[False],"NotImplementedError: Modin supports the method Series.cache_result on the Snowflake backend, but not on the backend Pandas.",failed
28954,tests.integ.modin.series.test_astype,test_astype_basic[float16-to_dtype308],"AssertionError: assert UInt64Dtype() == dtype('int64')
 +  where UInt64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt64.dtype",failed
28958,tests.integ.modin.series.test_astype,test_astype_basic[float16-to_dtype309],"AssertionError: assert Int32Dtype() == dtype('int64')
 +  where Int32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int32.dtype",failed
28961,tests.integ.modin.series.test_astype,test_astype_basic[float16-to_dtype310],"AssertionError: assert UInt32Dtype() == dtype('int64')
 +  where UInt32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt32.dtype",failed
28966,tests.integ.modin.series.test_astype,test_astype_basic[float16-to_dtype311],"AssertionError: assert Int16Dtype() == dtype('int64')
 +  where Int16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int16.dtype",failed
28971,tests.integ.modin.series.test_astype,test_astype_basic[float16-to_dtype312],"AssertionError: assert UInt16Dtype() == dtype('int64')
 +  where UInt16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt16.dtype",failed
28975,tests.integ.modin.series.test_astype,test_astype_basic[float16-to_dtype313],"AssertionError: assert Int8Dtype() == dtype('int64')
 +  where Int8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int8.dtype",failed
28979,tests.integ.modin.series.test_astype,test_astype_basic[float16-to_dtype314],"AssertionError: assert UInt8Dtype() == dtype('int64')
 +  where UInt8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt8.dtype",failed
28981,tests.integ.modin.series.test_cache_result,test_cache_result_simple[True],"NotImplementedError: Modin supports the method Series.cache_result on the Snowflake backend, but not on the backend Pandas.",failed
28985,tests.integ.modin.series.test_astype,test_astype_basic[float16-to_dtype315],"AssertionError: assert string[python] == dtype('O')
 +  where string[python] = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: string.dtype",failed
28997,tests.integ.modin.series.test_cache_result,test_cache_result_simple[False],"NotImplementedError: Modin supports the method Series.cache_result on the Snowflake backend, but not on the backend Pandas.",failed
28998,tests.integ.modin.series.test_dt_accessor,test_strftime_neg[%a],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
28999,tests.integ.modin.series.test_astype,test_astype_basic[float16-str1],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2, 3]
[left]:  [0.0, 1.0, 2.0, 3.0]
[right]: [0, 1, 2, 3]
At positional index 0, first diff: 0.0 != 0",failed
29003,tests.integ.modin.series.test_dt_accessor,test_strftime_neg[%A],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29004,tests.integ.modin.series.test_astype,test_astype_basic[float64-uint64],"AssertionError: assert dtype('uint64') == dtype('int64')
 +  where dtype('uint64') = 0    0\n1    1\n2    2\n3    3\ndtype: uint64.dtype",failed
29006,tests.integ.modin.series.test_cache_result,test_cache_result_post_apply[True],"NotImplementedError: Modin supports the method Series.cache_result on the Snowflake backend, but not on the backend Pandas.",failed
29007,tests.integ.modin.series.test_dt_accessor,test_strftime_neg[%w],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29008,tests.integ.modin.series.test_astype,test_astype_basic[float64-int32],"AssertionError: assert dtype('int32') == dtype('int64')
 +  where dtype('int32') = 0    0\n1    1\n2    2\n3    3\ndtype: int32.dtype",failed
29011,tests.integ.modin.series.test_dt_accessor,test_strftime_neg[%b],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29013,tests.integ.modin.series.test_astype,test_astype_basic[float64-uint32],"AssertionError: assert dtype('uint32') == dtype('int64')
 +  where dtype('uint32') = 0    0\n1    1\n2    2\n3    3\ndtype: uint32.dtype",failed
29014,tests.integ.modin.series.test_dt_accessor,test_strftime_neg[%B],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29017,tests.integ.modin.series.test_astype,test_astype_basic[float64-int16],"AssertionError: assert dtype('int16') == dtype('int64')
 +  where dtype('int16') = 0    0\n1    1\n2    2\n3    3\ndtype: int16.dtype",failed
29018,tests.integ.modin.series.test_dt_accessor,test_strftime_neg[%y],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29019,tests.integ.modin.series.test_cache_result,test_cache_result_post_apply[False],"NotImplementedError: Modin supports the method Series.cache_result on the Snowflake backend, but not on the backend Pandas.",failed
29020,tests.integ.modin.series.test_astype,test_astype_basic[float64-uint16],"AssertionError: assert dtype('uint16') == dtype('int64')
 +  where dtype('uint16') = 0    0\n1    1\n2    2\n3    3\ndtype: uint16.dtype",failed
29021,tests.integ.modin.series.test_cache_result,test_cacheresult_timedelta,"NotImplementedError: Modin supports the method Series.cache_result on the Snowflake backend, but not on the backend Pandas.",failed
29022,tests.integ.modin.series.test_dt_accessor,test_strftime_neg[%I],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29024,tests.integ.modin.series.test_astype,test_astype_basic[float64-int8],"AssertionError: assert dtype('int8') == dtype('int64')
 +  where dtype('int8') = 0    0\n1    1\n2    2\n3    3\ndtype: int8.dtype",failed
29025,tests.integ.modin.series.test_dt_accessor,test_strftime_neg[%p],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29027,tests.integ.modin.series.test_dt_accessor,test_strftime_neg[%z],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29028,tests.integ.modin.series.test_astype,test_astype_basic[float64-uint8],"AssertionError: assert dtype('uint8') == dtype('int64')
 +  where dtype('uint8') = 0    0\n1    1\n2    2\n3    3\ndtype: uint8.dtype",failed
29030,tests.integ.modin.series.test_dt_accessor,test_strftime_neg[%Z],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29031,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[UTC-datetime64[ns]],TypeError: Cannot use .astype to convert from timezone-naive dtype to timezone-aware dtype. Use obj.tz_localize instead or series.dt.tz_localize instead,failed
29032,tests.integ.modin.series.test_astype,test_astype_basic[float64-float32],"AssertionError: assert dtype('float32') == dtype('float64')
 +  where dtype('float32') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float32.dtype",failed
29033,tests.integ.modin.series.test_dt_accessor,test_strftime_neg[%U],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29036,tests.integ.modin.series.test_astype,test_astype_basic[float64-float160],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
29037,tests.integ.modin.series.test_dt_accessor,test_strftime_neg[%W],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29041,tests.integ.modin.series.test_astype,test_astype_basic[float64-float161],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
29042,tests.integ.modin.series.test_dt_accessor,test_strftime_neg[%c],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29044,tests.integ.modin.series.test_dt_accessor,test_strftime_neg[%x],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29066,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_basic[False-True-read_with_select_*],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54b-0e11-71f1-000c-a90c0e7a2ab3, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_SO9QD1UK4SREADONLY CLONE SNOWPARK_TEMP_TABLE_0UM1HOTRFM), QueryRecord(query_id=01bed54c-0e11-71d7-000c-a90c0e7b114f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_SO9QD1UK4SREADONLY) LIMIT 1), QueryRecord(query_id=01bed54c-0e11-721e-000c-a90c0e7ab497, sql_text=SELECT ""__row_position__"", ""_1"", ""_2"", ""_3"", ""_4"", ""_5"", ""_6"", ""_7"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""_1"", ""_2"", ""_3"", ""_4"", ""_5"", ""_6"", ""_7"" FROM SNOWPARK_TEMP_TABLE_SO9QD1UK4SREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
29069,tests.integ.modin.series.test_astype,test_astype_basic[float64-boolean],TypeError: Need to pass bool-like values,failed
29074,tests.integ.modin.series.test_astype,test_astype_basic[float64-to_dtype334],"AssertionError: assert Float32Dtype() == dtype('float64')
 +  where Float32Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float32.dtype",failed
29077,tests.integ.modin.series.test_astype,test_astype_basic[float64-to_dtype335],"AssertionError: assert Float64Dtype() == dtype('float64')
 +  where Float64Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float64.dtype",failed
29087,tests.integ.modin.series.test_case_when,test_case_when_invalid_condition_type,ValueError: Failed to apply condition0 and replacement0.,failed
29088,tests.integ.modin.series.test_astype,test_astype_basic[float64-to_dtype336],"AssertionError: assert Int64Dtype() == dtype('int64')
 +  where Int64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int64.dtype",failed
29089,tests.integ.modin.series.test_case_when,test_case_when_invalid_replacement_type,Failed: DID NOT RAISE <class 'TypeError'>,failed
29090,tests.integ.modin.series.test_case_when,test_case_when_callable_condition_not_implemented_error,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29094,tests.integ.modin.series.test_case_when,test_case_when_callable_replacement_not_implemented_error,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29095,tests.integ.modin.series.test_astype,test_astype_basic[float64-to_dtype337],"AssertionError: assert UInt64Dtype() == dtype('int64')
 +  where UInt64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt64.dtype",failed
29099,tests.integ.modin.series.test_astype,test_astype_basic[float64-to_dtype338],"AssertionError: assert Int32Dtype() == dtype('int64')
 +  where Int32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int32.dtype",failed
29102,tests.integ.modin.series.test_astype,test_astype_basic[float64-to_dtype339],"AssertionError: assert UInt32Dtype() == dtype('int64')
 +  where UInt32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt32.dtype",failed
29104,tests.integ.modin.series.test_astype,test_astype_basic[float64-to_dtype340],"AssertionError: assert Int16Dtype() == dtype('int64')
 +  where Int16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int16.dtype",failed
29108,tests.integ.modin.series.test_astype,test_astype_basic[float64-to_dtype341],"AssertionError: assert UInt16Dtype() == dtype('int64')
 +  where UInt16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt16.dtype",failed
29109,tests.integ.modin.pivot.test_pivot_table_multiple,test_pivot_table_no_index_column_multiple_values_multiple_aggr_func_dict[B],[XPASS(strict)] SNOW-1435365 - look into no index + aggfunc as dictionary with list.,failed
29112,tests.integ.modin.series.test_astype,test_astype_basic[float64-to_dtype342],"AssertionError: assert Int8Dtype() == dtype('int64')
 +  where Int8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int8.dtype",failed
29113,tests.integ.modin.pivot.test_pivot_table_multiple,test_pivot_table_no_index_column_multiple_values_multiple_aggr_func_dict[columns1],[XPASS(strict)] SNOW-1435365 - look into no index + aggfunc as dictionary with list.,failed
29116,tests.integ.modin.series.test_astype,test_astype_basic[float64-to_dtype343],"AssertionError: assert UInt8Dtype() == dtype('int64')
 +  where UInt8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt8.dtype",failed
29119,tests.integ.modin.series.test_astype,test_astype_basic[float64-to_dtype344],"AssertionError: assert string[python] == dtype('O')
 +  where string[python] = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: string.dtype",failed
29132,tests.integ.modin.series.test_astype,test_astype_basic[float64-str],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2, 3]
[left]:  [0.0, 1.0, 2.0, 3.0]
[right]: [0, 1, 2, 3]
At positional index 0, first diff: 0.0 != 0",failed
29135,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[UTC-from_dtype25],pandas._libs.tslibs.parsing.DateParseError: day is out of range for month: 0,failed
29141,tests.integ.modin.series.test_astype,test_astype_basic[bool_-uint64],"AssertionError: assert dtype('uint64') == dtype('int64')
 +  where dtype('uint64') = 0    0\n1    1\n2    1\n3    1\ndtype: uint64.dtype",failed
29145,tests.integ.modin.series.test_astype,test_astype_basic[bool_-int32],"AssertionError: assert dtype('int32') == dtype('int64')
 +  where dtype('int32') = 0    0\n1    1\n2    1\n3    1\ndtype: int32.dtype",failed
29146,tests.integ.modin.series.test_compare,test_no_diff,"ValueError: Length mismatch: Expected axis has 0 elements, new values have 2 elements",failed
29151,tests.integ.modin.series.test_astype,test_astype_basic[bool_-uint32],"AssertionError: assert dtype('uint32') == dtype('int64')
 +  where dtype('uint32') = 0    0\n1    1\n2    1\n3    1\ndtype: uint32.dtype",failed
29154,tests.integ.modin.series.test_astype,test_astype_basic[bool_-int16],"AssertionError: assert dtype('int16') == dtype('int64')
 +  where dtype('int16') = 0    0\n1    1\n2    1\n3    1\ndtype: int16.dtype",failed
29160,tests.integ.modin.series.test_astype,test_astype_basic[bool_-uint16],"AssertionError: assert dtype('uint16') == dtype('int64')
 +  where dtype('uint16') = 0    0\n1    1\n2    1\n3    1\ndtype: uint16.dtype",failed
29167,tests.integ.modin.series.test_astype,test_astype_basic[bool_-int8],"AssertionError: assert dtype('int8') == dtype('int64')
 +  where dtype('int8') = 0    0\n1    1\n2    1\n3    1\ndtype: int8.dtype",failed
29168,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[UTC-str],pandas._libs.tslibs.parsing.DateParseError: day is out of range for month: 0,failed
29170,tests.integ.modin.series.test_compare,test_different_names,ValueError: Can only compare identically-labeled (both index and columns) DataFrame objects,failed
29171,tests.integ.modin.series.test_compare,test_different_index,"AssertionError: Regex pattern did not match.
 Regex: 'Can only compare identically-labeled objects'
 Input: 'Can only compare identically-labeled (both index and columns) DataFrame objects'",failed
29172,tests.integ.modin.series.test_astype,test_astype_basic[bool_-uint8],"AssertionError: assert dtype('uint8') == dtype('int64')
 +  where dtype('uint8') = 0    0\n1    1\n2    1\n3    1\ndtype: uint8.dtype",failed
29176,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[Asia/Tokyo-int64],"AssertionError: assert datetime64[ns, Asia/Tokyo] == datetime64[ns, UTC+09:00]
 +  where datetime64[ns, Asia/Tokyo] = 0             1970-01-01 09:00:00+09:00\n1   1970-01-01 09:00:00.000000001+09:00\n2   1970-01-01 09:00:00.000000002+09:00\n3   1970-01-01 09:00:00.000000003+09:00\ndtype: datetime64[ns, Asia/Tokyo].dtype
 +  and   datetime64[ns, UTC+09:00] = DatetimeTZDtype(tz='UTC+09:00')",failed
29177,tests.integ.modin.series.test_compare,test_align_axis[0],"AssertionError: Series are different

Attribute ""name"" are different
[left]:  None
[right]: base_series",failed
29180,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_basic[False-True-read_with_table_name],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54c-0e11-722e-000c-a90c0e7ad4e3, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_TYFD8UM16UREADONLY CLONE SNOWPARK_TEMP_TABLE_SW7DN6U1BA), QueryRecord(query_id=01bed54c-0e11-6d76-000c-a90c0e7a1f2f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_TYFD8UM16UREADONLY) LIMIT 1), QueryRecord(query_id=01bed54c-0e11-71dd-000c-a90c0e7aa867, sql_text=SELECT ""__row_position__"", ""_1"", ""_2"", ""_3"", ""_4"", ""_5"", ""_6"", ""_7"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""_1"", ""_2"", ""_3"", ""_4"", ""_5"", ""_6"", ""_7"" FROM SNOWPARK_TEMP_TABLE_TYFD8UM16UREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
29181,tests.integ.modin.series.test_astype,test_astype_basic[bool_-float32],"AssertionError: assert dtype('float32') == dtype('float64')
 +  where dtype('float32') = 0    0.0\n1    1.0\n2    1.0\n3    1.0\ndtype: float32.dtype",failed
29182,tests.integ.modin.series.test_compare,test_align_axis[index],"AssertionError: Series are different

Attribute ""name"" are different
[left]:  None
[right]: base_series",failed
29185,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[Asia/Tokyo-uint64],"AssertionError: assert datetime64[ns, Asia/Tokyo] == datetime64[ns, UTC+09:00]
 +  where datetime64[ns, Asia/Tokyo] = 0             1970-01-01 09:00:00+09:00\n1   1970-01-01 09:00:00.000000001+09:00\n2   1970-01-01 09:00:00.000000002+09:00\n3   1970-01-01 09:00:00.000000003+09:00\ndtype: datetime64[ns, Asia/Tokyo].dtype
 +  and   datetime64[ns, UTC+09:00] = DatetimeTZDtype(tz='UTC+09:00')",failed
29186,tests.integ.modin.series.test_compare,test_keep_shape,[XPASS(strict)] ,failed
29187,tests.integ.modin.series.test_astype,test_astype_basic[bool_-float160],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    1.0\n3    1.0\ndtype: float16.dtype",failed
29189,tests.integ.modin.resample.test_resample_negative,test_resample_unsupported_freq_negative[ms],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29191,tests.integ.modin.series.test_compare,test_keep_equal,[XPASS(strict)] ,failed
29192,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[Asia/Tokyo-int32],"AssertionError: assert datetime64[ns, Asia/Tokyo] == datetime64[ns, UTC+09:00]
 +  where datetime64[ns, Asia/Tokyo] = 0             1970-01-01 09:00:00+09:00\n1   1970-01-01 09:00:00.000000001+09:00\n2   1970-01-01 09:00:00.000000002+09:00\n3   1970-01-01 09:00:00.000000003+09:00\ndtype: datetime64[ns, Asia/Tokyo].dtype
 +  and   datetime64[ns, UTC+09:00] = DatetimeTZDtype(tz='UTC+09:00')",failed
29194,tests.integ.modin.series.test_astype,test_astype_basic[bool_-float161],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    1.0\n3    1.0\ndtype: float16.dtype",failed
29197,tests.integ.modin.series.test_compare,test_result_names,"AssertionError: DataFrame.columns are different

DataFrame.columns values are different (100.0 %)
[left]:  Index(['self', 'other'], dtype='object')
[right]: Index(['left', 'right'], dtype='object')
At positional index 0, first diff: self != left",failed
29199,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[Asia/Tokyo-uint32],"AssertionError: assert datetime64[ns, Asia/Tokyo] == datetime64[ns, UTC+09:00]
 +  where datetime64[ns, Asia/Tokyo] = 0             1970-01-01 09:00:00+09:00\n1   1970-01-01 09:00:00.000000001+09:00\n2   1970-01-01 09:00:00.000000002+09:00\n3   1970-01-01 09:00:00.000000003+09:00\ndtype: datetime64[ns, Asia/Tokyo].dtype
 +  and   datetime64[ns, UTC+09:00] = DatetimeTZDtype(tz='UTC+09:00')",failed
29204,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[Asia/Tokyo-int16],"AssertionError: assert datetime64[ns, Asia/Tokyo] == datetime64[ns, UTC+09:00]
 +  where datetime64[ns, Asia/Tokyo] = 0             1970-01-01 09:00:00+09:00\n1   1970-01-01 09:00:00.000000001+09:00\n2   1970-01-01 09:00:00.000000002+09:00\n3   1970-01-01 09:00:00.000000003+09:00\ndtype: datetime64[ns, Asia/Tokyo].dtype
 +  and   datetime64[ns, UTC+09:00] = DatetimeTZDtype(tz='UTC+09:00')",failed
29210,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[Asia/Tokyo-uint16],"AssertionError: assert datetime64[ns, Asia/Tokyo] == datetime64[ns, UTC+09:00]
 +  where datetime64[ns, Asia/Tokyo] = 0             1970-01-01 09:00:00+09:00\n1   1970-01-01 09:00:00.000000001+09:00\n2   1970-01-01 09:00:00.000000002+09:00\n3   1970-01-01 09:00:00.000000003+09:00\ndtype: datetime64[ns, Asia/Tokyo].dtype
 +  and   datetime64[ns, UTC+09:00] = DatetimeTZDtype(tz='UTC+09:00')",failed
29211,tests.integ.modin.resample.test_resample_negative,test_resample_unsupported_freq_negative[ns],"numpy.core._exceptions._ArrayMemoryError: Unable to allocate 8.59 PiB for an array with shape (1209600000000002,) and data type int64",failed
29213,tests.integ.modin.series.test_astype,test_astype_basic[bool_-boolean],"AssertionError: assert BooleanDtype == dtype('bool')
 +  where BooleanDtype = 0    False\n1     True\n2     True\n3     True\ndtype: boolean.dtype",failed
29215,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[Asia/Tokyo-int8],"AssertionError: assert datetime64[ns, Asia/Tokyo] == datetime64[ns, UTC+09:00]
 +  where datetime64[ns, Asia/Tokyo] = 0             1970-01-01 09:00:00+09:00\n1   1970-01-01 09:00:00.000000001+09:00\n2   1970-01-01 09:00:00.000000002+09:00\n3   1970-01-01 09:00:00.000000003+09:00\ndtype: datetime64[ns, Asia/Tokyo].dtype
 +  and   datetime64[ns, UTC+09:00] = DatetimeTZDtype(tz='UTC+09:00')",failed
29216,tests.integ.modin.series.test_astype,test_astype_basic[bool_-to_dtype363],"AssertionError: assert Float32Dtype() == dtype('float64')
 +  where Float32Dtype() = 0    0.0\n1    1.0\n2    1.0\n3    1.0\ndtype: Float32.dtype",failed
29218,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[Asia/Tokyo-uint8],"AssertionError: assert datetime64[ns, Asia/Tokyo] == datetime64[ns, UTC+09:00]
 +  where datetime64[ns, Asia/Tokyo] = 0             1970-01-01 09:00:00+09:00\n1   1970-01-01 09:00:00.000000001+09:00\n2   1970-01-01 09:00:00.000000002+09:00\n3   1970-01-01 09:00:00.000000003+09:00\ndtype: datetime64[ns, Asia/Tokyo].dtype
 +  and   datetime64[ns, UTC+09:00] = DatetimeTZDtype(tz='UTC+09:00')",failed
29221,tests.integ.modin.series.test_astype,test_astype_basic[bool_-to_dtype364],"AssertionError: assert Float64Dtype() == dtype('float64')
 +  where Float64Dtype() = 0    0.0\n1    1.0\n2    1.0\n3    1.0\ndtype: Float64.dtype",failed
29222,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[Asia/Tokyo-float32],"AssertionError: assert datetime64[ns, Asia/Tokyo] == datetime64[ns, UTC+09:00]
 +  where datetime64[ns, Asia/Tokyo] = 0             1970-01-01 09:00:00+09:00\n1   1970-01-01 09:00:00.000000001+09:00\n2   1970-01-01 09:00:00.000000002+09:00\n3   1970-01-01 09:00:00.000000003+09:00\ndtype: datetime64[ns, Asia/Tokyo].dtype
 +  and   datetime64[ns, UTC+09:00] = DatetimeTZDtype(tz='UTC+09:00')",failed
29226,tests.integ.modin.series.test_astype,test_astype_basic[bool_-to_dtype365],"AssertionError: assert Int64Dtype() == dtype('int64')
 +  where Int64Dtype() = 0    0\n1    1\n2    1\n3    1\ndtype: Int64.dtype",failed
29227,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[Asia/Tokyo-float160],"AssertionError: assert datetime64[ns, Asia/Tokyo] == datetime64[ns, UTC+09:00]
 +  where datetime64[ns, Asia/Tokyo] = 0             1970-01-01 09:00:00+09:00\n1   1970-01-01 09:00:00.000000001+09:00\n2   1970-01-01 09:00:00.000000002+09:00\n3   1970-01-01 09:00:00.000000003+09:00\ndtype: datetime64[ns, Asia/Tokyo].dtype
 +  and   datetime64[ns, UTC+09:00] = DatetimeTZDtype(tz='UTC+09:00')",failed
29228,tests.integ.modin.series.test_convert_dtype,test_NotImplementedError,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29231,tests.integ.modin.series.test_astype,test_astype_basic[bool_-to_dtype366],"AssertionError: assert UInt64Dtype() == dtype('int64')
 +  where UInt64Dtype() = 0    0\n1    1\n2    1\n3    1\ndtype: UInt64.dtype",failed
29233,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[Asia/Tokyo-float161],"AssertionError: assert datetime64[ns, Asia/Tokyo] == datetime64[ns, UTC+09:00]
 +  where datetime64[ns, Asia/Tokyo] = 0             1970-01-01 09:00:00+09:00\n1   1970-01-01 09:00:00.000000001+09:00\n2   1970-01-01 09:00:00.000000002+09:00\n3   1970-01-01 09:00:00.000000003+09:00\ndtype: datetime64[ns, Asia/Tokyo].dtype
 +  and   datetime64[ns, UTC+09:00] = DatetimeTZDtype(tz='UTC+09:00')",failed
29235,tests.integ.modin.series.test_astype,test_astype_basic[bool_-to_dtype367],"AssertionError: assert Int32Dtype() == dtype('int64')
 +  where Int32Dtype() = 0    0\n1    1\n2    1\n3    1\ndtype: Int32.dtype",failed
29237,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[Asia/Tokyo-float64],"AssertionError: assert datetime64[ns, Asia/Tokyo] == datetime64[ns, UTC+09:00]
 +  where datetime64[ns, Asia/Tokyo] = 0             1970-01-01 09:00:00+09:00\n1   1970-01-01 09:00:00.000000001+09:00\n2   1970-01-01 09:00:00.000000002+09:00\n3   1970-01-01 09:00:00.000000003+09:00\ndtype: datetime64[ns, Asia/Tokyo].dtype
 +  and   datetime64[ns, UTC+09:00] = DatetimeTZDtype(tz='UTC+09:00')",failed
29239,tests.integ.modin.series.test_astype,test_astype_basic[bool_-to_dtype368],"AssertionError: assert UInt32Dtype() == dtype('int64')
 +  where UInt32Dtype() = 0    0\n1    1\n2    1\n3    1\ndtype: UInt32.dtype",failed
29243,tests.integ.modin.series.test_astype,test_astype_basic[bool_-to_dtype369],"AssertionError: assert Int16Dtype() == dtype('int64')
 +  where Int16Dtype() = 0    0\n1    1\n2    1\n3    1\ndtype: Int16.dtype",failed
29247,tests.integ.modin.series.test_astype,test_astype_basic[bool_-to_dtype370],"AssertionError: assert UInt16Dtype() == dtype('int64')
 +  where UInt16Dtype() = 0    0\n1    1\n2    1\n3    1\ndtype: UInt16.dtype",failed
29252,tests.integ.modin.series.test_astype,test_astype_basic[bool_-to_dtype371],"AssertionError: assert Int8Dtype() == dtype('int64')
 +  where Int8Dtype() = 0    0\n1    1\n2    1\n3    1\ndtype: Int8.dtype",failed
29259,tests.integ.modin.series.test_astype,test_astype_basic[bool_-to_dtype372],"AssertionError: assert UInt8Dtype() == dtype('int64')
 +  where UInt8Dtype() = 0    0\n1    1\n2    1\n3    1\ndtype: UInt8.dtype",failed
29261,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[Asia/Tokyo-datetime64[ns]],TypeError: Cannot use .astype to convert from timezone-naive dtype to timezone-aware dtype. Use obj.tz_localize instead or series.dt.tz_localize instead,failed
29265,tests.integ.modin.series.test_astype,test_astype_basic[bool_-to_dtype373],"AssertionError: assert string[python] == dtype('O')
 +  where string[python] = 0    False\n1     True\n2     True\n3     True\ndtype: string.dtype",failed
29275,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_basic[False-False-read_with_select_*],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54c-0e11-6e4d-000c-a90c0e7b345b, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_QJO4O9Z75A) LIMIT 1), QueryRecord(query_id=01bed54c-0e11-6d08-000c-a90c0e7a9a27, sql_text=SELECT ""__row_position__"", ""_1"", ""_2"", ""_3"", ""_4"", ""_5"", ""_6"", ""_7"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""_1"", ""_2"", ""_3"", ""_4"", ""_5"", ""_6"", ""_7"" FROM (SNOWPARK_TEMP_TABLE_QJO4O9Z75A)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
29277,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[Asia/Tokyo-from_dtype15],"AssertionError: assert datetime64[ns, Asia/Tokyo] == datetime64[ns, UTC+09:00]
 +  where datetime64[ns, Asia/Tokyo] = 0             1970-01-01 09:00:00+09:00\n1   1970-01-01 09:00:00.000000001+09:00\n2   1970-01-01 09:00:00.000000002+09:00\n3   1970-01-01 09:00:00.000000003+09:00\ndtype: datetime64[ns, Asia/Tokyo].dtype
 +  and   datetime64[ns, UTC+09:00] = DatetimeTZDtype(tz='UTC+09:00')",failed
29283,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[Asia/Tokyo-from_dtype16],"AssertionError: assert datetime64[ns, Asia/Tokyo] == datetime64[ns, UTC+09:00]
 +  where datetime64[ns, Asia/Tokyo] = 0             1970-01-01 09:00:00+09:00\n1   1970-01-01 09:00:00.000000001+09:00\n2   1970-01-01 09:00:00.000000002+09:00\n3   1970-01-01 09:00:00.000000003+09:00\ndtype: datetime64[ns, Asia/Tokyo].dtype
 +  and   datetime64[ns, UTC+09:00] = DatetimeTZDtype(tz='UTC+09:00')",failed
29287,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[Asia/Tokyo-from_dtype17],"AssertionError: assert datetime64[ns, Asia/Tokyo] == datetime64[ns, UTC+09:00]
 +  where datetime64[ns, Asia/Tokyo] = 0             1970-01-01 09:00:00+09:00\n1   1970-01-01 09:00:00.000000001+09:00\n2   1970-01-01 09:00:00.000000002+09:00\n3   1970-01-01 09:00:00.000000003+09:00\ndtype: datetime64[ns, Asia/Tokyo].dtype
 +  and   datetime64[ns, UTC+09:00] = DatetimeTZDtype(tz='UTC+09:00')",failed
29291,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[Asia/Tokyo-from_dtype18],"AssertionError: assert datetime64[ns, Asia/Tokyo] == datetime64[ns, UTC+09:00]
 +  where datetime64[ns, Asia/Tokyo] = 0             1970-01-01 09:00:00+09:00\n1   1970-01-01 09:00:00.000000001+09:00\n2   1970-01-01 09:00:00.000000002+09:00\n3   1970-01-01 09:00:00.000000003+09:00\ndtype: datetime64[ns, Asia/Tokyo].dtype
 +  and   datetime64[ns, UTC+09:00] = DatetimeTZDtype(tz='UTC+09:00')",failed
29294,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[Asia/Tokyo-from_dtype19],"AssertionError: assert datetime64[ns, Asia/Tokyo] == datetime64[ns, UTC+09:00]
 +  where datetime64[ns, Asia/Tokyo] = 0             1970-01-01 09:00:00+09:00\n1   1970-01-01 09:00:00.000000001+09:00\n2   1970-01-01 09:00:00.000000002+09:00\n3   1970-01-01 09:00:00.000000003+09:00\ndtype: datetime64[ns, Asia/Tokyo].dtype
 +  and   datetime64[ns, UTC+09:00] = DatetimeTZDtype(tz='UTC+09:00')",failed
29297,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[Asia/Tokyo-from_dtype20],"AssertionError: assert datetime64[ns, Asia/Tokyo] == datetime64[ns, UTC+09:00]
 +  where datetime64[ns, Asia/Tokyo] = 0             1970-01-01 09:00:00+09:00\n1   1970-01-01 09:00:00.000000001+09:00\n2   1970-01-01 09:00:00.000000002+09:00\n3   1970-01-01 09:00:00.000000003+09:00\ndtype: datetime64[ns, Asia/Tokyo].dtype
 +  and   datetime64[ns, UTC+09:00] = DatetimeTZDtype(tz='UTC+09:00')",failed
29299,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[Asia/Tokyo-from_dtype21],"AssertionError: assert datetime64[ns, Asia/Tokyo] == datetime64[ns, UTC+09:00]
 +  where datetime64[ns, Asia/Tokyo] = 0             1970-01-01 09:00:00+09:00\n1   1970-01-01 09:00:00.000000001+09:00\n2   1970-01-01 09:00:00.000000002+09:00\n3   1970-01-01 09:00:00.000000003+09:00\ndtype: datetime64[ns, Asia/Tokyo].dtype
 +  and   datetime64[ns, UTC+09:00] = DatetimeTZDtype(tz='UTC+09:00')",failed
29304,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[Asia/Tokyo-from_dtype22],"AssertionError: assert datetime64[ns, Asia/Tokyo] == datetime64[ns, UTC+09:00]
 +  where datetime64[ns, Asia/Tokyo] = 0             1970-01-01 09:00:00+09:00\n1   1970-01-01 09:00:00.000000001+09:00\n2   1970-01-01 09:00:00.000000002+09:00\n3   1970-01-01 09:00:00.000000003+09:00\ndtype: datetime64[ns, Asia/Tokyo].dtype
 +  and   datetime64[ns, UTC+09:00] = DatetimeTZDtype(tz='UTC+09:00')",failed
29307,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[Asia/Tokyo-from_dtype23],"AssertionError: assert datetime64[ns, Asia/Tokyo] == datetime64[ns, UTC+09:00]
 +  where datetime64[ns, Asia/Tokyo] = 0             1970-01-01 09:00:00+09:00\n1   1970-01-01 09:00:00.000000001+09:00\n2   1970-01-01 09:00:00.000000002+09:00\n3   1970-01-01 09:00:00.000000003+09:00\ndtype: datetime64[ns, Asia/Tokyo].dtype
 +  and   datetime64[ns, UTC+09:00] = DatetimeTZDtype(tz='UTC+09:00')",failed
29312,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[Asia/Tokyo-from_dtype24],"AssertionError: assert datetime64[ns, Asia/Tokyo] == datetime64[ns, UTC+09:00]
 +  where datetime64[ns, Asia/Tokyo] = 0             1970-01-01 09:00:00+09:00\n1   1970-01-01 09:00:00.000000001+09:00\n2   1970-01-01 09:00:00.000000002+09:00\n3   1970-01-01 09:00:00.000000003+09:00\ndtype: datetime64[ns, Asia/Tokyo].dtype
 +  and   datetime64[ns, UTC+09:00] = DatetimeTZDtype(tz='UTC+09:00')",failed
29317,tests.integ.modin.series.test_astype,test_astype_basic[datetime64[ns]-uint64],TypeError: Converting from datetime64[ns] to uint64 is not supported. Do obj.astype('int64').astype(dtype) instead,failed
29325,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[Asia/Tokyo-from_dtype25],pandas._libs.tslibs.parsing.DateParseError: day is out of range for month: 0,failed
29330,tests.integ.modin.series.test_astype,test_astype_basic[datetime64[ns]-int32],TypeError: Converting from datetime64[ns] to int32 is not supported. Do obj.astype('int64').astype(dtype) instead,failed
29331,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[Asia/Tokyo-int],"AssertionError: assert datetime64[ns, Asia/Tokyo] == datetime64[ns, UTC+09:00]
 +  where datetime64[ns, Asia/Tokyo] = 0             1970-01-01 09:00:00+09:00\n1   1970-01-01 09:00:00.000000001+09:00\n2   1970-01-01 09:00:00.000000002+09:00\n3   1970-01-01 09:00:00.000000003+09:00\ndtype: datetime64[ns, Asia/Tokyo].dtype
 +  and   datetime64[ns, UTC+09:00] = DatetimeTZDtype(tz='UTC+09:00')",failed
29333,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_basic[False-False-read_with_table_name],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54c-0e11-71d7-000c-a90c0e7b16af, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_Q8G6D3D9ZG) LIMIT 1), QueryRecord(query_id=01bed54c-0e11-721e-000c-a90c0e7ab9fb, sql_text=SELECT ""__row_position__"", ""_1"", ""_2"", ""_3"", ""_4"", ""_5"", ""_6"", ""_7"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""_1"", ""_2"", ""_3"", ""_4"", ""_5"", ""_6"", ""_7"" FROM (SNOWPARK_TEMP_TABLE_Q8G6D3D9ZG)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
29336,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[Asia/Tokyo-float],"AssertionError: assert datetime64[ns, Asia/Tokyo] == datetime64[ns, UTC+09:00]
 +  where datetime64[ns, Asia/Tokyo] = 0             1970-01-01 09:00:00+09:00\n1   1970-01-01 09:00:00.000000001+09:00\n2   1970-01-01 09:00:00.000000002+09:00\n3   1970-01-01 09:00:00.000000003+09:00\ndtype: datetime64[ns, Asia/Tokyo].dtype
 +  and   datetime64[ns, UTC+09:00] = DatetimeTZDtype(tz='UTC+09:00')",failed
29341,tests.integ.modin.series.test_astype,test_astype_basic[datetime64[ns]-uint32],TypeError: Converting from datetime64[ns] to uint32 is not supported. Do obj.astype('int64').astype(dtype) instead,failed
29350,tests.integ.modin.series.test_astype,test_astype_basic[datetime64[ns]-int16],TypeError: Converting from datetime64[ns] to int16 is not supported. Do obj.astype('int64').astype(dtype) instead,failed
29358,tests.integ.modin.series.test_astype,test_astype_basic[datetime64[ns]-uint16],TypeError: Converting from datetime64[ns] to uint16 is not supported. Do obj.astype('int64').astype(dtype) instead,failed
29365,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[Asia/Tokyo-str],pandas._libs.tslibs.parsing.DateParseError: day is out of range for month: 0,failed
29371,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[America/Los_Angeles-int64],"AssertionError: assert datetime64[ns, America/Los_Angeles] == datetime64[ns, UTC-08:00]
 +  where datetime64[ns, America/Los_Angeles] = 0             1969-12-31 16:00:00-08:00\n1   1969-12-31 16:00:00.000000001-08:00\n2   1969-12-31 16:00:00.000000002-08:00\n3   1969-12-31 16:00:00.000000003-08:00\ndtype: datetime64[ns, America/Los_Angeles].dtype
 +  and   datetime64[ns, UTC-08:00] = DatetimeTZDtype(tz='UTC-08:00')",failed
29374,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[America/Los_Angeles-uint64],"AssertionError: assert datetime64[ns, America/Los_Angeles] == datetime64[ns, UTC-08:00]
 +  where datetime64[ns, America/Los_Angeles] = 0             1969-12-31 16:00:00-08:00\n1   1969-12-31 16:00:00.000000001-08:00\n2   1969-12-31 16:00:00.000000002-08:00\n3   1969-12-31 16:00:00.000000003-08:00\ndtype: datetime64[ns, America/Los_Angeles].dtype
 +  and   datetime64[ns, UTC-08:00] = DatetimeTZDtype(tz='UTC-08:00')",failed
29375,tests.integ.modin.pivot.test_pivot_table_multiple,test_pivot_table_no_values_by_default[None],[XPASS(strict)] ,failed
29377,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[America/Los_Angeles-int32],"AssertionError: assert datetime64[ns, America/Los_Angeles] == datetime64[ns, UTC-08:00]
 +  where datetime64[ns, America/Los_Angeles] = 0             1969-12-31 16:00:00-08:00\n1   1969-12-31 16:00:00.000000001-08:00\n2   1969-12-31 16:00:00.000000002-08:00\n3   1969-12-31 16:00:00.000000003-08:00\ndtype: datetime64[ns, America/Los_Angeles].dtype
 +  and   datetime64[ns, UTC-08:00] = DatetimeTZDtype(tz='UTC-08:00')",failed
29379,tests.integ.modin.pivot.test_pivot_table_multiple,test_pivot_table_no_values_by_default[values1],[XPASS(strict)] ,failed
29382,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[America/Los_Angeles-uint32],"AssertionError: assert datetime64[ns, America/Los_Angeles] == datetime64[ns, UTC-08:00]
 +  where datetime64[ns, America/Los_Angeles] = 0             1969-12-31 16:00:00-08:00\n1   1969-12-31 16:00:00.000000001-08:00\n2   1969-12-31 16:00:00.000000002-08:00\n3   1969-12-31 16:00:00.000000003-08:00\ndtype: datetime64[ns, America/Los_Angeles].dtype
 +  and   datetime64[ns, UTC-08:00] = DatetimeTZDtype(tz='UTC-08:00')",failed
29385,tests.integ.modin.series.test_astype,test_astype_basic[datetime64[ns]-int8],TypeError: Converting from datetime64[ns] to int8 is not supported. Do obj.astype('int64').astype(dtype) instead,failed
29386,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[America/Los_Angeles-int16],"AssertionError: assert datetime64[ns, America/Los_Angeles] == datetime64[ns, UTC-08:00]
 +  where datetime64[ns, America/Los_Angeles] = 0             1969-12-31 16:00:00-08:00\n1   1969-12-31 16:00:00.000000001-08:00\n2   1969-12-31 16:00:00.000000002-08:00\n3   1969-12-31 16:00:00.000000003-08:00\ndtype: datetime64[ns, America/Los_Angeles].dtype
 +  and   datetime64[ns, UTC-08:00] = DatetimeTZDtype(tz='UTC-08:00')",failed
29389,tests.integ.modin.series.test_create_or_replace_dynamic_table,test_create_or_replace_dynamic_table_enforce_ordering_raises,UnboundLocalError: local variable 'dynamic_table_name' referenced before assignment,failed
29391,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[America/Los_Angeles-uint16],"AssertionError: assert datetime64[ns, America/Los_Angeles] == datetime64[ns, UTC-08:00]
 +  where datetime64[ns, America/Los_Angeles] = 0             1969-12-31 16:00:00-08:00\n1   1969-12-31 16:00:00.000000001-08:00\n2   1969-12-31 16:00:00.000000002-08:00\n3   1969-12-31 16:00:00.000000003-08:00\ndtype: datetime64[ns, America/Los_Angeles].dtype
 +  and   datetime64[ns, UTC-08:00] = DatetimeTZDtype(tz='UTC-08:00')",failed
29394,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[America/Los_Angeles-int8],"AssertionError: assert datetime64[ns, America/Los_Angeles] == datetime64[ns, UTC-08:00]
 +  where datetime64[ns, America/Los_Angeles] = 0             1969-12-31 16:00:00-08:00\n1   1969-12-31 16:00:00.000000001-08:00\n2   1969-12-31 16:00:00.000000002-08:00\n3   1969-12-31 16:00:00.000000003-08:00\ndtype: datetime64[ns, America/Los_Angeles].dtype
 +  and   datetime64[ns, UTC-08:00] = DatetimeTZDtype(tz='UTC-08:00')",failed
29397,tests.integ.modin.series.test_astype,test_astype_basic[datetime64[ns]-uint8],TypeError: Converting from datetime64[ns] to uint8 is not supported. Do obj.astype('int64').astype(dtype) instead,failed
29399,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[America/Los_Angeles-uint8],"AssertionError: assert datetime64[ns, America/Los_Angeles] == datetime64[ns, UTC-08:00]
 +  where datetime64[ns, America/Los_Angeles] = 0             1969-12-31 16:00:00-08:00\n1   1969-12-31 16:00:00.000000001-08:00\n2   1969-12-31 16:00:00.000000002-08:00\n3   1969-12-31 16:00:00.000000003-08:00\ndtype: datetime64[ns, America/Los_Angeles].dtype
 +  and   datetime64[ns, UTC-08:00] = DatetimeTZDtype(tz='UTC-08:00')",failed
29403,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[America/Los_Angeles-float32],"AssertionError: assert datetime64[ns, America/Los_Angeles] == datetime64[ns, UTC-08:00]
 +  where datetime64[ns, America/Los_Angeles] = 0             1969-12-31 16:00:00-08:00\n1   1969-12-31 16:00:00.000000001-08:00\n2   1969-12-31 16:00:00.000000002-08:00\n3   1969-12-31 16:00:00.000000003-08:00\ndtype: datetime64[ns, America/Los_Angeles].dtype
 +  and   datetime64[ns, UTC-08:00] = DatetimeTZDtype(tz='UTC-08:00')",failed
29404,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_basic[True-True-read_with_select_*],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54c-0e11-722e-000c-a90c0e7ada73, sql_text=CREATE OR REPLACE SCOPED TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_NBLGO5QF55READONLY CLONE SNOWPARK_TEMP_TABLE_7XIQ9O6EZE), QueryRecord(query_id=01bed54c-0e11-6d76-000c-a90c0e7b8477, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_NBLGO5QF55READONLY) LIMIT 1), QueryRecord(query_id=01bed54c-0e11-719e-000c-a90c0e7b47ab, sql_text=SELECT ""__row_position__"", ""_1"", ""_2"", ""_3"", ""_4"", ""_5"", ""_6"", ""_7"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""_1"", ""_2"", ""_3"", ""_4"", ""_5"", ""_6"", ""_7"" FROM SNOWPARK_TEMP_TABLE_NBLGO5QF55READONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
29408,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[America/Los_Angeles-float160],"AssertionError: assert datetime64[ns, America/Los_Angeles] == datetime64[ns, UTC-08:00]
 +  where datetime64[ns, America/Los_Angeles] = 0             1969-12-31 16:00:00-08:00\n1   1969-12-31 16:00:00.000000001-08:00\n2   1969-12-31 16:00:00.000000002-08:00\n3   1969-12-31 16:00:00.000000003-08:00\ndtype: datetime64[ns, America/Los_Angeles].dtype
 +  and   datetime64[ns, UTC-08:00] = DatetimeTZDtype(tz='UTC-08:00')",failed
29409,tests.integ.modin.series.test_astype,test_astype_basic[datetime64[ns]-float32],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: 'Cannot cast DatetimeArray to dtype float32'",failed
29413,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[America/Los_Angeles-float161],"AssertionError: assert datetime64[ns, America/Los_Angeles] == datetime64[ns, UTC-08:00]
 +  where datetime64[ns, America/Los_Angeles] = 0             1969-12-31 16:00:00-08:00\n1   1969-12-31 16:00:00.000000001-08:00\n2   1969-12-31 16:00:00.000000002-08:00\n3   1969-12-31 16:00:00.000000003-08:00\ndtype: datetime64[ns, America/Los_Angeles].dtype
 +  and   datetime64[ns, UTC-08:00] = DatetimeTZDtype(tz='UTC-08:00')",failed
29416,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[America/Los_Angeles-float64],"AssertionError: assert datetime64[ns, America/Los_Angeles] == datetime64[ns, UTC-08:00]
 +  where datetime64[ns, America/Los_Angeles] = 0             1969-12-31 16:00:00-08:00\n1   1969-12-31 16:00:00.000000001-08:00\n2   1969-12-31 16:00:00.000000002-08:00\n3   1969-12-31 16:00:00.000000003-08:00\ndtype: datetime64[ns, America/Los_Angeles].dtype
 +  and   datetime64[ns, UTC-08:00] = DatetimeTZDtype(tz='UTC-08:00')",failed
29430,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[America/Los_Angeles-datetime64[ns]],TypeError: Cannot use .astype to convert from timezone-naive dtype to timezone-aware dtype. Use obj.tz_localize instead or series.dt.tz_localize instead,failed
29436,tests.integ.modin.series.test_align,test_align_series_with_frame[outer],AssertionError,failed
29441,tests.integ.modin.series.test_astype,test_astype_to_DatetimeTZDtype[America/Los_Angeles-from_dtype15],"AssertionError: assert datetime64[ns, America/Los_Angeles] == datetime64[ns, UTC-08:00]
 +  where datetime64[ns, America/Los_Angeles] = 0             1969-12-31 16:00:00-08:00\n1   1969-12-31 16:00:00.000000001-08:00\n2   1969-12-31 16:00:00.000000002-08:00\n3   1969-12-31 16:00:00.000000003-08:00\ndtype: datetime64[ns, America/Los_Angeles].dtype
 +  and   datetime64[ns, UTC-08:00] = DatetimeTZDtype(tz='UTC-08:00')",failed
29443,tests.integ.modin.series.test_align,test_align_series_with_frame[inner],AssertionError,failed
29445,tests.integ.modin.series.test_astype,test_astype_basic[datetime64[ns]-float160],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: 'Cannot cast DatetimeArray to dtype float16'",failed
29446,tests.integ.modin.series.test_create_or_replace_dynamic_table,test_create_or_replace_dynamic_table_no_enforce_ordering,"NotImplementedError: Modin supports the method Series.create_or_replace_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
29450,tests.integ.modin.series.test_align,test_align_series_with_frame[left],AssertionError,failed
29453,tests.integ.modin.series.test_astype,test_astype_basic[datetime64[ns]-float161],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: 'Cannot cast DatetimeArray to dtype float16'",failed
29454,tests.integ.modin.series.test_align,test_align_series_with_frame[right],AssertionError,failed
29459,tests.integ.modin.series.test_align,test_align_series_with_frame_axis_negative[outer],Failed: DID NOT RAISE <class 'ValueError'>,failed
29464,tests.integ.modin.series.test_astype,test_astype_basic[datetime64[ns]-float64],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: 'Cannot cast DatetimeArray to dtype float64'",failed
29466,tests.integ.modin.series.test_align,test_align_series_with_frame_axis_negative[inner],Failed: DID NOT RAISE <class 'ValueError'>,failed
29468,tests.integ.modin.series.test_drop_duplicates,test_drop_duplicates_nan_none[first-expected0],"AssertionError: Series are different

Series length are different
[left]:  3, Index([0, 1, 3], dtype='int64')
[right]: 2, Index([0, 1], dtype='int64')",failed
29470,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_basic[True-True-read_with_table_name],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54c-0e11-6e5e-000c-a90c0e7b77d3, sql_text=CREATE OR REPLACE SCOPED TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_GDA8DXD16XREADONLY CLONE SNOWPARK_TEMP_TABLE_5T45QBK72G), QueryRecord(query_id=01bed54c-0e11-7168-000c-a90c0e7bb4c7, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_GDA8DXD16XREADONLY) LIMIT 1), QueryRecord(query_id=01bed54c-0e11-6bfa-000c-a90c0e7c0277, sql_text=SELECT ""__row_position__"", ""_1"", ""_2"", ""_3"", ""_4"", ""_5"", ""_6"", ""_7"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""_1"", ""_2"", ""_3"", ""_4"", ""_5"", ""_6"", ""_7"" FROM SNOWPARK_TEMP_TABLE_GDA8DXD16XREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
29474,tests.integ.modin.series.test_drop_duplicates,test_drop_duplicates_nan_none[last-expected1],"AssertionError: Series are different

Series length are different
[left]:  3, Index([2, 3, 4], dtype='int64')
[right]: 2, Index([2, 4], dtype='int64')",failed
29475,tests.integ.modin.series.test_align,test_align_series_with_frame_axis_negative[left],Failed: DID NOT RAISE <class 'ValueError'>,failed
29476,tests.integ.modin.series.test_create_or_replace_dynamic_table,test_create_or_replace_dynamic_table_multiple_sessions_enforce_ordering,"NotImplementedError: Modin supports the method Series.create_or_replace_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
29479,tests.integ.modin.series.test_drop_duplicates,test_drop_duplicates_nan_none[False-expected2],"AssertionError: Series are different

Series length are different
[left]:  1, Index([3], dtype='int64')
[right]: 0, RangeIndex(start=0, stop=0, step=1)",failed
29481,tests.integ.modin.index.test_timedelta_index_methods,test_timedelta_index_construction,"AssertionError: assert False
 +  where False = isinstance(TimedeltaIndex(['1 days', '2 days', '3 days'], dtype='timedelta64[ns]', freq=None), <class 'snowflake.snowpark.modin.plugin.extensions.timedelta_index.TimedeltaIndex'>)
 +    where <class 'snowflake.snowpark.modin.plugin.extensions.timedelta_index.TimedeltaIndex'> = pd.TimedeltaIndex",failed
29485,tests.integ.modin.series.test_align,test_align_series_with_frame_axis_negative[right],Failed: DID NOT RAISE <class 'ValueError'>,failed
29497,tests.integ.modin.series.test_align,test_align_series_fill_value_negative,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29498,tests.integ.modin.series.test_astype,test_astype_basic[datetime64[ns]-boolean],TypeError: Need to pass bool-like values,failed
29509,tests.integ.modin.series.test_align,test_align_series_axis_1_negative,Failed: DID NOT RAISE <class 'ValueError'>,failed
29515,tests.integ.modin.series.test_create_or_replace_dynamic_table,test_create_or_replace_dynamic_table_index[None-True],"NotImplementedError: Modin supports the method Series.create_or_replace_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
29518,tests.integ.modin.series.test_align,test_align_series_copy_negative,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29526,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_basic[True-False-read_with_select_*],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54c-0e11-71c8-000c-a90c0e7b5cff, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_51UBJ5H352) LIMIT 1), QueryRecord(query_id=01bed54c-0e11-6e5e-000c-a90c0e7b7b5f, sql_text=SELECT ""__row_position__"", ""_1"", ""_2"", ""_3"", ""_4"", ""_5"", ""_6"", ""_7"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""_1"", ""_2"", ""_3"", ""_4"", ""_5"", ""_6"", ""_7"" FROM (SNOWPARK_TEMP_TABLE_51UBJ5H352)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
29534,tests.integ.modin.series.test_align,test_align_series_invalid_axis_negative,"AssertionError: Regex pattern did not match.
 Regex: 'No axis named 2 for object type Series'
 Input: 'No axis named 2 for object type DataFrame'",failed
29543,tests.integ.modin.series.test_create_or_replace_dynamic_table,test_create_or_replace_dynamic_table_index[None-False],"NotImplementedError: Modin supports the method Series.create_or_replace_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
29545,tests.integ.modin.series.test_align,test_align_series_deprecated_negative,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29552,tests.integ.modin.pivot.test_pivot_table_negative,test_pivot_table_not_supported_aggfunc_with_empty_list,"AssertionError: Regex pattern did not match.
 Regex: 'Expected at least one aggregation function'
 Input: 'No objects to concatenate'",failed
29554,tests.integ.modin.pivot.test_pivot_table_negative,test_pivot_table_not_implemented_or_supported,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29560,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_basic[True-False-read_with_table_name],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54c-0e11-6e4e-000c-a90c0e7be797, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_6JGXSV3IGV) LIMIT 1), QueryRecord(query_id=01bed54c-0e11-719e-000c-a90c0e7b4dff, sql_text=SELECT ""__row_position__"", ""_1"", ""_2"", ""_3"", ""_4"", ""_5"", ""_6"", ""_7"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""_1"", ""_2"", ""_3"", ""_4"", ""_5"", ""_6"", ""_7"" FROM (SNOWPARK_TEMP_TABLE_6JGXSV3IGV)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
29567,tests.integ.modin.series.test_astype,test_astype_basic[datetime64[ns]-to_dtype394],TypeError: datetime64[ns] cannot be converted to IntegerDtype,failed
29573,tests.integ.modin.series.test_create_or_replace_dynamic_table,test_create_or_replace_dynamic_table_index[index_labels1-True],"NotImplementedError: Modin supports the method Series.create_or_replace_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
29582,tests.integ.modin.series.test_astype,test_astype_basic[datetime64[ns]-to_dtype395],TypeError: datetime64[ns] cannot be converted to IntegerDtype,failed
29592,tests.integ.modin.series.test_all_any,test_all_float_not_implemented[True-data0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29595,tests.integ.modin.series.test_all_any,test_all_float_not_implemented[True-data1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29598,tests.integ.modin.series.test_all_any,test_all_float_not_implemented[True-data2],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29600,tests.integ.modin.series.test_astype,test_astype_basic[datetime64[ns]-to_dtype396],TypeError: datetime64[ns] cannot be converted to IntegerDtype,failed
29603,tests.integ.modin.series.test_all_any,test_all_float_not_implemented[True-data3],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29606,tests.integ.modin.series.test_all_any,test_all_float_not_implemented[False-data0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29610,tests.integ.modin.series.test_all_any,test_all_float_not_implemented[False-data1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29613,tests.integ.modin.series.test_all_any,test_all_float_not_implemented[False-data2],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29614,tests.integ.modin.series.test_astype,test_astype_basic[datetime64[ns]-to_dtype397],TypeError: datetime64[ns] cannot be converted to IntegerDtype,failed
29617,tests.integ.modin.series.test_all_any,test_all_float_not_implemented[False-data3],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29620,tests.integ.modin.series.test_create_or_replace_dynamic_table,test_create_or_replace_dynamic_table_index[index_labels1-False],"NotImplementedError: Modin supports the method Series.create_or_replace_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
29621,tests.integ.modin.series.test_all_any,test_any_float_not_implemented[True-data0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29626,tests.integ.modin.series.test_all_any,test_any_float_not_implemented[True-data1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29631,tests.integ.modin.series.test_all_any,test_any_float_not_implemented[True-data2],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29632,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_semi_structured_types[False-True-read_with_select_*],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54c-0e11-6e4d-000c-a90c0e7b3f07, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_IJ25ZP2M3EREADONLY CLONE SNOWPARK_TEMP_TABLE_INO89DYSRL), QueryRecord(query_id=01bed54c-0e11-7168-000c-a90c0e7bbc7f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_IJ25ZP2M3EREADONLY) LIMIT 1), QueryRecord(query_id=01bed54c-0e11-71f1-000c-a90c0e7b9d8f, sql_text=SELECT ""__row_position__"", ""_1"", ""_2"", ""_3"", ""_4"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""_1"", ""_2"", ""_3"", ""_4"" FROM SNOWPARK_TEMP_TABLE_IJ25ZP2M3EREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
29633,tests.integ.modin.series.test_all_any,test_any_float_not_implemented[True-data3],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29637,tests.integ.modin.series.test_all_any,test_any_float_not_implemented[False-data0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29641,tests.integ.modin.series.test_all_any,test_any_float_not_implemented[False-data1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29645,tests.integ.modin.series.test_all_any,test_any_float_not_implemented[False-data2],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29648,tests.integ.modin.series.test_all_any,test_any_float_not_implemented[False-data3],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29651,tests.integ.modin.series.test_all_any,test_all_str_not_implemented[data0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29655,tests.integ.modin.series.test_all_any,test_all_str_not_implemented[data1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29657,tests.integ.modin.series.test_create_or_replace_dynamic_table,test_create_or_replace_dynamic_table_multiindex,"NotImplementedError: Modin supports the method Series.create_or_replace_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
29659,tests.integ.modin.series.test_all_any,test_any_str_not_implemented[data0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29660,tests.integ.modin.series.test_astype,test_astype_basic[datetime64[ns]-to_dtype398],TypeError: datetime64[ns] cannot be converted to IntegerDtype,failed
29663,tests.integ.modin.series.test_all_any,test_any_str_not_implemented[data1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29675,tests.integ.modin.series.test_astype,test_astype_basic[datetime64[ns]-to_dtype399],TypeError: datetime64[ns] cannot be converted to IntegerDtype,failed
29686,tests.integ.modin.series.test_create_or_replace_view,test_create_or_replace_view_basic,"NotImplementedError: Modin supports the method Series.create_or_replace_view on the Snowflake backend, but not on the backend Pandas.",failed
29693,tests.integ.modin.series.test_astype,test_astype_basic[datetime64[ns]-to_dtype400],TypeError: datetime64[ns] cannot be converted to IntegerDtype,failed
29702,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_semi_structured_types[False-True-read_with_table_name],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54c-0e11-71c8-000c-a90c0e7ca2a7, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_4LFFWST2C1READONLY CLONE SNOWPARK_TEMP_TABLE_868WPY08DJ), QueryRecord(query_id=01bed54c-0e11-6ed3-000c-a90c0e7c6623, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_4LFFWST2C1READONLY) LIMIT 1), QueryRecord(query_id=01bed54c-0e11-722e-000c-a90c0e7c4727, sql_text=SELECT ""__row_position__"", ""_1"", ""_2"", ""_3"", ""_4"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""_1"", ""_2"", ""_3"", ""_4"" FROM SNOWPARK_TEMP_TABLE_4LFFWST2C1READONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
29703,tests.integ.modin.series.test_astype,test_astype_basic[datetime64[ns]-to_dtype401],TypeError: datetime64[ns] cannot be converted to IntegerDtype,failed
29707,tests.integ.modin.series.test_astype,test_astype_basic[datetime64[ns]-to_dtype402],"AssertionError: assert string[python] == dtype('O')
 +  where string[python] = 0    1970-01-01 00:00:00.000000000\n1    1970-01-01 00:00:00.000000001\n2    1970-01-01 00:00:00.000000002\n3    1970-01-01 00:00:00.000000003\ndtype: string.dtype",failed
29715,tests.integ.modin.series.test_apply_and_map,test_basic_without_type_hints[return_timedelta_scalar-apply],[XPASS(strict)] SNOW-1619940,failed
29721,tests.integ.modin.series.test_apply_and_map,test_basic_without_type_hints[return_timedelta_scalar-map],[XPASS(strict)] SNOW-1619940,failed
29741,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_semi_structured_types[False-False-read_with_select_*],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54c-0e11-71dd-000c-a90c0e7c19cf, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_S9S04UZ8KA) LIMIT 1), QueryRecord(query_id=01bed54c-0e11-6bde-000c-a90c0e7cb52f, sql_text=SELECT ""__row_position__"", ""_1"", ""_2"", ""_3"", ""_4"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""_1"", ""_2"", ""_3"", ""_4"" FROM (SNOWPARK_TEMP_TABLE_S9S04UZ8KA)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
29748,tests.integ.modin.series.test_astype,test_astype_basic[datetime64[ns]-float],"AssertionError: Regex pattern did not match.
 Regex: 'cannot be converted'
 Input: 'Cannot cast DatetimeArray to dtype float64'",failed
29751,tests.integ.modin.series.test_create_or_replace_view,test_create_or_replace_view_multiple_sessions_enforce_ordering_raises,UnboundLocalError: local variable 'view_name' referenced before assignment,failed
29762,tests.integ.modin.series.test_astype,test_astype_basic[boolean-uint64],"AssertionError: assert dtype('uint64') == dtype('int64')
 +  where dtype('uint64') = 0    1\n1    0\n2    0\n3    1\ndtype: uint64.dtype",failed
29765,tests.integ.modin.series.test_astype,test_astype_basic[boolean-int32],"AssertionError: assert dtype('int32') == dtype('int64')
 +  where dtype('int32') = 0    1\n1    0\n2    0\n3    1\ndtype: int32.dtype",failed
29770,tests.integ.modin.series.test_astype,test_astype_basic[boolean-uint32],"AssertionError: assert dtype('uint32') == dtype('int64')
 +  where dtype('uint32') = 0    1\n1    0\n2    0\n3    1\ndtype: uint32.dtype",failed
29775,tests.integ.modin.series.test_astype,test_astype_basic[boolean-int16],"AssertionError: assert dtype('int16') == dtype('int64')
 +  where dtype('int16') = 0    1\n1    0\n2    0\n3    1\ndtype: int16.dtype",failed
29778,tests.integ.modin.pivot.test_pivot_table_negative,test_not_implemented_single_aggfunc[foo-'foo'],AttributeError: 'foo' is not a valid function for 'DataFrameGroupBy' object,failed
29780,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_semi_structured_types[False-False-read_with_table_name],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54c-0e11-6d08-000c-a90c0e7c2b97, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_M3WQVGR0JM) LIMIT 1), QueryRecord(query_id=01bed54c-0e11-71f1-000c-a90c0e7cf283, sql_text=SELECT ""__row_position__"", ""_1"", ""_2"", ""_3"", ""_4"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""_1"", ""_2"", ""_3"", ""_4"" FROM (SNOWPARK_TEMP_TABLE_M3WQVGR0JM)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
29785,tests.integ.modin.series.test_astype,test_astype_basic[boolean-uint16],"AssertionError: assert dtype('uint16') == dtype('int64')
 +  where dtype('uint16') = 0    1\n1    0\n2    0\n3    1\ndtype: uint16.dtype",failed
29789,tests.integ.modin.series.test_astype,test_astype_basic[boolean-int8],"AssertionError: assert dtype('int8') == dtype('int64')
 +  where dtype('int8') = 0    1\n1    0\n2    0\n3    1\ndtype: int8.dtype",failed
29794,tests.integ.modin.series.test_astype,test_astype_basic[boolean-uint8],"AssertionError: assert dtype('uint8') == dtype('int64')
 +  where dtype('uint8') = 0    1\n1    0\n2    0\n3    1\ndtype: uint8.dtype",failed
29796,tests.integ.modin.pivot.test_pivot_table_negative,test_not_implemented_single_aggfunc[kurt-'kurt'],AttributeError: 'kurt' is not a valid function for 'DataFrameGroupBy' object,failed
29798,tests.integ.modin.series.test_create_or_replace_view,test_create_or_replace_view_multiple_sessions_no_enforce_ordering,"NotImplementedError: Modin supports the method Series.create_or_replace_view on the Snowflake backend, but not on the backend Pandas.",failed
29800,tests.integ.modin.series.test_astype,test_astype_basic[boolean-float32],"AssertionError: assert dtype('float32') == dtype('float64')
 +  where dtype('float32') = 0    1.0\n1    0.0\n2    0.0\n3    1.0\ndtype: float32.dtype",failed
29802,tests.integ.modin.pivot.test_pivot_table_negative,test_not_implemented_single_aggfunc[prod-'prod'],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29804,tests.integ.modin.series.test_astype,test_astype_basic[boolean-float160],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    1.0\n1    0.0\n2    0.0\n3    1.0\ndtype: float16.dtype",failed
29806,tests.integ.modin.pivot.test_pivot_table_negative,test_not_implemented_single_aggfunc[sem-'sem'],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29810,tests.integ.modin.series.test_astype,test_astype_basic[boolean-float161],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    1.0\n1    0.0\n2    0.0\n3    1.0\ndtype: float16.dtype",failed
29813,tests.integ.modin.pivot.test_pivot_table_negative,test_not_implemented_single_aggfunc[argmax-np.argmax],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29818,tests.integ.modin.pivot.test_pivot_table_negative,test_not_implemented_single_aggfunc[argmin-np.argmin],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29827,tests.integ.modin.pivot.test_pivot_table_negative,test_not_implemented_single_aggfunc[all-'all'],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29832,tests.integ.modin.pivot.test_pivot_table_negative,test_not_implemented_single_aggfunc[all-np.all],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29833,tests.integ.modin.series.test_astype,test_astype_basic[boolean-boolean],"AssertionError: assert BooleanDtype == dtype('bool')
 +  where BooleanDtype = 0     True\n1    False\n2    False\n3     True\ndtype: boolean.dtype",failed
29837,tests.integ.modin.series.test_astype,test_astype_basic[boolean-to_dtype421],"AssertionError: assert Float32Dtype() == dtype('float64')
 +  where Float32Dtype() = 0    1.0\n1    0.0\n2    0.0\n3    1.0\ndtype: Float32.dtype",failed
29838,tests.integ.modin.pivot.test_pivot_table_negative,test_not_implemented_single_aggfunc[any-'any'],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29842,tests.integ.modin.series.test_astype,test_astype_basic[boolean-to_dtype422],"AssertionError: assert Float64Dtype() == dtype('float64')
 +  where Float64Dtype() = 0    1.0\n1    0.0\n2    0.0\n3    1.0\ndtype: Float64.dtype",failed
29843,tests.integ.modin.series.test_create_or_replace_view,test_create_or_replace_view_index[None-True],"NotImplementedError: Modin supports the method Series.create_or_replace_view on the Snowflake backend, but not on the backend Pandas.",failed
29846,tests.integ.modin.pivot.test_pivot_table_negative,test_not_implemented_single_aggfunc[any-np.any],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29847,tests.integ.modin.series.test_astype,test_astype_basic[boolean-to_dtype423],"AssertionError: assert Int64Dtype() == dtype('int64')
 +  where Int64Dtype() = 0    1\n1    0\n2    0\n3    1\ndtype: Int64.dtype",failed
29855,tests.integ.modin.pivot.test_pivot_table_negative,test_not_implemented_single_aggfunc[size-'size'],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29856,tests.integ.modin.series.test_astype,test_astype_basic[boolean-to_dtype424],"AssertionError: assert UInt64Dtype() == dtype('int64')
 +  where UInt64Dtype() = 0    1\n1    0\n2    0\n3    1\ndtype: UInt64.dtype",failed
29860,tests.integ.modin.series.test_astype,test_astype_basic[boolean-to_dtype425],"AssertionError: assert Int32Dtype() == dtype('int64')
 +  where Int32Dtype() = 0    1\n1    0\n2    0\n3    1\ndtype: Int32.dtype",failed
29861,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_semi_structured_types[True-True-read_with_select_*],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54c-0e11-71c8-000c-a90c0e7ca783, sql_text=CREATE OR REPLACE SCOPED TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_M1DJ328YGTREADONLY CLONE SNOWPARK_TEMP_TABLE_64NNPQ6LXB), QueryRecord(query_id=01bed54c-0e11-6ed3-000c-a90c0e7c6ad7, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_M1DJ328YGTREADONLY) LIMIT 1), QueryRecord(query_id=01bed54c-0e11-722e-000c-a90c0e7c4c6b, sql_text=SELECT ""__row_position__"", ""_1"", ""_2"", ""_3"", ""_4"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""_1"", ""_2"", ""_3"", ""_4"" FROM SNOWPARK_TEMP_TABLE_M1DJ328YGTREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
29862,tests.integ.modin.pivot.test_pivot_table_negative,test_not_implemented_single_aggfunc[len-<built-in function len>],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29867,tests.integ.modin.series.test_astype,test_astype_basic[boolean-to_dtype426],"AssertionError: assert UInt32Dtype() == dtype('int64')
 +  where UInt32Dtype() = 0    1\n1    0\n2    0\n3    1\ndtype: UInt32.dtype",failed
29868,tests.integ.modin.pivot.test_pivot_table_negative,test_not_implemented_single_aggfunc[nunique-'nunique'],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29871,tests.integ.modin.series.test_astype,test_astype_basic[boolean-to_dtype427],"AssertionError: assert Int16Dtype() == dtype('int64')
 +  where Int16Dtype() = 0    1\n1    0\n2    0\n3    1\ndtype: Int16.dtype",failed
29873,tests.integ.modin.pivot.test_pivot_table_negative,test_not_implemented_single_aggfunc[idxmax-'idxmax'],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29877,tests.integ.modin.series.test_astype,test_astype_basic[boolean-to_dtype428],"AssertionError: assert UInt16Dtype() == dtype('int64')
 +  where UInt16Dtype() = 0    1\n1    0\n2    0\n3    1\ndtype: UInt16.dtype",failed
29878,tests.integ.modin.series.test_create_or_replace_view,test_create_or_replace_view_index[None-False],"NotImplementedError: Modin supports the method Series.create_or_replace_view on the Snowflake backend, but not on the backend Pandas.",failed
29883,tests.integ.modin.series.test_astype,test_astype_basic[boolean-to_dtype429],"AssertionError: assert Int8Dtype() == dtype('int64')
 +  where Int8Dtype() = 0    1\n1    0\n2    0\n3    1\ndtype: Int8.dtype",failed
29884,tests.integ.modin.pivot.test_pivot_table_negative,test_not_implemented_single_aggfunc[idxmin-'idxmin'],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29889,tests.integ.modin.series.test_astype,test_astype_basic[boolean-to_dtype430],"AssertionError: assert UInt8Dtype() == dtype('int64')
 +  where UInt8Dtype() = 0    1\n1    0\n2    0\n3    1\ndtype: UInt8.dtype",failed
29891,tests.integ.modin.pivot.test_pivot_table_negative,test_pivot_table_aggfunc_not_implemented_or_supported[user_defined_function],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29893,tests.integ.modin.series.test_astype,test_astype_basic[boolean-to_dtype431],"AssertionError: assert string[python] == dtype('O')
 +  where string[python] = 0     True\n1    False\n2    False\n3     True\ndtype: string.dtype",failed
29904,tests.integ.modin.series.test_apply_and_map,test_basic_without_type_hints[apply_on_frame_with_timedelta_data_columns_returns_int-apply],[XPASS(strict)] ,failed
29907,tests.integ.modin.pivot.test_pivot_table_negative,test_pivot_table_aggfunc_not_implemented_or_supported[list_with_user_defined_function_and_string],AssertionError: Cannot concat indices that do not have the same number of levels,failed
29913,tests.integ.modin.pivot.test_pivot_table_negative,test_pivot_table_aggfunc_not_implemented_or_supported[tuple_with_user_defined_function_and_string],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29914,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype436-uint64],"AssertionError: assert dtype('uint64') == dtype('int64')
 +  where dtype('uint64') = 0    0\n1    1\n2    2\n3    3\ndtype: uint64.dtype",failed
29916,tests.integ.modin.series.test_apply_and_map,test_basic_without_type_hints[apply_on_frame_with_timedelta_data_columns_returns_int-map],[XPASS(strict)] ,failed
29919,tests.integ.modin.series.test_create_or_replace_view,test_create_or_replace_view_index[index_labels1-True],"NotImplementedError: Modin supports the method Series.create_or_replace_view on the Snowflake backend, but not on the backend Pandas.",failed
29920,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype437-int32],"AssertionError: assert dtype('int32') == dtype('int64')
 +  where dtype('int32') = 0    0\n1    1\n2    2\n3    3\ndtype: int32.dtype",failed
29921,tests.integ.modin.pivot.test_pivot_table_negative,test_pivot_table_aggfunc_not_implemented_or_supported[set_with_user_defined_function_and_string],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29925,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype438-uint32],"AssertionError: assert dtype('uint32') == dtype('int64')
 +  where dtype('uint32') = 0    0\n1    1\n2    2\n3    3\ndtype: uint32.dtype",failed
29926,tests.integ.modin.pivot.test_pivot_table_negative,test_pivot_table_aggfunc_not_implemented_or_supported[tuple_with_builtins_and_native_pandas_function],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29930,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype439-int16],"AssertionError: assert dtype('int16') == dtype('int64')
 +  where dtype('int16') = 0    0\n1    1\n2    2\n3    3\ndtype: int16.dtype",failed
29932,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_semi_structured_types[True-True-read_with_table_name],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54c-0e11-6e4e-000c-a90c0e7d6297, sql_text=CREATE OR REPLACE SCOPED TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_ONEC5QT1YIREADONLY CLONE SNOWPARK_TEMP_TABLE_CAR5TOXMKG), QueryRecord(query_id=01bed54c-0e11-719e-000c-a90c0e7cd9db, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_ONEC5QT1YIREADONLY) LIMIT 1), QueryRecord(query_id=01bed54c-0e11-6ed3-000c-a90c0e7c6df3, sql_text=SELECT ""__row_position__"", ""_1"", ""_2"", ""_3"", ""_4"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""_1"", ""_2"", ""_3"", ""_4"" FROM SNOWPARK_TEMP_TABLE_ONEC5QT1YIREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
29933,tests.integ.modin.pivot.test_pivot_table_negative,test_pivot_table_aggfunc_not_implemented_or_supported[dict],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29937,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype440-uint16],"AssertionError: assert dtype('uint16') == dtype('int64')
 +  where dtype('uint16') = 0    0\n1    1\n2    2\n3    3\ndtype: uint16.dtype",failed
29939,tests.integ.modin.pivot.test_pivot_table_negative,test_timedelta_input_not_supported[df_data0],[XPASS(strict)] ,failed
29944,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype441-int8],"AssertionError: assert dtype('int8') == dtype('int64')
 +  where dtype('int8') = 0    0\n1    1\n2    2\n3    3\ndtype: int8.dtype",failed
29945,tests.integ.modin.pivot.test_pivot_table_negative,test_timedelta_input_not_supported[df_data1],[XPASS(strict)] ,failed
29949,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype442-uint8],"AssertionError: assert dtype('uint8') == dtype('int64')
 +  where dtype('uint8') = 0    0\n1    1\n2    2\n3    3\ndtype: uint8.dtype",failed
29953,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype443-float32],"AssertionError: assert dtype('float32') == dtype('float64')
 +  where dtype('float32') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float32.dtype",failed
29954,tests.integ.modin.pivot.test_pivot_table_negative,test_timedelta_input_not_supported[df_data2],[XPASS(strict)] ,failed
29955,tests.integ.modin.series.test_apply_and_map,test_basic_with_type_hints[return_timedelta_scalar-apply],[XPASS(strict)] SNOW-1619940,failed
29959,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype444-float16],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
29963,tests.integ.modin.series.test_create_or_replace_view,test_create_or_replace_view_index[index_labels1-False],"NotImplementedError: Modin supports the method Series.create_or_replace_view on the Snowflake backend, but not on the backend Pandas.",failed
29964,tests.integ.modin.series.test_apply_and_map,test_basic_with_type_hints[return_timedelta_scalar-map],[XPASS(strict)] SNOW-1619940,failed
29965,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype445-float16],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
29972,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round[1s-round-datetime_index_value0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29978,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round[1s-round-datetime_index_value1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29979,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype449-boolean],"AssertionError: assert BooleanDtype == dtype('bool')
 +  where BooleanDtype = 0    False\n1     True\n2     True\n3     True\ndtype: boolean.dtype",failed
29980,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_semi_structured_types[True-False-read_with_select_*],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54c-0e11-6bfa-000c-a90c0e7d7373, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_8HAS3EOVYH) LIMIT 1), QueryRecord(query_id=01bed54c-0e11-6ce4-000c-a90c0e7dd043, sql_text=SELECT ""__row_position__"", ""_1"", ""_2"", ""_3"", ""_4"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""_1"", ""_2"", ""_3"", ""_4"" FROM (SNOWPARK_TEMP_TABLE_8HAS3EOVYH)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
29985,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round[1s-round-datetime_index_value2],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29986,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype450-to_dtype450],"AssertionError: assert Float32Dtype() == dtype('float64')
 +  where Float32Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float32.dtype",failed
29990,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype451-to_dtype451],"AssertionError: assert Float64Dtype() == dtype('float64')
 +  where Float64Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float64.dtype",failed
29991,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round[1s-round-datetime_index_value3],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
29993,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype452-to_dtype452],"AssertionError: assert Int64Dtype() == dtype('int64')
 +  where Int64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int64.dtype",failed
29998,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype453-to_dtype453],"AssertionError: assert UInt64Dtype() == dtype('int64')
 +  where UInt64Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt64.dtype",failed
30003,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype454-to_dtype454],"AssertionError: assert Int32Dtype() == dtype('int64')
 +  where Int32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int32.dtype",failed
30007,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype455-to_dtype455],"AssertionError: assert UInt32Dtype() == dtype('int64')
 +  where UInt32Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt32.dtype",failed
30010,tests.integ.modin.series.test_dt_accessor,test_dt_invalid_dtypes[data0-int],Failed: DID NOT RAISE <class 'Exception'>,failed
30011,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype456-to_dtype456],"AssertionError: assert Int16Dtype() == dtype('int64')
 +  where Int16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int16.dtype",failed
30017,tests.integ.modin.series.test_dt_accessor,test_dt_invalid_dtypes[data1-float],Failed: DID NOT RAISE <class 'Exception'>,failed
30018,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype457-to_dtype457],"AssertionError: assert UInt16Dtype() == dtype('int64')
 +  where UInt16Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt16.dtype",failed
30022,tests.integ.modin.series.test_dt_accessor,test_dt_invalid_dtypes[data2-None],Failed: DID NOT RAISE <class 'Exception'>,failed
30023,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype458-to_dtype458],"AssertionError: assert Int8Dtype() == dtype('int64')
 +  where Int8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: Int8.dtype",failed
30028,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype459-to_dtype459],"AssertionError: assert UInt8Dtype() == dtype('int64')
 +  where UInt8Dtype() = 0    0\n1    1\n2    2\n3    3\ndtype: UInt8.dtype",failed
30032,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype460-to_dtype460],"AssertionError: assert string[python] == dtype('O')
 +  where string[python] = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: string.dtype",failed
30035,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round[2s-round-datetime_index_value0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
30037,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_semi_structured_types[True-False-read_with_table_name],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54c-0e11-6ed3-000c-a90c0e7df05f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_62C2PDNC2S) LIMIT 1), QueryRecord(query_id=01bed54c-0e11-722e-000c-a90c0e7dc1c7, sql_text=SELECT ""__row_position__"", ""_1"", ""_2"", ""_3"", ""_4"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""_1"", ""_2"", ""_3"", ""_4"" FROM (SNOWPARK_TEMP_TABLE_62C2PDNC2S)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
30040,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round[2s-round-datetime_index_value1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
30046,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype463-str],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2, 3]
[left]:  [0.0, 1.0, 2.0, 3.0]
[right]: [0, 1, 2, 3]
At positional index 0, first diff: 0.0 != 0",failed
30047,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round[2s-round-datetime_index_value2],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
30050,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round[2s-round-datetime_index_value3],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
30054,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype465-uint64],"AssertionError: assert dtype('uint64') == dtype('int64')
 +  where dtype('uint64') = 0    0\n1    1\n2    2\n3    3\ndtype: uint64.dtype",failed
30057,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype466-int32],"AssertionError: assert dtype('int32') == dtype('int64')
 +  where dtype('int32') = 0    0\n1    1\n2    2\n3    3\ndtype: int32.dtype",failed
30061,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype467-uint32],"AssertionError: assert dtype('uint32') == dtype('int64')
 +  where dtype('uint32') = 0    0\n1    1\n2    2\n3    3\ndtype: uint32.dtype",failed
30063,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype468-int16],"AssertionError: assert dtype('int16') == dtype('int64')
 +  where dtype('int16') = 0    0\n1    1\n2    2\n3    3\ndtype: int16.dtype",failed
30067,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype469-uint16],"AssertionError: assert dtype('uint16') == dtype('int64')
 +  where dtype('uint16') = 0    0\n1    1\n2    2\n3    3\ndtype: uint16.dtype",failed
30070,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype470-int8],"AssertionError: assert dtype('int8') == dtype('int64')
 +  where dtype('int8') = 0    0\n1    1\n2    2\n3    3\ndtype: int8.dtype",failed
30071,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round_negative[1w-raise-raise-floor],ValueError: <Week: weekday=6> is a non-fixed frequency,failed
30075,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype471-uint8],"AssertionError: assert dtype('uint8') == dtype('int64')
 +  where dtype('uint8') = 0    0\n1    1\n2    2\n3    3\ndtype: uint8.dtype",failed
30076,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype472-float32],"AssertionError: assert dtype('float32') == dtype('float64')
 +  where dtype('float32') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float32.dtype",failed
30079,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype473-float16],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
30083,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round_negative[1w-raise-raise-ceil],ValueError: <Week: weekday=6> is a non-fixed frequency,failed
30084,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype474-float16],"AssertionError: assert dtype('float16') == dtype('float64')
 +  where dtype('float16') = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: float16.dtype",failed
30092,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round_negative[1w-raise-raise-round],ValueError: <Week: weekday=6> is a non-fixed frequency,failed
30096,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round_negative[1h-infer-raise-floor],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
30098,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype478-boolean],"AssertionError: assert BooleanDtype == dtype('bool')
 +  where BooleanDtype = 0    False\n1     True\n2     True\n3     True\ndtype: boolean.dtype",failed
30101,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round_negative[1h-infer-raise-ceil],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
30102,tests.integ.modin.series.test_astype,test_astype_basic[from_dtype479-to_dtype479],"AssertionError: assert Float32Dtype() == dtype('float64')
 +  where Float32Dtype() = 0    0.0\n1    1.0\n2    2.0\n3    3.0\ndtype: Float32.dtype",failed
30105,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_none_nan[True-read_with_select_*],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54c-0e11-6e4e-000c-a90c0e7d6827, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_MVINB7RCUKREADONLY CLONE SNOWPARK_TEMP_TABLE_VW9CILLNR1), QueryRecord(query_id=01bed54c-0e11-6bde-000c-a90c0e7cbffb, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_MVINB7RCUKREADONLY) LIMIT 1), QueryRecord(query_id=01bed54c-0e11-6e4d-000c-a90c0e7cce73, sql_text=SELECT ""__row_position__"", ""_1"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""_1"" FROM SNOWPARK_TEMP_TABLE_MVINB7RCUKREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
30107,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round_negative[1h-infer-raise-round],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
30111,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round_negative[1h-NaT-raise-floor],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
30114,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round_negative[1h-NaT-raise-ceil],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
30117,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round_negative[1h-NaT-raise-round],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
30120,tests.integ.modin.series.test_apply_and_map,test_basic_with_type_hints[apply_on_frame_with_timedelta_data_columns_returns_int-apply],[XPASS(strict)] ,failed
30121,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round_negative[1h-ambiguous3-raise-floor],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
30124,tests.integ.modin.series.test_apply_and_map,test_basic_with_type_hints[apply_on_frame_with_timedelta_data_columns_returns_int-map],[XPASS(strict)] ,failed
30125,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round_negative[1h-ambiguous3-raise-ceil],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
30129,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round_negative[1h-ambiguous3-raise-round],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
30132,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round_negative[1h-raise-shift_forward-floor],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
30134,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round_negative[1h-raise-shift_forward-ceil],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
30137,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round_negative[1h-raise-shift_forward-round],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
30140,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round_negative[1h-raise-shift_backward-floor],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
30143,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round_negative[1h-raise-shift_backward-ceil],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
30146,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round_negative[1h-raise-shift_backward-round],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
30148,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round_negative[1h-raise-NaT-floor],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
30151,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round_negative[1h-raise-NaT-ceil],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
30154,tests.integ.modin.series.test_apply_and_map,test_input_has_correct_type[data0-apply],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2, 3]
[left]:  [<class 'float'>, <class 'float'>, <class 'float'>, <class 'float'>]
[right]: [<class 'float'>, <class 'float'>, <class 'float'>, <class 'float'>]
At positional index 0, first diff: <class 'float'> != <class 'float'>",failed
30156,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round_negative[1h-raise-NaT-round],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
30160,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round_negative[1h-raise-nonexistent7-floor],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
30162,tests.integ.modin.series.test_apply_and_map,test_input_has_correct_type[data0-map],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2, 3]
[left]:  [<class 'float'>, <class 'float'>, <class 'float'>, <class 'float'>]
[right]: [<class 'float'>, <class 'float'>, <class 'float'>, <class 'float'>]
At positional index 0, first diff: <class 'float'> != <class 'float'>",failed
30164,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round_negative[1h-raise-nonexistent7-ceil],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
30167,tests.integ.modin.pivot.test_pivot_table_single,test_pivot_table_with_duplicate_values,SNOW-1201994: index contains ints coerced to string,xfailed
30169,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round_negative[1h-raise-nonexistent7-round],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
30174,tests.integ.modin.series.test_apply_and_map,test_input_has_correct_type[data1-apply],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2, 3]
[left]:  [<class 'float'>, <class 'float'>, <class 'float'>, <class 'float'>]
[right]: [<class 'float'>, <class 'float'>, <class 'float'>, <class 'float'>]
At positional index 0, first diff: <class 'float'> != <class 'float'>",failed
30180,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_none_nan[True-read_with_table_name],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54c-0e11-6d08-000c-a90c0e7d97df, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_D61WXY1OMWREADONLY CLONE SNOWPARK_TEMP_TABLE_1DIL4AN86F), QueryRecord(query_id=01bed54c-0e11-71f1-000c-a90c0e7cfe1f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_D61WXY1OMWREADONLY) LIMIT 1), QueryRecord(query_id=01bed54c-0e11-71d7-000c-a90c0e7e04a7, sql_text=SELECT ""__row_position__"", ""_1"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""_1"" FROM SNOWPARK_TEMP_TABLE_D61WXY1OMWREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
30183,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round_negative[1w-infer-shift_forward-floor],ValueError: <Week: weekday=6> is a non-fixed frequency,failed
30185,tests.integ.modin.series.test_apply_and_map,test_input_has_correct_type[data1-map],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2, 3]
[left]:  [<class 'float'>, <class 'float'>, <class 'float'>, <class 'float'>]
[right]: [<class 'float'>, <class 'float'>, <class 'float'>, <class 'float'>]
At positional index 0, first diff: <class 'float'> != <class 'float'>",failed
30193,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round_negative[1w-infer-shift_forward-ceil],ValueError: <Week: weekday=6> is a non-fixed frequency,failed
30197,tests.integ.modin.series.test_apply_and_map,test_input_has_correct_type[data2-apply],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2, 3]
[left]:  [<class 'str'>, <class 'str'>, <class 'str'>, <class 'str'>]
[right]: [<class 'str'>, <class 'str'>, <class 'str'>, <class 'str'>]
At positional index 0, first diff: <class 'str'> != <class 'str'>",failed
30201,tests.integ.modin.series.test_dt_accessor,test_floor_ceil_round_negative[1w-infer-shift_forward-round],ValueError: <Week: weekday=6> is a non-fixed frequency,failed
30206,tests.integ.modin.series.test_apply_and_map,test_input_has_correct_type[data2-map],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2, 3]
[left]:  [<class 'str'>, <class 'str'>, <class 'str'>, <class 'str'>]
[right]: [<class 'str'>, <class 'str'>, <class 'str'>, <class 'str'>]
At positional index 0, first diff: <class 'str'> != <class 'str'>",failed
30214,tests.integ.modin.series.test_dt_accessor,test_tz_convert[None],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30215,tests.integ.modin.pivot.test_pivot_table_single,test_pivot_on_inline_data_using_temp_table,KeyError: 'index_no',failed
30219,tests.integ.modin.series.test_create_or_replace_view,test_create_or_replace_view_multiindex,"NotImplementedError: Modin supports the method Series.create_or_replace_view on the Snowflake backend, but not on the backend Pandas.",failed
30220,tests.integ.modin.series.test_apply_and_map,test_input_has_correct_type[data3-apply],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [<class 'float'>, <class 'float'>, <class 'float'>]
[right]: [<class 'float'>, <class 'float'>, <class 'float'>]
At positional index 0, first diff: <class 'float'> != <class 'float'>",failed
30222,tests.integ.modin.series.test_dt_accessor,test_tz_convert[tz1],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30224,tests.integ.modin.series.test_dt_accessor,test_tz_convert[Africa/Abidjan],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30227,tests.integ.modin.series.test_dt_accessor,test_tz_convert[tz3],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30228,tests.integ.modin.series.test_dt_accessor,test_tz_convert[Africa/Timbuktu],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30229,tests.integ.modin.series.test_apply_and_map,test_input_has_correct_type[data3-map],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [<class 'float'>, <class 'float'>, <class 'float'>]
[right]: [<class 'float'>, <class 'float'>, <class 'float'>]
At positional index 0, first diff: <class 'float'> != <class 'float'>",failed
30236,tests.integ.modin.series.test_dt_accessor,test_tz_convert[tz5],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30240,tests.integ.modin.series.test_dt_accessor,test_tz_convert[America/Adak],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30244,tests.integ.modin.series.test_apply_and_map,test_input_has_correct_type[data4-apply],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [<class 'bool'>, <class 'bool'>, <class 'bool'>]
[right]: [<class 'bool'>, <class 'bool'>, <class 'bool'>]
At positional index 0, first diff: <class 'bool'> != <class 'bool'>",failed
30249,tests.integ.modin.series.test_dt_accessor,test_tz_convert[tz7],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30253,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_none_nan[False-read_with_select_*],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54c-0e11-6e5e-000c-a90c0e7e70ef, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_T54CCPKEK5) LIMIT 1), QueryRecord(query_id=01bed54c-0e11-6d76-000c-a90c0e7d2fdb, sql_text=SELECT ""__row_position__"", ""_1"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""_1"" FROM (SNOWPARK_TEMP_TABLE_T54CCPKEK5)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
30254,tests.integ.modin.series.test_dt_accessor,test_tz_convert[America/Yellowknife],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30255,tests.integ.modin.series.test_apply_and_map,test_input_has_correct_type[data4-map],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [<class 'bool'>, <class 'bool'>, <class 'bool'>]
[right]: [<class 'bool'>, <class 'bool'>, <class 'bool'>]
At positional index 0, first diff: <class 'bool'> != <class 'bool'>",failed
30257,tests.integ.modin.series.test_dt_accessor,test_tz_convert[tz9],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30261,tests.integ.modin.series.test_dt_accessor,test_tz_convert[Antarctica/Casey],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30265,tests.integ.modin.series.test_dt_accessor,test_tz_convert[tz11],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30270,tests.integ.modin.series.test_apply_and_map,test_input_has_correct_type[data5-apply],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1]
[left]:  [<class 'bytes'>, <class 'bytes'>]
[right]: [<class 'bytes'>, <class 'bytes'>]
At positional index 0, first diff: <class 'bytes'> != <class 'bytes'>",failed
30274,tests.integ.modin.series.test_dt_accessor,test_tz_convert[Asia/Dhaka],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30279,tests.integ.modin.series.test_dt_accessor,test_tz_convert[tz13],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30281,tests.integ.modin.series.test_apply_and_map,test_input_has_correct_type[data5-map],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1]
[left]:  [<class 'bytes'>, <class 'bytes'>]
[right]: [<class 'bytes'>, <class 'bytes'>]
At positional index 0, first diff: <class 'bytes'> != <class 'bytes'>",failed
30284,tests.integ.modin.series.test_dt_accessor,test_tz_convert[Asia/Manila],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30289,tests.integ.modin.series.test_dt_accessor,test_tz_convert[tz15],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30299,tests.integ.modin.series.test_dt_accessor,test_tz_convert[Asia/Shanghai],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30301,tests.integ.modin.series.test_apply_and_map,test_input_has_correct_type[data6-apply],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [<class 'int'>, <class 'int'>, <class 'int'>]
[right]: [<class 'int'>, <class 'int'>, <class 'int'>]
At positional index 0, first diff: <class 'int'> != <class 'int'>",failed
30305,tests.integ.modin.series.test_dt_accessor,test_tz_convert[tz17],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30312,tests.integ.modin.series.test_dt_accessor,test_tz_convert[Atlantic/Stanley],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30314,tests.integ.modin.series.test_apply_and_map,test_input_has_correct_type[data6-map],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [<class 'int'>, <class 'int'>, <class 'int'>]
[right]: [<class 'int'>, <class 'int'>, <class 'int'>]
At positional index 0, first diff: <class 'int'> != <class 'int'>",failed
30318,tests.integ.modin.series.test_dt_accessor,test_tz_convert[tz19],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30323,tests.integ.modin.series.test_dt_accessor,test_tz_convert[Australia/Sydney],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30326,tests.integ.modin.series.test_dt_accessor,test_tz_convert[tz21],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30328,tests.integ.modin.series.test_apply_and_map,test_input_has_correct_type[data7-apply],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [<class 'int'>, <class 'int'>, <class 'int'>]
[right]: [<class 'int'>, <class 'int'>, <class 'int'>]
At positional index 0, first diff: <class 'int'> != <class 'int'>",failed
30330,tests.integ.modin.series.test_dt_accessor,test_tz_convert[Canada/Pacific],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30333,tests.integ.modin.series.test_dt_accessor,test_tz_convert[tz23],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30334,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_none_nan[False-read_with_table_name],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54c-0e11-6bde-000c-a90c0e7e3483, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_Y8QBX6IC6L) LIMIT 1), QueryRecord(query_id=01bed54c-0e11-6e4d-000c-a90c0e7e6283, sql_text=SELECT ""__row_position__"", ""_1"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""_1"" FROM (SNOWPARK_TEMP_TABLE_Y8QBX6IC6L)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
30336,tests.integ.modin.series.test_apply_and_map,test_input_has_correct_type[data7-map],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [<class 'int'>, <class 'int'>, <class 'int'>]
[right]: [<class 'int'>, <class 'int'>, <class 'int'>]
At positional index 0, first diff: <class 'int'> != <class 'int'>",failed
30337,tests.integ.modin.series.test_dt_accessor,test_tz_convert[Europe/Chisinau],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30339,tests.integ.modin.series.test_first_last_valid_index,test_first_and_last_valid_multiindex_series[index0],"ValueError: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().",failed
30342,tests.integ.modin.series.test_dt_accessor,test_tz_convert[tz25],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30343,tests.integ.modin.series.test_dt_accessor,test_tz_convert[Europe/Luxembourg],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30344,tests.integ.modin.series.test_first_last_valid_index,test_first_and_last_valid_multiindex_series[index1],"ValueError: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().",failed
30346,tests.integ.modin.series.test_apply_and_map,test_input_has_correct_type[data8-apply],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1]
[left]:  [<class 'float'>, <class 'float'>]
[right]: [<class 'float'>, <class 'float'>]
At positional index 0, first diff: <class 'float'> != <class 'float'>",failed
30347,tests.integ.modin.series.test_dt_accessor,test_tz_convert[tz27],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30349,tests.integ.modin.series.test_first_last_valid_index,test_first_and_last_valid_multiindex_series[index2],"ValueError: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().",failed
30350,tests.integ.modin.series.test_dt_accessor,test_tz_convert[Indian/Christmas],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30352,tests.integ.modin.series.test_dt_accessor,test_tz_convert[tz29],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30354,tests.integ.modin.series.test_first_last_valid_index,test_first_and_last_valid_multiindex_series[index3],"ValueError: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().",failed
30355,tests.integ.modin.series.test_apply_and_map,test_input_has_correct_type[data8-map],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1]
[left]:  [<class 'float'>, <class 'float'>]
[right]: [<class 'float'>, <class 'float'>]
At positional index 0, first diff: <class 'float'> != <class 'float'>",failed
30357,tests.integ.modin.series.test_dt_accessor,test_tz_convert[Pacific/Chatham],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30359,tests.integ.modin.series.test_dt_accessor,test_tz_convert[tz31],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30361,tests.integ.modin.series.test_first_last_valid_index,test_first_and_last_valid_none_float64_multiindex_series[data0],"ValueError: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().",failed
30362,tests.integ.modin.series.test_dt_accessor,test_tz_convert[Pacific/Wake],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30363,tests.integ.modin.series.test_apply_and_map,test_input_has_correct_type[data9-apply],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [<class 'float'>, <class 'float'>, <class 'float'>]
[right]: [<class 'float'>, <class 'float'>, <class 'float'>]
At positional index 0, first diff: <class 'float'> != <class 'float'>",failed
30365,tests.integ.modin.series.test_dt_accessor,test_tz_convert[tz33],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30367,tests.integ.modin.series.test_first_last_valid_index,test_first_and_last_valid_none_float64_multiindex_series[data1],"ValueError: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().",failed
30370,tests.integ.modin.series.test_first_last_valid_index,test_first_and_last_valid_nested_multiindex_series,"ValueError: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().",failed
30371,tests.integ.modin.series.test_apply_and_map,test_input_has_correct_type[data9-map],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [<class 'float'>, <class 'float'>, <class 'float'>]
[right]: [<class 'float'>, <class 'float'>, <class 'float'>]
At positional index 0, first diff: <class 'float'> != <class 'float'>",failed
30374,tests.integ.modin.series.test_apply_and_map,test_input_has_correct_type[input_timedleta_columns-apply],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1]
[left]:  [<class 'pandas._libs.tslibs.timedeltas.Timedelta'>, <class 'pandas._libs.tslibs.timedeltas.Timedelta'>]
[right]: [<class 'pandas._libs.tslibs.timedeltas.Timedelta'>, <class 'pandas._libs.tslibs.timedeltas.Timedelta'>]
At positional index 0, first diff: <class 'pandas._libs.tslibs.timedeltas.Timedelta'> != <class 'pandas._libs.tslibs.timedeltas.Timedelta'>",failed
30379,tests.integ.modin.series.test_apply_and_map,test_input_has_correct_type[input_timedleta_columns-map],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1]
[left]:  [<class 'pandas._libs.tslibs.timedeltas.Timedelta'>, <class 'pandas._libs.tslibs.timedeltas.Timedelta'>]
[right]: [<class 'pandas._libs.tslibs.timedeltas.Timedelta'>, <class 'pandas._libs.tslibs.timedeltas.Timedelta'>]
At positional index 0, first diff: <class 'pandas._libs.tslibs.timedeltas.Timedelta'> != <class 'pandas._libs.tslibs.timedeltas.Timedelta'>",failed
30382,tests.integ.modin.series.test_apply_and_map,test_date_time_timestamp[data0-str-str-expected_result0-apply],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1]
[left]:  [2023-01-01, None]
[right]: [2023-01-01 00:00:00, NaT]
At positional index 0, first diff: 2023-01-01 != 2023-01-01 00:00:00",failed
30385,tests.integ.modin.series.test_apply_and_map,test_date_time_timestamp[data0-str-str-expected_result0-map],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1]
[left]:  [2023-01-01, None]
[right]: [2023-01-01 00:00:00, NaT]
At positional index 0, first diff: 2023-01-01 != 2023-01-01 00:00:00",failed
30392,tests.integ.modin.series.test_apply_and_map,test_date_time_timestamp[data1-type-str-expected_result1-apply],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1]
[left]:  [<class 'datetime.date'>, <class 'NoneType'>]
[right]: [<class 'pandas._libs.tslibs.timestamps.Timestamp'>, <class 'pandas._libs.tslibs.nattype.NaTType'>]
At positional index 0, first diff: <class 'datetime.date'> != <class 'pandas._libs.tslibs.timestamps.Timestamp'>",failed
30394,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_column_names[True-read_with_select_*-col],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54c-0e11-7168-000c-a90c0e7e91af, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_8ARHI09LFJREADONLY CLONE SNOWPARK_TEMP_TABLE_DF5ISF10L1), QueryRecord(query_id=01bed54c-0e11-6bfa-000c-a90c0e7d7e3b, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_8ARHI09LFJREADONLY) LIMIT 1), QueryRecord(query_id=01bed54c-0e11-6ce4-000c-a90c0e7dd9d3, sql_text=SELECT ""__row_position__"", ""COL"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL"" FROM SNOWPARK_TEMP_TABLE_8ARHI09LFJREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
30408,tests.integ.modin.series.test_apply_and_map,test_date_time_timestamp[data1-type-str-expected_result1-map],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1]
[left]:  [<class 'datetime.date'>, <class 'NoneType'>]
[right]: [<class 'pandas._libs.tslibs.timestamps.Timestamp'>, <class 'pandas._libs.tslibs.nattype.NaTType'>]
At positional index 0, first diff: <class 'datetime.date'> != <class 'pandas._libs.tslibs.timestamps.Timestamp'>",failed
30411,tests.integ.modin.series.test_getattr,test_getattr[index-1-0],ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all(),failed
30414,tests.integ.modin.series.test_describe,test_timedelta,"[XPASS(strict)] requires concat(), which we cannot do with Timedelta.",failed
30417,tests.integ.modin.series.test_apply_and_map,test_date_time_timestamp[data2-str-str-expected_result2-apply],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1]
[left]:  [01:02:03, None]
[right]: [0 days 01:02:03, NaT]
At positional index 0, first diff: 01:02:03 != 0 days 01:02:03",failed
30421,tests.integ.modin.series.test_apply_and_map,test_date_time_timestamp[data2-str-str-expected_result2-map],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1]
[left]:  [01:02:03, None]
[right]: [0 days 01:02:03, NaT]
At positional index 0, first diff: 01:02:03 != 0 days 01:02:03",failed
30423,tests.integ.modin.series.test_apply_and_map,test_date_time_timestamp[data3-type-str-expected_result3-apply],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1]
[left]:  [<class 'datetime.time'>, <class 'NoneType'>]
[right]: [<class 'pandas._libs.tslibs.timedeltas.Timedelta'>, <class 'pandas._libs.tslibs.nattype.NaTType'>]
At positional index 0, first diff: <class 'datetime.time'> != <class 'pandas._libs.tslibs.timedeltas.Timedelta'>",failed
30424,tests.integ.modin.pivot.test_pivot_table_single,test_pivot_empty_frame_snow_1013918[named_columns-True-d-columns7],TypeError: 'str' object is not callable,failed
30425,tests.integ.modin.series.test_apply_and_map,test_date_time_timestamp[data3-type-str-expected_result3-map],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1]
[left]:  [<class 'datetime.time'>, <class 'NoneType'>]
[right]: [<class 'pandas._libs.tslibs.timedeltas.Timedelta'>, <class 'pandas._libs.tslibs.nattype.NaTType'>]
At positional index 0, first diff: <class 'datetime.time'> != <class 'pandas._libs.tslibs.timedeltas.Timedelta'>",failed
30428,tests.integ.modin.series.test_diff,test_series_diff_invalid_periods_negative,Failed: DID NOT RAISE <class 'ValueError'>,failed
30431,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_column_names[True-read_with_select_*-COL],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54c-0e11-71c8-000c-a90c0e7e276f, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_8G6EJIARY3READONLY CLONE SNOWPARK_TEMP_TABLE_WMGCTE8IXS), QueryRecord(query_id=01bed54c-0e11-6ed3-000c-a90c0e7df9d3, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_8G6EJIARY3READONLY) LIMIT 1), QueryRecord(query_id=01bed54c-0e11-6e2a-000c-a90c0e7ec283, sql_text=SELECT ""__row_position__"", ""COL"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL"" FROM SNOWPARK_TEMP_TABLE_8G6EJIARY3READONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
30432,tests.integ.modin.series.test_diff,test_series_diff[with_row_after-object],TypeError: unsupported operand type for -: got object,failed
30439,tests.integ.modin.series.test_diff,test_series_diff[with_self-object],TypeError: unsupported operand type for -: got object,failed
30447,tests.integ.modin.series.test_diff,test_series_diff[with_row_before-object],TypeError: unsupported operand type for -: got object,failed
30448,tests.integ.modin.series.test_apply_and_map,test_date_time_timestamp[data5-type-str-expected_result5-apply],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1]
[left]:  [<class 'pandas._libs.tslibs.timestamps.Timestamp'>, <class 'pandas._libs.tslibs.nattype.NaTType'>]
[right]: [<class 'pandas._libs.tslibs.timestamps.Timestamp'>, <class 'pandas._libs.tslibs.nattype.NaTType'>]
At positional index 0, first diff: <class 'pandas._libs.tslibs.timestamps.Timestamp'> != <class 'pandas._libs.tslibs.timestamps.Timestamp'>",failed
30451,tests.integ.modin.series.test_dt_accessor,test_dt_invalid_dtypes[data3-None],Failed: DID NOT RAISE <class 'Exception'>,failed
30453,tests.integ.modin.series.test_dt_accessor,test_dt_invalid_dtypes[data4-None],Failed: DID NOT RAISE <class 'Exception'>,failed
30454,tests.integ.modin.series.test_apply_and_map,test_date_time_timestamp[data5-type-str-expected_result5-map],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1]
[left]:  [<class 'pandas._libs.tslibs.timestamps.Timestamp'>, <class 'pandas._libs.tslibs.nattype.NaTType'>]
[right]: [<class 'pandas._libs.tslibs.timestamps.Timestamp'>, <class 'pandas._libs.tslibs.nattype.NaTType'>]
At positional index 0, first diff: <class 'pandas._libs.tslibs.timestamps.Timestamp'> != <class 'pandas._libs.tslibs.timestamps.Timestamp'>",failed
30455,tests.integ.modin.series.test_diff,test_series_diff[with_len(df)/2_rows_before-bool],ValueError: periods must be an int. got <class 'float'> instead,failed
30456,tests.integ.modin.series.test_dt_accessor,test_dt_invalid_dtype_property_combo[data0-None-seconds],AssertionError: Snowpark pandas Exception 'DatetimeIndex' object has no attribute 'seconds' doesn't match pandas Exception 'DatetimeProperties' object has no attribute 'seconds',failed
30457,tests.integ.modin.series.test_diff,test_series_diff[with_len(df)/2_rows_before-int],ValueError: periods must be an int. got <class 'float'> instead,failed
30458,tests.integ.modin.series.test_dt_accessor,test_dt_invalid_dtype_property_combo[data1-None-second],AssertionError: Snowpark pandas Exception 'TimedeltaIndex' object has no attribute 'second' doesn't match pandas Exception 'TimedeltaProperties' object has no attribute 'second',failed
30461,tests.integ.modin.series.test_diff,test_series_diff[with_len(df)/2_rows_before-object],ValueError: periods must be an int. got <class 'float'> instead,failed
30462,tests.integ.modin.series.test_apply_and_map,test_date_time_timestamp[data6-str-str-expected_result6-apply],"AssertionError: Series are different

Series values are different (33.33333 %)
[index]: [0, 1, 2]
[left]:  [2023-01-01 01:02:03+00:00, 2023-01-01 01:02:03, None]
[right]: [2023-01-01 01:02:03+00:00, 2023-01-01 01:02:03-08:00, None]
At positional index 1, first diff: 2023-01-01 01:02:03 != 2023-01-01 01:02:03-08:00",failed
30463,tests.integ.modin.series.test_dt_accessor,test_timedelta_total_seconds_type_error,"AssertionError: Regex pattern did not match.
 Regex: ""'DatetimeProperties' object has no attribute 'total_seconds'""
 Input: ""'DatetimeIndex' object has no attribute 'total_seconds'""",failed
30464,tests.integ.modin.series.test_diff,test_series_diff[with_len(df)/2_rows_before-timedelta64[ns]],ValueError: periods must be an int. got <class 'float'> instead,failed
30465,tests.integ.modin.series.test_apply_and_map,test_date_time_timestamp[data6-str-str-expected_result6-map],"AssertionError: Series are different

Series values are different (33.33333 %)
[index]: [0, 1, 2]
[left]:  [2023-01-01 01:02:03+00:00, 2023-01-01 01:02:03, None]
[right]: [2023-01-01 01:02:03+00:00, 2023-01-01 01:02:03-08:00, None]
At positional index 1, first diff: 2023-01-01 01:02:03 != 2023-01-01 01:02:03-08:00",failed
30466,tests.integ.modin.series.test_diff,test_series_diff[with_len(df)/2_rows_before-datetime64[ns]],ValueError: periods must be an int. got <class 'float'> instead,failed
30467,tests.integ.modin.series.test_diff,test_series_diff[with_len(df)/2_rows_after-bool],ValueError: periods must be an int. got <class 'float'> instead,failed
30468,tests.integ.modin.series.test_diff,test_series_diff[with_len(df)/2_rows_after-int],ValueError: periods must be an int. got <class 'float'> instead,failed
30469,tests.integ.modin.series.test_diff,test_series_diff[with_len(df)/2_rows_after-object],ValueError: periods must be an int. got <class 'float'> instead,failed
30470,tests.integ.modin.series.test_diff,test_series_diff[with_len(df)/2_rows_after-timedelta64[ns]],ValueError: periods must be an int. got <class 'float'> instead,failed
30473,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_column_names[True-read_with_select_*-Col],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54c-0e11-6e4e-000c-a90c0e7ee0ab, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_Z727YBISPPREADONLY CLONE SNOWPARK_TEMP_TABLE_PUUZVY7Q6Q), QueryRecord(query_id=01bed54c-0e11-719e-000c-a90c0e7e570f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_Z727YBISPPREADONLY) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-6dc3-000c-a90c0e7e1a8b, sql_text=SELECT ""__row_position__"", ""COL"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL"" FROM SNOWPARK_TEMP_TABLE_Z727YBISPPREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
30474,tests.integ.modin.series.test_diff,test_series_diff[with_len(df)/2_rows_after-datetime64[ns]],ValueError: periods must be an int. got <class 'float'> instead,failed
30477,tests.integ.modin.series.test_apply_and_map,test_date_time_timestamp[data7-type-str-expected_result7-apply],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1]
[left]:  [<class 'pandas._libs.tslibs.timestamps.Timestamp'>, <class 'pandas._libs.tslibs.nattype.NaTType'>]
[right]: [<class 'pandas._libs.tslibs.timestamps.Timestamp'>, <class 'NoneType'>]
At positional index 0, first diff: <class 'pandas._libs.tslibs.timestamps.Timestamp'> != <class 'pandas._libs.tslibs.timestamps.Timestamp'>",failed
30478,tests.integ.modin.series.test_diff,test_series_diff[with_len(df)-1_rows_before-object],TypeError: unsupported operand type for -: got object,failed
30483,tests.integ.modin.series.test_dt_accessor_unsupported,test_dt_namespace_accessor_datetime64[D],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
30484,tests.integ.modin.series.test_diff,test_series_diff[with_len(df)-1_rows_after-object],TypeError: unsupported operand type for -: got object,failed
30485,tests.integ.modin.series.test_apply_and_map,test_date_time_timestamp[data7-type-str-expected_result7-map],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1]
[left]:  [<class 'pandas._libs.tslibs.timestamps.Timestamp'>, <class 'pandas._libs.tslibs.nattype.NaTType'>]
[right]: [<class 'pandas._libs.tslibs.timestamps.Timestamp'>, <class 'NoneType'>]
At positional index 0, first diff: <class 'pandas._libs.tslibs.timestamps.Timestamp'> != <class 'pandas._libs.tslibs.timestamps.Timestamp'>",failed
30488,tests.integ.modin.series.test_dt_accessor_unsupported,test_dt_namespace_accessor_datetime64[s],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
30493,tests.integ.modin.series.test_dt_accessor_unsupported,test_dt_namespace_accessor_datetime64[ms],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
30494,tests.integ.modin.series.test_dt_accessor,test_tz_convert[US/Arizona],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30495,tests.integ.modin.pivot.test_pivot_table_single,test_pivot_empty_frame_snow_1013918[named_columns-True-index11-columns11],TypeError: 'str' object is not callable,failed
30496,tests.integ.modin.series.test_diff,test_series_diff[with_len(df)_rows_before-object],TypeError: unsupported operand type for -: got object,failed
30502,tests.integ.modin.series.test_diff,test_series_diff[with_len(df)_rows_after-object],TypeError: unsupported operand type for -: got object,failed
30505,tests.integ.modin.series.test_diff,test_series_diff_mixed_ints_and_bools,TypeError: unsupported operand type for -: got object,failed
30506,tests.integ.modin.series.test_diff,test_series_diff_string_type_negative,AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
30507,tests.integ.modin.series.test_dt_accessor,test_tz_convert[tz35],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30508,tests.integ.modin.series.test_diff,test_series_diff_custom_object_negative,TypeError: unsupported operand type for -: got object,failed
30509,tests.integ.modin.series.test_diff,test_series_diff_variant_with_na_values,TypeError: unsupported operand type for -: got object,failed
30511,tests.integ.modin.series.test_getitem,test_series_getitem_with_boolean_list_like[key4],"KeyError: Index([True, True, False, False, False, True, True], dtype='bool')",failed
30513,tests.integ.modin.series.test_apply_and_map,test_input_series_with_timedelta_index[apply],[XPASS(strict)] ,failed
30515,tests.integ.modin.series.test_dt_accessor,test_tz_convert[US/Central],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30517,tests.integ.modin.series.test_apply_and_map,test_input_series_with_timedelta_index[map],[XPASS(strict)] ,failed
30518,tests.integ.modin.series.test_dt_accessor,test_tz_convert[tz37],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30519,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_column_names[True-read_with_select_*-""C O L""]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54d-0e11-6e87-000c-a90c0e7ed2d3, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_JRTGKOKRW2READONLY CLONE SNOWPARK_TEMP_TABLE_V1JXJTMFZN), QueryRecord(query_id=01bed54d-0e11-6d08-000c-a90c0e7d9fdb, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_JRTGKOKRW2READONLY) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-71f1-000c-a90c0e7eb5ff, sql_text=SELECT ""__row_position__"", ""C O L"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""C O L"" FROM SNOWPARK_TEMP_TABLE_JRTGKOKRW2READONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
30521,tests.integ.modin.series.test_dt_accessor,test_tz_convert[US/Eastern],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30523,tests.integ.modin.series.test_dt_accessor,test_tz_convert[tz39],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30525,tests.integ.modin.series.test_dt_accessor,test_tz_convert[US/Hawaii],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30528,tests.integ.modin.series.test_dt_accessor,test_tz_convert[tz41],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30533,tests.integ.modin.series.test_dt_accessor,test_tz_convert[US/Mountain],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30538,tests.integ.modin.series.test_dt_accessor,test_tz_convert[tz43],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30541,tests.integ.modin.series.test_duplicated,test_duplicated_nan_none[first-expected0],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [False, False, True, False, True]
[right]: [False, False, True, True, True]",failed
30544,,,worker 'gw4' crashed while running 'tests/integ/modin/resample/test_resample_negative.py::test_resample_unsupported_freq_negative[us]',error
30545,tests.integ.modin.series.test_dt_accessor,test_tz_convert[US/Pacific],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30546,tests.integ.modin.series.test_dt_accessor,test_tz_convert[tz45],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30548,tests.integ.modin.series.test_duplicated,test_duplicated_nan_none[last-expected1],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [True, True, False, False, False]
[right]: [True, True, False, True, False]",failed
30549,tests.integ.modin.series.test_getitem,test_series_getitem_with_boolean_list_like[key5],IndexError: boolean index did not match indexed array along dimension 0; dimension is 7 but corresponding boolean dimension is 1,failed
30550,tests.integ.modin.series.test_dt_accessor,test_tz_convert[UTC],"AssertionError: assert datetime64[ns, US/Eastern] == 'object'
 +  where datetime64[ns, US/Eastern] = 0   2014-04-04 23:56:01.000000001-04:00\n1   2014-07-18 21:24:02.000000002-04:00\n2   2015-11-22 22:14:03.000000003-05:00\n3   2015-11-23 20:12:04.123456789-05:00\n4                                   NaT\ndtype: datetime64[ns, US/Eastern].dtype",failed
30552,tests.integ.modin.series.test_duplicated,test_duplicated_nan_none[False-expected2],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [True, True, True, False, True]
[right]: [True, True, True, True, True]",failed
30553,tests.integ.modin.series.test_dt_accessor,test_tz_convert_negative,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
30556,tests.integ.modin.series.test_idxmax_idxmin,test_series_idxmax_idxmin_with_multiindex[True-idxmax],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
30557,tests.integ.modin.series.test_getitem,test_series_getitem_with_boolean_list_like[key6],IndexError: boolean index did not match indexed array along dimension 0; dimension is 7 but corresponding boolean dimension is 8,failed
30560,tests.integ.modin.series.test_idxmax_idxmin,test_series_idxmax_idxmin_with_multiindex[True-idxmin],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
30561,tests.integ.modin.series.test_idxmax_idxmin,test_series_idxmax_idxmin_with_multiindex[False-idxmax],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
30564,tests.integ.modin.series.test_idxmax_idxmin,test_series_idxmax_idxmin_with_multiindex[False-idxmin],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
30569,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_column_names[True-read_with_select_*-__col__],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54d-0e11-71d7-000c-a90c0e7e0ca3, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_Z805569SNPREADONLY CLONE SNOWPARK_TEMP_TABLE_KWFSNGO7R5), QueryRecord(query_id=01bed54d-0e11-6ed3-000c-a90c0e7dff17, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_Z805569SNPREADONLY) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-722e-000c-a90c0e7dcfbf, sql_text=SELECT ""__row_position__"", ""__COL__"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""__COL__"" FROM SNOWPARK_TEMP_TABLE_Z805569SNPREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
30588,tests.integ.modin.series.test_getitem,test_series_getitem_with_int_list_like[key2],"AssertionError: Series are different

Series length are different
[left]:  1, Index([6], dtype='int64')
[right]: 0, Index([], dtype='int64')",failed
30594,tests.integ.modin.series.test_getitem,test_series_getitem_with_int_list_like[key3],"AssertionError: Series are different

Series length are different
[left]:  6, Index([2, 3, 6, 3, 2, 1], dtype='int64')
[right]: 5, Index([2, 3, 3, 2, 1], dtype='int64')",failed
30608,tests.integ.modin.series.test_getitem,test_series_getitem_with_int_list_like[key4],IndexError: positional indexers are out-of-bounds,failed
30612,tests.integ.modin.series.test_getitem,test_series_getitem_with_int_list_like_returns_empty_series[key0],"AssertionError: Series are different

Series length are different
[left]:  1, Index([2], dtype='int64')
[right]: 0, Index([], dtype='int64')",failed
30614,tests.integ.modin.series.test_iloc,test_series_iloc_snowpark_pandas_input_return_dataframe[Index-2],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
30615,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_column_names[True-read_with_select_*-""co'l""]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54d-0e11-6d76-000c-a90c0e7ea95b, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_PH6MDDSB7IREADONLY CLONE SNOWPARK_TEMP_TABLE_L4DXWHWJGA), QueryRecord(query_id=01bed54d-0e11-71dd-000c-a90c0e7f13ff, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_PH6MDDSB7IREADONLY) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-6bde-000c-a90c0e7e3cd3, sql_text=SELECT ""__row_position__"", ""co'l"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""co'l"" FROM SNOWPARK_TEMP_TABLE_PH6MDDSB7IREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
30616,tests.integ.modin.series.test_getitem,test_series_getitem_with_int_list_like_returns_empty_series[key1],"AssertionError: Series are different

Series length are different
[left]:  2, Index([6, 5], dtype='int64')
[right]: 0, Index([], dtype='int64')",failed
30619,tests.integ.modin.series.test_getitem,test_series_getitem_with_int_list_like_returns_empty_series[key2],"AssertionError: Series are different

Series length are different
[left]:  6, Index([5, 4, 6, 4, 5, 6], dtype='int64')
[right]: 0, Index([], dtype='int64')",failed
30620,tests.integ.modin.series.test_iloc,test_series_iloc_snowpark_pandas_input_return_dataframe[Series-2],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
30634,tests.integ.modin.series.test_getitem,test_series_getitem_with_int_list_like_returns_empty_series[key3],IndexError: positional indexers are out-of-bounds,failed
30641,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_column_names[True-read_with_select_*-""col""]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54d-0e11-6e4d-000c-a90c0e7e6ad3, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_H3HPN0S577READONLY CLONE SNOWPARK_TEMP_TABLE_WL9JXQM4Y0), QueryRecord(query_id=01bed54d-0e11-7168-000c-a90c0e7e9a1f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_H3HPN0S577READONLY) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-6bfa-000c-a90c0e7ef683, sql_text=SELECT ""__row_position__"", ""col"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""col"" FROM SNOWPARK_TEMP_TABLE_H3HPN0S577READONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
30649,tests.integ.modin.series.test_getitem,test_series_getitem_with_scalars[100],IndexError: positional indexers are out-of-bounds,failed
30653,tests.integ.modin.series.test_iloc,test_series_iloc_snowpark_pandas_input_return_dataframe[emptyFloatSeries-2],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
30656,tests.integ.modin.series.test_getitem,test_series_getitem_with_scalars[5],"assert (1,) == [1]
  Full diff:
  - [1]
  + (1,)",failed
30658,tests.integ.modin.series.test_getitem,test_series_getitem_with_scalars[-6],AssertionError: Got type: <class 'float'>,failed
30663,tests.integ.modin.series.test_getitem,test_series_getitem_with_scalars[-7.2],KeyError: -7.2,failed
30673,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_column_names[True-read_with_select_*-""c""""ol""]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54d-0e11-6ce4-000c-a90c0e7f71fb, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_ODA2LHGB7SREADONLY CLONE SNOWPARK_TEMP_TABLE_Y2FQU68RQ1), QueryRecord(query_id=01bed54d-0e11-721e-000c-a90c0e7f62db, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_ODA2LHGB7SREADONLY) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-6e5e-000c-a90c0e7e7cc3, sql_text=SELECT ""__row_position__"", ""c""""ol"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""c""""ol"" FROM SNOWPARK_TEMP_TABLE_ODA2LHGB7SREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
30681,tests.integ.modin.series.test_loc,test_series_loc_set_dataframe_item_negative[array],Failed: DID NOT RAISE <class 'Exception'>,failed
30686,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_bool[list-key5],IndexError: positional indexers are out-of-bounds,failed
30687,tests.integ.modin.series.test_equals,test_equals_numeric_variants[int8-int16-True],"assert False == True
 +  where False = <bound method Series.equals of 0    1\n1    3\ndtype: int8>(0    1\n1    3\ndtype: int16)
 +    where <bound method Series.equals of 0    1\n1    3\ndtype: int8> = 0    1\n1    3\ndtype: int8.equals",failed
30690,tests.integ.modin.series.test_equals,test_equals_numeric_variants[int32-int16-True],"assert False == True
 +  where False = <bound method Series.equals of 0    1\n1    3\ndtype: int32>(0    1\n1    3\ndtype: int16)
 +    where <bound method Series.equals of 0    1\n1    3\ndtype: int32> = 0    1\n1    3\ndtype: int32.equals",failed
30694,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_bool[series-key0],pandas.errors.IndexingError: Unalignable boolean Series provided as indexer (index of the boolean Series and of the indexed object do not match).,failed
30695,tests.integ.modin.series.test_getitem,test_series_getitem_with_scalars[6.5],KeyError: 6.5,failed
30697,tests.integ.modin.series.test_equals,test_equals_numeric_variants[float16-float32-True],"assert False == True
 +  where False = <bound method Series.equals of 0    1.0\n1    3.0\ndtype: float16>(0    1.0\n1    3.0\ndtype: float32)
 +    where <bound method Series.equals of 0    1.0\n1    3.0\ndtype: float16> = 0    1.0\n1    3.0\ndtype: float16.equals",failed
30700,tests.integ.modin.series.test_getitem,test_series_getitem_with_scalars[-120.3],KeyError: -120.3,failed
30702,tests.integ.modin.series.test_equals,test_equals_numeric_variants[float64-float32-True],"assert False == True
 +  where False = <bound method Series.equals of 0    1.0\n1    3.0\ndtype: float64>(0    1.0\n1    3.0\ndtype: float32)
 +    where <bound method Series.equals of 0    1.0\n1    3.0\ndtype: float64> = 0    1.0\n1    3.0\ndtype: float64.equals",failed
30705,tests.integ.modin.series.test_getitem,test_series_getitem_with_scalars[23.9],KeyError: 23.9,failed
30708,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_column_names[True-read_with_table_name-col],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54d-0e11-6e2a-000c-a90c0e7ecaef, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_F2VC2GL447READONLY CLONE SNOWPARK_TEMP_TABLE_4UUR6TXLGE), QueryRecord(query_id=01bed54d-0e11-6e4e-000c-a90c0e7eea0f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_F2VC2GL447READONLY) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-719e-000c-a90c0e7fc0a7, sql_text=SELECT ""__row_position__"", ""COL"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL"" FROM SNOWPARK_TEMP_TABLE_F2VC2GL447READONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
30722,tests.integ.modin.series.test_apply_and_map,test_null_nan_input[apply],"assert [""<class 'Non... 'NoneType'>""] == [""<class 'pan...ing.NAType'>""]
  At index 0 diff: ""<class 'NoneType'>"" != ""<class 'pandas._libs.missing.NAType'>""
  Full diff:
    [
  -  ""<class 'pandas._libs.missing.NAType'>"",
  -  ""<class 'pandas._libs.missing.NAType'>"",
  +  ""<class 'NoneType'>"",
  +  ""<class 'NoneType'>"",
    ]",failed
30728,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_bool[series-key1],pandas.errors.IndexingError: Unalignable boolean Series provided as indexer (index of the boolean Series and of the indexed object do not match).,failed
30739,tests.integ.modin.series.test_apply_and_map,test_null_nan_input[map],"assert [""<class 'Non... 'NoneType'>""] == [""<class 'pan...ing.NAType'>""]
  At index 0 diff: ""<class 'NoneType'>"" != ""<class 'pandas._libs.missing.NAType'>""
  Full diff:
    [
  -  ""<class 'pandas._libs.missing.NAType'>"",
  -  ""<class 'pandas._libs.missing.NAType'>"",
  +  ""<class 'NoneType'>"",
  +  ""<class 'NoneType'>"",
    ]",failed
30742,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_bool[series-key2],pandas.errors.IndexingError: Unalignable boolean Series provided as indexer (index of the boolean Series and of the indexed object do not match).,failed
30752,tests.integ.modin.series.test_apply_and_map,test_json_serializable_output_negative[apply],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
30753,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_bool[series-key3],pandas.errors.IndexingError: Unalignable boolean Series provided as indexer (index of the boolean Series and of the indexed object do not match).,failed
30760,tests.integ.modin.series.test_apply_and_map,test_json_serializable_output_negative[map],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
30765,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_bool[series-key4],pandas.errors.IndexingError: Unalignable boolean Series provided as indexer (index of the boolean Series and of the indexed object do not match).,failed
30772,tests.integ.modin.series.test_loc,test_series_loc_get_key_bool[index-key5],IndexError: positional indexers are out-of-bounds,failed
30773,tests.integ.modin.series.test_getitem,test_series_getitem_with_multiindex[baz],AssertionError: Got type: <class 'float'>,failed
30775,tests.integ.modin.pivot.test_pivot_table_single,test_pivot_empty_frame_snow_1013918[unnamed_columns-True-d-columns7],TypeError: 'str' object is not callable,failed
30777,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_bool[series-key5],pandas.errors.IndexingError: Unalignable boolean Series provided as indexer (index of the boolean Series and of the indexed object do not match).,failed
30778,tests.integ.modin.series.test_getitem,test_series_getitem_with_multiindex[key4],"AssertionError: Series are different

Series length are different
[left]:  2, MultiIndex([('extra', 'one'),
            ('extra', 'one')],
           names=['first', 'second'])
[right]: 4, MultiIndex([('foo', 'one'),
            ('foo', 'two'),
            ('bar', 'one'),
            ('bar', 'two')],
           names=['first', 'second'])",failed
30785,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_column_names[True-read_with_table_name-COL],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54d-0e11-6dc3-000c-a90c0e7f841f, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_LSG1ZVTSD0READONLY CLONE SNOWPARK_TEMP_TABLE_JBGW5XFTL4), QueryRecord(query_id=01bed54d-0e11-6e87-000c-a90c0e7edd03, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_LSG1ZVTSD0READONLY) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-6d08-000c-a90c0e7f081f, sql_text=SELECT ""__row_position__"", ""COL"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL"" FROM SNOWPARK_TEMP_TABLE_LSG1ZVTSD0READONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
30794,tests.integ.modin.pivot.test_pivot_table_single,test_pivot_empty_frame_snow_1013918[unnamed_columns-True-index11-columns11],TypeError: 'str' object is not callable,failed
30813,tests.integ.modin.series.test_head_tail,test_head_tail[1],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
30816,tests.integ.modin.series.test_head_tail,test_head_tail[None],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
30823,tests.integ.modin.series.test_head_tail,test_head_tail[0],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
30830,tests.integ.modin.series.test_head_tail,test_head_tail[-1],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
30835,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_column_names[True-read_with_table_name-Col],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54d-0e11-71f1-000c-a90c0e7ebfef, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_M3NUITNMZHREADONLY CLONE SNOWPARK_TEMP_TABLE_9984KR45X0), QueryRecord(query_id=01bed54d-0e11-71d7-000c-a90c0e7f95b3, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_M3NUITNMZHREADONLY) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-6ed3-000c-a90c0e7f574b, sql_text=SELECT ""__row_position__"", ""COL"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL"" FROM SNOWPARK_TEMP_TABLE_M3NUITNMZHREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
30837,tests.integ.modin.series.test_head_tail,test_head_tail[-10],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
30842,tests.integ.modin.series.test_head_tail,test_head_tail[5],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
30847,tests.integ.modin.series.test_head_tail,test_head_tail[10],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
30852,tests.integ.modin.series.test_head_tail,test_empty_dataframe[1],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
30857,tests.integ.modin.series.test_head_tail,test_empty_dataframe[None],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
30858,tests.integ.modin.pivot.test_pivot_table_single,test_pivot_empty_frame_no_values[True-True],TypeError: 'str' object is not callable,failed
30863,tests.integ.modin.series.test_head_tail,test_empty_dataframe[0],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
30867,tests.integ.modin.series.test_loc,test_series_loc_get_key_non_boolean_series[index-native_series_key1],TypeError: Cannot interpret 'Int64Dtype()' as a data type,failed
30883,tests.integ.modin.pivot.test_pivot_table_single,test_pivot_empty_frame_no_values[False-True],TypeError: 'str' object is not callable,failed
30939,tests.integ.modin.series.test_head_tail,test_empty_dataframe[-1],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
30942,tests.integ.modin.series.test_head_tail,test_empty_dataframe[-10],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
30944,tests.integ.modin.series.test_loc,test_series_loc_get_key_non_boolean_series[index-native_series_key2],TypeError: Cannot interpret 'Int64Dtype()' as a data type,failed
30946,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_column_names[True-read_with_table_name-""C O L""]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54d-0e11-722e-000c-a90c0e7f4793, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_JJ0GPEO13TREADONLY CLONE SNOWPARK_TEMP_TABLE_JTA9HJMWB0), QueryRecord(query_id=01bed54d-0e11-6d76-000c-a90c0e80018b, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_JJ0GPEO13TREADONLY) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-71dd-000c-a90c0e7f1c3f, sql_text=SELECT ""__row_position__"", ""C O L"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""C O L"" FROM SNOWPARK_TEMP_TABLE_JJ0GPEO13TREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
30947,tests.integ.modin.series.test_head_tail,test_empty_dataframe[5],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
30950,tests.integ.modin.series.test_head_tail,test_empty_dataframe[10],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
30970,tests.integ.modin.series.test_loc,test_series_loc_get_key_non_boolean_series[index-native_series_key3],TypeError: Cannot interpret 'Int64Dtype()' as a data type,failed
30983,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_column_names[True-read_with_table_name-__col__],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54d-0e11-6bde-000c-a90c0e7fb4e7, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_6AU8810VWWREADONLY CLONE SNOWPARK_TEMP_TABLE_TIJJ0EYEN6), QueryRecord(query_id=01bed54d-0e11-6e4d-000c-a90c0e7fd33f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_6AU8810VWWREADONLY) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-7168-000c-a90c0e8021e3, sql_text=SELECT ""__row_position__"", ""__COL__"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""__COL__"" FROM SNOWPARK_TEMP_TABLE_6AU8810VWWREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
30994,tests.integ.modin.series.test_loc,test_series_loc_get_key_non_boolean_series[index-native_series_key4],TypeError: Cannot interpret 'Int64Dtype()' as a data type,failed
31002,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[1-1-None],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [new, y, z, w, u]
[right]: [new, new, z, w, u]
At positional index 1, first diff: y != new",failed
31004,tests.integ.modin.series.test_hist,test_hist_params_neg[1-None-None-None-None-None-None-False-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
31006,tests.integ.modin.series.test_hist,test_hist_params_neg[None-1.0-None-None-None-None-None-False-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
31008,tests.integ.modin.series.test_hist,test_hist_params_neg[None-None-1-None-None-None-None-False-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
31009,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[1-1--1],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [new, y, z, w, u]
[right]: [new, new, z, w, u]
At positional index 1, first diff: y != new",failed
31010,tests.integ.modin.series.test_hist,test_hist_params_neg[None-None-None-1.0-None-None-None-False-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
31013,tests.integ.modin.series.test_hist,test_hist_params_neg[None-None-None-None-figsize4-None-None-False-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
31015,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[1-1-1],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, u]
[right]: [x, new, z, w, u]
At positional index 1, first diff: y != new",failed
31017,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_column_names[True-read_with_table_name-""co'l""]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54d-0e11-6bfa-000c-a90c0e7eff13, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_RSVYZACH6OREADONLY CLONE SNOWPARK_TEMP_TABLE_7SO0GKAA7J), QueryRecord(query_id=01bed54d-0e11-6ce4-000c-a90c0e7f7a47, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_RSVYZACH6OREADONLY) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-71c8-000c-a90c0e7fa723, sql_text=SELECT ""__row_position__"", ""co'l"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""co'l"" FROM SNOWPARK_TEMP_TABLE_RSVYZACH6OREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
31019,tests.integ.modin.series.test_hist,test_hist_params_neg[None-None-None-None-None-bins7-None-False-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
31021,tests.integ.modin.series.test_hist,test_hist_params_neg[None-None-None-None-None-None-matplotlib-False-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
31023,tests.integ.modin.series.test_loc,test_series_loc_get_key_non_boolean_series[index-native_series_key5],TypeError: Cannot interpret 'Int64Dtype()' as a data type,failed
31024,tests.integ.modin.series.test_hist,test_hist_params_neg[None-None-None-None-None-None-None-True-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
31026,tests.integ.modin.series.test_hist,test_hist_by_unsupported,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
31034,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[1-4-None],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [new, new, new, new, u]
[right]: [new, new, new, new, new]
At positional index 4, first diff: u != new",failed
31039,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[1-4--1],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [new, new, new, new, u]
[right]: [new, new, new, new, new]
At positional index 4, first diff: u != new",failed
31041,tests.integ.modin.series.test_loc,test_series_loc_get_key_non_boolean_series[index-native_series_key6],TypeError: Cannot interpret 'Int64Dtype()' as a data type,failed
31044,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_bool[index-key5],IndexError: positional indexers are out-of-bounds,failed
31046,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[1-4-1],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, new, new, new, u]
[right]: [x, new, new, new, new]
At positional index 4, first diff: u != new",failed
31048,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_bool[ndarray-key0],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
31062,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[1-4-4],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, u]
[right]: [x, y, z, w, new]
At positional index 4, first diff: u != new",failed
31063,tests.integ.modin.series.test_loc,test_series_loc_set_dataframe_item_negative[index],Failed: DID NOT RAISE <class 'Exception'>,failed
31070,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_column_names[True-read_with_table_name-""col""]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54d-0e11-6e5e-000c-a90c0e801487, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_OLPHJB54TOREADONLY CLONE SNOWPARK_TEMP_TABLE_E0M81TRMIV), QueryRecord(query_id=01bed54d-0e11-6e2a-000c-a90c0e804273, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_OLPHJB54TOREADONLY) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-6e4e-000c-a90c0e8051cb, sql_text=SELECT ""__row_position__"", ""col"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""col"" FROM SNOWPARK_TEMP_TABLE_OLPHJB54TOREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
31074,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_bool[ndarray-key5],IndexError: positional indexers are out-of-bounds,failed
31085,tests.integ.modin.series.test_loc,test_series_loc_get_key_bool_series_with_unaligned_and_duplicate_indices,"AssertionError: Series are different

Series length are different
[left]:  5, Index(['a', 'a', None, 'b', 'b'], dtype='object', name='index')
[right]: 9, Index(['a', 'a', 'a', 'a', None, 'b', 'b', 'b', 'b'], dtype='object', name='index')",failed
31096,tests.integ.modin.series.test_iat,test_iat_neg[key0-KeyError],Failed: DID NOT RAISE <class 'KeyError'>,failed
31098,tests.integ.modin.series.test_iat,test_iat_neg[key1-KeyError],"TypeError: int() argument must be a string, a bytes-like object or a real number, not 'dict'",failed
31100,tests.integ.modin.series.test_iat,test_iat_neg[a-IndexError],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
31101,tests.integ.modin.series.test_loc,test_series_loc_get_key_bool_series_with_mismatch_index_len[True-key0],pandas.errors.IndexingError: Unalignable boolean Series provided as indexer (index of the boolean Series and of the indexed object do not match).,failed
31104,tests.integ.modin.series.test_iat,test_iat_neg[key3-KeyError],pandas.errors.IndexingError: Too many indexers,failed
31114,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_column_names[True-read_with_table_name-""c""""ol""]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54d-0e11-719e-000c-a90c0e7fc857, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_64VRDCQ34ZREADONLY CLONE SNOWPARK_TEMP_TABLE_W2J3LBI7IY), QueryRecord(query_id=01bed54d-0e11-6dc3-000c-a90c0e7f8c07, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_64VRDCQ34ZREADONLY) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-6e87-000c-a90c0e80345f, sql_text=SELECT ""__row_position__"", ""c""""ol"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""c""""ol"" FROM SNOWPARK_TEMP_TABLE_64VRDCQ34ZREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
31130,tests.integ.modin.series.test_loc,test_series_loc_get_key_bool_series_with_mismatch_index_len[True-key1],pandas.errors.IndexingError: Unalignable boolean Series provided as indexer (index of the boolean Series and of the indexed object do not match).,failed
31139,tests.integ.modin.series.test_idxmax_idxmin,test_idxmax_idxmin_series[False-idxmax-data0-index0],"When the data column is None, Snowpark pandas returns None instead of nan",xfailed
31140,tests.integ.modin.series.test_idxmax_idxmin,test_idxmax_idxmin_series[False-idxmax-data1-index1],"When the data column is None, Snowpark pandas returns None instead of nan",xfailed
31146,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_column_names[False-read_with_select_*-col],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54d-0e11-6bfa-000c-a90c0e806287, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_IIQII0N5BB) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-6ce4-000c-a90c0e7f7e33, sql_text=SELECT ""__row_position__"", ""COL"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL"" FROM (SNOWPARK_TEMP_TABLE_IIQII0N5BB)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
31150,tests.integ.modin.series.test_idxmax_idxmin,test_idxmax_idxmin_series[False-idxmax-timedelta],"When the data column is None, Snowpark pandas returns None instead of nan",xfailed
31153,tests.integ.modin.series.test_idxmax_idxmin,test_idxmax_idxmin_series[False-idxmin-data0-index0],"When the data column is None, Snowpark pandas returns None instead of nan",xfailed
31154,tests.integ.modin.series.test_idxmax_idxmin,test_idxmax_idxmin_series[False-idxmin-data1-index1],"When the data column is None, Snowpark pandas returns None instead of nan",xfailed
31157,tests.integ.modin.series.test_loc,test_series_loc_get_key_bool_series_with_mismatch_index_len[False-key0],pandas.errors.IndexingError: Unalignable boolean Series provided as indexer (index of the boolean Series and of the indexed object do not match).,failed
31163,tests.integ.modin.series.test_idxmax_idxmin,test_idxmax_idxmin_series[False-idxmin-timedelta],"When the data column is None, Snowpark pandas returns None instead of nan",xfailed
31170,tests.integ.modin.series.test_loc,test_series_loc_get_key_bool_series_with_mismatch_index_len[False-key1],pandas.errors.IndexingError: Unalignable boolean Series provided as indexer (index of the boolean Series and of the indexed object do not match).,failed
31171,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[-1-1-None],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, new, new, new]
[right]: [x, new, new, new, new]
At positional index 1, first diff: y != new",failed
31172,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_column_names[False-read_with_select_*-COL],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54d-0e11-6ed3-000c-a90c0e7f5ecf, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_YRI7GDS3S4) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-722e-000c-a90c0e7f4e7f, sql_text=SELECT ""__row_position__"", ""COL"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL"" FROM (SNOWPARK_TEMP_TABLE_YRI7GDS3S4)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
31181,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[-1-1-1],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, u]
[right]: [x, new, z, w, u]
At positional index 1, first diff: y != new",failed
31184,tests.integ.modin.series.test_loc,test_series_loc_get_key_slice[False],"AssertionError: Series are different

Series length are different
[left]:  1, Index([0], dtype='int64')
[right]: 2, RangeIndex(start=0, stop=4, step=3)",failed
31187,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[-1-1-4],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, new, new, new]
[right]: [x, new, new, new, new]
At positional index 1, first diff: y != new",failed
31192,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[-1-1-10],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, new, new, new]
[right]: [x, new, new, new, new]
At positional index 1, first diff: y != new",failed
31197,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_column_names[False-read_with_select_*-Col],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54d-0e11-6e4e-000c-a90c0e80549f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_9SH59N1ZS1) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-719e-000c-a90c0e7fcab7, sql_text=SELECT ""__row_position__"", ""COL"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL"" FROM (SNOWPARK_TEMP_TABLE_9SH59N1ZS1)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
31201,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[-1-4-None],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, u]
[right]: [x, y, z, w, new]
At positional index 4, first diff: u != new",failed
31223,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[-1-4-4],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, u]
[right]: [x, y, z, w, new]
At positional index 4, first diff: u != new",failed
31227,tests.integ.modin.series.test_loc,test_mi_series_loc_get_non_boolean_list_key[key2-None],pandas.errors.IndexingError: Too many indexers,failed
31233,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[-1-4-10],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, u]
[right]: [x, y, z, w, new]
At positional index 4, first diff: u != new",failed
31238,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_column_names[False-read_with_select_*-""C O L""]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54d-0e11-6e4d-000c-a90c0e7fd8c3, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_0CIFDSGV8J) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-7168-000c-a90c0e80284b, sql_text=SELECT ""__row_position__"", ""C O L"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""C O L"" FROM (SNOWPARK_TEMP_TABLE_0CIFDSGV8J)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
31242,tests.integ.modin.series.test_loc,test_mi_series_loc_get_non_boolean_list_key[mark ii-KeyError],KeyError: 'mark ii',failed
31249,tests.integ.modin.series.test_loc,test_mi_series_loc_get_non_boolean_list_key[key4-None],"AssertionError: Series.index are different

Series.index levels are different
[left]:  1, Index(['mark v', 'mark vi'], dtype='object')
[right]: 2, MultiIndex([('mark i',  'mark v'),
            ('mark i', 'mark vi')],
           )",failed
31259,tests.integ.modin.series.test_loc,test_mi_series_loc_get_non_boolean_list_key[key5-None],"KeyError: ['viper', 'mark i', 'viper']",failed
31273,tests.integ.modin.series.test_loc,test_mi_series_loc_get_non_boolean_list_key[key6-KeyError],KeyError: 'invalid',failed
31281,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_column_names[False-read_with_select_*-__col__],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54d-0e11-71f1-000c-a90c0e7ffa97, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_KN6C70YTAK) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-71d7-000c-a90c0e7f9fd7, sql_text=SELECT ""__row_position__"", ""__COL__"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""__COL__"" FROM (SNOWPARK_TEMP_TABLE_KN6C70YTAK)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
31320,tests.integ.modin.series.test_loc,test_mi_series_loc_get_non_boolean_list_key[key7-None],KeyError: 'mark vi',failed
31330,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_column_names[False-read_with_select_*-""co'l""]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54d-0e11-6ed3-000c-a90c0e80b1db, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_UAHED2U4WI) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-6e2a-000c-a90c0e80486b, sql_text=SELECT ""__row_position__"", ""co'l"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""co'l"" FROM (SNOWPARK_TEMP_TABLE_UAHED2U4WI)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
31336,tests.integ.modin.series.test_iloc,test_iloc_with_row_key_series_rhs_series_no_shape_check[row_pos3-col_pos3-item_values3-native_values3],ValueError: buffer source array is read-only,failed
31340,tests.integ.modin.series.test_loc,test_mi_series_loc_get_non_boolean_list_key[key8-None],KeyError: 'mark vi',failed
31359,tests.integ.modin.series.test_loc,test_mi_series_loc_get_non_boolean_list_key[key9-None],KeyError: 'mark vi',failed
31367,tests.integ.modin.series.test_loc,test_mi_series_loc_get_non_boolean_list_key[key10-AssertionError],"assert False
 +  where False = mark i  mark v     12\n        mark vi     2\ndtype: int64.empty",failed
31377,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_column_names[False-read_with_select_*-""col""]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54d-0e11-71dd-000c-a90c0e8085eb, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_RW3UREVYVA) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-6bde-000c-a90c0e7fbe3b, sql_text=SELECT ""__row_position__"", ""col"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""col"" FROM (SNOWPARK_TEMP_TABLE_RW3UREVYVA)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
31396,tests.integ.modin.series.test_iloc,test_iloc_with_row_key_series_rhs_series_no_shape_check[row_pos4-col_pos4-item_values4-native_values4],ValueError: buffer source array is read-only,failed
31399,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[2-1-None],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, u]
[right]: [new, y, z, w, u]
At positional index 0, first diff: x != new",failed
31412,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[2-1--1],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, u]
[right]: [new, y, z, w, u]
At positional index 0, first diff: x != new",failed
31414,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_bool[index with name-key5],IndexError: positional indexers are out-of-bounds,failed
31421,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_column_names[False-read_with_select_*-""c""""ol""]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54d-0e11-6e87-000c-a90c0e803937, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_ZITBWYITQA) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-6d08-000c-a90c0e8094e7, sql_text=SELECT ""__row_position__"", ""c""""ol"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""c""""ol"" FROM (SNOWPARK_TEMP_TABLE_ZITBWYITQA)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
31424,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[2-1-1],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, u]
[right]: [x, new, z, w, u]
At positional index 1, first diff: y != new",failed
31441,tests.integ.modin.series.test_iloc,test_df_iloc_set_with_multiindex[item_values1-None-3-1-None],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [10.0, nan, 12.0, 13.0, 14.0]
[right]: [10, -999, 12, 13, 14]",failed
31443,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_numeric[list-key4],IndexError: index 14 is out of bounds for axis 0 with size 7,failed
31447,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_numeric[list-key5],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
31451,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_numeric[list-key6],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
31453,tests.integ.modin.series.test_iloc,test_df_iloc_set_with_multiindex[item_values1-None-3-row_key1-None],"AssertionError: Series are different

Series values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [nan, 11.0, 12.0, nan, 14.0]
[right]: [-998, 11, 12, -999, 14]",failed
31458,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_numeric[series-key0],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
31466,tests.integ.modin.series.test_iloc,test_df_iloc_set_with_multiindex[item_values1-None-3-row_key2-row_key_index2],"AssertionError: Series are different

Series values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [10.0, nan, nan, 13.0, 14.0]
[right]: [10, -999, -998, 13, 14]",failed
31469,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[2-4-None],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [new, y, new, w, u]
[right]: [new, y, new, w, new]
At positional index 4, first diff: u != new",failed
31472,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_column_names[False-read_with_table_name-col],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54d-0e11-6ce4-000c-a90c0e80c4a3, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_F1DGANW3QY) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-71c8-000c-a90c0e7fafb7, sql_text=SELECT ""__row_position__"", ""COL"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL"" FROM (SNOWPARK_TEMP_TABLE_F1DGANW3QY)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
31480,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[2-4--1],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [new, y, new, w, u]
[right]: [new, y, new, w, new]
At positional index 4, first diff: u != new",failed
31483,tests.integ.modin.series.test_iloc,test_df_iloc_set_with_multiindex[item_values1-None-3-row_key3-row_key_index3],"AssertionError: Series are different

Series values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [10.0, nan, nan, 13.0, 14.0]
[right]: [10, -998, -999, 13, 14]",failed
31491,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[2-4-1],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, new, z, w, u]
[right]: [x, new, z, new, u]
At positional index 3, first diff: w != new",failed
31495,tests.integ.modin.series.test_iloc,test_df_iloc_set_with_multiindex[item_values2-item_index2-4-1-None],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [10.0, nan, 12.0, 13.0, 14.0]
[right]: [10, -999, 12, 13, 14]",failed
31504,tests.integ.modin.series.test_iloc,test_df_iloc_set_with_multiindex[item_values2-item_index2-4-row_key1-None],"AssertionError: Series are different

Series values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [nan, 11.0, 12.0, nan, 14.0]
[right]: [-998, 11, 12, -999, 14]",failed
31507,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[2-4-4],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, u]
[right]: [x, y, z, w, new]
At positional index 4, first diff: u != new",failed
31509,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_numeric[series-key4],IndexError: index 14 is out of bounds for axis 0 with size 7,failed
31515,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_numeric[series-key5],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
31521,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_numeric[series-key6],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
31525,tests.integ.modin.series.test_iloc,test_df_iloc_set_with_multiindex[item_values2-item_index2-4-row_key2-row_key_index2],"AssertionError: Series are different

Series values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [10.0, nan, nan, 13.0, 14.0]
[right]: [10, -999, -998, 13, 14]",failed
31529,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_column_names[False-read_with_table_name-COL],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54d-0e11-6e5e-000c-a90c0e801d6f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_812PTSUR1D) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-6e2a-000c-a90c0e804b1b, sql_text=SELECT ""__row_position__"", ""COL"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL"" FROM (SNOWPARK_TEMP_TABLE_812PTSUR1D)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
31539,tests.integ.modin.series.test_iloc,test_df_iloc_set_with_multiindex[item_values2-item_index2-4-row_key3-row_key_index3],"AssertionError: Series are different

Series values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [10.0, nan, nan, 13.0, 14.0]
[right]: [10, -998, -999, 13, 14]",failed
31548,tests.integ.modin.series.test_iloc,test_df_iloc_set_with_multiindex[item_values3-item_index3-5-1-None],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [10.0, nan, 12.0, 13.0, 14.0]
[right]: [10, -999, 12, 13, 14]",failed
31558,tests.integ.modin.series.test_iloc,test_df_iloc_set_with_multiindex[item_values3-item_index3-5-row_key1-None],"AssertionError: Series are different

Series values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [nan, 11.0, 12.0, nan, 14.0]
[right]: [-998, 11, 12, -999, 14]",failed
31570,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_column_names[False-read_with_table_name-Col],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54d-0e11-71dd-000c-a90c0e8088cf, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_OQKIDGOY2J) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-6bde-000c-a90c0e8120f3, sql_text=SELECT ""__row_position__"", ""COL"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL"" FROM (SNOWPARK_TEMP_TABLE_OQKIDGOY2J)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
31573,tests.integ.modin.series.test_iloc,test_df_iloc_set_with_multiindex[item_values3-item_index3-5-row_key2-row_key_index2],"AssertionError: Series are different

Series values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [10.0, nan, nan, 13.0, 14.0]
[right]: [10, -999, -998, 13, 14]",failed
31585,tests.integ.modin.series.test_iloc,test_df_iloc_set_with_multiindex[item_values3-item_index3-5-row_key3-row_key_index3],"AssertionError: Series are different

Series values are different (40.0 %)
[index]: [(x, 99), (y, 11), (x, 11), (y, 99), (z, -12)]
[left]:  [10.0, nan, nan, 13.0, 14.0]
[right]: [10, -998, -999, 13, 14]",failed
31616,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_column_names[False-read_with_table_name-""C O L""]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54d-0e11-7168-000c-a90c0e802eff, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_KYIBM092AU) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-6bfa-000c-a90c0e806aa7, sql_text=SELECT ""__row_position__"", ""C O L"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""C O L"" FROM (SNOWPARK_TEMP_TABLE_KYIBM092AU)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
31625,tests.integ.modin.series.test_iloc,test_iloc_get_multiindex_key_negative,"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
31627,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[-2--1-None],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, new, w, new]
[right]: [new, y, new, w, new]
At positional index 0, first diff: x != new",failed
31642,tests.integ.modin.series.test_iloc,test_series_iloc_set_scalar_key_with_list_value_negative,TODO: SNOW-991872 support set cell to array values,xfailed
31650,tests.integ.modin.series.test_iloc,test_iloc_efficient_sql[<lambda>0],IndexError: list index out of range,failed
31654,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[-2--1-4],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, new, w, new]
[right]: [new, y, new, w, new]
At positional index 0, first diff: x != new",failed
31657,tests.integ.modin.series.test_iloc,test_iloc_efficient_sql[<lambda>1],IndexError: list index out of range,failed
31660,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_column_names[False-read_with_table_name-__col__],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54d-0e11-71d7-000c-a90c0e80f537, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_HC6AJUPPCF) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-721e-000c-a90c0e80e683, sql_text=SELECT ""__row_position__"", ""__COL__"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""__COL__"" FROM (SNOWPARK_TEMP_TABLE_HC6AJUPPCF)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
31664,tests.integ.modin.series.test_iloc,test_iloc_efficient_sql[<lambda>2],IndexError: list index out of range,failed
31667,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[-2--1-10],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, new, w, new]
[right]: [new, y, new, w, new]
At positional index 0, first diff: x != new",failed
31670,tests.integ.modin.series.test_iloc,test_iloc_efficient_sql[<lambda>3],IndexError: list index out of range,failed
31680,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[-2-1-None],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, new]
[right]: [x, y, new, w, new]
At positional index 2, first diff: z != new",failed
31681,tests.integ.modin.series.test_iloc,test_iloc_efficient_sql[<lambda>4],IndexError: positional indexers are out-of-bounds,failed
31700,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[-2-1-1],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, u]
[right]: [x, new, z, w, u]
At positional index 1, first diff: y != new",failed
31707,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_column_names[False-read_with_table_name-""co'l""]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54d-0e11-722e-000c-a90c0e80d6db, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_GYLAT2KLP4) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-6d76-000c-a90c0e81510f, sql_text=SELECT ""__row_position__"", ""co'l"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""co'l"" FROM (SNOWPARK_TEMP_TABLE_GYLAT2KLP4)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
31713,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[-2-1-4],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, new]
[right]: [x, y, new, w, new]
At positional index 2, first diff: z != new",failed
31723,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[-2-1-10],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, new]
[right]: [x, y, new, w, new]
At positional index 2, first diff: z != new",failed
31737,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[-2-4-None],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, u]
[right]: [x, y, z, w, new]
At positional index 4, first diff: u != new",failed
31751,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_column_names[False-read_with_table_name-""col""]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54d-0e11-719e-000c-a90c0e81338f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_XQ2AIQQSA5) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-6dc3-000c-a90c0e81070f, sql_text=SELECT ""__row_position__"", ""col"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""col"" FROM (SNOWPARK_TEMP_TABLE_XQ2AIQQSA5)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
31757,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_numeric[index-key4],IndexError: index 14 is out of bounds for axis 0 with size 7,failed
31769,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[-2-4-4],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, u]
[right]: [x, y, z, w, new]
At positional index 4, first diff: u != new",failed
31780,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[-2-4-10],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, u]
[right]: [x, y, z, w, new]
At positional index 4, first diff: u != new",failed
31787,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_numeric[index-key5],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
31796,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_column_names[False-read_with_table_name-""c""""ol""]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54d-0e11-7168-000c-a90c0e817217, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_PSTSUVQ4MO) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-71f1-000c-a90c0e816233, sql_text=SELECT ""__row_position__"", ""c""""ol"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""c""""ol"" FROM (SNOWPARK_TEMP_TABLE_PSTSUVQ4MO)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
31822,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_numeric[index-key6],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
31825,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_numeric[ndarray-key0],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
31853,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_numeric[ndarray-key4],IndexError: index 14 is out of bounds for axis 0 with size 7,failed
31857,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_numeric[ndarray-key5],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
31859,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_numeric[ndarray-key6],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
31870,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_index_col[True-read_with_select_*-col-""c""""ol""]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54d-0e11-71d7-000c-a90c0e80f7af, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_Y3ONHSDMEIREADONLY CLONE SNOWPARK_TEMP_TABLE_UTY09VA4NF), QueryRecord(query_id=01bed54d-0e11-721e-000c-a90c0e80e923, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_Y3ONHSDMEIREADONLY) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-6e5e-000c-a90c0e81833b, sql_text=SELECT ""COL"", ""c""""ol"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL"", ""c""""ol"" FROM SNOWPARK_TEMP_TABLE_Y3ONHSDMEIREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
31925,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[9-1-None],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, u]
[right]: [new, y, z, w, u]
At positional index 0, first diff: x != new",failed
31936,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[9-1--1],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, u]
[right]: [new, y, z, w, u]
At positional index 0, first diff: x != new",failed
31938,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_index_col[True-read_with_select_*-COL-""col""]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54d-0e11-6e2a-000c-a90c0e81c0f3, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_1NLCNB3KGZREADONLY CLONE SNOWPARK_TEMP_TABLE_K90SDDRJRU), QueryRecord(query_id=01bed54d-0e11-6e4e-000c-a90c0e81d07f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_1NLCNB3KGZREADONLY) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-719e-000c-a90c0e81369b, sql_text=SELECT ""COL"", ""col"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL"", ""col"" FROM SNOWPARK_TEMP_TABLE_1NLCNB3KGZREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
31946,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[9-1-1],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, u]
[right]: [x, new, z, w, u]
At positional index 1, first diff: y != new",failed
31950,tests.integ.modin.series.test_loc,test_series_loc_set_series_and_list_like_row_key_and_item[ndarray-index-row_key0],IndexError: index 2 is out of bounds for axis 0 with size 2,failed
31974,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[9-4-None],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, u]
[right]: [new, y, z, w, u]
At positional index 0, first diff: x != new",failed
31985,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[9-4--1],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, u]
[right]: [new, y, z, w, u]
At positional index 0, first diff: x != new",failed
31994,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[9-4-1],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, u]
[right]: [x, new, z, w, u]
At positional index 1, first diff: y != new",failed
31997,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_index_col[True-read_with_select_*-Col-""co'l""]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54d-0e11-6dc3-000c-a90c0e810a93, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_043JI5V0T7READONLY CLONE SNOWPARK_TEMP_TABLE_N0EQ3LKZ2N), QueryRecord(query_id=01bed54d-0e11-6e87-000c-a90c0e81b23b, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_043JI5V0T7READONLY) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-6bfa-000c-a90c0e81f0d3, sql_text=SELECT ""COL"", ""co'l"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL"", ""co'l"" FROM SNOWPARK_TEMP_TABLE_043JI5V0T7READONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
31998,tests.integ.modin.series.test_loc,test_series_loc_set_series_and_list_like_row_key_and_item[ndarray-ndarray-row_key0],IndexError: index 2 is out of bounds for axis 0 with size 2,failed
32003,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[9-4-4],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, u]
[right]: [x, y, z, w, new]
At positional index 4, first diff: u != new",failed
32027,tests.integ.modin.series.test_loc,test_series_loc_set_series_and_list_like_row_key_and_item[ndarray-index with name-row_key0],IndexError: index 2 is out of bounds for axis 0 with size 2,failed
32028,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_index_col[True-read_with_select_*-""C O L""-__col__]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54d-0e11-6ce4-000c-a90c0e80cdcf, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_CB0PYLM0MRREADONLY CLONE SNOWPARK_TEMP_TABLE_S64Y243FFT), QueryRecord(query_id=01bed54d-0e11-71c8-000c-a90c0e811903, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_CB0PYLM0MRREADONLY) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-6ed3-000c-a90c0e80be1b, sql_text=SELECT ""C O L"", ""__COL__"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""C O L"", ""__COL__"" FROM SNOWPARK_TEMP_TABLE_CB0PYLM0MRREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
32034,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[9-10-4],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, u]
[right]: [x, y, z, w, new]
At positional index 4, first diff: u != new",failed
32036,tests.integ.modin.series.test_reindex,test_reindex_index_passed_twice,"AssertionError: Regex pattern did not match.
 Regex: ""got\\ multiple\\ values\\ for\\ argument\\ 'index'""
 Input: ""multiple values for argument 'index'""",failed
32039,tests.integ.modin.series.test_reindex,test_reindex_multiple_args_passed,"AssertionError: Regex pattern did not match.
 Regex: ""got\\ multiple\\ values\\ for\\ argument\\ 'index'""
 Input: ""multiple values for argument 'index'""",failed
32065,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_numeric[index with name-key4],IndexError: index 14 is out of bounds for axis 0 with size 7,failed
32087,tests.integ.modin.series.test_loc,test_series_loc_set_series_and_list_like_row_key_and_item[ndarray-list-row_key0],IndexError: index 2 is out of bounds for axis 0 with size 2,failed
32099,tests.integ.modin.series.test_iloc,test_series_iloc_get_slice_with_invalid_step_negative,"AssertionError: Regex pattern did not match.
 Regex: 'slice step cannot be zero.'
 Input: 'slice step cannot be zero'",failed
32100,tests.integ.modin.series.test_loc,test_series_loc_set_series_and_list_like_row_key_and_item[ndarray-series-row_key0],IndexError: index 2 is out of bounds for axis 0 with size 2,failed
32101,tests.integ.modin.series.test_iloc,test_series_iloc_get_slice_with_non_integer_parameters_negative[slice_key0],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
32102,tests.integ.modin.series.test_reindex,test_reindex_index_fill_method_pandas_negative[1-bfill],ValueError: limit argument for 'backfill' method only well-defined if index and target are monotonic,failed
32104,tests.integ.modin.series.test_iloc,test_series_iloc_get_slice_with_non_integer_parameters_negative[slice_key1],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
32108,tests.integ.modin.series.test_iloc,test_series_iloc_get_slice_with_non_integer_parameters_negative[slice_key2],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
32109,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_index_col[True-read_with_select_*-__col__-""C O L""]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54d-0e11-722e-000c-a90c0e80dd3f, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_SY1102EFYEREADONLY CLONE SNOWPARK_TEMP_TABLE_4G0G6BMMNF), QueryRecord(query_id=01bed54d-0e11-6d76-000c-a90c0e815837, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_SY1102EFYEREADONLY) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-71dd-000c-a90c0e81e3f3, sql_text=SELECT ""__COL__"", ""C O L"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""__COL__"", ""C O L"" FROM SNOWPARK_TEMP_TABLE_SY1102EFYEREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
32110,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_numeric[index with name-key5],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
32114,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[-9--1-None],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, u]
[right]: [x, y, z, w, new]
At positional index 4, first diff: u != new",failed
32117,tests.integ.modin.series.test_isin,test_isin_with_str_negative,"AssertionError: Regex pattern did not match.
 Regex: 'only\\ list\\-like\\ objects\\ are\\ allowed\\ to\\ be\\ passed\\ to\\ isin\\(\\),\\ you\\ passed\\ a\\ \\[str\\]'
 Input: 'only list-like objects are allowed to be passed to isin(), you passed a `str`'",failed
32120,tests.integ.modin.series.test_loc,test_series_loc_set_series_and_list_like_row_key_and_item[ndarray-series with name-row_key0],IndexError: index 2 is out of bounds for axis 0 with size 2,failed
32122,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_numeric[index with name-key6],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
32123,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[-9--1-1],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, u]
[right]: [x, new, z, w, u]
At positional index 1, first diff: y != new",failed
32125,tests.integ.modin.series.test_reindex,test_reindex_index_fill_method_pandas_negative[1-backfill],ValueError: limit argument for 'backfill' method only well-defined if index and target are monotonic,failed
32131,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[-9--1-4],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, u]
[right]: [x, y, z, w, new]
At positional index 4, first diff: u != new",failed
32136,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[-9--1-10],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, u]
[right]: [x, y, z, w, new]
At positional index 4, first diff: u != new",failed
32140,tests.integ.modin.series.test_reindex,test_reindex_index_fill_method_pandas_negative[1-pad],ValueError: limit argument for 'pad' method only well-defined if index and target are monotonic,failed
32142,tests.integ.modin.series.test_loc,test_series_loc_set_series_and_list_like_row_key_and_item[ndarray-series with non-default index-row_key0],IndexError: index 2 is out of bounds for axis 0 with size 2,failed
32146,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_index_col[True-read_with_select_*-""co'l""-Col]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54d-0e11-6bde-000c-a90c0e812acb, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_4VH6G3E2P9READONLY CLONE SNOWPARK_TEMP_TABLE_R2QB3QBE3K), QueryRecord(query_id=01bed54d-0e11-6e4d-000c-a90c0e8197c7, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_4VH6G3E2P9READONLY) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-7168-000c-a90c0e8179f3, sql_text=SELECT ""co'l"", ""COL"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""co'l"", ""COL"" FROM SNOWPARK_TEMP_TABLE_4VH6G3E2P9READONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
32152,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_scalar[-8],IndexError: index -8 is out of bounds for axis 0 with size 7,failed
32157,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_scalar[7],IndexError: positional indexers are out-of-bounds,failed
32162,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_scalar[52879115],IndexError: positional indexers are out-of-bounds,failed
32163,tests.integ.modin.series.test_reindex,test_reindex_index_fill_method_pandas_negative[1-ffill],ValueError: limit argument for 'pad' method only well-defined if index and target are monotonic,failed
32165,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_scalar[-9028751],IndexError: index -9028751 is out of bounds for axis 0 with size 7,failed
32171,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[-9-1-None],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, u]
[right]: [x, y, z, w, new]
At positional index 4, first diff: u != new",failed
32174,tests.integ.modin.series.test_iloc,test_series_iloc_get_ellipses_and_native_pd_key_raises_type_error_negative[key0-<class\\ 'pandas\\.core\\.series\\.Series'>\\ is\\ not\\ supported\\ as\\ 'value'\\ argument\\.\\ Please\\ convert\\ this\\ to\\ Snowpark\\ pandas\\ objects\\ by\\ calling\\ modin\\.pandas\\.Series\\(\\)/DataFrame\\(\\)],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
32176,tests.integ.modin.series.test_iloc,test_series_iloc_get_ellipses_and_native_pd_key_raises_type_error_negative[key1-<class\\ 'pandas\\.core\\.frame\\.DataFrame'>\\ is\\ not\\ supported\\ as\\ 'value'\\ argument\\.\\ Please\\ convert\\ this\\ to\\ Snowpark\\ pandas\\ objects\\ by\\ calling\\ modin\\.pandas\\.Series\\(\\)/DataFrame\\(\\)],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
32177,tests.integ.modin.series.test_iloc,test_series_iloc_get_ellipses_and_native_pd_key_raises_type_error_negative[key2-Object\\ of\\ type\\ ellipsis\\ is\\ not\\ JSON\\ serializable],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
32178,tests.integ.modin.series.test_iloc,test_series_iloc_get_ellipses_and_native_pd_key_raises_type_error_negative[key3-Object of type ellipsis is not JSON serializable],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
32192,tests.integ.modin.series.test_iloc,test_series_iloc_get_invalid_slice_key_negative[key0],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
32194,tests.integ.modin.series.test_iloc,test_series_iloc_get_invalid_slice_key_negative[key1],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
32196,tests.integ.modin.series.test_iloc,test_series_iloc_get_invalid_slice_key_negative[key2],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
32197,tests.integ.modin.series.test_reindex,test_reindex_index_fill_method_pandas_negative[2-bfill],ValueError: limit argument for 'backfill' method only well-defined if index and target are monotonic,failed
32198,tests.integ.modin.series.test_iloc,test_series_iloc_get_non_numeric_key_negative[None],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
32199,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[-9-1-1],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, u]
[right]: [x, new, z, w, u]
At positional index 1, first diff: y != new",failed
32200,tests.integ.modin.series.test_iloc,test_series_iloc_get_range_deviating_behavior[range_key0],IndexError: positional indexers are out-of-bounds,failed
32201,tests.integ.modin.series.test_iloc,test_series_iloc_get_non_numeric_key_negative[True],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
32202,tests.integ.modin.series.test_iloc,test_series_iloc_get_non_numeric_key_negative[False],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
32204,tests.integ.modin.series.test_iloc,test_series_iloc_get_non_numeric_key_negative[-3.14],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
32205,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_index_col[True-read_with_select_*-""col""-COL]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54d-0e11-71f1-000c-a90c0e8169bf, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_LOIP47WM7KREADONLY CLONE SNOWPARK_TEMP_TABLE_11JXPW0XKH), QueryRecord(query_id=01bed54d-0e11-71d7-000c-a90c0e80ff37, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_LOIP47WM7KREADONLY) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-721e-000c-a90c0e8241ab, sql_text=SELECT ""col"", ""COL"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""col"", ""COL"" FROM SNOWPARK_TEMP_TABLE_LOIP47WM7KREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
32206,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[-9-1-4],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, u]
[right]: [x, y, z, w, new]
At positional index 4, first diff: u != new",failed
32207,tests.integ.modin.series.test_iloc,test_series_iloc_get_non_numeric_key_negative[3.142857142857143],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
32208,tests.integ.modin.series.test_iloc,test_series_iloc_get_range_deviating_behavior[range_key1],IndexError: positional indexers are out-of-bounds,failed
32209,tests.integ.modin.series.test_iloc,test_series_iloc_get_non_numeric_key_negative[nan],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
32211,tests.integ.modin.series.test_iloc,test_series_iloc_get_non_numeric_key_negative[key6],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
32213,tests.integ.modin.series.test_iloc,test_series_iloc_get_range_deviating_behavior[range_key2],IndexError: positional indexers are out-of-bounds,failed
32217,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[-9-1-10],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, u]
[right]: [x, y, z, w, new]
At positional index 4, first diff: u != new",failed
32218,tests.integ.modin.series.test_iloc,test_series_iloc_get_range_deviating_behavior[range_key3],IndexError: positional indexers are out-of-bounds,failed
32219,tests.integ.modin.series.test_reindex,test_reindex_index_fill_method_pandas_negative[2-backfill],ValueError: limit argument for 'backfill' method only well-defined if index and target are monotonic,failed
32224,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[-9-4-None],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, u]
[right]: [x, y, z, w, new]
At positional index 4, first diff: u != new",failed
32228,tests.integ.modin.series.test_reindex,test_reindex_index_fill_method_pandas_negative[2-pad],ValueError: limit argument for 'pad' method only well-defined if index and target are monotonic,failed
32229,tests.integ.modin.series.test_iloc,test_iloc_with_row_key_series_rhs_series[row_pos0-col_pos0-item_values0],"ValueError: could not broadcast input array from shape (3,) into shape (3, 0)",failed
32235,tests.integ.modin.series.test_iloc,test_series_iloc_get_non_numeric_key_negative[key7],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
32241,tests.integ.modin.series.test_reindex,test_reindex_index_fill_method_pandas_negative[2-ffill],ValueError: limit argument for 'pad' method only well-defined if index and target are monotonic,failed
32242,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_index_col[True-read_with_select_*-""c""""ol""-col]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54d-0e11-6e5e-000c-a90c0e818b9f, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_VHNE657TPEREADONLY CLONE SNOWPARK_TEMP_TABLE_97SWO2W785), QueryRecord(query_id=01bed54d-0e11-6e2a-000c-a90c0e81c953, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_VHNE657TPEREADONLY) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-6e4e-000c-a90c0e81d8ab, sql_text=SELECT ""c""""ol"", ""COL"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""c""""ol"", ""COL"" FROM SNOWPARK_TEMP_TABLE_VHNE657TPEREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
32243,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[-9-4-4],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, u]
[right]: [x, y, z, w, new]
At positional index 4, first diff: u != new",failed
32247,tests.integ.modin.series.test_loc,test_series_loc_set_key_slice[-9-4-10],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [x, y, z, w, u]
[right]: [x, y, z, w, new]
At positional index 4, first diff: u != new",failed
32251,tests.integ.modin.series.test_reindex,test_reindex_index_fill_method_pandas_negative[100-bfill],ValueError: limit argument for 'backfill' method only well-defined if index and target are monotonic,failed
32253,tests.integ.modin.series.test_iloc,test_iloc_with_row_key_series_rhs_series[row_pos1-col_pos1-item_values1],ValueError: buffer source array is read-only,failed
32256,tests.integ.modin.series.test_iloc,test_series_iloc_get_non_numeric_key_negative[key8],Failed: DID NOT RAISE <class 'IndexError'>,failed
32262,tests.integ.modin.series.test_reindex,test_reindex_index_fill_method_pandas_negative[100-backfill],ValueError: limit argument for 'backfill' method only well-defined if index and target are monotonic,failed
32265,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_index_col[True-read_with_table_name-col-""c""""ol""]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54d-0e11-719e-000c-a90c0e813f1f, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_KCK7HPR9DCREADONLY CLONE SNOWPARK_TEMP_TABLE_4FI8H4DWEG), QueryRecord(query_id=01bed54d-0e11-6dc3-000c-a90c0e8263eb, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_KCK7HPR9DCREADONLY) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-6e87-000c-a90c0e81bb2f, sql_text=SELECT ""COL"", ""c""""ol"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL"", ""c""""ol"" FROM SNOWPARK_TEMP_TABLE_KCK7HPR9DCREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
32266,tests.integ.modin.series.test_iloc,test_iloc_with_row_key_series_rhs_series[row_pos2-col_pos2-item_values2],ValueError: buffer source array is read-only,failed
32272,tests.integ.modin.series.test_iloc,test_series_iloc_get_non_numeric_key_negative[key9],Failed: DID NOT RAISE <class 'IndexError'>,failed
32274,tests.integ.modin.series.test_iloc,test_series_iloc_get_non_numeric_key_negative[string],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
32276,tests.integ.modin.series.test_iloc,test_series_iloc_get_non_numeric_key_negative[test],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
32277,tests.integ.modin.series.test_iloc,test_series_iloc_get_non_numeric_key_negative[key12],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
32278,tests.integ.modin.series.test_iloc,test_series_iloc_get_non_numeric_key_negative[key13],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
32281,tests.integ.modin.series.test_reindex,test_reindex_index_fill_method_pandas_negative[100-pad],ValueError: limit argument for 'pad' method only well-defined if index and target are monotonic,failed
32283,tests.integ.modin.series.test_iloc,test_iloc_with_row_key_series_rhs_series[row_pos3-col_pos3-item_values3],ValueError: buffer source array is read-only,failed
32284,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_snowpark_df_input_negative,"ValueError: Buffer has wrong number of dimensions (expected 1, got 2)",failed
32285,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_snowpark_empty_str_series_input_negative,"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
32289,tests.integ.modin.series.test_reindex,test_reindex_index_fill_method_pandas_negative[100-ffill],ValueError: limit argument for 'pad' method only well-defined if index and target are monotonic,failed
32291,tests.integ.modin.series.test_iloc,test_iloc_with_row_key_series_rhs_series[row_pos4-col_pos4-item_values4],ValueError: buffer source array is read-only,failed
32295,tests.integ.modin.series.test_iloc,test_series_iloc_get_key_raises_not_implemented_error_negative[key0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
32297,tests.integ.modin.series.test_iloc,test_series_iloc_get_empty,IndexError: single positional indexer is out-of-bounds,failed
32305,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_index_col[True-read_with_table_name-COL-""col""]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54d-0e11-6bfa-000c-a90c0e81f9e7, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_V2L8ZL3XSFREADONLY CLONE SNOWPARK_TEMP_TABLE_XZQIGBQ5RC), QueryRecord(query_id=01bed54d-0e11-6ce4-000c-a90c0e822887, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_V2L8ZL3XSFREADONLY) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-71c8-000c-a90c0e8293ab, sql_text=SELECT ""COL"", ""col"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL"", ""col"" FROM SNOWPARK_TEMP_TABLE_V2L8ZL3XSFREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
32310,tests.integ.modin.series.test_iloc,test_iloc_with_row_key_series_rhs_series[row_pos5-col_pos5-item_values5],ValueError: buffer source array is read-only,failed
32352,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_index_col[True-read_with_table_name-Col-""co'l""]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54d-0e11-6ed3-000c-a90c0e823777, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_OYEBJ9RKVXREADONLY CLONE SNOWPARK_TEMP_TABLE_TNJMIVKLEY), QueryRecord(query_id=01bed54d-0e11-722e-000c-a90c0e8256d7, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_OYEBJ9RKVXREADONLY) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-6d76-000c-a90c0e82d177, sql_text=SELECT ""COL"", ""co'l"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL"", ""co'l"" FROM SNOWPARK_TEMP_TABLE_OYEBJ9RKVXREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
32355,tests.integ.modin.series.test_iloc,test_iloc_with_row_key_series_rhs_series_no_shape_check[row_pos0-col_pos0-item_values0-native_values0],ValueError: buffer source array is read-only,failed
32430,tests.integ.modin.series.test_monotonic,test_monotonic_type_mismatch,"AssertionError: assert False
 +  where False = 0    0\n1    a\ndtype: object.is_monotonic_increasing
 +    where 0    0\n1    a\ndtype: object = <class 'modin.pandas.series.Series'>([0, 'a'])
 +      where <class 'modin.pandas.series.Series'> = pd.Series",failed
32438,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_index_col[True-read_with_table_name-""C O L""-__col__]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54d-0e11-71dd-000c-a90c0e81ed5b, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_NL1DGOXLSEREADONLY CLONE SNOWPARK_TEMP_TABLE_HJLE2I45UC), QueryRecord(query_id=01bed54d-0e11-6bde-000c-a90c0e82865b, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_NL1DGOXLSEREADONLY) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-6e4d-000c-a90c0e8311db, sql_text=SELECT ""C O L"", ""__COL__"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""C O L"", ""__COL__"" FROM SNOWPARK_TEMP_TABLE_NL1DGOXLSEREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
32455,tests.integ.modin.series.test_name,test_create_series_from_object_with_name[sample1-1],"AssertionError: Series are different

Attribute ""name"" are different
[left]:  None
[right]: abc",failed
32460,tests.integ.modin.series.test_name,test_create_series_from_object_with_name[sample2-1],"AssertionError: Series are different

Attribute ""name"" are different
[left]:  None
[right]: abc",failed
32464,tests.integ.modin.series.test_name,test_create_series_from_object_with_name[sample3-1],"AssertionError: Series are different

Attribute ""name"" are different
[left]:  None
[right]: ('a', 'b')",failed
32470,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[-1-None--1],"AssertionError: Series are different

Series values are different (80.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [A, B, C, D, E]
[right]: [E, D, C, B, A]
At positional index 0, first diff: A != E",failed
32477,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[-1-None-1],"AssertionError: Series are different

Series values are different (40.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [A, B, z, w, u]
[right]: [B, A, z, w, u]
At positional index 0, first diff: A != B",failed
32478,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_index_col[True-read_with_table_name-__col__-""C O L""]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54d-0e11-7168-000c-a90c0e82b663, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_TQA9KHJU9WREADONLY CLONE SNOWPARK_TEMP_TABLE_PEWG2Q5N6N), QueryRecord(query_id=01bed54d-0e11-71f1-000c-a90c0e82f407, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_TQA9KHJU9WREADONLY) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-71d7-000c-a90c0e82792f, sql_text=SELECT ""__COL__"", ""C O L"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""__COL__"", ""C O L"" FROM SNOWPARK_TEMP_TABLE_TQA9KHJU9WREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
32482,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[-1-None-4],"AssertionError: Series are different

Series values are different (80.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [A, B, C, D, E]
[right]: [E, D, C, B, A]
At positional index 0, first diff: A != E",failed
32483,tests.integ.modin.series.test_reindex,test_reindex_index_fill_method_with_old_na_values_pandas_negative[bfill-1],ValueError: limit argument for 'backfill' method only well-defined if index and target are monotonic,failed
32485,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[-1-None-10],"AssertionError: Series are different

Series values are different (80.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [A, B, C, D, E]
[right]: [E, D, C, B, A]
At positional index 0, first diff: A != E",failed
32504,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[-1-1-None],TypeError: boolean value of NA is ambiguous,failed
32509,tests.integ.modin.series.test_reindex,test_reindex_index_fill_method_with_old_na_values_pandas_negative[bfill-2],ValueError: limit argument for 'backfill' method only well-defined if index and target are monotonic,failed
32512,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[-1-1--1],TypeError: boolean value of NA is ambiguous,failed
32513,tests.integ.modin.series.test_round,test_ser_round_neg_even_half[0],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [-2.0, -4.0, -6.0]
[right]: [-3.0, -5.0, -7.0]
At positional index 0, first diff: -2.0 != -3.0",failed
32522,tests.integ.modin.series.test_apply_and_map,test_3rd_party_package_with_udf_annotation[scipy-7-apply],"TypeError: The input of UDF ""TESTDB_SNOWPANDAS"".""PUBLIC"".SNOWPARK_TEMP_FUNCTION_DVEJM7KTOM must be Column, column name, or a list of them",failed
32525,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[-1-1-4],TypeError: boolean value of NA is ambiguous,failed
32526,tests.integ.modin.series.test_round,test_ser_round_pos_even_half[0],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [2.0, 4.0, 6.0]
[right]: [3.0, 5.0, 7.0]
At positional index 0, first diff: 2.0 != 3.0",failed
32528,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[-1-1-10],TypeError: boolean value of NA is ambiguous,failed
32529,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_index_col[True-read_with_table_name-""co'l""-Col]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54d-0e11-721e-000c-a90c0e824b13, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_NVVCS5QD6UREADONLY CLONE SNOWPARK_TEMP_TABLE_2UT5A67E3R), QueryRecord(query_id=01bed54d-0e11-6e5e-000c-a90c0e82c62b, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_NVVCS5QD6UREADONLY) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-6e2a-000c-a90c0e8323f7, sql_text=SELECT ""co'l"", ""COL"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""co'l"", ""COL"" FROM SNOWPARK_TEMP_TABLE_NVVCS5QD6UREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
32530,tests.integ.modin.series.test_round,test_ser_round_invalid_in_sf_negative[invalid_value0-Invalid argument types for function--2],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
32537,tests.integ.modin.series.test_round,test_ser_round_invalid_in_sf_negative[invalid_value0-Invalid argument types for function--1],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
32539,tests.integ.modin.series.test_round,test_ser_round_invalid_in_sf_negative[invalid_value0-Invalid argument types for function-0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
32542,tests.integ.modin.series.test_round,test_ser_round_invalid_in_sf_negative[invalid_value0-Invalid argument types for function-1],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
32544,tests.integ.modin.series.test_round,test_ser_round_invalid_in_sf_negative[invalid_value0-Invalid argument types for function-2],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
32546,tests.integ.modin.series.test_round,test_ser_round_invalid_in_sf_negative[invalid_value1-Invalid argument types for function--2],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
32549,tests.integ.modin.series.test_round,test_ser_round_invalid_in_sf_negative[invalid_value1-Invalid argument types for function--1],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
32551,tests.integ.modin.series.test_round,test_ser_round_invalid_in_sf_negative[invalid_value1-Invalid argument types for function-0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
32553,tests.integ.modin.series.test_round,test_ser_round_invalid_in_sf_negative[invalid_value1-Invalid argument types for function-1],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
32555,tests.integ.modin.series.test_round,test_ser_round_invalid_in_sf_negative[invalid_value1-Invalid argument types for function-2],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
32559,tests.integ.modin.series.test_round,test_ser_round_invalid_in_sf_negative[invalid_value2-Failed to cast variant value--2],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
32560,tests.integ.modin.series.test_round,test_ser_round_invalid_in_sf_negative[invalid_value2-Failed to cast variant value--1],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
32563,tests.integ.modin.series.test_round,test_ser_round_invalid_in_sf_negative[invalid_value2-Failed to cast variant value-0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
32565,tests.integ.modin.series.test_round,test_ser_round_invalid_in_sf_negative[invalid_value2-Failed to cast variant value-1],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
32566,tests.integ.modin.series.test_reindex,test_reindex_index_fill_method_with_old_na_values_pandas_negative[bfill-100],ValueError: limit argument for 'backfill' method only well-defined if index and target are monotonic,failed
32569,tests.integ.modin.series.test_round,test_ser_round_invalid_in_sf_negative[invalid_value2-Failed to cast variant value-2],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
32570,tests.integ.modin.series.test_round,test_ser_round_invalid_in_sf_negative[bad_str-is not recognized--2],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
32573,tests.integ.modin.series.test_round,test_ser_round_invalid_in_sf_negative[bad_str-is not recognized--1],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
32576,tests.integ.modin.series.test_round,test_ser_round_invalid_in_sf_negative[bad_str-is not recognized-0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
32577,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[2-None-None],TypeError: boolean value of NA is ambiguous,failed
32580,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[2-None--1],TypeError: boolean value of NA is ambiguous,failed
32581,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_index_col[True-read_with_table_name-""col""-COL]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54d-0e11-6e4e-000c-a90c0e83528f, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_U02XIEG7M1READONLY CLONE SNOWPARK_TEMP_TABLE_NOIRRU0LBS), QueryRecord(query_id=01bed54d-0e11-719e-000c-a90c0e82a84f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_U02XIEG7M1READONLY) LIMIT 1), QueryRecord(query_id=01bed54d-0e11-6dc3-000c-a90c0e826ca7, sql_text=SELECT ""col"", ""COL"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""col"", ""COL"" FROM SNOWPARK_TEMP_TABLE_U02XIEG7M1READONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
32582,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[2-None-1],TypeError: boolean value of NA is ambiguous,failed
32585,tests.integ.modin.series.test_loc,test_series_loc_set_with_empty_key_and_empty_item_negative[item0-key0],"KeyError: ""None of [[]] are in the [Index([0, 1, 2, 3, 4, 5, 6], dtype='int64')]""",failed
32586,tests.integ.modin.series.test_round,test_ser_round_invalid_in_sf_negative[bad_str-is not recognized-1],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
32587,tests.integ.modin.series.test_loc,test_series_loc_set_with_empty_key_and_empty_item_negative[item0-key1],Failed: DID NOT RAISE <class 'ValueError'>,failed
32588,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[2-None-4],TypeError: boolean value of NA is ambiguous,failed
32589,tests.integ.modin.series.test_loc,test_series_loc_set_with_empty_key_and_empty_item_negative[item0-key2],Failed: DID NOT RAISE <class 'ValueError'>,failed
32592,tests.integ.modin.series.test_loc,test_series_loc_set_with_empty_key_and_empty_item_negative[item0-key3],Failed: DID NOT RAISE <class 'ValueError'>,failed
32593,tests.integ.modin.series.test_round,test_ser_round_invalid_in_sf_negative[bad_str-is not recognized-2],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
32594,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[2--1-None],TypeError: boolean value of NA is ambiguous,failed
32595,tests.integ.modin.series.test_loc,test_series_loc_set_with_empty_key_and_empty_item_negative[item1-key0],"KeyError: ""None of [[]] are in the [Index([0, 1, 2, 3, 4, 5, 6], dtype='int64')]""",failed
32597,tests.integ.modin.series.test_round,test_ser_round_invalid_in_sf_negative[invalid_value4-Failed to cast variant value--2],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
32598,tests.integ.modin.series.test_loc,test_series_loc_set_with_empty_key_and_empty_item_negative[item1-key1],Failed: DID NOT RAISE <class 'ValueError'>,failed
32600,tests.integ.modin.series.test_round,test_ser_round_invalid_in_sf_negative[invalid_value4-Failed to cast variant value--1],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
32602,tests.integ.modin.series.test_loc,test_series_loc_set_with_empty_key_and_empty_item_negative[item1-key2],Failed: DID NOT RAISE <class 'ValueError'>,failed
32604,tests.integ.modin.series.test_round,test_ser_round_invalid_in_sf_negative[invalid_value4-Failed to cast variant value-0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
32606,tests.integ.modin.series.test_loc,test_series_loc_set_with_empty_key_and_empty_item_negative[item1-key3],Failed: DID NOT RAISE <class 'ValueError'>,failed
32607,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[2--1-1],TypeError: boolean value of NA is ambiguous,failed
32608,tests.integ.modin.series.test_round,test_ser_round_invalid_in_sf_negative[invalid_value4-Failed to cast variant value-1],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
32609,tests.integ.modin.series.test_reindex,test_reindex_index_fill_method_with_old_na_values_pandas_negative[backfill-1],ValueError: limit argument for 'backfill' method only well-defined if index and target are monotonic,failed
32611,tests.integ.modin.series.test_loc,test_series_loc_set_with_empty_key_and_empty_item_negative[item2-key0],"KeyError: ""None of [[]] are in the [Index([0, 1, 2, 3, 4, 5, 6], dtype='int64')]""",failed
32612,tests.integ.modin.series.test_round,test_ser_round_invalid_in_sf_negative[invalid_value4-Failed to cast variant value-2],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
32615,tests.integ.modin.series.test_loc,test_series_loc_set_with_empty_key_and_empty_item_negative[item2-key1],Failed: DID NOT RAISE <class 'ValueError'>,failed
32616,tests.integ.modin.series.test_round,test_ser_round_invalid_in_sf_negative[invalid_value5-Failed to cast variant value--2],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
32618,tests.integ.modin.series.test_loc,test_series_loc_set_with_empty_key_and_empty_item_negative[item2-key2],Failed: DID NOT RAISE <class 'ValueError'>,failed
32621,tests.integ.modin.series.test_round,test_ser_round_invalid_in_sf_negative[invalid_value5-Failed to cast variant value--1],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
32622,tests.integ.modin.series.test_loc,test_series_loc_set_with_empty_key_and_empty_item_negative[item2-key3],Failed: DID NOT RAISE <class 'ValueError'>,failed
32625,tests.integ.modin.series.test_round,test_ser_round_invalid_in_sf_negative[invalid_value5-Failed to cast variant value-0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
32627,tests.integ.modin.series.test_round,test_ser_round_invalid_in_sf_negative[invalid_value5-Failed to cast variant value-1],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
32629,tests.integ.modin.series.test_loc,test_series_loc_set_with_empty_key_and_empty_series_item[key0],"KeyError: ""None of [[]] are in the [Index([0, 1, 2, 3, 4, 5, 6], dtype='int64')]""",failed
32631,tests.integ.modin.series.test_round,test_ser_round_invalid_in_sf_negative[invalid_value5-Failed to cast variant value-2],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
32639,tests.integ.modin.series.test_apply_and_map,test_3rd_party_package_with_udf_annotation[scipy-7-map],"TypeError: The input of UDF ""TESTDB_SNOWPANDAS"".""PUBLIC"".SNOWPARK_TEMP_FUNCTION_AQ445OM3K7 must be Column, column name, or a list of them",failed
32641,tests.integ.modin.series.test_round,test_round_timedelta_negative[-2],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
32642,tests.integ.modin.series.test_loc,test_series_loc_set_with_empty_key_and_scalar_item[key0],"KeyError: ""None of [[]] are in the [Index([0, 1, 2, 3, 4, 5, 6], dtype='int64')]""",failed
32643,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[2-4-None],TypeError: boolean value of NA is ambiguous,failed
32646,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_index_col[True-read_with_table_name-""c""""ol""-col]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54e-0e11-6e87-000c-a90c0e8334af, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_9XLOIRPMF4READONLY CLONE SNOWPARK_TEMP_TABLE_ZTBVW1MIEL), QueryRecord(query_id=01bed54e-0e11-6bfa-000c-a90c0e8344eb, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_9XLOIRPMF4READONLY) LIMIT 1), QueryRecord(query_id=01bed54e-0e11-6ce4-000c-a90c0e8381cf, sql_text=SELECT ""c""""ol"", ""COL"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""c""""ol"", ""COL"" FROM SNOWPARK_TEMP_TABLE_9XLOIRPMF4READONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
32648,tests.integ.modin.series.test_reindex,test_reindex_index_fill_method_with_old_na_values_pandas_negative[backfill-2],ValueError: limit argument for 'backfill' method only well-defined if index and target are monotonic,failed
32653,tests.integ.modin.series.test_round,test_round_timedelta_negative[-1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
32657,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[2-4-1],TypeError: boolean value of NA is ambiguous,failed
32658,tests.integ.modin.series.test_round,test_round_timedelta_negative[0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
32661,tests.integ.modin.series.test_round,test_round_timedelta_negative[1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
32662,tests.integ.modin.series.test_nlargest_nsmallest,test_nlargest_nsmallest_all_keep_not_implemented[nlargest],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
32664,tests.integ.modin.series.test_round,test_round_timedelta_negative[2],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
32665,tests.integ.modin.series.test_loc,test_series_loc_set_with_empty_key_and_series_item[item0-key0],"KeyError: ""None of [[]] are in the [Index([0, 1, 2, 3, 4, 5, 6], dtype='int64')]""",failed
32667,tests.integ.modin.series.test_nlargest_nsmallest,test_nlargest_nsmallest_all_keep_not_implemented[nsmallest],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
32671,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[2-10-None],TypeError: boolean value of NA is ambiguous,failed
32675,tests.integ.modin.series.test_reindex,test_reindex_index_fill_method_with_old_na_values_pandas_negative[backfill-100],ValueError: limit argument for 'backfill' method only well-defined if index and target are monotonic,failed
32676,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[2-10--1],TypeError: boolean value of NA is ambiguous,failed
32682,tests.integ.modin.series.test_nlargest_nsmallest,test_nlargest_nsmallest_non_numeric_types[nlargest-data0],TypeError: Cannot use method 'nlargest' with dtype object,failed
32683,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[2-10-1],TypeError: boolean value of NA is ambiguous,failed
32684,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_index_col[False-read_with_select_*-col-""c""""ol""]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54e-0e11-721e-000c-a90c0e824f0f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_HUNUKOTZSQ) LIMIT 1), QueryRecord(query_id=01bed54e-0e11-6e5e-000c-a90c0e82ca4b, sql_text=SELECT ""COL"", ""c""""ol"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL"", ""c""""ol"" FROM (SNOWPARK_TEMP_TABLE_HUNUKOTZSQ)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
32687,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[2-10-4],TypeError: boolean value of NA is ambiguous,failed
32689,tests.integ.modin.series.test_loc,test_series_loc_set_series_list_like_key_and_range_like_item_negative[item0-key0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
32691,tests.integ.modin.series.test_loc,test_series_loc_set_series_list_like_key_and_range_like_item_negative[item0-key1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
32692,tests.integ.modin.series.test_loc,test_series_loc_set_scalar_key_and_series_item_negative[item0-0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
32693,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[-2-None-None],TypeError: boolean value of NA is ambiguous,failed
32694,tests.integ.modin.series.test_loc,test_series_loc_set_scalar_key_and_series_item_negative[item0-xyz],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
32695,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[-2-None--1],TypeError: boolean value of NA is ambiguous,failed
32696,tests.integ.modin.series.test_loc,test_series_loc_set_scalar_key_and_series_item_negative[item0-None],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
32698,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[-2-None-1],TypeError: boolean value of NA is ambiguous,failed
32699,tests.integ.modin.series.test_loc,test_series_loc_set_scalar_key_and_series_item_negative[item0-3.14],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
32701,tests.integ.modin.series.test_loc,test_series_loc_set_scalar_key_and_df_item_mixed_types_negative[item0-0],Failed: DID NOT RAISE <class 'ValueError'>,failed
32703,tests.integ.modin.series.test_nlargest_nsmallest,test_nlargest_nsmallest_non_numeric_types[nlargest-data1],TypeError: '<' not supported between instances of 'str' and 'float',failed
32704,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[-2-None-4],TypeError: boolean value of NA is ambiguous,failed
32706,tests.integ.modin.series.test_loc,test_series_loc_set_scalar_key_and_df_item_mixed_types_negative[item0-xyz],Failed: DID NOT RAISE <class 'ValueError'>,failed
32708,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[-2-None-10],TypeError: boolean value of NA is ambiguous,failed
32711,tests.integ.modin.series.test_loc,test_series_loc_set_scalar_key_and_df_item_mixed_types_negative[item0-None],Failed: DID NOT RAISE <class 'ValueError'>,failed
32712,tests.integ.modin.series.test_nlargest_nsmallest,test_nlargest_nsmallest_non_numeric_types[nsmallest-data0],TypeError: Cannot use method 'nsmallest' with dtype object,failed
32716,tests.integ.modin.series.test_loc,test_series_loc_set_scalar_key_and_df_item_mixed_types_negative[item0-3.14],Failed: DID NOT RAISE <class 'ValueError'>,failed
32719,tests.integ.modin.series.test_loc,test_series_loc_set_slice_item_negative[1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
32721,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_index_col[False-read_with_select_*-COL-""col""]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54e-0e11-6d76-000c-a90c0e82d9bb, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_KI7LVLMNBU) LIMIT 1), QueryRecord(query_id=01bed54e-0e11-71dd-000c-a90c0e8365fb, sql_text=SELECT ""COL"", ""col"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL"", ""col"" FROM (SNOWPARK_TEMP_TABLE_KI7LVLMNBU)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
32723,tests.integ.modin.series.test_loc,test_series_loc_set_slice_item_negative[12],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
32727,tests.integ.modin.series.test_loc,test_series_loc_set_slice_item_negative[key2],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
32728,tests.integ.modin.series.test_nlargest_nsmallest,test_nlargest_nsmallest_non_numeric_types[nsmallest-data1],TypeError: '<' not supported between instances of 'str' and 'int',failed
32732,tests.integ.modin.series.test_loc,test_series_loc_set_slice_item_negative[key3],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
32734,tests.integ.modin.series.test_loc,test_series_loc_set_boolean_key[index0-True],"AssertionError: Series are different

Series values are different (40.0 %)
[index]: [0, 1, True, False, x]
[left]:  [99, 1, 2, 3, 4]
[right]: [0, 1, 99, 3, 4]",failed
32736,tests.integ.modin.series.test_loc,test_series_loc_set_boolean_key[index0-False],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, True, False, x]
[left]:  [0, 1, 2, 3, 4]
[right]: [0, 1, 2, 99, 4]",failed
32737,tests.integ.modin.series.test_loc,test_series_loc_set_boolean_key[index0-0],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, True, False, x]
[left]:  [99, 1, 2, 99, 4]
[right]: [99, 1, 2, 3, 4]",failed
32738,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[-2-1-None],TypeError: boolean value of NA is ambiguous,failed
32739,tests.integ.modin.series.test_loc,test_series_loc_set_boolean_key[index0-1],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, True, False, x]
[left]:  [0, 99, 99, 3, 4]
[right]: [0, 99, 2, 3, 4]",failed
32741,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[-2-1--1],TypeError: boolean value of NA is ambiguous,failed
32742,tests.integ.modin.series.test_loc,test_series_loc_set_boolean_key[index1-True],"AssertionError: Series are different

Series values are different (50.0 %)
[index]: [0, 1, True, x]
[left]:  [99, 1, 2, 3]
[right]: [0, 1, 99, 3]",failed
32744,tests.integ.modin.series.test_loc,test_series_loc_set_boolean_key[index1-False],"AssertionError: Series are different

Series length are different
[left]:  4, Index([0, 1, True, 'x'], dtype='object')
[right]: 5, Index([0, 1, True, 'x', False], dtype='object')",failed
32747,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[-2-1-4],TypeError: boolean value of NA is ambiguous,failed
32748,tests.integ.modin.series.test_loc,test_series_loc_set_boolean_key[index1-1],"AssertionError: Series are different

Series values are different (25.0 %)
[index]: [0, 1, True, x]
[left]:  [0, 99, 99, 3]
[right]: [0, 99, 2, 3]",failed
32749,tests.integ.modin.series.test_loc,test_series_loc_set_boolean_key[index2-True],"AssertionError: Series are different

Series values are different (50.0 %)
[index]: [1, True, False, x]
[left]:  [99, 1, 2, 3]
[right]: [0, 99, 2, 3]",failed
32751,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[-2-1-10],TypeError: boolean value of NA is ambiguous,failed
32753,tests.integ.modin.series.test_reindex,test_reindex_index_fill_method_with_old_na_values_pandas_negative[pad-1],ValueError: limit argument for 'pad' method only well-defined if index and target are monotonic,failed
32754,tests.integ.modin.series.test_loc,test_series_loc_set_boolean_key[index2-False],"AssertionError: Series are different

Series values are different (25.0 %)
[index]: [1, True, False, x]
[left]:  [0, 1, 2, 3]
[right]: [0, 1, 99, 3]",failed
32757,tests.integ.modin.series.test_loc,test_series_loc_set_boolean_key[index2-0],"AssertionError: Series are different

Series length are different
[left]:  4, Index([1, True, False, 'x'], dtype='object')
[right]: 5, Index([1, True, False, 'x', 0], dtype='object')",failed
32761,tests.integ.modin.series.test_loc,test_series_loc_set_boolean_key[index2-1],"AssertionError: Series are different

Series values are different (25.0 %)
[index]: [1, True, False, x]
[left]:  [99, 99, 2, 3]
[right]: [99, 1, 2, 3]",failed
32764,tests.integ.modin.series.test_loc,test_series_loc_set_boolean_key[index3-True],"AssertionError: Series are different

Series values are different (66.66667 %)
[index]: [1, True, x]
[left]:  [99, 1, 2]
[right]: [0, 99, 2]",failed
32771,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_index_col[False-read_with_select_*-Col-""co'l""]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54e-0e11-6dc3-000c-a90c0e83c0a3, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_LSGHQTYIMG) LIMIT 1), QueryRecord(query_id=01bed54e-0e11-6e87-000c-a90c0e833867, sql_text=SELECT ""COL"", ""co'l"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL"", ""co'l"" FROM (SNOWPARK_TEMP_TABLE_LSGHQTYIMG)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
32777,tests.integ.modin.series.test_reindex,test_reindex_index_fill_method_with_old_na_values_pandas_negative[pad-2],ValueError: limit argument for 'pad' method only well-defined if index and target are monotonic,failed
32791,tests.integ.modin.series.test_loc,test_series_loc_set_boolean_key[index3-False],ValueError: cannot reindex on an axis with duplicate labels,failed
32797,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[9-None--1],TypeError: boolean value of NA is ambiguous,failed
32799,tests.integ.modin.series.test_loc,test_series_loc_set_boolean_key[index3-0],ValueError: cannot reindex on an axis with duplicate labels,failed
32801,tests.integ.modin.series.test_loc,test_series_loc_set_boolean_key[index3-1],"AssertionError: Series are different

Series values are different (33.33333 %)
[index]: [1, True, x]
[left]:  [99, 99, 2]
[right]: [99, 1, 2]",failed
32803,tests.integ.modin.series.test_reindex,test_reindex_index_fill_method_with_old_na_values_pandas_negative[pad-100],ValueError: limit argument for 'pad' method only well-defined if index and target are monotonic,failed
32805,tests.integ.modin.series.test_loc,test_series_loc_set_boolean_key[index4-True],"AssertionError: Series are different

Series length are different
[left]:  4, Index([0, 1, False, 'x'], dtype='object')
[right]: 5, Index([0, 1, False, 'x', True], dtype='object')",failed
32806,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[9-None-1],TypeError: boolean value of NA is ambiguous,failed
32808,tests.integ.modin.series.test_loc,test_series_loc_set_boolean_key[index4-False],"AssertionError: Series are different

Series values are different (25.0 %)
[index]: [0, 1, False, x]
[left]:  [0, 1, 2, 3]
[right]: [0, 1, 99, 3]",failed
32812,tests.integ.modin.series.test_loc,test_series_loc_set_boolean_key[index4-0],"AssertionError: Series are different

Series values are different (25.0 %)
[index]: [0, 1, False, x]
[left]:  [99, 1, 99, 3]
[right]: [99, 1, 2, 3]",failed
32815,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[9-None-4],TypeError: boolean value of NA is ambiguous,failed
32818,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_index_col[False-read_with_select_*-""C O L""-__col__]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54e-0e11-6bfa-000c-a90c0e8348af, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_DSPMTMGETH) LIMIT 1), QueryRecord(query_id=01bed54e-0e11-71d7-000c-a90c0e83e14b, sql_text=SELECT ""C O L"", ""__COL__"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""C O L"", ""__COL__"" FROM (SNOWPARK_TEMP_TABLE_DSPMTMGETH)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
32827,tests.integ.modin.series.test_loc,test_series_loc_set_boolean_key[index5-True],ValueError: cannot reindex on an axis with duplicate labels,failed
32830,tests.integ.modin.series.test_loc,test_series_loc_set_boolean_key[index5-False],"AssertionError: Series are different

Series values are different (33.33333 %)
[index]: [0, False, x]
[left]:  [0, 1, 2]
[right]: [0, 99, 2]",failed
32832,tests.integ.modin.series.test_loc,test_series_loc_set_boolean_key[index5-0],"AssertionError: Series are different

Series values are different (33.33333 %)
[index]: [0, False, x]
[left]:  [99, 99, 2]
[right]: [99, 1, 2]",failed
32833,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[9--1-1],TypeError: boolean value of NA is ambiguous,failed
32845,tests.integ.modin.series.test_loc,test_series_loc_set_boolean_key[index5-1],ValueError: cannot reindex on an axis with duplicate labels,failed
32848,tests.integ.modin.series.test_loc,test_series_loc_set_boolean_key[index6-True],"AssertionError: Series are different

Series values are different (66.66667 %)
[index]: [2, x, True]
[left]:  [99, 1, 0]
[right]: [0, 1, 99]",failed
32851,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_index_col[False-read_with_select_*-__col__-""C O L""]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54e-0e11-6ed3-000c-a90c0e8393f3, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_9EJBLXF2K7) LIMIT 1), QueryRecord(query_id=01bed54e-0e11-722e-000c-a90c0e83b33b, sql_text=SELECT ""__COL__"", ""C O L"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""__COL__"", ""C O L"" FROM (SNOWPARK_TEMP_TABLE_9EJBLXF2K7)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
32852,tests.integ.modin.series.test_loc,test_series_loc_set_boolean_key[index6-False],"AssertionError: Series are different

Series values are different (33.33333 %)
[index]: [2, x, False]
[left]:  [0, 1, 0]
[right]: [0, 1, 99]",failed
32853,tests.integ.modin.series.test_setitem,test_series_setitem_series_list_like_key_and_range_like_item_negative[item0-key1],"ValueError: could not broadcast input array from shape (7,) into shape (5, 1)",failed
32857,tests.integ.modin.series.test_setitem,test_series_setitem_series_list_like_key_and_range_like_item_negative[item0-key2],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
32860,tests.integ.modin.series.test_setitem,test_series_setitem_series_list_like_key_and_range_like_item_negative[item0-key3],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
32862,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[9-4-1],TypeError: boolean value of NA is ambiguous,failed
32864,tests.integ.modin.series.test_reindex,test_reindex_index_fill_method_with_old_na_values_pandas_negative[ffill-1],ValueError: limit argument for 'pad' method only well-defined if index and target are monotonic,failed
32867,tests.integ.modin.series.test_loc,test_series_loc_set_df_key_negative[1.2],"AssertionError: Regex pattern did not match.
 Regex: 'Data cannot be a DataFrame'
 Input: 'Index data must be 1-dimensional'",failed
32870,tests.integ.modin.series.test_loc,test_series_loc_set_df_key_negative[None],"AssertionError: Regex pattern did not match.
 Regex: 'Data cannot be a DataFrame'
 Input: 'Index data must be 1-dimensional'",failed
32871,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[9-10--1],TypeError: boolean value of NA is ambiguous,failed
32873,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[9-10-1],TypeError: boolean value of NA is ambiguous,failed
32875,tests.integ.modin.series.test_loc,test_series_loc_set_df_key_negative[item2],"AssertionError: Regex pattern did not match.
 Regex: 'Data cannot be a DataFrame'
 Input: 'Index data must be 1-dimensional'",failed
32876,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[9-10-4],TypeError: boolean value of NA is ambiguous,failed
32884,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[-9-None-None],TypeError: boolean value of NA is ambiguous,failed
32887,tests.integ.modin.series.test_reindex,test_reindex_index_fill_method_with_old_na_values_pandas_negative[ffill-2],ValueError: limit argument for 'pad' method only well-defined if index and target are monotonic,failed
32889,tests.integ.modin.series.test_loc,test_series_loc_set_with_scalar_key_and_list_like_item[item0-3],"ValueError: could not broadcast input array from shape (3,) into shape (1, 1)",failed
32890,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[-9-None--1],TypeError: boolean value of NA is ambiguous,failed
32892,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_index_col[False-read_with_select_*-""co'l""-Col]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54e-0e11-6e4e-000c-a90c0e8359df, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_X9EP8XOPHM) LIMIT 1), QueryRecord(query_id=01bed54e-0e11-719e-000c-a90c0e842057, sql_text=SELECT ""co'l"", ""COL"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""co'l"", ""COL"" FROM (SNOWPARK_TEMP_TABLE_X9EP8XOPHM)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
32893,tests.integ.modin.series.test_loc,test_series_loc_set_with_scalar_key_and_list_like_item[item0-t],"ValueError: could not broadcast input array from shape (3,) into shape (1, 1)",failed
32895,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[-9-None-1],TypeError: boolean value of NA is ambiguous,failed
32897,tests.integ.modin.series.test_loc,test_series_loc_set_with_scalar_key_and_list_like_item[item0--3.555],"ValueError: could not broadcast input array from shape (3,) into shape (1, 1)",failed
32899,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[-9-None-4],TypeError: boolean value of NA is ambiguous,failed
32901,tests.integ.modin.series.test_loc,test_series_loc_set_with_scalar_key_and_list_like_item[item1-3],"ValueError: could not broadcast input array from shape (3,) into shape (1, 1)",failed
32902,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[-9-None-10],TypeError: boolean value of NA is ambiguous,failed
32908,tests.integ.modin.series.test_reindex,test_reindex_index_fill_method_with_old_na_values_pandas_negative[ffill-100],ValueError: limit argument for 'pad' method only well-defined if index and target are monotonic,failed
32911,tests.integ.modin.series.test_setitem,test_series_setitem_comparator_key_string_compare,Snowflake type casting error caused due to comparison of different types with IFF.,xfailed
32913,tests.integ.modin.series.test_nunique,test_series_nunique_deviating_nan_behavior[input_data0-1],"AssertionError: assert 3 == 1
 +  where 3 = <bound method Series.nunique of 0     NaT\n1     NaN\n2    <NA>\ndtype: object>(dropna=False)
 +    where <bound method Series.nunique of 0     NaT\n1     NaN\n2    <NA>\ndtype: object> = 0     NaT\n1     NaN\n2    <NA>\ndtype: object.nunique
 +      where 0     NaT\n1     NaN\n2    <NA>\ndtype: object = <class 'modin.pandas.series.Series'>([NaT, nan, <NA>])
 +        where <class 'modin.pandas.series.Series'> = pd.Series",failed
32914,tests.integ.modin.series.test_loc,test_series_loc_set_with_scalar_key_and_list_like_item[item1-t],"ValueError: could not broadcast input array from shape (3,) into shape (1, 1)",failed
32915,tests.integ.modin.series.test_setitem,test_series_setitem_series_behavior_that_deviates_from_loc_set,"AssertionError: Series are different

Series values are different (33.33333 %)
[index]: [a, b, c, d, e, f]
[left]:  [0.0, nan, nan, 3.0, 4.0, 5.0]
[right]: [0, 20, 30, 3, 4, 5]",failed
32916,tests.integ.modin.series.test_nunique,test_series_nunique_deviating_nan_behavior[input_data1-2],"AssertionError: assert 5 == 2
 +  where 5 = <bound method Series.nunique of 0     NaT\n1     NaN\n2    <NA>\n3       7\n4    None\ndtype: object>(dropna=False)
 +    where <bound method Series.nunique of 0     NaT\n1     NaN\n2    <NA>\n3       7\n4    None\ndtype: object> = 0     NaT\n1     NaN\n2    <NA>\n3       7\n4    None\ndtype: object.nunique
 +      where 0     NaT\n1     NaN\n2    <NA>\n3       7\n4    None\ndtype: object = <class 'modin.pandas.series.Series'>([NaT, nan, <NA>, 7, None])
 +        where <class 'modin.pandas.series.Series'> = pd.Series",failed
32917,tests.integ.modin.series.test_loc,test_series_loc_set_with_scalar_key_and_list_like_item[item1--3.555],"ValueError: could not broadcast input array from shape (3,) into shape (1, 1)",failed
32920,tests.integ.modin.series.test_loc,test_series_loc_set_with_scalar_key_and_list_like_item[item2-3],"ValueError: could not broadcast input array from shape (3,) into shape (1, 1)",failed
32923,tests.integ.modin.series.test_loc,test_series_loc_set_with_scalar_key_and_list_like_item[item2-t],"ValueError: could not broadcast input array from shape (3,) into shape (1, 1)",failed
32924,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_index_col[False-read_with_select_*-""col""-COL]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54e-0e11-6e4d-000c-a90c0e831c8b, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_TVI3QF13QW) LIMIT 1), QueryRecord(query_id=01bed54e-0e11-7168-000c-a90c0e84117b, sql_text=SELECT ""col"", ""COL"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""col"", ""COL"" FROM (SNOWPARK_TEMP_TABLE_TVI3QF13QW)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
32925,tests.integ.modin.series.test_loc,test_series_loc_set_with_scalar_key_and_list_like_item[item2--3.555],"ValueError: could not broadcast input array from shape (3,) into shape (1, 1)",failed
32930,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[-9-1-None],TypeError: boolean value of NA is ambiguous,failed
32931,tests.integ.modin.series.test_setitem,test_series_setitem_with_empty_key_and_empty_item_negative[item0-key0],"KeyError: ""None of [[]] are in the [Index([0, 1, 2, 3, 4, 5, 6], dtype='int64')]""",failed
32936,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[-9-1--1],TypeError: boolean value of NA is ambiguous,failed
32942,tests.integ.modin.series.test_setitem,test_series_setitem_with_empty_key_and_empty_item_negative[item0-key1],Failed: DID NOT RAISE <class 'ValueError'>,failed
32946,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[-9-1-4],TypeError: boolean value of NA is ambiguous,failed
32951,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[-9-1-10],TypeError: boolean value of NA is ambiguous,failed
32952,tests.integ.modin.series.test_loc,test_series_partial_string_indexing[<lambda>0],AssertionError: Got type: <class 'numpy.float64'>,failed
32954,tests.integ.modin.series.test_loc,test_series_partial_string_indexing[<lambda>1],"KeyError: array(['2010-11'], dtype='<U7')",failed
32959,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_index_col[False-read_with_select_*-""c""""ol""-col]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54e-0e11-71f1-000c-a90c0e82ff9f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_UWSLYHAPMV) LIMIT 1), QueryRecord(query_id=01bed54e-0e11-71c8-000c-a90c0e83f48b, sql_text=SELECT ""c""""ol"", ""COL"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""c""""ol"", ""COL"" FROM (SNOWPARK_TEMP_TABLE_UWSLYHAPMV)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
32961,tests.integ.modin.series.test_setitem,test_series_setitem_with_empty_key_and_empty_item_negative[item0-key2],Failed: DID NOT RAISE <class 'ValueError'>,failed
32962,tests.integ.modin.series.test_loc,test_series_non_partial_string_indexing_cases[<lambda>-True0],KeyError: '2010',failed
32966,tests.integ.modin.series.test_setitem,test_series_setitem_with_empty_key_and_empty_item_negative[item0-key3],Failed: DID NOT RAISE <class 'ValueError'>,failed
32967,tests.integ.modin.series.test_loc,test_series_non_partial_string_indexing_cases[<lambda>-True1],"KeyError: array(['2010-11'], dtype='<U7')",failed
32972,tests.integ.modin.series.test_setitem,test_series_setitem_with_empty_key_and_empty_item_negative[item1-key0],"KeyError: ""None of [[]] are in the [Index([0, 1, 2, 3, 4, 5, 6], dtype='int64')]""",failed
32973,tests.integ.modin.series.test_loc,test_series_partial_string_indexing_behavior_diff,"AssertionError: Series Expected type <class 'pandas.core.series.Series'>, found <class 'numpy.int64'> instead",failed
32976,tests.integ.modin.series.test_loc,test_series_loc_set_none,"KeyError: array([None], dtype=object)",failed
32978,tests.integ.modin.series.test_setitem,test_series_setitem_with_empty_key_and_empty_item_negative[item1-key1],Failed: DID NOT RAISE <class 'ValueError'>,failed
32987,tests.integ.modin.series.test_setitem,test_df_setitem_boolean_key[index0-True],"AssertionError: Series are different

Series values are different (40.0 %)
[index]: [0, 1, True, False, x]
[left]:  [99, 1, 2, 3, 4]
[right]: [0, 1, 99, 3, 4]",failed
32991,tests.integ.modin.series.test_setitem,test_df_setitem_boolean_key[index0-False],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, True, False, x]
[left]:  [0, 1, 2, 3, 4]
[right]: [0, 1, 2, 99, 4]",failed
32992,tests.integ.modin.series.test_pct_change,test_pct_change_simple[_NoDefault.no_default--1-nonulls],"Failed: DID NOT WARN. No warnings of type (<class 'FutureWarning'>,) were emitted.
The list of emitted warnings is: [].",failed
32993,tests.integ.modin.series.test_setitem,test_df_setitem_boolean_key[index0-0],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, True, False, x]
[left]:  [99, 1, 2, 99, 4]
[right]: [99, 1, 2, 3, 4]",failed
32996,tests.integ.modin.series.test_setitem,test_df_setitem_boolean_key[index0-1],"AssertionError: Series are different

Series values are different (20.0 %)
[index]: [0, 1, True, False, x]
[left]:  [0, 99, 99, 3, 4]
[right]: [0, 99, 2, 3, 4]",failed
32997,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_index_col[False-read_with_table_name-col-""c""""ol""]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54e-0e11-6e5e-000c-a90c0e844197, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_K173WJB3QI) LIMIT 1), QueryRecord(query_id=01bed54e-0e11-6e2a-000c-a90c0e832fcb, sql_text=SELECT ""COL"", ""c""""ol"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL"", ""c""""ol"" FROM (SNOWPARK_TEMP_TABLE_K173WJB3QI)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
32999,tests.integ.modin.series.test_setitem,test_series_setitem_with_empty_key_and_empty_item_negative[item1-key2],Failed: DID NOT RAISE <class 'ValueError'>,failed
33000,tests.integ.modin.series.test_loc,test_series_loc_get_with_timedelta[key2-1-2],ValueError: Could not convert object to NumPy timedelta,failed
33001,tests.integ.modin.series.test_pct_change,test_pct_change_simple[_NoDefault.no_default-0-nonulls],"Failed: DID NOT WARN. No warnings of type (<class 'FutureWarning'>,) were emitted.
The list of emitted warnings is: [].",failed
33002,tests.integ.modin.series.test_setitem,test_df_setitem_boolean_key[index1-True],"AssertionError: Series are different

Series values are different (50.0 %)
[index]: [0, 1, True, x]
[left]:  [99, 1, 2, 3]
[right]: [0, 1, 99, 3]",failed
33004,tests.integ.modin.series.test_setitem,test_series_setitem_with_empty_key_and_empty_item_negative[item1-key3],Failed: DID NOT RAISE <class 'ValueError'>,failed
33005,tests.integ.modin.series.test_setitem,test_df_setitem_boolean_key[index1-False],"AssertionError: Series are different

Series length are different
[left]:  4, Index([0, 1, True, 'x'], dtype='object')
[right]: 5, Index([0, 1, True, 'x', False], dtype='object')",failed
33008,tests.integ.modin.series.test_pct_change,test_pct_change_simple[_NoDefault.no_default-1-nonulls],"Failed: DID NOT WARN. No warnings of type (<class 'FutureWarning'>,) were emitted.
The list of emitted warnings is: [].",failed
33009,tests.integ.modin.series.test_setitem,test_series_setitem_with_empty_key_and_empty_series_item[key0],"KeyError: ""None of [[]] are in the [Index([0, 1, 2, 3, 4, 5, 6], dtype='int64')]""",failed
33011,tests.integ.modin.series.test_setitem,test_df_setitem_boolean_key[index1-1],"AssertionError: Series are different

Series values are different (25.0 %)
[index]: [0, 1, True, x]
[left]:  [0, 99, 99, 3]
[right]: [0, 99, 2, 3]",failed
33015,tests.integ.modin.series.test_setitem,test_df_setitem_boolean_key[index2-True],"AssertionError: Series are different

Series values are different (50.0 %)
[index]: [1, True, False, x]
[left]:  [99, 1, 2, 3]
[right]: [0, 99, 2, 3]",failed
33016,tests.integ.modin.series.test_setitem,test_df_setitem_boolean_key[index2-False],"AssertionError: Series are different

Series values are different (25.0 %)
[index]: [1, True, False, x]
[left]:  [0, 1, 2, 3]
[right]: [0, 1, 99, 3]",failed
33017,tests.integ.modin.series.test_setitem,test_df_setitem_boolean_key[index2-0],"AssertionError: Series are different

Series length are different
[left]:  4, Index([1, True, False, 'x'], dtype='object')
[right]: 5, Index([1, True, False, 'x', 0], dtype='object')",failed
33019,tests.integ.modin.series.test_pct_change,test_pct_change_simple[_NoDefault.no_default-2-nonulls],"Failed: DID NOT WARN. No warnings of type (<class 'FutureWarning'>,) were emitted.
The list of emitted warnings is: [].",failed
33021,tests.integ.modin.series.test_setitem,test_df_setitem_boolean_key[index2-1],"AssertionError: Series are different

Series values are different (25.0 %)
[index]: [1, True, False, x]
[left]:  [99, 99, 2, 3]
[right]: [99, 1, 2, 3]",failed
33022,tests.integ.modin.series.test_setitem,test_df_setitem_boolean_key[index3-True],"AssertionError: Series are different

Series values are different (66.66667 %)
[index]: [1, True, x]
[left]:  [99, 1, 2]
[right]: [0, 99, 2]",failed
33026,tests.integ.modin.series.test_setitem,test_df_setitem_boolean_key[index3-False],ValueError: cannot reindex on an axis with duplicate labels,failed
33034,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_index_col[False-read_with_table_name-COL-""col""]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54e-0e11-71dd-000c-a90c0e836d9f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_RFUS7JX0UX) LIMIT 1), QueryRecord(query_id=01bed54e-0e11-6bde-000c-a90c0e8405db, sql_text=SELECT ""COL"", ""col"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL"", ""col"" FROM (SNOWPARK_TEMP_TABLE_RFUS7JX0UX)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
33036,tests.integ.modin.series.test_setitem,test_series_setitem_with_empty_key_and_scalar_item[key0],"KeyError: ""None of [[]] are in the [Index([0, 1, 2, 3, 4, 5, 6], dtype='int64')]""",failed
33038,tests.integ.modin.series.test_loc,test_series_loc_get_with_timedelta_behavior_difference[key0-expected_result0],KeyError: Timedelta('4 days 23:59:59.999999999'),failed
33048,tests.integ.modin.series.test_setitem,test_df_setitem_boolean_key[index3-0],ValueError: cannot reindex on an axis with duplicate labels,failed
33049,tests.integ.modin.series.test_setitem,test_df_setitem_boolean_key[index3-1],"AssertionError: Series are different

Series values are different (33.33333 %)
[index]: [1, True, x]
[left]:  [99, 99, 2]
[right]: [99, 1, 2]",failed
33050,tests.integ.modin.series.test_setitem,test_df_setitem_boolean_key[index4-True],"AssertionError: Series are different

Series length are different
[left]:  4, Index([0, 1, False, 'x'], dtype='object')
[right]: 5, Index([0, 1, False, 'x', True], dtype='object')",failed
33051,tests.integ.modin.series.test_setitem,test_df_setitem_boolean_key[index4-False],"AssertionError: Series are different

Series values are different (25.0 %)
[index]: [0, 1, False, x]
[left]:  [0, 1, 2, 3]
[right]: [0, 1, 99, 3]",failed
33052,tests.integ.modin.series.test_setitem,test_df_setitem_boolean_key[index4-0],"AssertionError: Series are different

Series values are different (25.0 %)
[index]: [0, 1, False, x]
[left]:  [99, 1, 99, 3]
[right]: [99, 1, 2, 3]",failed
33060,tests.integ.modin.series.test_loc,test_series_loc_get_with_timedelta_behavior_difference[key1-expected_result1],KeyError: Timedelta('4 days 23:59:59.999999999'),failed
33066,tests.integ.modin.series.test_setitem,test_df_setitem_boolean_key[index5-True],ValueError: cannot reindex on an axis with duplicate labels,failed
33070,tests.integ.modin.series.test_setitem,test_df_setitem_boolean_key[index5-False],"AssertionError: Series are different

Series values are different (33.33333 %)
[index]: [0, False, x]
[left]:  [0, 1, 2]
[right]: [0, 99, 2]",failed
33071,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_index_col[False-read_with_table_name-Col-""co'l""]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54e-0e11-6e87-000c-a90c0e833f1f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_U4SW2YJ83I) LIMIT 1), QueryRecord(query_id=01bed54e-0e11-6d08-000c-a90c0e837c97, sql_text=SELECT ""COL"", ""co'l"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL"", ""co'l"" FROM (SNOWPARK_TEMP_TABLE_U4SW2YJ83I)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
33075,tests.integ.modin.series.test_setitem,test_df_setitem_boolean_key[index5-0],"AssertionError: Series are different

Series values are different (33.33333 %)
[index]: [0, False, x]
[left]:  [99, 99, 2]
[right]: [99, 1, 2]",failed
33080,tests.integ.modin.series.test_loc,test_series_loc_get_with_timedelta_behavior_difference[key2-expected_result2],KeyError: Timedelta('2 days 23:59:59.999999999'),failed
33086,tests.integ.modin.series.test_setitem,test_df_setitem_boolean_key[index5-1],ValueError: cannot reindex on an axis with duplicate labels,failed
33088,tests.integ.modin.series.test_setitem,test_df_setitem_boolean_key[index6-True],"AssertionError: Series are different

Series values are different (66.66667 %)
[index]: [2, x, True]
[left]:  [99, 1, 0]
[right]: [0, 1, 99]",failed
33089,tests.integ.modin.series.test_setitem,test_df_setitem_boolean_key[index6-False],"AssertionError: Series are different

Series values are different (33.33333 %)
[index]: [2, x, False]
[left]:  [0, 1, 0]
[right]: [0, 1, 99]",failed
33090,tests.integ.modin.series.test_loc,test_series_loc_get_with_timedelta_behavior_difference[key3-expected_result3],KeyError: Timedelta('2 days 02:00:00'),failed
33105,tests.integ.modin.series.test_setitem,test_series_setitem_check_type_behavior_with_string_key_and_number_scalar_item[12-data6],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
33111,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_index_col[False-read_with_table_name-""C O L""-__col__]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54e-0e11-6ce4-000c-a90c0e838ce7, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_WLCVK4A8OY) LIMIT 1), QueryRecord(query_id=01bed54e-0e11-721e-000c-a90c0e83da23, sql_text=SELECT ""C O L"", ""__COL__"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""C O L"", ""__COL__"" FROM (SNOWPARK_TEMP_TABLE_WLCVK4A8OY)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
33114,tests.integ.modin.series.test_loc,test_series_loc_get_with_timedelta_and_none_key,SNOW-1653219 None key does not work with timedelta index,xfailed
33125,tests.integ.modin.series.test_setitem,test_series_setitem_check_type_behavior_with_string_key_and_number_scalar_item[-8.999-data6],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
33133,tests.integ.modin.series.test_setitem,test_series_setitem_check_type_behavior_with_string_key_and_boolean_scalar_item[True],Failed: DID NOT RAISE <class 'AssertionError'>,failed
33136,tests.integ.modin.series.test_setitem,test_behavior_table_is_up_to_date,"AssertionError: Exception raised: table: SnowparkSQLException, expected: - for {'series_type': 'int', 'item_type': 'string', 'key_type': 'int'}.",failed
33138,tests.integ.modin.series.test_setitem,test_series_setitem_check_type_behavior_with_string_key_and_boolean_scalar_item[False],Failed: DID NOT RAISE <class 'AssertionError'>,failed
33141,tests.integ.modin.series.test_setitem,test_series_setitem_check_type_behavior_with_string_key_and_string_scalar_item[data0],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
33143,tests.integ.modin.series.test_setitem,test_series_setitem_check_type_behavior_with_string_key_and_string_scalar_item[data1],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
33145,tests.integ.modin.series.test_setitem,test_series_setitem_check_type_behavior_with_string_key_and_string_scalar_item[data2],Failed: DID NOT RAISE <class 'AssertionError'>,failed
33146,tests.integ.modin.series.test_pct_change,test_pct_change_unsupported_args[params0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
33147,tests.integ.modin.series.test_setitem,test_series_setitem_check_type_behavior_with_string_key_and_string_scalar_item[data3],Failed: DID NOT RAISE <class 'AssertionError'>,failed
33148,tests.integ.modin.series.test_mask,test_series_mask_with_cond_and_other_series,ValueError: Must specify axis=0 or 1,failed
33149,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_index_col[False-read_with_table_name-__col__-""C O L""]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54e-0e11-722e-000c-a90c0e83bb4b, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_V4QLKDW5O5) LIMIT 1), QueryRecord(query_id=01bed54e-0e11-6d76-000c-a90c0e84554b, sql_text=SELECT ""__COL__"", ""C O L"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""__COL__"", ""C O L"" FROM (SNOWPARK_TEMP_TABLE_V4QLKDW5O5)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
33154,tests.integ.modin.series.test_setitem,test_series_setitem_check_type_behavior_with_string_key_and_string_scalar_item[data5],Failed: DID NOT RAISE <class 'AssertionError'>,failed
33156,tests.integ.modin.series.test_setitem,test_series_setitem_check_type_behavior_with_string_key_and_string_scalar_item[data6],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
33157,tests.integ.modin.series.test_pct_change,test_pct_change_bad_periods,ValueError: periods must be an int. got <class 'str'> instead,failed
33158,tests.integ.modin.series.test_setitem,test_series_setitem_check_type_behavior_with_string_key_and_string_scalar_item[data7],Failed: DID NOT RAISE <class 'AssertionError'>,failed
33159,tests.integ.modin.series.test_setitem,test_series_setitem_check_type_behavior_with_string_key_and_string_scalar_item[data8],Failed: DID NOT RAISE <class 'AssertionError'>,failed
33160,tests.integ.modin.series.test_setitem,test_series_setitem_check_type_behavior_with_string_key_and_string_scalar_item[data9],Failed: DID NOT RAISE <class 'AssertionError'>,failed
33162,tests.integ.modin.series.test_mask,test_series_mask_index_no_names,SNOW-914228: Do not currently handle duplicates in index correctly,xfailed
33163,tests.integ.modin.series.test_mask,test_series_mask_with_np_array_cond,ValueError: Array conditional must be same shape as self,failed
33169,tests.integ.modin.series.test_mask,test_series_mask_with_series_cond_single_index_different_names,"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['Y']",failed
33170,tests.integ.modin.series.test_setitem,test_series_setitem_value_length_is_short,"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [a, b, c, d]
[left]:  [nan, nan, nan, nan]
[right]: [0, 1, 1, 1]",failed
33176,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[None-None--1],TypeError: boolean value of NA is ambiguous,failed
33177,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[None-None-1],TypeError: boolean value of NA is ambiguous,failed
33178,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_index_col[False-read_with_table_name-""co'l""-Col]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54e-0e11-719e-000c-a90c0e8427d3, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_F05JIK0I22) LIMIT 1), QueryRecord(query_id=01bed54e-0e11-6dc3-000c-a90c0e83cb83, sql_text=SELECT ""co'l"", ""COL"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""co'l"", ""COL"" FROM (SNOWPARK_TEMP_TABLE_F05JIK0I22)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
33179,tests.integ.modin.series.test_mask,test_series_mask_with_duplicated_index_aligned,"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
33181,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[None-None-4],TypeError: boolean value of NA is ambiguous,failed
33198,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[None--1-1],TypeError: boolean value of NA is ambiguous,failed
33201,tests.integ.modin.series.test_mask,test_series_mask_with_lambda_other[<lambda>-4-6],ValueError: Array conditional must be same shape as self,failed
33210,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_index_col[False-read_with_table_name-""col""-COL]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54e-0e11-7168-000c-a90c0e84189b, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_9MOXXBCHFO) LIMIT 1), QueryRecord(query_id=01bed54e-0e11-6bfa-000c-a90c0e84c41f, sql_text=SELECT ""col"", ""COL"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""col"", ""COL"" FROM (SNOWPARK_TEMP_TABLE_9MOXXBCHFO)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
33227,tests.integ.modin.series.test_quantile,test_quantile_nearest_negative,[XPASS(strict)] SNOW-1062839: PERCENTILE_DISC does not give desired behavior,failed
33237,tests.integ.modin.series.test_mask,test_series_mask_with_lambda_other[<lambda>-3-6],ValueError: Array conditional must be same shape as self,failed
33258,tests.integ.modin.series.test_quantile,test_quantile_unsupported_args_negative[lower],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
33261,tests.integ.modin.io.test_read_snowflake,"test_read_snowflake_index_col[False-read_with_table_name-""c""""ol""-col]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54e-0e11-71d7-000c-a90c0e83ec47, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_LYTGABRH7A) LIMIT 1), QueryRecord(query_id=01bed54e-0e11-721e-000c-a90c0e83de2b, sql_text=SELECT ""c""""ol"", ""COL"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""c""""ol"", ""COL"" FROM (SNOWPARK_TEMP_TABLE_LYTGABRH7A)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
33262,tests.integ.modin.series.test_quantile,test_quantile_unsupported_args_negative[higher],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
33265,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[None-4-1],TypeError: boolean value of NA is ambiguous,failed
33266,tests.integ.modin.series.test_quantile,test_quantile_unsupported_args_negative[midpoint],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
33270,tests.integ.modin.series.test_quantile,test_quantile_datetime_negative,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
33286,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[None-10--1],TypeError: boolean value of NA is ambiguous,failed
33309,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[None-10-1],TypeError: boolean value of NA is ambiguous,failed
33315,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[None-10-4],TypeError: boolean value of NA is ambiguous,failed
33338,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[1-None--1],TypeError: boolean value of NA is ambiguous,failed
33341,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[1-None-1],TypeError: boolean value of NA is ambiguous,failed
33343,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[1-None-4],TypeError: boolean value of NA is ambiguous,failed
33350,tests.integ.modin.series.test_sort_values,test_sort_values_key,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
33351,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_index_col_multiindex[True-read_with_select_*],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54e-0e11-6e2a-000c-a90c0e8477b3, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_7PJNJEDM5KREADONLY CLONE SNOWPARK_TEMP_TABLE_WF8E2SFSOH), QueryRecord(query_id=01bed54e-0e11-6e4e-000c-a90c0e84b657, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_7PJNJEDM5KREADONLY) LIMIT 1), QueryRecord(query_id=01bed54e-0e11-719e-000c-a90c0e842c27, sql_text=SELECT ""COL1"", ""COL2"", ""COL3"", ""COL4"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL1"", ""COL2"", ""COL3"", ""COL4"" FROM SNOWPARK_TEMP_TABLE_7PJNJEDM5KREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
33352,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[1--1-1],TypeError: boolean value of NA is ambiguous,failed
33406,tests.integ.modin.series.test_reindex,test_reindex_index_duplicate_values[new_index0],ValueError: cannot reindex on an axis with duplicate labels,failed
33408,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[1-4-1],TypeError: boolean value of NA is ambiguous,failed
33437,tests.integ.modin.series.test_reindex,test_reindex_index_duplicate_values[new_index1],ValueError: cannot reindex on an axis with duplicate labels,failed
33447,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[1-10--1],TypeError: boolean value of NA is ambiguous,failed
33456,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[1-10-1],TypeError: boolean value of NA is ambiguous,failed
33462,tests.integ.modin.series.test_reindex,test_reindex_index_duplicate_values[new_index2],ValueError: cannot reindex on an axis with duplicate labels,failed
33466,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[1-10-4],TypeError: boolean value of NA is ambiguous,failed
33470,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_index_col_multiindex[True-read_with_table_name],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54e-0e11-6e4d-000c-a90c0e849717, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_QNODXDNQT9READONLY CLONE SNOWPARK_TEMP_TABLE_NHUCV2OV7P), QueryRecord(query_id=01bed54e-0e11-7168-000c-a90c0e841d3f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_QNODXDNQT9READONLY) LIMIT 1), QueryRecord(query_id=01bed54e-0e11-6bfa-000c-a90c0e84c8a7, sql_text=SELECT ""COL1"", ""COL2"", ""COL3"", ""COL4"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL1"", ""COL2"", ""COL3"", ""COL4"" FROM SNOWPARK_TEMP_TABLE_QNODXDNQT9READONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
33504,tests.integ.modin.series.test_setitem,test_series_setitem_key_slice_with_series[-1-None-None],"AssertionError: Series are different

Series values are different (80.0 %)
[index]: [0, 1, 2, 3, 4]
[left]:  [A, B, C, D, E]
[right]: [E, D, C, B, A]
At positional index 0, first diff: A != E",failed
33549,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_index_col_multiindex[False-read_with_select_*],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54e-0e11-71c8-000c-a90c0e85708f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_P3JPYA88F3) LIMIT 1), QueryRecord(query_id=01bed54e-0e11-6e5e-000c-a90c0e844e43, sql_text=SELECT ""COL1"", ""COL2"", ""COL3"", ""COL4"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL1"", ""COL2"", ""COL3"", ""COL4"" FROM (SNOWPARK_TEMP_TABLE_P3JPYA88F3)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
33558,tests.integ.modin.series.test_reindex,test_reindex_index_duplicate_values[new_index3],ValueError: cannot reindex on an axis with duplicate labels,failed
33595,tests.integ.modin.series.test_str_accessor,test_str_startswith_endswith_invlaid_na[1-startswith],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
33603,tests.integ.modin.series.test_str_accessor,test_str_startswith_endswith_invlaid_na[1-endswith],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
33604,tests.integ.modin.series.test_reindex,test_reindex_multiindex_negative,"ValueError: Buffer dtype mismatch, expected 'Python object' but got 'long'",failed
33613,tests.integ.modin.series.test_str_accessor,test_str_startswith_endswith_invlaid_na[klm-startswith],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
33623,tests.integ.modin.series.test_str_accessor,test_str_startswith_endswith_invlaid_na[klm-endswith],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
33640,tests.integ.modin.series.test_str_accessor,test_str_startswith_endswith_invlaid_na[na2-startswith],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
33652,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_index_col_multiindex[False-read_with_table_name],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54e-0e11-6e4e-000c-a90c0e84ba5b, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_UP9KBPPPI8) LIMIT 1), QueryRecord(query_id=01bed54e-0e11-719e-000c-a90c0e85a013, sql_text=SELECT ""COL1"", ""COL2"", ""COL3"", ""COL4"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL1"", ""COL2"", ""COL3"", ""COL4"" FROM (SNOWPARK_TEMP_TABLE_UP9KBPPPI8)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
33661,tests.integ.modin.series.test_str_accessor,test_str_startswith_endswith_invlaid_na[na2-endswith],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
33668,tests.integ.modin.series.test_str_accessor,test_str_startswith_endswith_invlaid_na[na3-startswith],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
33676,tests.integ.modin.series.test_str_accessor,test_str_startswith_endswith_invlaid_na[na3-endswith],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
33699,tests.integ.modin.series.test_rename,test_rename,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
33717,tests.integ.modin.series.test_str_accessor,test_str___getitem___neg[data0-1.2],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
33721,tests.integ.modin.series.test_str_accessor,test_str___getitem___neg[data1-a],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
33724,tests.integ.modin.series.test_str_accessor,test_str___getitem___neg[data2-a],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
33726,tests.integ.modin.series.test_str_accessor,test_str___getitem___neg[data3-1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
33776,tests.integ.modin.series.test_rename,test_rename_by_series,TypeError: 'Series' object is not callable,failed
33801,tests.integ.modin.series.test_rename,test_rename_axis_supported,Failed: DID NOT RAISE <class 'ValueError'>,failed
33822,tests.integ.modin.series.test_rename,test_rename_inplace,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
33879,tests.integ.modin.series.test_str_accessor,test_str_get_neg[data0-1.2],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
33883,tests.integ.modin.series.test_str_accessor,test_str_get_neg[data1-a],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
33887,tests.integ.modin.series.test_str_accessor,test_str_get_neg[data2-a],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
33890,tests.integ.modin.series.test_str_accessor,test_str_get_neg[data3-1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
33924,tests.integ.modin.series.test_rename,test_rename_with_custom_indexer,"TypeError: Index(...) must be called with a collection of some kind, <tests.integ.modin.series.test_rename.TestRename.test_rename_with_custom_indexer.<locals>.MyIndexer object at 0x346038df0> was passed",failed
33955,tests.integ.modin.series.test_rename,test_rename_with_custom_indexer_inplace,"TypeError: Index(...) must be called with a collection of some kind, <tests.integ.modin.series.test_rename.TestRename.test_rename_with_custom_indexer_inplace.<locals>.MyIndexer object at 0x345f3ebf0> was passed",failed
33965,tests.integ.modin.series.test_str_accessor,test_str___getitem___string_key,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
33983,tests.integ.modin.series.test_rename,test_rename_callable,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
34012,tests.integ.modin.series.test_str_accessor,test_str___getitem___list_neg,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
34024,tests.integ.modin.series.test_rename,test_rename_error_arg,Failed: DID NOT RAISE <class 'KeyError'>,failed
34041,tests.integ.modin.series.test_rename,test_rename_copy_warning,"AssertionError: assert 'The argument `copy` of `series.rename` has been ignored by Snowpark pandas API' in ''
 +  where '' = <_pytest.logging.LogCaptureFixture object at 0x34619b130>.text",failed
34091,tests.integ.modin.series.test_str_accessor,test_str_contains_invlaid_na[1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
34096,tests.integ.modin.series.test_str_accessor,test_str_contains_invlaid_na[klm],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
34101,tests.integ.modin.series.test_str_accessor,test_str_contains_invlaid_na[na2],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
34105,tests.integ.modin.series.test_loc,test_series_loc_set_scalar_row_key_enlargement[ser_index1-x-94],ValueError: cannot reindex on an axis with duplicate labels,failed
34108,tests.integ.modin.series.test_str_accessor,test_str_contains_invlaid_na[na3],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
34379,tests.integ.modin.series.test_apply_and_map,test_3rd_party_package_with_udf_annotation[scipy>=1.0-7-apply],"TypeError: The input of UDF ""TESTDB_SNOWPANDAS"".""PUBLIC"".SNOWPARK_TEMP_FUNCTION_J8ED7VM1UE must be Column, column name, or a list of them",failed
34539,tests.integ.modin.test_qcut,test_qcut_series_with_none_labels_negative[1-5-1],"AssertionError: Categorical Expected type <class 'pandas.core.arrays.categorical.Categorical'>, found <class 'pandas.core.arrays.interval.IntervalArray'> instead",failed
34541,tests.integ.modin.test_qcut,test_qcut_series_with_none_labels_negative[1-100-1],"AssertionError: Categorical Expected type <class 'pandas.core.arrays.categorical.Categorical'>, found <class 'pandas.core.arrays.interval.IntervalArray'> instead",failed
34544,tests.integ.modin.test_qcut,test_qcut_series_with_none_labels_negative[1-1000-6],"AssertionError: Categorical Expected type <class 'pandas.core.arrays.categorical.Categorical'>, found <class 'pandas.core.arrays.interval.IntervalArray'> instead",failed
34546,tests.integ.modin.test_qcut,test_qcut_series_with_none_labels_negative[10-5-1],"AssertionError: Categorical Expected type <class 'pandas.core.arrays.categorical.Categorical'>, found <class 'pandas.core.arrays.interval.IntervalArray'> instead",failed
34551,tests.integ.modin.test_qcut,test_qcut_series_with_none_labels_negative[10-100-1],"AssertionError: Categorical Expected type <class 'pandas.core.arrays.categorical.Categorical'>, found <class 'pandas.core.arrays.interval.IntervalArray'> instead",failed
34554,tests.integ.modin.test_qcut,test_qcut_series_with_none_labels_negative[10-1000-6],"AssertionError: Categorical Expected type <class 'pandas.core.arrays.categorical.Categorical'>, found <class 'pandas.core.arrays.interval.IntervalArray'> instead",failed
34558,tests.integ.modin.test_qcut,test_qcut_series_with_none_labels_negative[47-5-1],"AssertionError: Categorical Expected type <class 'pandas.core.arrays.categorical.Categorical'>, found <class 'pandas.core.arrays.interval.IntervalArray'> instead",failed
34560,tests.integ.modin.test_qcut,test_qcut_series_with_none_labels_negative[47-100-1],"AssertionError: Categorical Expected type <class 'pandas.core.arrays.categorical.Categorical'>, found <class 'pandas.core.arrays.interval.IntervalArray'> instead",failed
34563,tests.integ.modin.test_qcut,test_qcut_series_with_none_labels_negative[47-1000-6],"AssertionError: Categorical Expected type <class 'pandas.core.arrays.categorical.Categorical'>, found <class 'pandas.core.arrays.interval.IntervalArray'> instead",failed
34584,tests.integ.modin.test_qcut,test_qcut_series_with_none_labels_negative[10000-5-1],"AssertionError: Categorical Expected type <class 'pandas.core.arrays.categorical.Categorical'>, found <class 'pandas.core.arrays.interval.IntervalArray'> instead",failed
34592,tests.integ.modin.series.test_apply_and_map,test_3rd_party_package_with_udf_annotation[scipy>=1.0-7-map],"TypeError: The input of UDF ""TESTDB_SNOWPANDAS"".""PUBLIC"".SNOWPARK_TEMP_FUNCTION_W69PTT5429 must be Column, column name, or a list of them",failed
34601,tests.integ.modin.test_qcut,test_qcut_series_with_none_labels_negative[10000-100-1],"AssertionError: Categorical Expected type <class 'pandas.core.arrays.categorical.Categorical'>, found <class 'pandas.core.arrays.interval.IntervalArray'> instead",failed
34610,tests.integ.modin.test_qcut,test_qcut_series_with_none_labels_negative[10000-1000-6],"AssertionError: Categorical Expected type <class 'pandas.core.arrays.categorical.Categorical'>, found <class 'pandas.core.arrays.interval.IntervalArray'> instead",failed
34636,tests.integ.modin.test_qcut,test_qcut_quantile_limit_exhausted,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
34688,tests.integ.modin.series.test_str_accessor,test_str_slice_list_neg,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
34768,tests.integ.modin.test_session,test_warning_if_quoted_identifiers_ignore_case_is_set,"assert 0 == 1
 +  where 0 = len([])",failed
34807,tests.integ.modin.series.test_str_accessor,test_str_strip_variants_neg[1-strip],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
34809,tests.integ.modin.series.test_str_accessor,test_str_strip_variants_neg[1-lstrip],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
34811,tests.integ.modin.series.test_str_accessor,test_str_strip_variants_neg[1-rstrip],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
34814,tests.integ.modin.series.test_str_accessor,test_str_strip_variants_neg[-2.0-strip],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
34817,tests.integ.modin.series.test_str_accessor,test_str_strip_variants_neg[-2.0-lstrip],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
34820,tests.integ.modin.series.test_str_accessor,test_str_strip_variants_neg[-2.0-rstrip],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
34823,tests.integ.modin.series.test_replace,test_replace_value_dict_negative[one-value0],Failed: DID NOT RAISE <class 'Exception'>,failed
34835,tests.integ.modin.test_session,test_cannot_create_dataframe_without_session,Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSessionException'>,failed
34839,tests.integ.modin.test_session,test_automatically_create_session_from_config_file,Failed: Please remove the existing config file to run this test,failed
34840,tests.integ.modin.test_session,test_automatically_create_session_from_config_env_var,Failed: Please remove the existing config file to run this test,failed
34847,tests.integ.modin.series.test_replace,test_replace_value_dict_negative[to_replace1-value1],Failed: DID NOT RAISE <class 'Exception'>,failed
34857,tests.integ.modin.series.test_replace,test_replace_to_replace_dict_negative[to_replace0-NEW],Failed: DID NOT RAISE <class 'Exception'>,failed
34870,tests.integ.modin.series.test_replace,test_replace_to_replace_dict_negative[to_replace1-None],Failed: DID NOT RAISE <class 'Exception'>,failed
34878,tests.integ.modin.series.test_replace,test_replace_to_replace_dict_negative[to_replace2-value2],Failed: DID NOT RAISE <class 'Exception'>,failed
34885,tests.integ.modin.series.test_replace,test_replace_method_negative,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
34893,tests.integ.modin.series.test_replace,test_replace_limit_negative,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
34901,tests.integ.modin.series.test_replace,test_replace_no_value_negative,Failed: DID NOT RAISE <class 'ValueError'>,failed
34905,tests.integ.modin.test_session,test_multiple_session,AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
35076,tests.integ.modin.test_session,test_with_pandas_session[<lambda>1],"AssertionError: Series are different

Attribute ""name"" are different
[left]:  None
[right]: 0",failed
35235,tests.integ.modin.series.test_str_accessor,test_str_replace_neg[None-a-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
35244,tests.integ.modin.series.test_str_accessor,test_str_replace_neg[a-a-1-NotImplementedError],ValueError: Cannot use a compiled regex as replacement pattern with regex=False,failed
35249,tests.integ.modin.series.test_str_accessor,test_str_replace_neg[-2.0-a-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
35250,tests.integ.modin.series.test_str_accessor,test_str_match_invlaid_na[1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
35256,tests.integ.modin.series.test_str_accessor,test_str_replace_neg[a-<lambda>-1-NotImplementedError],ValueError: Cannot use a callable replacement when regex=False,failed
35261,tests.integ.modin.series.test_str_accessor,test_str_match_invlaid_na[klm],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
35263,tests.integ.modin.series.test_str_accessor,test_str_replace_neg[a-a-a-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
35266,tests.integ.modin.series.test_str_accessor,test_str_replace_neg[a-a-0-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
35281,tests.integ.modin.series.test_str_accessor,test_str_match_invlaid_na[na2],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
35296,tests.integ.modin.series.test_str_accessor,test_str_match_invlaid_na[na3],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
35352,tests.integ.modin.test_session,test_with_no_pandas_session[<lambda>1],"AssertionError: Series are different

Attribute ""name"" are different
[left]:  None
[right]: 0",failed
35439,tests.integ.modin.series.test_shift,test_shift_unsupported_args[params0-periods],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
35452,tests.integ.modin.series.test_shift,test_shift_unsupported_args[params1-suffix],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
35469,tests.integ.modin.series.test_str_accessor,test_str_invalid_dtypes[data0],Failed: DID NOT RAISE <class 'Exception'>,failed
35472,tests.integ.modin.series.test_str_accessor,test_str_invalid_dtypes[data1],Failed: DID NOT RAISE <class 'Exception'>,failed
35594,tests.integ.modin.series.test_take,test_series_take,IndexError: positional indexers are out-of-bounds,failed
35606,tests.integ.modin.series.test_str_accessor,test_str_split_regex[None],[XPASS(strict)] Snowflake SQL's split function does not support regex,failed
35609,tests.integ.modin.series.test_str_accessor,test_str_split_regex[True],[XPASS(strict)] Snowflake SQL's split function does not support regex,failed
35638,tests.integ.modin.series.test_str_accessor,test_str_split_neg[a-1-NotImplementedError],ValueError: Cannot use a compiled regex as replacement pattern with regex=False,failed
35641,tests.integ.modin.series.test_str_accessor,test_str_split_neg[-2.0-1-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
35645,tests.integ.modin.series.test_str_accessor,test_str_split_neg[a-a-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
35708,tests.integ.modin.series.test_sort_index,test_sort_index_series_multiindex_unsupported,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
35771,tests.integ.modin.series.test_to_dynamic_table,test_to_dynamic_table_enforce_ordering_raises[method],"NotImplementedError: Modin supports the method Series.to_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
35847,tests.integ.modin.series.test_sort_values,test_sort_values_by_ascending_length_mismatch_negative,"AssertionError: Regex pattern did not match.
 Regex: 'Length of ascending \\(5\\) must be 1 for Series'
 Input: 'Length of ascending (5) != length of by (1)'",failed
35854,tests.integ.modin.series.test_tz_localize,test_tz_localize_negative[UTC-0-1-None-raise-raise-NotImplementedError],ValueError: The level 1 is not valid,failed
35858,tests.integ.modin.series.test_tz_localize,test_tz_localize_negative[UTC-0-None-False-raise-raise-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
35861,tests.integ.modin.series.test_sort_values,test_sort_values_invalid_axis_negative[1],Failed: DID NOT RAISE <class 'Exception'>,failed
35863,tests.integ.modin.series.test_tz_localize,test_tz_localize_negative[UTC-0-None-True-infer-raise-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
35868,tests.integ.modin.series.test_tz_localize,test_tz_localize_negative[UTC-0-None-True-NaT-raise-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
35871,tests.integ.modin.series.test_tz_localize,test_tz_localize_negative[UTC-0-None-True-ambiguous6-raise-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
35874,tests.integ.modin.series.test_tz_localize,test_tz_localize_negative[UTC-0-None-True-raise-shift_forward-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
35876,tests.integ.modin.series.test_sort_values,test_sort_values_invalid_axis_negative[2],Failed: DID NOT RAISE <class 'Exception'>,failed
35878,tests.integ.modin.series.test_tz_localize,test_tz_localize_negative[UTC-0-None-True-raise-shift_backward-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
35879,tests.integ.modin.series.test_tz_convert,test_tz_convert_negative[UTC-0-1-None-NotImplementedError],ValueError: The level 1 is not valid,failed
35881,tests.integ.modin.series.test_tz_convert,test_tz_convert_negative[UTC-0-None-False-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
35882,tests.integ.modin.series.test_tz_localize,test_tz_localize_negative[UTC-0-None-True-raise-NaT-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
35884,tests.integ.modin.series.test_tz_convert,test_tz_convert_negative[UTC+09:00-0-None-None-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
35885,tests.integ.modin.series.test_tz_localize,test_tz_localize_negative[UTC-0-None-True-raise-nonexistent10-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
35887,tests.integ.modin.series.test_tz_localize,test_tz_localize_negative[UTC-0-None-True-infer-shift_forward-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
35890,tests.integ.modin.series.test_tz_localize,test_tz_localize_negative[UTC+09:00-0-None-True-raise-raise-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
35925,tests.integ.modin.series.test_unstack,test_unstack_sort_notimplemented,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
35927,tests.integ.modin.series.test_to_dynamic_table,test_to_dynamic_table_enforce_ordering_raises[function],"NotImplementedError: Modin supports the method Series.to_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
35932,tests.integ.modin.series.test_unstack,test_unstack_non_integer_level_notimplemented,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
35933,tests.integ.modin.series.test_sort_values,test_sort_values_invalid_kind_negative,"AssertionError: Regex pattern did not match.
 Regex: ""sort kind must be 'stable' or None \\(got 'fastsort'\\)""
 Input: ""sort kind must be one of 'quick', 'heap', or 'stable' (got 'fastsort')""",failed
35976,tests.integ.modin.series.test_to_dynamic_table,test_to_dynamic_table_no_enforce_ordering[method],"NotImplementedError: Modin supports the method Series.to_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
35993,tests.integ.modin.strings.test_case_justify,test_casefold_not_implemented,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36005,tests.integ.modin.series.test_unary_op,test_ser_unary_invalid_in_native_negative[data0-abs],TypeError: bad operand type for abs(): 'NoneType',failed
36012,tests.integ.modin.strings.test_cat,test_str_cat_single_array[None-None-aabbc],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36013,tests.integ.modin.series.test_unary_op,test_ser_unary_invalid_in_native_negative[data0-<lambda>],TypeError: bad operand type for unary -: 'NoneType',failed
36015,tests.integ.modin.strings.test_cat,test_str_cat_single_array[None---aabbc-],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36017,tests.integ.modin.series.test_loc,test_series_loc_get_return_series[key1],"ValueError: Length mismatch: Expected axis has 8 elements, new values have 5 elements",failed
36018,tests.integ.modin.strings.test_cat,test_str_cat_single_array[_-NA-a_a_b_b_c_NA],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36022,tests.integ.modin.strings.test_cat,test_str_cat_series_with_array,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36027,tests.integ.modin.series.test_unary_op,test_ser_unary_invalid_in_native_negative[data1-abs],TypeError: bad operand type for abs(): 'NoneType',failed
36032,tests.integ.modin.series.test_value_counts,test_value_counts_bins,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36043,tests.integ.modin.series.test_to_dynamic_table,test_to_dynamic_table_no_enforce_ordering[function],"NotImplementedError: Modin supports the method Series.to_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
36045,tests.integ.modin.series.test_loc,test_series_loc_get_return_series[key7],"ValueError: Length mismatch: Expected axis has 4 elements, new values have 7 elements",failed
36047,tests.integ.modin.strings.test_cat,test_str_cat_incorrect_lengths,"ValueError: If `others` contains arrays or lists (or other list-likes without an index), these must all be of the same length as the calling Series/Index.",failed
36050,tests.integ.modin.series.test_unary_op,test_ser_unary_invalid_in_native_negative[data1-<lambda>],TypeError: bad operand type for unary -: 'NoneType',failed
36051,tests.integ.modin.series.test_loc,test_series_loc_get_negative_diff2native[key0-TypeError-Passing a set as an indexer is not supported. Use a list instead.],"AssertionError: Regex pattern did not match.
 Regex: 'Passing a set as an indexer is not supported. Use a list instead.'
 Input: ""'set' type is unordered""",failed
36054,tests.integ.modin.series.test_loc,test_series_loc_get_negative_diff2native[key1-TypeError-Passing a dict as an indexer is not supported. Use a list instead.],Failed: DID NOT RAISE <class 'TypeError'>,failed
36056,tests.integ.modin.series.test_unary_op,test_ser_unary_invalid_in_native_negative[data2-abs],TypeError: bad operand type for abs(): 'NoneType',failed
36058,tests.integ.modin.series.test_loc,test_series_loc_get_negative_diff2native[key2-TypeError-Please convert this to Snowpark pandas objects by calling modin],"KeyError: array([2, 4], dtype=object)",failed
36060,tests.integ.modin.series.test_loc,test_series_loc_get_negative_diff2native[key3-TypeError-Please convert this to Snowpark pandas objects by calling modin],Failed: DID NOT RAISE <class 'TypeError'>,failed
36065,tests.integ.modin.series.test_unary_op,test_ser_unary_invalid_in_native_negative[data2-<lambda>],TypeError: bad operand type for unary -: 'NoneType',failed
36066,tests.integ.modin.series.test_unary_op,test_ser_unary_invalid_in_sf_negative[data0-abs],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
36069,tests.integ.modin.series.test_unary_op,test_ser_unary_invalid_in_sf_negative[data0-<lambda>],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
36070,tests.integ.modin.strings.test_extract,test_extract_expand_kwarg_wrong_type_raises,ValueError: expand must be True or False,failed
36072,tests.integ.modin.strings.test_extract,test_extract_expand_kwarg,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36074,tests.integ.modin.series.test_unary_op,test_ser_unary_invalid_in_sf_negative[data1-abs],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
36075,tests.integ.modin.strings.test_extract,test_extract_expand_capture_groups,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36078,tests.integ.modin.series.test_unary_op,test_ser_unary_invalid_in_sf_negative[data1-<lambda>],Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
36095,tests.integ.modin.series.test_where,test_series_where_with_series_cond_single_index_different_names,"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['Y']",failed
36096,tests.integ.modin.series.test_to_dynamic_table,test_to_dynamic_table_multiple_sessions_no_enforce_ordering[method],"NotImplementedError: Modin supports the method Series.to_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
36097,tests.integ.modin.series.test_loc,test_series_loc_get_negative_snowpark_pandas_input[dataframe],Failed: DID NOT RAISE <class 'Exception'>,failed
36098,tests.integ.modin.strings.test_get_dummies,test_get_dummies_unimplemented,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36099,tests.integ.modin.strings.test_get_dummies,test_get_dummies_with_name_dummy_unimplemented,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36101,tests.integ.modin.series.test_where,test_series_where_with_duplicated_index_aligned,"AssertionError: Series.index are different

Attribute ""names"" are different
[left]:  [None]
[right]: ['index']",failed
36103,tests.integ.modin.strings.test_strings,test_ismethods[isalnum-expected0-0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36106,tests.integ.modin.strings.test_strings,test_ismethods[isalpha-expected1-0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36109,tests.integ.modin.series.test_unique,test_unique_homogeneous_data[input_data0],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
36111,tests.integ.modin.series.test_unique,test_unique_homogeneous_data[input_data1],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
36113,tests.integ.modin.strings.test_strings,test_ismethods[isnumeric-expected3-0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36115,tests.integ.modin.series.test_unique,test_unique_homogeneous_data[input_data2],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
36117,tests.integ.modin.strings.test_strings,test_ismethods[isspace-expected4-0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36119,tests.integ.modin.series.test_unique,test_unique_homogeneous_data[input_data3],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
36121,tests.integ.modin.series.test_loc,test_series_loc_get_basic[series5-key5],pandas.errors.IndexingError: Too many indexers,failed
36122,tests.integ.modin.series.test_unique,test_unique_homogeneous_data[input_data4],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
36126,tests.integ.modin.series.test_unique,test_unique_homogeneous_data[input_data5],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
36131,tests.integ.modin.series.test_unique,test_unique_homogeneous_data[input_data6],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
36132,tests.integ.modin.strings.test_strings,test_isnumeric_unicode[isnumeric-expected0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36136,tests.integ.modin.strings.test_strings,test_isnumeric_unicode[isdecimal-expected1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36139,tests.integ.modin.series.test_unique,test_unique_homogeneous_data[input_data7],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
36142,tests.integ.modin.strings.test_strings,test_isnumeric_unicode_missing[isnumeric-expected0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36143,tests.integ.modin.series.test_unique,test_unique_homogeneous_data[input_data8],Represent overflow using float instead of integer,xfailed
36145,tests.integ.modin.strings.test_strings,test_isnumeric_unicode_missing[isdecimal-expected1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36148,tests.integ.modin.series.test_unique,test_unique_homogeneous_data[input_data9],Represent Decimal using float instead of integer as pandas does not recognize it,xfailed
36149,tests.integ.modin.strings.test_strings,test_split_join_roundtrip,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36153,tests.integ.modin.series.test_unique,test_unique_heterogeneous_data,TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
36158,tests.integ.modin.strings.test_strings,test_index[index-EF-None-None-expected0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36159,tests.integ.modin.series.test_unique,test_unique_post_sort_values[input_data0],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
36162,tests.integ.modin.series.test_unique,test_unique_post_sort_values[input_data1],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
36164,tests.integ.modin.strings.test_strings,test_index[rindex-EF-None-None-expected1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36167,tests.integ.modin.series.test_unique,test_unique_post_sort_values[input_data2],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
36168,tests.integ.modin.strings.test_strings,test_index[index-EF-3-None-expected2],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36172,tests.integ.modin.series.test_to_dynamic_table,test_to_dynamic_table_multiple_sessions_no_enforce_ordering[function],"NotImplementedError: Modin supports the method Series.to_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
36173,tests.integ.modin.series.test_unique,test_unique_post_sort_values[input_data3],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
36174,tests.integ.modin.strings.test_strings,test_index[rindex-EF-3-None-expected3],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36178,tests.integ.modin.strings.test_strings,test_index[index-E-4-8-expected4],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36179,tests.integ.modin.series.test_unique,test_unique_post_sort_values[input_data4],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
36182,tests.integ.modin.strings.test_get_dummies_dataframe,test_get_dummies_pandas_negative,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36183,tests.integ.modin.strings.test_strings,test_index[rindex-E-0-5-expected5],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36184,tests.integ.modin.series.test_unique,test_unique_post_sort_values[input_data5],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
36187,tests.integ.modin.strings.test_get_dummies_dataframe,test_get_dummies_pandas_negative_duplicated_columns,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36189,tests.integ.modin.series.test_unique,test_unique_post_sort_values[input_data6],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
36192,tests.integ.modin.strings.test_strings,test_index_not_found_raises,ValueError: substring not found,failed
36194,tests.integ.modin.series.test_unique,test_unique_post_sort_values[input_data7],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
36196,tests.integ.modin.strings.test_strings,test_index_raises_not_implemented_error[index],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36197,tests.integ.modin.strings.test_get_dummies_dataframe,test_get_dummies_pandas_no_row_pos_col[A],AttributeError: 'DataFrame' object has no attribute 'row_position_snowflake_quoted_identifier',failed
36198,tests.integ.modin.series.test_unique,test_unique_post_sort_values[input_data8],Represent overflow using float instead of integer,xfailed
36200,tests.integ.modin.strings.test_strings,test_index_raises_not_implemented_error[rindex],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36202,tests.integ.modin.strings.test_get_dummies_dataframe,test_get_dummies_pandas_no_row_pos_col[C],AttributeError: 'DataFrame' object has no attribute 'row_position_snowflake_quoted_identifier',failed
36204,tests.integ.modin.series.test_unique,test_unique_post_sort_values[input_data9],Represent Decimal using float instead of integer as pandas does not recognize it,xfailed
36205,tests.integ.modin.strings.test_strings,test_index_missing[index-exp0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36208,tests.integ.modin.strings.test_get_dummies_dataframe,test_get_dummies_pandas_no_row_pos_col[D],AttributeError: 'DataFrame' object has no attribute 'row_position_snowflake_quoted_identifier',failed
36209,tests.integ.modin.strings.test_strings,test_index_missing[rindex-exp1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36211,tests.integ.modin.series.test_unique,test_index_unique_data_columns_should_not_affect_index_column,SNOW-1524901: Wrong result when index and a data column have the same name,xfailed
36212,tests.integ.modin.strings.test_get_dummies_dataframe,test_get_dummies_pandas_no_row_pos_col_duplicate_values[A],AttributeError: 'DataFrame' object has no attribute 'row_position_snowflake_quoted_identifier',failed
36216,tests.integ.modin.strings.test_get_dummies_dataframe,test_get_dummies_pandas_no_row_pos_col_duplicate_values[C],AttributeError: 'DataFrame' object has no attribute 'row_position_snowflake_quoted_identifier',failed
36227,tests.integ.modin.strings.test_strings,test_slice_replace[2-3-None-expected0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36229,tests.integ.modin.strings.test_strings,test_slice_replace[2-3-z-expected1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36233,tests.integ.modin.strings.test_strings,test_slice_replace[2-2-z-expected2],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36235,tests.integ.modin.strings.test_strings,test_slice_replace[2-1-z-expected3],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36236,tests.integ.modin.strings.test_strings,test_slice_replace[-1-None-z-expected4],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36237,tests.integ.modin.strings.test_strings,test_slice_replace[None--2-z-expected5],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36239,tests.integ.modin.strings.test_strings,test_slice_replace[6-8-z-expected6],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36240,tests.integ.modin.strings.test_strings,test_slice_replace[-10-3-z-expected7],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36242,tests.integ.modin.series.test_to_dynamic_table,test_to_dynamic_table_index[method-True-None-expected_index_columns0],"NotImplementedError: Modin supports the method Series.to_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
36244,tests.integ.modin.strings.test_strings,test_removeprefix[a-expected0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36247,tests.integ.modin.strings.test_strings,test_removeprefix[ab-expected1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36249,tests.integ.modin.strings.test_strings,test_removesuffix[c-expected0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36251,tests.integ.modin.strings.test_strings,test_removesuffix[bc-expected1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36252,tests.integ.modin.strings.test_strings,test_encode_decode,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36255,tests.integ.modin.strings.test_strings,test_normalize[NFKC-expected0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36257,tests.integ.modin.strings.test_strings,test_normalize[NFC-expected1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36258,tests.integ.modin.strings.test_get_dummies_series,test_get_dummies_pandas_no_row_pos_col,AttributeError: 'DataFrame' object has no attribute 'row_position_snowflake_quoted_identifier',failed
36259,tests.integ.modin.strings.test_strings,test_zfill[3-data0-expected_data0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36261,tests.integ.modin.strings.test_get_dummies_series,test_get_dummies_series_negative[data0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36262,tests.integ.modin.strings.test_strings,test_zfill[5-data1-expected_data1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36263,tests.integ.modin.strings.test_get_dummies_series,test_get_dummies_series_negative[data1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36280,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[False-True-read_with_select_*-],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54f-0e11-6e2a-000c-a90c0e8902af, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_11SDNFHLPGREADONLY CLONE SNOWPARK_TEMP_TABLE_TUWKX6APVVTESTTABLENAME), QueryRecord(query_id=01bed54f-0e11-6e87-000c-a90c0e88f3df, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_11SDNFHLPGREADONLY) LIMIT 1), QueryRecord(query_id=01bed54f-0e11-722e-000c-a90c0e882c57, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL1"", ""S"" FROM SNOWPARK_TEMP_TABLE_11SDNFHLPGREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
36283,tests.integ.modin.series.test_loc,test_series_loc_get_key_non_boolean_series[series-native_series_key0],TypeError: Cannot interpret 'Int64Dtype()' as a data type,failed
36284,tests.integ.modin.series.test_loc,test_series_loc_get_key_non_boolean_series[series-native_series_key1],TypeError: Cannot interpret 'Int64Dtype()' as a data type,failed
36287,tests.integ.modin.series.test_to_dynamic_table,test_to_dynamic_table_index[method-True-index_labels1-expected_index_columns1],"NotImplementedError: Modin supports the method Series.to_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
36292,tests.integ.modin.strings.test_strings,test_repeat[3-expected_result_data0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36294,tests.integ.modin.series.test_loc,test_series_loc_get_key_non_boolean_series[series-native_series_key2],TypeError: Cannot interpret 'Int64Dtype()' as a data type,failed
36295,tests.integ.modin.strings.test_strings,test_repeat[repeat1-expected_result_data1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36296,tests.integ.modin.strings.test_strings,test_repeat_with_null[None-4],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36297,tests.integ.modin.strings.test_strings,test_repeat_with_null[b-None],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36300,tests.integ.modin.strings.test_strings,test_empty_str_empty_cat,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36302,tests.integ.modin.strings.test_strings,test_empty_str_self_cat,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36304,tests.integ.modin.series.test_loc,test_series_loc_get_key_non_boolean_series[series-native_series_key3],TypeError: Cannot interpret 'Int64Dtype()' as a data type,failed
36315,tests.integ.modin.series.test_loc,test_series_loc_get_key_non_boolean_series[series-native_series_key4],TypeError: Cannot interpret 'Int64Dtype()' as a data type,failed
36320,tests.integ.modin.series.test_to_dynamic_table,test_to_dynamic_table_index[method-False-None-expected_index_columns2],"NotImplementedError: Modin supports the method Series.to_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
36323,tests.integ.modin.series.test_loc,test_series_loc_get_key_non_boolean_series[series-native_series_key5],TypeError: Cannot interpret 'Int64Dtype()' as a data type,failed
36329,tests.integ.modin.tools.test_to_datetime,test_to_datetime_format_YYYYMMDD_ignore[True],SNOW-1170304: out of bounds datetime convert to datetime64[us] instead of raising error,xfailed
36330,tests.integ.modin.series.test_loc,test_series_loc_get_key_non_boolean_series[series-native_series_key6],TypeError: Cannot interpret 'Int64Dtype()' as a data type,failed
36333,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[False-True-read_with_select_*-temporary],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54f-0e11-6e4e-000c-a90c0e89330b, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_J6WOPIO2DAREADONLY CLONE SNOWPARK_TEMP_TABLE_S10YWTPH0ITESTTABLENAME), QueryRecord(query_id=01bed54f-0e11-71c8-000c-a90c0e886c7f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_J6WOPIO2DAREADONLY) LIMIT 1), QueryRecord(query_id=01bed54f-0e11-6e2a-000c-a90c0e890633, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL1"", ""S"" FROM SNOWPARK_TEMP_TABLE_J6WOPIO2DAREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
36335,tests.integ.modin.series.test_loc,test_series_loc_set_dataframe_item_negative[series],Failed: DID NOT RAISE <class 'Exception'>,failed
36348,tests.integ.modin.series.test_loc,test_series_loc_get_key_bool[list-key5],IndexError: positional indexers are out-of-bounds,failed
36351,tests.integ.modin.series.test_to_dynamic_table,test_to_dynamic_table_index[method-False-index_labels3-expected_index_columns3],"NotImplementedError: Modin supports the method Series.to_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
36355,tests.integ.modin.series.test_apply_and_map,test_3rd_party_package_with_udf_annotation[scipy<1.12.0-7-apply],"TypeError: The input of UDF ""TESTDB_SNOWPANDAS"".""PUBLIC"".SNOWPARK_TEMP_FUNCTION_VKI59D06YS must be Column, column name, or a list of them",failed
36357,tests.integ.modin.series.test_loc,test_series_loc_get_key_non_boolean_series[list-native_series_key1],TypeError: Cannot interpret 'Int64Dtype()' as a data type,failed
36371,tests.integ.modin.series.test_loc,test_series_loc_get_key_non_boolean_series[list-native_series_key2],TypeError: Cannot interpret 'Int64Dtype()' as a data type,failed
36376,tests.integ.modin.series.test_loc,test_series_loc_get_key_non_boolean_series[list-native_series_key3],TypeError: Cannot interpret 'Int64Dtype()' as a data type,failed
36380,tests.integ.modin.series.test_loc,test_series_loc_get_key_non_boolean_series[list-native_series_key4],TypeError: Cannot interpret 'Int64Dtype()' as a data type,failed
36381,tests.integ.modin.tools.test_date_range,test_without_freq[both-1],AttributeError: 'NativeQueryCompiler' object has no attribute 'series_to_datetime',failed
36383,tests.integ.modin.series.test_loc,test_series_loc_get_key_non_boolean_series[list-native_series_key5],TypeError: Cannot interpret 'Int64Dtype()' as a data type,failed
36391,tests.integ.modin.series.test_loc,test_series_loc_get_key_non_boolean_series[list-native_series_key6],TypeError: Cannot interpret 'Int64Dtype()' as a data type,failed
36392,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[False-True-read_with_select_*-transient],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54f-0e11-719e-000c-a90c0e889b77, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_G6A060AG6QREADONLY CLONE SNOWPARK_TEMP_TABLE_ES9AE1NU5TTESTTABLENAME), QueryRecord(query_id=01bed54f-0e11-722e-000c-a90c0e89901f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_G6A060AG6QREADONLY) LIMIT 1), QueryRecord(query_id=01bed54f-0e11-6ed3-000c-a90c0e8963d7, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL1"", ""S"" FROM SNOWPARK_TEMP_TABLE_G6A060AG6QREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
36396,tests.integ.modin.series.test_loc,test_series_loc_set_dataframe_item_negative[list],Failed: DID NOT RAISE <class 'Exception'>,failed
36398,tests.integ.modin.series.test_to_dynamic_table,test_to_dynamic_table_index[function-True-None-expected_index_columns0],"NotImplementedError: Modin supports the method Series.to_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
36411,tests.integ.modin.series.test_loc,test_series_loc_get_key_bool[array-key5],IndexError: positional indexers are out-of-bounds,failed
36412,tests.integ.modin.tools.test_date_range,test_without_freq[left-1],AttributeError: 'NativeQueryCompiler' object has no attribute 'series_to_datetime',failed
36416,tests.integ.modin.series.test_apply_and_map,test_3rd_party_package_with_udf_annotation[scipy<1.12.0-7-map],"TypeError: The input of UDF ""TESTDB_SNOWPANDAS"".""PUBLIC"".SNOWPARK_TEMP_FUNCTION_AHT97RIKGS must be Column, column name, or a list of them",failed
36435,tests.integ.modin.series.test_to_dynamic_table,test_to_dynamic_table_index[function-True-index_labels1-expected_index_columns1],"NotImplementedError: Modin supports the method Series.to_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
36440,tests.integ.modin.tools.test_to_datetime,test_to_datetime_with_non_exact_unimplemented[True],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36449,tests.integ.modin.tools.test_date_range,test_without_freq[right-1],AttributeError: 'NativeQueryCompiler' object has no attribute 'series_to_datetime',failed
36470,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[False-True-read_with_select_*-view],"assert 4 == 2
 +  where 4 = len([QueryRecord(query_id=01bed54f-0e11-7168-000c-a90c0e88bd7b, sql_text=CREATE OR REPLACE TEMPORARY TABLE SNOWPARK_TEMP_TABLE_1ZKCIOSYCD AS SELECT * FROM SNOWPARK_TEMP_VIEW_4NO0B4IYLY), QueryRecord(query_id=01bed54f-0e11-71dd-000c-a90c0e8928f3, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_9CHQ9V74P9READONLY CLONE SNOWPARK_TEMP_TABLE_1ZKCIOSYCD), QueryRecord(query_id=01bed54f-0e11-719e-000c-a90c0e89d08b, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_9CHQ9V74P9READONLY) LIMIT 1), QueryRecord(query_id=01bed54f-0e11-6d76-000c-a90c0e89f01f, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL1"", ""S"" FROM SNOWPARK_TEMP_TABLE_9CHQ9V74P9READONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
36474,tests.integ.modin.series.test_to_dynamic_table,test_to_dynamic_table_index[function-False-None-expected_index_columns2],"NotImplementedError: Modin supports the method Series.to_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
36484,tests.integ.modin.series.test_sample,test_series_sample_not_implemented[<lambda>0],KeyError: 'String passed to weights not a valid column',failed
36485,tests.integ.modin.series.test_sample,test_series_sample_not_implemented[<lambda>1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36499,tests.integ.modin.series.test_sample,test_series_sample_over_size_n[<lambda>],ValueError: Cannot take a larger sample than population when 'replace=False',failed
36501,tests.integ.modin.tools.test_to_datetime,test_to_datetime_format_YYYYMMDD_with_str_nat[nAn],"ValueError: time data ""nAn"" doesn't match format ""%Y%m%d"", at position 2. You might want to try:
    - passing `format` if your strings have a consistent format;
    - passing `format='ISO8601'` if your strings are all ISO8601 but not necessarily in exactly the same format;
    - passing `format='mixed'`, and the format will be inferred for each element individually. You might want to use `dayfirst` alongside this.",failed
36502,tests.integ.modin.tools.test_to_datetime,test_to_datetime_format_YYYYMMDD_with_str_nat[nAt],"ValueError: time data ""nAt"" doesn't match format ""%Y%m%d"", at position 2. You might want to try:
    - passing `format` if your strings have a consistent format;
    - passing `format='ISO8601'` if your strings are all ISO8601 but not necessarily in exactly the same format;
    - passing `format='mixed'`, and the format will be inferred for each element individually. You might want to use `dayfirst` alongside this.",failed
36508,tests.integ.modin.series.test_to_dynamic_table,test_to_dynamic_table_index[function-False-index_labels3-expected_index_columns3],"NotImplementedError: Modin supports the method Series.to_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
36510,tests.integ.modin.tools.test_date_range,test_without_freq[neither-1],AttributeError: 'NativeQueryCompiler' object has no attribute 'series_to_datetime',failed
36513,tests.integ.modin.series.test_setitem,test_series_setitem_scalar_key_and_scalar_item[z-35],ValueError: cannot reindex on an axis with duplicate labels,failed
36514,tests.integ.modin.series.test_setitem,test_series_setitem_scalar_key_and_scalar_item[None-35],ValueError: cannot reindex on an axis with duplicate labels,failed
36525,tests.integ.modin.series.test_setitem,test_series_setitem_scalar_key_and_scalar_item_mixed_type_series_type_coercion[0-a],Failed: DID NOT RAISE <class 'AssertionError'>,failed
36526,tests.integ.modin.series.test_to_dynamic_table,test_to_dynamic_table_multiindex[method],"NotImplementedError: Modin supports the method Series.to_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
36527,tests.integ.modin.series.test_setitem,test_series_setitem_scalar_key_and_scalar_item_mixed_type_series_type_coercion[xyz-a],Failed: DID NOT RAISE <class 'AssertionError'>,failed
36528,tests.integ.modin.series.test_setitem,test_series_setitem_scalar_key_and_scalar_item_mixed_type_series_type_coercion[3.14-a],Failed: DID NOT RAISE <class 'AssertionError'>,failed
36533,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_label_updated[0-True],"AssertionError: Series are different

Series values are different (50.0 %)
[index]: [a, True, b, False]
[left]:  [0, hello, 1.2, 34]
[right]: [1.1, 0, 1.2, 34]
At positional index 0, first diff: 0 != 1.1",failed
36535,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_label_updated[0-False],"AssertionError: Series are different

Series values are different (25.0 %)
[index]: [a, True, b, False]
[left]:  [1.1, hello, 1.2, 34]
[right]: [1.1, hello, 1.2, 0]
At positional index 3, first diff: 34 != 0",failed
36537,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[False-True-read_with_select_*-SECURE VIEW],"assert 4 == 2
 +  where 4 = len([QueryRecord(query_id=01bed54f-0e11-6ed3-000c-a90c0e89686b, sql_text=CREATE OR REPLACE TEMPORARY TABLE SNOWPARK_TEMP_TABLE_D6AJWFKX44 AS SELECT * FROM SNOWPARK_TEMP_VIEW_SQPMKIPKYH), QueryRecord(query_id=01bed54f-0e11-6bfa-000c-a90c0e891e5b, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_H1K1CULBKHREADONLY CLONE SNOWPARK_TEMP_TABLE_D6AJWFKX44), QueryRecord(query_id=01bed54f-0e11-6dc3-000c-a90c0e89881f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_H1K1CULBKHREADONLY) LIMIT 1), QueryRecord(query_id=01bed54f-0e11-6e4d-000c-a90c0e87edfb, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL1"", ""S"" FROM SNOWPARK_TEMP_TABLE_H1K1CULBKHREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
36538,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_label_updated[xyz-True],"AssertionError: Series are different

Series values are different (100.0 %)
[index]: [a, True, b, False]
[left]:  [xyz, hello, 1.2, 34]
[right]: [1.1, xyz, 1.2, 34]
At positional index 0, first diff: xyz != 1.1",failed
36540,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_label_updated[xyz-False],"AssertionError: Series are different

Series values are different (75.0 %)
[index]: [a, True, b, False]
[left]:  [1.1, hello, 1.2, 34]
[right]: [1.1, hello, 1.2, xyz]
At positional index 0, first diff: 1.1 != 1.1",failed
36542,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_label_updated[None-True],"AssertionError: Series are different

Series values are different (50.0 %)
[index]: [a, True, b, False]
[left]:  [None, hello, 1.2, 34]
[right]: [1.1, None, 1.2, 34]
At positional index 0, first diff: None != 1.1",failed
36544,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_label_updated[None-False],"AssertionError: Series are different

Series values are different (25.0 %)
[index]: [a, True, b, False]
[left]:  [1.1, hello, 1.2, 34]
[right]: [1.1, hello, 1.2, None]
At positional index 3, first diff: 34 != None",failed
36546,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_label_updated[3.14-True],"AssertionError: Series are different

Series values are different (50.0 %)
[index]: [a, True, b, False]
[left]:  [3.14, hello, 1.2, 34]
[right]: [1.1, 3.14, 1.2, 34]
At positional index 0, first diff: 3.14 != 1.1",failed
36549,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_label_updated[3.14-False],"AssertionError: Series are different

Series values are different (25.0 %)
[index]: [a, True, b, False]
[left]:  [1.1, hello, 1.2, 34]
[right]: [1.1, hello, 1.2, 3.14]
At positional index 3, first diff: 34 != 3.14",failed
36551,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_case2_numeric_index[0-True],"AssertionError: Series are different

Series length are different
[left]:  5, Index([0, 1, 2, 3, True], dtype='object')
[right]: 4, Index([False, True, True, True], dtype='bool')",failed
36553,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_case2_numeric_index[0-False],"AssertionError: Series are different

Series length are different
[left]:  5, Index([0, 1, 2, 3, False], dtype='object')
[right]: 4, Index([False, True, True, True], dtype='bool')",failed
36555,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_case2_numeric_index[xyz-True],"AssertionError: Series are different

Series length are different
[left]:  5, Index([0, 1, 2, 3, True], dtype='object')
[right]: 4, Index([False, True, True, True], dtype='bool')",failed
36558,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_case2_numeric_index[None-True],"AssertionError: Series are different

Series length are different
[left]:  5, Index([0, 1, 2, 3, True], dtype='object')
[right]: 4, Index([False, True, True, True], dtype='bool')",failed
36562,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_case2_numeric_index[None-False],"AssertionError: Series are different

Series length are different
[left]:  5, Index([0, 1, 2, 3, False], dtype='object')
[right]: 4, Index([False, True, True, True], dtype='bool')",failed
36563,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_case2_numeric_index[3.14-True],"AssertionError: Series are different

Series length are different
[left]:  5, Index([0, 1, 2, 3, True], dtype='object')
[right]: 4, Index([False, True, True, True], dtype='bool')",failed
36564,tests.integ.modin.tools.test_to_numeric,test_series_to_numeric[input3-object-float64],"AssertionError: assert dtype('int64') == 'float64'
 +  where dtype('int64') = Series([], dtype: int64).dtype
 +    where Series([], dtype: int64) = <function to_numeric at 0x147c10670>(Series([], dtype: object))
 +      where <function to_numeric at 0x147c10670> = pd.to_numeric",failed
36565,tests.integ.modin.series.test_to_dynamic_table,test_to_dynamic_table_multiindex[function],"NotImplementedError: Modin supports the method Series.to_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
36567,tests.integ.modin.strings.test_get_dummies_dataframe,test_get_dummies_pandas_after_read_snowflake,AttributeError: 'DataFrame' object has no attribute 'index_column_snowflake_quoted_identifiers',failed
36572,tests.integ.modin.tools.test_to_numeric,test_series_to_numeric[input7-None-float64],"AssertionError: assert dtype('int64') == 'float64'
 +  where dtype('int64') = 0    1\n1    2\n2    3\ndtype: int64.dtype
 +    where 0    1\n1    2\n2    3\ndtype: int64 = <function to_numeric at 0x147c10670>(0    1\n1    2\n2    3\ndtype: object)
 +      where <function to_numeric at 0x147c10670> = pd.to_numeric",failed
36576,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_case2_numeric_index[3.14-False],"AssertionError: Series are different

Series length are different
[left]:  5, Index([0, 1, 2, 3, False], dtype='object')
[right]: 4, Index([False, True, True, True], dtype='bool')",failed
36585,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_case2_non_numeric_index[0-True],ValueError: cannot reindex on an axis with duplicate labels,failed
36586,tests.integ.modin.strings.test_strings,test_zfill_with_leading_sign,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36589,tests.integ.modin.tools.test_to_numeric,test_scalar_to_numeric[-3-float64],"AssertionError: assert dtype('int64') == 'float64'
 +  where dtype('int64') = -3.dtype",failed
36594,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_case2_non_numeric_index[0-False],ValueError: cannot reindex on an axis with duplicate labels,failed
36603,tests.integ.modin.series.test_to_view,test_to_view_basic[method],"NotImplementedError: Modin supports the method Series.to_view on the Snowflake backend, but not on the backend Pandas.",failed
36604,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_case2_non_numeric_index[xyz-True],ValueError: cannot reindex on an axis with duplicate labels,failed
36607,tests.integ.modin.series.test_to_view,test_to_view_basic[function],"NotImplementedError: Modin supports the method Series.to_view on the Snowflake backend, but not on the backend Pandas.",failed
36616,tests.integ.modin.strings.test_translate,test_translate_without_maketrans,"AssertionError: Series are different

Series values are different (75.0 %)
[index]: [0, 1, 2, 3]
[left]:  [AAAAA, jkdsAjk, cjghgjqk, yubikey]
[right]: [AAAAA, jdsAj, cjghgjq, zubiez]
At positional index 1, first diff: jkdsAjk != jdsAj",failed
36617,tests.integ.modin.tools.test_to_numeric,test_nan_to_numeric,"ValueError: Unable to parse string ""nan"" at position 0",failed
36618,tests.integ.modin.strings.test_translate,test_translate_invalid_mappings[table0-ValueError],Failed: DID NOT RAISE <class 'ValueError'>,failed
36621,tests.integ.modin.strings.test_translate,test_translate_invalid_mappings[table1-ValueError],Failed: DID NOT RAISE <class 'ValueError'>,failed
36623,tests.integ.modin.strings.test_translate,test_translate_invalid_mappings[table2-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36624,tests.integ.modin.strings.test_translate,test_translate_invalid_mappings[table3-NotImplementedError],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36625,tests.integ.modin.tools.test_to_numeric,test_to_numeric_errors[ignore],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36627,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_case2_non_numeric_index[xyz-False],ValueError: cannot reindex on an axis with duplicate labels,failed
36629,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[False-True-read_with_select_*-TEMP VIEW],"assert 4 == 2
 +  where 4 = len([QueryRecord(query_id=01bed54f-0e11-6d76-000c-a90c0e89f4cb, sql_text=CREATE OR REPLACE TEMPORARY TABLE SNOWPARK_TEMP_TABLE_PSOWAUIHYB AS SELECT * FROM SNOWPARK_TEMP_VIEW_Q6YI18O0X7), QueryRecord(query_id=01bed54f-0e11-6d08-000c-a90c0e894e6f, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_KL9Z2OB1P2READONLY CLONE SNOWPARK_TEMP_TABLE_PSOWAUIHYB), QueryRecord(query_id=01bed54f-0e11-6e5e-000c-a90c0e8a5383, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_KL9Z2OB1P2READONLY) LIMIT 1), QueryRecord(query_id=01bed54f-0e11-722e-000c-a90c0e899a6b, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL1"", ""S"" FROM SNOWPARK_TEMP_TABLE_KL9Z2OB1P2READONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
36631,tests.integ.modin.tools.test_to_numeric,test_to_numeric_errors[raise],AssertionError: exception type <class 'ValueError'> does not match with expected type <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
36632,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_case2_non_numeric_index[None-True],ValueError: cannot reindex on an axis with duplicate labels,failed
36636,tests.integ.modin.tools.test_to_numeric,test_to_numeric_errors_dtype[ignore-0-input0],"AssertionError: assert dtype('O') == dtype('float64')
 +  where dtype('O') = 0    apple\n1      1.0\n2        2\n3       -3\ndtype: object.dtype
 +  and   dtype('float64') = <class 'numpy.dtype'>('float64')
 +    where <class 'numpy.dtype'> = np.dtype",failed
36638,tests.integ.modin.tools.test_to_numeric,test_to_numeric_errors_dtype[ignore-0-input1],"AssertionError: assert dtype('O') == dtype('float64')
 +  where dtype('O') = 0       1\n1    NULL\n2       3\ndtype: object.dtype
 +  and   dtype('float64') = <class 'numpy.dtype'>('float64')
 +    where <class 'numpy.dtype'> = np.dtype",failed
36641,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_case2_non_numeric_index[None-False],ValueError: cannot reindex on an axis with duplicate labels,failed
36650,tests.integ.modin.tools.test_to_numeric,test_1darray[input1-int64],"AssertionError: Attributes of Series are different

Attribute ""dtype"" are different
[left]:  int8
[right]: int64",failed
36651,tests.integ.modin.tools.test_to_numeric,test_1darray[input2-float64],"AssertionError: Attributes of Series are different

Attribute ""dtype"" are different
[left]:  Int64
[right]: float64",failed
36654,tests.integ.modin.tools.test_to_numeric,test_datetime_like[ignore],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36661,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_case2_non_numeric_index[3.14-True],ValueError: cannot reindex on an axis with duplicate labels,failed
36664,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_case2_non_numeric_index[3.14-False],ValueError: cannot reindex on an axis with duplicate labels,failed
36665,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_case3[0-0],Failed: DID NOT RAISE <class 'AssertionError'>,failed
36666,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_case3[0-1],Failed: DID NOT RAISE <class 'AssertionError'>,failed
36678,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_case3[xyz-0],Failed: DID NOT RAISE <class 'AssertionError'>,failed
36690,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_case3[xyz-1],Failed: DID NOT RAISE <class 'AssertionError'>,failed
36691,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_case3[None-0],Failed: DID NOT RAISE <class 'AssertionError'>,failed
36696,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_case3[3.14-0],Failed: DID NOT RAISE <class 'AssertionError'>,failed
36697,tests.integ.modin.series.test_to_view,test_to_view_multiple_sessions_enforce_ordering_raises[method],"NotImplementedError: Modin supports the method Series.to_view on the Snowflake backend, but not on the backend Pandas.",failed
36698,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_case3[3.14-1],Failed: DID NOT RAISE <class 'AssertionError'>,failed
36704,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_case4_negative[0-True],Snowflake type casting error caused due to comparison of different types with IFF.,xfailed
36707,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[False-True-read_with_table_name-],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54f-0e11-6dc3-000c-a90c0e898d73, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_A5ZUBFA4AVREADONLY CLONE SNOWPARK_TEMP_TABLE_772R0LUTTYTESTTABLENAME), QueryRecord(query_id=01bed54f-0e11-71c8-000c-a90c0e89bc23, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_A5ZUBFA4AVREADONLY) LIMIT 1), QueryRecord(query_id=01bed54f-0e11-71dd-000c-a90c0e8a936b, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL1"", ""S"" FROM SNOWPARK_TEMP_TABLE_A5ZUBFA4AVREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
36710,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_case4_negative[0-False],Snowflake type casting error caused due to comparison of different types with IFF.,xfailed
36727,tests.integ.modin.tools.test_to_datetime,test_to_datetime_df_fallback[sample0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36731,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_case4_negative[xyz-True],Snowflake type casting error caused due to comparison of different types with IFF.,xfailed
36738,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_case4_negative[xyz-False],Snowflake type casting error caused due to comparison of different types with IFF.,xfailed
36743,tests.integ.modin.series.test_apply_and_map,test_3rd_party_package_mix_and_match[udf_packages0-session_packages0-apply],TODO: SNOW-1478188 Re-enable quarantined tests for 8.23,xfailed
36747,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_case4_negative[None-True],Snowflake type casting error caused due to comparison of different types with IFF.,xfailed
36757,tests.integ.modin.tools.test_to_datetime,test_to_datetime_df_negative,Failed: DID NOT RAISE <class 'ValueError'>,failed
36760,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[False-True-read_with_table_name-temporary],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54f-0e11-6d76-000c-a90c0e89f9e3, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_L7XJEGYFHXREADONLY CLONE SNOWPARK_TEMP_TABLE_L4A4C5M37BTESTTABLENAME), QueryRecord(query_id=01bed54f-0e11-6bde-000c-a90c0e8a0bcb, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_L7XJEGYFHXREADONLY) LIMIT 1), QueryRecord(query_id=01bed54f-0e11-71f1-000c-a90c0e8a3a53, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL1"", ""S"" FROM SNOWPARK_TEMP_TABLE_L7XJEGYFHXREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
36761,tests.integ.modin.series.test_to_view,test_to_view_multiple_sessions_enforce_ordering_raises[function],"NotImplementedError: Modin supports the method Series.to_view on the Snowflake backend, but not on the backend Pandas.",failed
36762,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_case4_negative[None-False],Snowflake type casting error caused due to comparison of different types with IFF.,xfailed
36765,tests.integ.modin.series.test_to_iceberg,test_to_iceberg_config_required[method],"AssertionError: Regex pattern did not match.
 Regex: ""missing 1 required keyword-only argument: 'iceberg_config'""
 Input: ""missing a required argument: 'iceberg_config'""",failed
36768,tests.integ.modin.series.test_to_iceberg,test_to_iceberg_config_required[function],"AssertionError: Regex pattern did not match.
 Regex: ""missing 1 required keyword-only argument: 'iceberg_config'""
 Input: ""missing a required argument: 'iceberg_config'""",failed
36771,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_case4_negative[3.14-True],Snowflake type casting error caused due to comparison of different types with IFF.,xfailed
36776,tests.integ.modin.series.test_setitem,test_series_setitem_boolean_key_and_scalar_item_case4_negative[3.14-False],Snowflake type casting error caused due to comparison of different types with IFF.,xfailed
36783,tests.integ.modin.series.test_apply_and_map,test_3rd_party_package_mix_and_match[udf_packages0-session_packages0-map],TODO: SNOW-1478188 Re-enable quarantined tests for 8.23,xfailed
36791,tests.integ.modin.series.test_to_list,test_to_list[data0],"AssertionError: assert 'The current operation leads to materialization' in ''
 +  where '' = <_pytest.logging.LogCaptureFixture object at 0x35a9b4a30>.text",failed
36794,tests.integ.modin.series.test_to_list,test_to_list[data1],"AssertionError: assert 'The current operation leads to materialization' in ''
 +  where '' = <_pytest.logging.LogCaptureFixture object at 0x35a902c80>.text",failed
36797,tests.integ.modin.series.test_to_list,test_to_list[data2],"AssertionError: assert 'The current operation leads to materialization' in ''
 +  where '' = <_pytest.logging.LogCaptureFixture object at 0x35aee3130>.text",failed
36799,tests.integ.modin.series.test_to_list,test_to_list[data3],"AssertionError: assert 'The current operation leads to materialization' in ''
 +  where '' = <_pytest.logging.LogCaptureFixture object at 0x35af17fa0>.text",failed
36802,tests.integ.modin.series.test_to_list,test_to_list[data4],"AssertionError: assert 'The current operation leads to materialization' in ''
 +  where '' = <_pytest.logging.LogCaptureFixture object at 0x35af16380>.text",failed
36804,tests.integ.modin.series.test_to_list,test_to_list[data5],"AssertionError: assert 'The current operation leads to materialization' in ''
 +  where '' = <_pytest.logging.LogCaptureFixture object at 0x35af15ff0>.text",failed
36806,tests.integ.modin.series.test_to_list,test_to_list[data6],"AssertionError: assert 'The current operation leads to materialization' in ''
 +  where '' = <_pytest.logging.LogCaptureFixture object at 0x35a900a60>.text",failed
36808,tests.integ.modin.series.test_to_list,test_to_list[data7],"AssertionError: assert 'The current operation leads to materialization' in ''
 +  where '' = <_pytest.logging.LogCaptureFixture object at 0x35aff0fd0>.text",failed
36810,tests.integ.modin.series.test_to_list,test_to_list[data8],"AssertionError: assert 'The current operation leads to materialization' in ''
 +  where '' = <_pytest.logging.LogCaptureFixture object at 0x35aee1c60>.text",failed
36812,tests.integ.modin.series.test_setitem,test_series_setitem_scalar_key_and_array_like_and_series_item[item1-a],"Failed: DID NOT RAISE (<class 'ValueError'>, <class 'NotImplementedError'>)",failed
36815,tests.integ.modin.series.test_to_list,test_to_list[data9],"AssertionError: assert 'The current operation leads to materialization' in ''
 +  where '' = <_pytest.logging.LogCaptureFixture object at 0x35aff03a0>.text",failed
36817,tests.integ.modin.series.test_to_list,test_to_list[data10],"AssertionError: assert 'The current operation leads to materialization' in ''
 +  where '' = <_pytest.logging.LogCaptureFixture object at 0x35ae5f5e0>.text",failed
36819,tests.integ.modin.series.test_setitem,test_series_setitem_scalar_key_and_array_like_and_series_item[item1-z],"Failed: DID NOT RAISE (<class 'ValueError'>, <class 'NotImplementedError'>)",failed
36825,tests.integ.modin.series.test_to_view,test_to_view_multiple_sessions_no_enforce_ordering[method],"NotImplementedError: Modin supports the method Series.to_view on the Snowflake backend, but not on the backend Pandas.",failed
36828,tests.integ.modin.tools.test_to_datetime,test_to_datetime_unit_negative,AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'ValueError'>,failed
36831,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[False-True-read_with_table_name-transient],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed54f-0e11-6bfa-000c-a90c0e8a78d7, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_48J1B9CGNZREADONLY CLONE SNOWPARK_TEMP_TABLE_MWF5VDL447TESTTABLENAME), QueryRecord(query_id=01bed54f-0e11-6dc3-000c-a90c0e8af2ef, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_48J1B9CGNZREADONLY) LIMIT 1), QueryRecord(query_id=01bed54f-0e11-6e4d-000c-a90c0e8ad403, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL1"", ""S"" FROM SNOWPARK_TEMP_TABLE_48J1B9CGNZREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
36838,tests.integ.modin.tools.test_to_datetime,test_out_of_bound,SNOW-1170304: out of bounds datetime convert to datetime64[us] instead of raising error,xfailed
36842,tests.integ.modin.series.test_setitem,test_series_setitem_scalar_key_and_array_like_item_mixed_types[item0-0],"ValueError: could not broadcast input array from shape (4,) into shape (1, 1)",failed
36856,tests.integ.modin.series.test_setitem,test_series_setitem_scalar_key_and_array_like_item_mixed_types[item0-xyz],"ValueError: could not broadcast input array from shape (4,) into shape (1, 1)",failed
36860,tests.integ.modin.tools.test_to_numeric,test_series_to_numeric[None-None-float64],"AssertionError: assert dtype('int64') == 'float64'
 +  where dtype('int64') = Series([], dtype: int64).dtype
 +    where Series([], dtype: int64) = <function to_numeric at 0x314410670>(Series([], dtype: object))
 +      where <function to_numeric at 0x314410670> = pd.to_numeric",failed
36862,tests.integ.modin.series.test_to_view,test_to_view_multiple_sessions_no_enforce_ordering[function],"NotImplementedError: Modin supports the method Series.to_view on the Snowflake backend, but not on the backend Pandas.",failed
36864,tests.integ.modin.tools.test_to_numeric,test_series_to_numeric[input1-None-float64],"AssertionError: assert dtype('int64') == 'float64'
 +  where dtype('int64') = Series([], dtype: int64).dtype
 +    where Series([], dtype: int64) = <function to_numeric at 0x314410670>(Series([], dtype: object))
 +      where <function to_numeric at 0x314410670> = pd.to_numeric",failed
36866,tests.integ.modin.tools.test_to_numeric,test_series_to_numeric[input2-str-float64],"AssertionError: assert dtype('int64') == 'float64'
 +  where dtype('int64') = Series([], dtype: int64).dtype
 +    where Series([], dtype: int64) = <function to_numeric at 0x314410670>(Series([], dtype: object))
 +      where <function to_numeric at 0x314410670> = pd.to_numeric",failed
36878,tests.integ.modin.series.test_setitem,test_series_setitem_scalar_key_and_array_like_item_mixed_types[item0-None],"ValueError: could not broadcast input array from shape (4,) into shape (1, 1)",failed
36894,tests.integ.modin.series.test_setitem,test_series_setitem_scalar_key_and_array_like_item_mixed_types[item0-3.14],"ValueError: could not broadcast input array from shape (4,) into shape (1, 1)",failed
36901,tests.integ.modin.series.test_setitem,test_series_setitem_scalar_key_and_array_like_item_mixed_types[item1-0],"ValueError: could not broadcast input array from shape (4,) into shape (1, 1)",failed
36903,tests.integ.modin.series.test_to_view,test_to_view_index[method-True-None-expected_index_columns0],"NotImplementedError: Modin supports the method Series.to_view on the Snowflake backend, but not on the backend Pandas.",failed
36905,tests.integ.modin.series.test_setitem,test_series_setitem_scalar_key_and_array_like_item_mixed_types[item1-xyz],"ValueError: could not broadcast input array from shape (4,) into shape (1, 1)",failed
36910,tests.integ.modin.series.test_setitem,test_series_setitem_scalar_key_and_array_like_item_mixed_types[item1-None],"ValueError: could not broadcast input array from shape (4,) into shape (1, 1)",failed
36916,tests.integ.modin.series.test_setitem,test_series_setitem_scalar_key_and_array_like_item_mixed_types[item1-3.14],"ValueError: could not broadcast input array from shape (4,) into shape (1, 1)",failed
36920,tests.integ.modin.series.test_setitem,test_series_setitem_scalar_key_and_array_like_item_mixed_types[item2-0],"ValueError: could not broadcast input array from shape (5,) into shape (1, 1)",failed
36924,tests.integ.modin.series.test_setitem,test_series_setitem_scalar_key_and_array_like_item_mixed_types[item2-xyz],"ValueError: could not broadcast input array from shape (5,) into shape (1, 1)",failed
36926,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[False-True-read_with_table_name-view],"assert 4 == 2
 +  where 4 = len([QueryRecord(query_id=01bed54f-0e11-71d7-000c-a90c0e8b40eb, sql_text=CREATE OR REPLACE TEMPORARY TABLE SNOWPARK_TEMP_TABLE_2T0TWLIRXU AS SELECT * FROM SNOWPARK_TEMP_VIEW_73BSR4XZ2G), QueryRecord(query_id=01bed54f-0e11-6d76-000c-a90c0e89ff5f, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_TELJKVNZMHREADONLY CLONE SNOWPARK_TEMP_TABLE_2T0TWLIRXU), QueryRecord(query_id=01bed54f-0e11-6bde-000c-a90c0e8b617b, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_TELJKVNZMHREADONLY) LIMIT 1), QueryRecord(query_id=01bed54f-0e11-71f1-000c-a90c0e8ba03b, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL1"", ""S"" FROM SNOWPARK_TEMP_TABLE_TELJKVNZMHREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
36929,tests.integ.modin.series.test_setitem,test_series_setitem_scalar_key_and_array_like_item_mixed_types[item2-None],"ValueError: could not broadcast input array from shape (5,) into shape (1, 1)",failed
36948,tests.integ.modin.series.test_setitem,test_series_setitem_scalar_key_and_array_like_item_mixed_types[item2-3.14],"ValueError: could not broadcast input array from shape (5,) into shape (1, 1)",failed
36957,tests.integ.modin.test_sql_counter,test_sql_counter_with_context_manager_inside_loop,Failed: DID NOT RAISE <class 'AssertionError'>,failed
36961,tests.integ.modin.series.test_to_view,test_to_view_index[method-True-index_labels1-expected_index_columns1],"NotImplementedError: Modin supports the method Series.to_view on the Snowflake backend, but not on the backend Pandas.",failed
36965,tests.integ.modin.series.test_setitem,test_series_setitem_scalar_key_and_array_like_item_mixed_types[item3-0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36973,tests.integ.modin.test_sql_counter,test_high_sql_count_fail,"[XPASS(strict)] We expect this to fail, but we don't treat as a hard failure since it is validating expect_high_count=False",failed
36974,tests.integ.modin.test_sql_counter,test_high_sql_count_expect_high_count_no_reason,[XPASS(strict)] We expect this to fail since no high_count_reason was provided,failed
36975,tests.integ.modin.test_sql_counter,test_counter_not_required,,xfailed
36976,tests.integ.modin.test_sql_counter,test_inaccurate_counter_not_checked,,xfailed
36983,tests.integ.modin.series.test_setitem,test_series_setitem_scalar_key_and_array_like_item_mixed_types[item3-xyz],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36987,tests.integ.modin.series.test_setitem,test_series_setitem_scalar_key_and_array_like_item_mixed_types[item3-None],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36990,tests.integ.modin.series.test_setitem,test_series_setitem_scalar_key_and_array_like_item_mixed_types[item3-3.14],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
36997,tests.integ.modin.series.test_setitem,test_series_setitem_scalar_key_and_series_item_negative[item0-0],Failed: DID NOT RAISE <class 'ValueError'>,failed
37004,tests.integ.modin.series.test_setitem,test_series_setitem_scalar_key_and_series_item_negative[item0-xyz],Failed: DID NOT RAISE <class 'ValueError'>,failed
37009,tests.integ.modin.series.test_setitem,test_series_setitem_scalar_key_and_series_item_negative[item0-None],Failed: DID NOT RAISE <class 'ValueError'>,failed
37014,tests.integ.modin.series.test_setitem,test_series_setitem_scalar_key_and_series_item_negative[item0-3.14],Failed: DID NOT RAISE <class 'ValueError'>,failed
37022,tests.integ.modin.series.test_setitem,test_series_setitem_scalar_key_and_df_item_mixed_types_negative[item0-0],Failed: DID NOT RAISE <class 'ValueError'>,failed
37028,tests.integ.modin.series.test_setitem,test_series_setitem_scalar_key_and_df_item_mixed_types_negative[item0-xyz],Failed: DID NOT RAISE <class 'ValueError'>,failed
37034,tests.integ.modin.series.test_setitem,test_series_setitem_scalar_key_and_df_item_mixed_types_negative[item0-None],Failed: DID NOT RAISE <class 'ValueError'>,failed
37040,tests.integ.modin.series.test_setitem,test_series_setitem_scalar_key_and_df_item_mixed_types_negative[item0-3.14],Failed: DID NOT RAISE <class 'ValueError'>,failed
37044,tests.integ.modin.series.test_setitem,test_series_setitem_array_like_and_series_key_and_scalar_item[abc-key0],Failed: DID NOT RAISE <class 'AssertionError'>,failed
37046,tests.integ.modin.series.test_to_view,test_to_view_index[method-False-None-expected_index_columns2],"NotImplementedError: Modin supports the method Series.to_view on the Snowflake backend, but not on the backend Pandas.",failed
37053,tests.integ.modin.series.test_setitem,test_series_setitem_array_like_and_series_key_and_scalar_item[abc-key1],Failed: DID NOT RAISE <class 'AssertionError'>,failed
37069,tests.integ.modin.test_telemetry,test_snowpark_pandas_telemetry_standalone_function_decorator,AttributeError: 'NativeQueryCompiler' object has no attribute 'snowpark_pandas_api_calls',failed
37071,tests.integ.modin.series.test_setitem,test_series_setitem_slice_item_negative[1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
37073,tests.integ.modin.test_telemetry,test_standalone_api_telemetry,AttributeError: 'NativeQueryCompiler' object has no attribute 'snowpark_pandas_api_calls',failed
37075,tests.integ.modin.test_telemetry,test_snowpark_pandas_telemetry_method_decorator,AttributeError: 'NativeQueryCompiler' object has no attribute 'snowpark_pandas_api_calls',failed
37077,tests.integ.modin.series.test_setitem,test_series_setitem_slice_item_negative[12],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
37084,tests.integ.modin.series.test_setitem,test_series_setitem_slice_item_negative[key2],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
37085,tests.integ.modin.test_telemetry,test_modin_telemetry_send_immediately,assert False,failed
37094,tests.integ.modin.series.test_setitem,test_series_setitem_slice_item_negative[key3],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
37098,tests.integ.modin.test_telemetry,test_modin_telemetry_time_passed,TypeError: unsupported operand type(s) for +: 'datetime.time' and 'datetime.time',failed
37103,tests.integ.modin.test_telemetry,test_property_methods_telemetry,SNOW-2031975: Investigate why no telemetry is reported for accessor properties,xfailed
37106,tests.integ.modin.test_telemetry,test_telemetry_with_update_inplace,AttributeError: 'NativeQueryCompiler' object has no attribute 'snowpark_pandas_api_calls',failed
37107,tests.integ.modin.test_telemetry,test_telemetry_with_resample,AttributeError: 'NativeQueryCompiler' object has no attribute 'snowpark_pandas_api_calls',failed
37109,tests.integ.modin.test_telemetry,test_telemetry_with_groupby,AttributeError: 'NativeQueryCompiler' object has no attribute 'snowpark_pandas_api_calls',failed
37111,tests.integ.modin.test_telemetry,test_telemetry_with_rolling,AttributeError: 'NativeQueryCompiler' object has no attribute 'snowpark_pandas_api_calls',failed
37112,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[False-True-read_with_table_name-SECURE VIEW],"assert 4 == 2
 +  where 4 = len([QueryRecord(query_id=01bed54f-0e11-6ce4-000c-a90c0e8acb03, sql_text=CREATE OR REPLACE TEMPORARY TABLE SNOWPARK_TEMP_TABLE_XFDDTTVOR0 AS SELECT * FROM SNOWPARK_TEMP_VIEW_L9MX2QWVS3), QueryRecord(query_id=01bed54f-0e11-71c8-000c-a90c0e8b2663, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_MG0UOHJG0RREADONLY CLONE SNOWPARK_TEMP_TABLE_XFDDTTVOR0), QueryRecord(query_id=01bed54f-0e11-7168-000c-a90c0e8b83ab, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_MG0UOHJG0RREADONLY) LIMIT 1), QueryRecord(query_id=01bed54f-0e11-719e-000c-a90c0e8b7587, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL1"", ""S"" FROM SNOWPARK_TEMP_TABLE_MG0UOHJG0RREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
37113,tests.integ.modin.test_telemetry,test_telemetry_getitem_setitem,AttributeError: 'NativeQueryCompiler' object has no attribute 'snowpark_pandas_api_calls',failed
37116,tests.integ.modin.test_telemetry,test_telemetry_private_method[__repr__-DataFrame.__repr__-<lambda>-1],IndexError: list index out of range,failed
37118,tests.integ.modin.test_telemetry,test_telemetry_private_method[__iter__-DataFrame.DataFrame.__iter__-<lambda>-0],IndexError: list index out of range,failed
37119,tests.integ.modin.test_telemetry,test_telemetry_private_method[__dataframe__-DataFrame.__dataframe__-<lambda>-1],IndexError: list index out of range,failed
37120,tests.integ.modin.test_telemetry,test_telemetry_property_index,IndexError: list index out of range,failed
37122,tests.integ.modin.test_telemetry,test_telemetry_property_iloc[iloc-<lambda>-1-0],"assert 0 == 1
 +  where 0 = len([])",failed
37124,tests.integ.modin.test_telemetry,test_telemetry_property_iloc[loc-<lambda>-2-2],"assert 0 == 1
 +  where 0 = len([])",failed
37125,tests.integ.modin.test_telemetry,test_telemetry_property_missing_methods[set-iloc-_set_iloc-setter],AttributeError: 'NativeQueryCompiler' object has no attribute 'snowpark_pandas_api_calls',failed
37126,tests.integ.modin.test_telemetry,test_telemetry_property_missing_methods[delete-iloc-_del_iloc-deleter],AttributeError: 'NativeQueryCompiler' object has no attribute 'snowpark_pandas_api_calls',failed
37128,tests.integ.modin.test_telemetry,test_telemetry_repr,IndexError: list index out of range,failed
37129,tests.integ.modin.test_telemetry,test_telemetry_interchange_call_count,"assert 0 == 6
 +  where 0 = len([])",failed
37130,tests.integ.modin.types.test_timedelta_indexing,test_df_indexing_get_timedelta[key4-1-0-False],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
37131,tests.integ.modin.series.test_setitem,test_series_setitem_df_key_negative[0],"AssertionError: Regex pattern did not match.
 Regex: 'Snowpark pandas DataFrame cannot be used as an indexer with Series'
 Input: 'Index data must be 1-dimensional'",failed
37147,tests.integ.modin.test_telemetry,test_telemetry_func_call_count,"assert 0 == 4
 +  where 0 = len([])",failed
37149,tests.integ.modin.test_telemetry,test_telemetry_multiple_func_call_count,IndexError: list index out of range,failed
37151,tests.integ.modin.series.test_setitem,test_series_setitem_df_key_negative[item1],"AssertionError: Regex pattern did not match.
 Regex: 'Snowpark pandas DataFrame cannot be used as an indexer with Series'
 Input: 'Index data must be 1-dimensional'",failed
37152,tests.integ.modin.test_telemetry,test_telemetry_copy,AttributeError: 'NativeQueryCompiler' object has no attribute 'snowpark_pandas_api_calls',failed
37153,tests.integ.modin.test_telemetry,test_telemetry_series_describe,AttributeError: 'NativeQueryCompiler' object has no attribute 'snowpark_pandas_api_calls',failed
37156,tests.integ.modin.series.test_to_view,test_to_view_index[method-False-index_labels3-expected_index_columns3],"NotImplementedError: Modin supports the method Series.to_view on the Snowflake backend, but not on the backend Pandas.",failed
37158,tests.integ.modin.test_telemetry,test_telemetry_series_isin,AttributeError: 'NativeQueryCompiler' object has no attribute 'snowpark_pandas_api_calls',failed
37159,tests.integ.modin.test_telemetry,test_telemetry_quantile,AttributeError: 'NativeQueryCompiler' object has no attribute 'snowpark_pandas_api_calls',failed
37162,tests.integ.modin.test_telemetry,test_telemetry_cache_result,"NotImplementedError: Modin supports the method Series.cache_result on the Snowflake backend, but not on the backend Pandas.",failed
37163,tests.integ.modin.test_telemetry,test_telemetry_read_json,AttributeError: 'NativeQueryCompiler' object has no attribute 'snowpark_pandas_api_calls',failed
37165,tests.integ.modin.test_telemetry,test_modin_e2e_telemetry_remote,"AssertionError: assert 'Pandas' == 'Snowflake'
  - Snowflake
  + Pandas",failed
37169,tests.integ.modin.types.test_timedelta_indexing,test_df_indexing_get_timedelta[key11-1-0-False],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
37171,tests.integ.modin.test_telemetry,test_modin_e2e_telemetry_auto_switch,"AssertionError: Modin API telemetry for was not sent.
assert False",failed
37181,tests.integ.modin.series.test_setitem,test_series_setitem_df_key_negative[item2],"AssertionError: Regex pattern did not match.
 Regex: 'Snowpark pandas DataFrame cannot be used as an indexer with Series'
 Input: 'Index data must be 1-dimensional'",failed
37205,tests.integ.modin.types.test_timedelta_indexing,test_df_indexing_set_timedelta[item0],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
37211,tests.integ.modin.series.test_setitem,test_series_setitem_array_like_key_and_scalar_item_mixed_types[0-key1],Failed: DID NOT RAISE <class 'AssertionError'>,failed
37212,tests.integ.modin.types.test_timedelta_indexing,test_df_indexing_set_timedelta[None],"ValueError:
Location based indexing can only have [integer, integer slice (START point is
INCLUDED, END point is EXCLUDED), listlike of integers, boolean array] types.",failed
37216,tests.integ.modin.types.test_timedelta_indexing,test_df_indexing_set_timedelta_with_other_type,Failed: DID NOT RAISE <class 'snowflake.snowpark.exceptions.SnowparkSQLException'>,failed
37220,tests.integ.modin.window.test_expanding,test_expanding_aggregation_dataframe_unsupported[median-None],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
37224,tests.integ.modin.window.test_expanding,test_expanding_aggregation_dataframe_unsupported[corr-None],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
37227,tests.integ.modin.window.test_expanding,test_expanding_aggregation_dataframe_unsupported[cov-None],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
37229,tests.integ.modin.types.test_timedelta_indexing,test_df_indexing_enlargement_timedelta[item1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
37231,tests.integ.modin.window.test_expanding,test_expanding_aggregation_dataframe_unsupported[skew-None],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
37234,tests.integ.modin.window.test_expanding,test_expanding_aggregation_dataframe_unsupported[kurt-None],TypeError: Expanding.kurt() takes 1 positional argument but 2 were given,failed
37236,tests.integ.modin.window.test_expanding,test_expanding_aggregation_dataframe_unsupported[apply-min],AttributeError: 'Expanding' object has no attribute 'apply',failed
37237,tests.integ.modin.window.test_expanding,test_expanding_aggregation_dataframe_unsupported[aggregate-min],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
37239,tests.integ.modin.window.test_expanding,test_expanding_aggregation_dataframe_unsupported[quantile-0.5],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
37243,tests.integ.modin.window.test_expanding,test_expanding_aggregation_dataframe_unsupported[rank-None],ValueError: Method 'None' is not supported,failed
37257,tests.integ.modin.window.test_expanding,test_expanding_aggregation_series_unsupported[median-None],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
37269,tests.integ.modin.window.test_expanding,test_expanding_aggregation_series_unsupported[corr-None],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
37274,tests.integ.modin.series.test_to_view,test_to_view_index[function-True-None-expected_index_columns0],"NotImplementedError: Modin supports the method Series.to_view on the Snowflake backend, but not on the backend Pandas.",failed
37285,tests.integ.modin.window.test_expanding,test_expanding_aggregation_series_unsupported[cov-None],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
37307,tests.integ.modin.window.test_expanding,test_expanding_aggregation_series_unsupported[skew-None],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
37315,tests.integ.modin.window.test_expanding,test_expanding_aggregation_series_unsupported[kurt-None],TypeError: Expanding.kurt() takes 1 positional argument but 2 were given,failed
37316,tests.integ.modin.series.test_setitem,test_series_setitem_array_like_key_and_scalar_item_mixed_types[xyz-key0],Failed: DID NOT RAISE <class 'AssertionError'>,failed
37317,tests.integ.modin.window.test_expanding,test_expanding_aggregation_series_unsupported[apply-min],AttributeError: 'Expanding' object has no attribute 'apply',failed
37319,tests.integ.modin.window.test_expanding,test_expanding_aggregation_series_unsupported[aggregate-min],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
37320,tests.integ.modin.types.test_timedelta_indexing,test_index_get_timedelta[key1-2],AssertionError,failed
37321,tests.integ.modin.window.test_expanding,test_expanding_aggregation_series_unsupported[quantile-0.5],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
37322,tests.integ.modin.series.test_setitem,test_series_setitem_array_like_key_and_scalar_item_mixed_types[xyz-key1],Failed: DID NOT RAISE <class 'AssertionError'>,failed
37324,tests.integ.modin.window.test_expanding,test_expanding_aggregation_series_unsupported[rank-None],ValueError: Method 'None' is not supported,failed
37327,tests.integ.modin.window.test_expanding,test_expanding_aggregation_unsupported[sum-dataframe],"AssertionError: Regex pattern did not match.
 Regex: '(?:No\\ numeric\\ types\\ to\\ aggregate)|(?:No\\ numeric\\ types\\ to\\ aggregate)'
 Input: 'Cannot aggregate non-numeric type: timedelta64[ns]'",failed
37328,tests.integ.modin.series.test_setitem,test_series_setitem_array_like_key_and_scalar_item_mixed_types[xyz-key3],Failed: DID NOT RAISE <class 'AssertionError'>,failed
37329,tests.integ.modin.window.test_expanding,test_expanding_aggregation_unsupported[sum-series],"AssertionError: Regex pattern did not match.
 Regex: '(?:No\\ numeric\\ types\\ to\\ aggregate)|(?:No\\ numeric\\ types\\ to\\ aggregate)'
 Input: 'Cannot aggregate non-numeric type: timedelta64[ns]'",failed
37331,tests.integ.modin.window.test_expanding,test_expanding_aggregation_unsupported[mean-dataframe],"AssertionError: Regex pattern did not match.
 Regex: '(?:No\\ numeric\\ types\\ to\\ aggregate)|(?:No\\ numeric\\ types\\ to\\ aggregate)'
 Input: 'Cannot aggregate non-numeric type: timedelta64[ns]'",failed
37333,tests.integ.modin.frame.test_setitem,test_df_setitem_bool_2d_key_scalar_value[df_key-key_has_less_cols],"AssertionError: DataFrame.iloc[:, 2] (column name=""c"") are different

DataFrame.iloc[:, 2] (column name=""c"") values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [-1, -1, -1]
[right]: [7, 8, 8]",failed
37335,tests.integ.modin.window.test_expanding,test_expanding_aggregation_unsupported[mean-series],"AssertionError: Regex pattern did not match.
 Regex: '(?:No\\ numeric\\ types\\ to\\ aggregate)|(?:No\\ numeric\\ types\\ to\\ aggregate)'
 Input: 'Cannot aggregate non-numeric type: timedelta64[ns]'",failed
37337,tests.integ.modin.frame.test_setitem,test_df_setitem_bool_2d_key_scalar_value[df_key-key_has_less_rows],"AssertionError: DataFrame.iloc[:, 0] (column name=""a"") are different

DataFrame.iloc[:, 0] (column name=""a"") values are different (33.33333 %)
[index]: [0, 1, 2]
[left]:  [1, -1, -1]
[right]: [1, -1, 3]",failed
37339,tests.integ.modin.window.test_expanding,test_expanding_aggregation_unsupported[var-dataframe],"AssertionError: Regex pattern did not match.
 Regex: '(?:No\\ numeric\\ types\\ to\\ aggregate)|(?:No\\ numeric\\ types\\ to\\ aggregate)'
 Input: 'Cannot aggregate non-numeric type: timedelta64[ns]'",failed
37340,tests.integ.modin.frame.test_setitem,test_df_setitem_bool_2d_key_scalar_value[array_key-key_has_more_cols],ValueError: Array must be same shape as DataFrame,failed
37342,tests.integ.modin.window.test_expanding,test_expanding_aggregation_unsupported[var-series],"AssertionError: Regex pattern did not match.
 Regex: '(?:No\\ numeric\\ types\\ to\\ aggregate)|(?:No\\ numeric\\ types\\ to\\ aggregate)'
 Input: 'Cannot aggregate non-numeric type: timedelta64[ns]'",failed
37344,tests.integ.modin.frame.test_setitem,test_df_setitem_bool_2d_key_scalar_value[array_key-key_has_less_cols],ValueError: Array must be same shape as DataFrame,failed
37345,tests.integ.modin.window.test_expanding,test_expanding_aggregation_unsupported[std-dataframe],"AssertionError: Regex pattern did not match.
 Regex: '(?:No\\ numeric\\ types\\ to\\ aggregate)|(?:No\\ numeric\\ types\\ to\\ aggregate)'
 Input: 'Cannot aggregate non-numeric type: timedelta64[ns]'",failed
37347,tests.integ.modin.frame.test_setitem,test_df_setitem_bool_2d_key_scalar_value[array_key-key_has_more_rows],ValueError: Array must be same shape as DataFrame,failed
37348,tests.integ.modin.window.test_expanding,test_expanding_aggregation_unsupported[std-series],"AssertionError: Regex pattern did not match.
 Regex: '(?:No\\ numeric\\ types\\ to\\ aggregate)|(?:No\\ numeric\\ types\\ to\\ aggregate)'
 Input: 'Cannot aggregate non-numeric type: timedelta64[ns]'",failed
37351,tests.integ.modin.frame.test_setitem,test_df_setitem_bool_2d_key_scalar_value[array_key-key_has_less_rows],ValueError: Array must be same shape as DataFrame,failed
37354,tests.integ.modin.window.test_expanding,test_expanding_aggregation_unsupported[min-dataframe],"AssertionError: Regex pattern did not match.
 Regex: '(?:No\\ numeric\\ types\\ to\\ aggregate)|(?:No\\ numeric\\ types\\ to\\ aggregate)'
 Input: 'Cannot aggregate non-numeric type: timedelta64[ns]'",failed
37355,tests.integ.modin.frame.test_setitem,test_df_setitem_bool_2d_key_df_value_mismatched_column_labels[df_key-key_has_less_cols],"AssertionError: DataFrame.iloc[:, 2] (column name=""c"") are different

DataFrame.iloc[:, 2] (column name=""c"") values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [nan, nan, nan]
[right]: [7, 8, 8]",failed
37359,tests.integ.modin.window.test_expanding,test_expanding_aggregation_unsupported[min-series],"AssertionError: Regex pattern did not match.
 Regex: '(?:No\\ numeric\\ types\\ to\\ aggregate)|(?:No\\ numeric\\ types\\ to\\ aggregate)'
 Input: 'Cannot aggregate non-numeric type: timedelta64[ns]'",failed
37360,tests.integ.modin.frame.test_setitem,test_df_setitem_bool_2d_key_df_value_mismatched_column_labels[df_key-key_has_less_rows],"AssertionError: DataFrame.iloc[:, 0] (column name=""a"") are different

DataFrame.iloc[:, 0] (column name=""a"") values are different (33.33333 %)
[index]: [0, 1, 2]
[left]:  [1.0, nan, nan]
[right]: [1.0, nan, 3.0]
At positional index 2, first diff: nan != 3.0",failed
37362,tests.integ.modin.types.test_timedelta,test_timedelta_not_supported,TypeError: 'PrettyDict' object is not callable,failed
37364,tests.integ.modin.window.test_expanding,test_expanding_aggregation_unsupported[max-dataframe],"AssertionError: Regex pattern did not match.
 Regex: '(?:No\\ numeric\\ types\\ to\\ aggregate)|(?:No\\ numeric\\ types\\ to\\ aggregate)'
 Input: 'Cannot aggregate non-numeric type: timedelta64[ns]'",failed
37365,tests.integ.modin.frame.test_setitem,test_df_setitem_bool_2d_key_df_value_mismatched_column_labels[array_key-key_has_more_cols],ValueError: Array must be same shape as DataFrame,failed
37366,tests.integ.modin.series.test_setitem,test_series_setitem_array_like_key_and_scalar_item_mixed_types[None-key1],Failed: DID NOT RAISE <class 'AssertionError'>,failed
37369,tests.integ.modin.window.test_expanding,test_expanding_aggregation_unsupported[max-series],"AssertionError: Regex pattern did not match.
 Regex: '(?:No\\ numeric\\ types\\ to\\ aggregate)|(?:No\\ numeric\\ types\\ to\\ aggregate)'
 Input: 'Cannot aggregate non-numeric type: timedelta64[ns]'",failed
37370,tests.integ.modin.frame.test_setitem,test_df_setitem_bool_2d_key_df_value_mismatched_column_labels[array_key-key_has_less_cols],ValueError: Array must be same shape as DataFrame,failed
37373,tests.integ.modin.frame.test_setitem,test_df_setitem_bool_2d_key_df_value_mismatched_column_labels[array_key-key_has_more_rows],ValueError: Array must be same shape as DataFrame,failed
37375,tests.integ.modin.series.test_setitem,test_series_setitem_array_like_key_and_scalar_item_mixed_types[None-key3],Failed: DID NOT RAISE <class 'AssertionError'>,failed
37376,tests.integ.modin.frame.test_setitem,test_df_setitem_bool_2d_key_df_value_mismatched_column_labels[array_key-key_has_less_rows],ValueError: Array must be same shape as DataFrame,failed
37379,tests.integ.modin.frame.test_setitem,test_df_setitem_bool_2d_key_df_value_mismatched_index_labels[df_key-key_has_less_cols],"AssertionError: DataFrame.iloc[:, 2] (column name=""c"") are different

DataFrame.iloc[:, 2] (column name=""c"") values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [nan, nan, nan]
[right]: [7, 8, 8]",failed
37381,tests.integ.modin.frame.test_setitem,test_df_setitem_bool_2d_key_df_value_mismatched_index_labels[df_key-key_has_less_rows],"AssertionError: DataFrame.iloc[:, 0] (column name=""a"") are different

DataFrame.iloc[:, 0] (column name=""a"") values are different (33.33333 %)
[index]: [0, 1, 2]
[left]:  [1.0, nan, nan]
[right]: [1.0, nan, 3.0]
At positional index 2, first diff: nan != 3.0",failed
37384,tests.integ.modin.types.test_timedelta_indexing,test_index_get_timedelta[key3-1],AssertionError,failed
37386,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[False-True-read_with_table_name-TEMP VIEW],"assert 4 == 2
 +  where 4 = len([QueryRecord(query_id=01bed54f-0e11-722e-000c-a90c0e8b19ef, sql_text=CREATE OR REPLACE TEMPORARY TABLE SNOWPARK_TEMP_TABLE_BJRIPNYLSC AS SELECT * FROM SNOWPARK_TEMP_VIEW_7UNF1S9LNU), QueryRecord(query_id=01bed54f-0e11-721e-000c-a90c0e8b39eb, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_HRIKAHR1NLREADONLY CLONE SNOWPARK_TEMP_TABLE_BJRIPNYLSC), QueryRecord(query_id=01bed54f-0e11-6bfa-000c-a90c0e8bb553, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_HRIKAHR1NLREADONLY) LIMIT 1), QueryRecord(query_id=01bed54f-0e11-6dc3-000c-a90c0e8aff53, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL1"", ""S"" FROM SNOWPARK_TEMP_TABLE_HRIKAHR1NLREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
37388,tests.integ.modin.series.test_to_view,test_to_view_index[function-True-index_labels1-expected_index_columns1],"NotImplementedError: Modin supports the method Series.to_view on the Snowflake backend, but not on the backend Pandas.",failed
37390,tests.integ.modin.frame.test_setitem,test_df_setitem_bool_2d_key_df_value_mismatched_index_labels[array_key-key_has_more_cols],ValueError: Array must be same shape as DataFrame,failed
37394,tests.integ.modin.frame.test_setitem,test_df_setitem_bool_2d_key_df_value_mismatched_index_labels[array_key-key_has_less_cols],ValueError: Array must be same shape as DataFrame,failed
37395,tests.integ.modin.frame.test_setitem,test_df_setitem_bool_2d_key_df_value_mismatched_index_labels[array_key-key_has_more_rows],ValueError: Array must be same shape as DataFrame,failed
37396,tests.integ.modin.series.test_setitem,test_series_setitem_array_like_key_and_scalar_item_mixed_types[3.14-key1],Failed: DID NOT RAISE <class 'AssertionError'>,failed
37399,tests.integ.modin.frame.test_setitem,test_df_setitem_bool_2d_key_df_value_mismatched_index_labels[array_key-key_has_less_rows],ValueError: Array must be same shape as DataFrame,failed
37404,tests.integ.modin.frame.test_setitem,test_df_setitem_bool_2d_key_df_value_matched_labels[df_key-key_has_less_cols],"AssertionError: DataFrame.iloc[:, 2] (column name=""c"") are different

DataFrame.iloc[:, 2] (column name=""c"") values are different (100.0 %)
[index]: [0, 1, 2]
[left]:  [-7, -8, -8]
[right]: [7, 8, 8]",failed
37407,tests.integ.modin.frame.test_setitem,test_df_setitem_bool_2d_key_df_value_matched_labels[df_key-key_has_less_rows],"AssertionError: DataFrame.iloc[:, 0] (column name=""a"") are different

DataFrame.iloc[:, 0] (column name=""a"") values are different (33.33333 %)
[index]: [0, 1, 2]
[left]:  [1, -2, -3]
[right]: [1, -2, 3]",failed
37423,tests.integ.modin.frame.test_setitem,test_df_setitem_bool_2d_key_df_value_matched_labels[array_key-key_has_more_cols],ValueError: Array must be same shape as DataFrame,failed
37426,tests.integ.modin.frame.test_setitem,test_df_setitem_bool_2d_key_df_value_matched_labels[array_key-key_has_less_cols],ValueError: Array must be same shape as DataFrame,failed
37428,tests.integ.modin.frame.test_setitem,test_df_setitem_bool_2d_key_df_value_matched_labels[array_key-key_has_more_rows],ValueError: Array must be same shape as DataFrame,failed
37429,tests.integ.modin.window.test_rolling,test_rolling_dataframe[True-1-4-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
37430,tests.integ.modin.frame.test_setitem,test_df_setitem_bool_2d_key_df_value_matched_labels[array_key-key_has_less_rows],ValueError: Array must be same shape as DataFrame,failed
37433,tests.integ.modin.frame.test_setitem,test_df_setitem_2d_bool_key_with_callable_value,"AssertionError: DataFrame.iloc[:, 0] (column name=""0"") are different

DataFrame.iloc[:, 0] (column name=""0"") values are different (33.33333 %)
[index]: [0, 1, 2]
[left]:  [1, 256, 7]
[right]: [1, 16, 7]",failed
37442,tests.integ.modin.series.test_setitem,test_series_setitem_series_list_like_item_key_and_item_with_duplicates[item0-key0],"AssertionError: Series are different

Series values are different (71.42857 %)
[index]: [0, 1, 2, 3, 4, 5, 6]
[left]:  [1, 4, 1, 0, 2, (1,), [1]]
[right]: [0, 1, 2, 3, 4, (1,), [1]]
At positional index 0, first diff: 1 != 0",failed
37445,tests.integ.modin.window.test_rolling,test_rolling_dataframe[True-1-6-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
37453,tests.integ.modin.series.test_setitem,test_series_setitem_series_list_like_item_key_and_item_with_duplicates[item0-key1],"AssertionError: Series are different

Series values are different (28.57143 %)
[index]: [0, 1, 2, 3, 4, 5, 6]
[left]:  [1, 1.1, True, a, 2, 3, 2]
[right]: [2, 1.1, True, a, 2, 3, 0]
At positional index 0, first diff: 1 != 2",failed
37456,tests.integ.modin.frame.test_setitem,test_df_setitem_2d_int_array_key_should_error,"ValueError: Boolean array expected for the condition, not int64",failed
37465,tests.integ.modin.frame.test_setitem,test_df_setitem_2d_bool_key_short_array_value,ValueError: other must be the same shape as self when an ndarray,failed
37466,tests.integ.modin.window.test_rolling,test_rolling_dataframe[True-None-4-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
37468,tests.integ.modin.window.test_rolling,test_rolling_dataframe[True-2-1-count],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'ValueError'>,failed
37475,tests.integ.modin.frame.test_setitem,test_df_setitem_2d_bool_key_1d_array_value,ValueError: other must be the same shape as self when an ndarray,failed
37482,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[False-False-read_with_select_*-],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54f-0e11-6e87-000c-a90c0e8bd5b3, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_EVSWZZL586TESTTABLENAME) LIMIT 1), QueryRecord(query_id=01bed54f-0e11-71d7-000c-a90c0e8b4d13, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL1"", ""S"" FROM (SNOWPARK_TEMP_TABLE_EVSWZZL586TESTTABLENAME)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
37483,tests.integ.modin.series.test_setitem,test_series_setitem_series_list_like_item_key_and_item_no_duplicates[item0-key0],"AssertionError: Series are different

Series values are different (71.42857 %)
[index]: [0, 1, 2, 3, 4, 5, 6]
[left]:  [1, 4, 0, 2, 3, (1,), [1]]
[right]: [0, 1, 2, 3, 4, (1,), [1]]
At positional index 0, first diff: 1 != 0",failed
37486,tests.integ.modin.frame.test_setitem,test_df_setitem_series_list_like_key_and_range_like_item_negative[item0-key0],TypeError: unhashable type: 'Series',failed
37487,tests.integ.modin.series.test_to_view,test_to_view_index[function-False-None-expected_index_columns2],"NotImplementedError: Modin supports the method Series.to_view on the Snowflake backend, but not on the backend Pandas.",failed
37489,tests.integ.modin.frame.test_setitem,test_df_setitem_series_list_like_key_and_range_like_item_negative[item0-key1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
37492,tests.integ.modin.frame.test_setitem,test_df_setitem_slice_item_negative[1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
37495,tests.integ.modin.frame.test_setitem,test_df_setitem_slice_item_negative[12],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
37497,tests.integ.modin.frame.test_setitem,test_df_setitem_slice_item_negative[key2],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
37499,tests.integ.modin.series.test_setitem,test_series_setitem_series_list_like_item_key_and_item_no_duplicates[item0-key1],"AssertionError: Series are different

Series values are different (71.42857 %)
[index]: [0, 1, 2, 3, 4, 5, 6]
[left]:  [1.0, 1.1, True, 2.0, 3.0, <NA>, <NA>]
[right]: [0, 1.1, True, 3, 1, 2, 4]
At positional index 0, first diff: 1.0 != 0",failed
37503,tests.integ.modin.window.test_rolling,test_rolling_dataframe[False-None-1-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
37506,tests.integ.modin.window.test_rolling,test_rolling_dataframe[True-None-6-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
37520,tests.integ.modin.frame.test_setitem,test_df_setitem_slice_item_negative[key3],TypeError: unhashable type: 'Series',failed
37524,tests.integ.modin.window.test_rolling,test_rolling_dataframe[False-None-2-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
37528,tests.integ.modin.tools.test_to_numeric,"test_unsupported_types[raise-bin binary-values ('48454C50'),('48454C50')-native_series4]",AssertionError: exception type <class 'ValueError'> does not match with expected type <class 'TypeError'>,failed
37530,tests.integ.modin.series.test_setitem,test_series_setitem_range_like_key_and_series_list_like_item[item0-key0],TypeError: boolean value of NA is ambiguous,failed
37533,tests.integ.modin.frame.test_setitem,test_df_setitem_2d_array[numpy_array-indexer3],TypeError: unhashable type: 'Series',failed
37540,tests.integ.modin.frame.test_setitem,test_df_setitem_2d_array[numpy_array-indexer4],TypeError: unhashable type: 'Series',failed
37547,tests.integ.modin.series.test_setitem,test_series_setitem_range_like_key_and_series_list_like_item[item0-key1],"AssertionError: Series are different

Series values are different (28.57143 %)
[index]: [0, 1, 2, 3, 4, 5, 6]
[left]:  [1, 21, True, a, <NA>, (1,), [1]]
[right]: [1, abc, True, a, 21, (1,), [1]]
At positional index 1, first diff: 21 != abc",failed
37548,tests.integ.modin.window.test_rolling,test_rolling_dataframe[False-None-3-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
37554,tests.integ.modin.frame.test_setitem,test_df_setitem_2d_array[native_list-indexer3],TypeError: unhashable type: 'Series',failed
37555,tests.integ.modin.window.test_rolling,test_rolling_dataframe[True-1-1-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
37563,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[False-False-read_with_select_*-temporary],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed54f-0e11-71f1-000c-a90c0e8baadb, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_E9N5CZSH94TESTTABLENAME) LIMIT 1), QueryRecord(query_id=01bed550-0e11-721e-000c-a90c0e8b3f67, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL1"", ""S"" FROM (SNOWPARK_TEMP_TABLE_E9N5CZSH94TESTTABLENAME)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
37567,tests.integ.modin.window.test_rolling,test_rolling_dataframe[False-None-4-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
37571,tests.integ.modin.series.test_to_view,test_to_view_index[function-False-index_labels3-expected_index_columns3],"NotImplementedError: Modin supports the method Series.to_view on the Snowflake backend, but not on the backend Pandas.",failed
37578,tests.integ.modin.frame.test_setitem,test_df_setitem_2d_array[native_list-indexer4],TypeError: unhashable type: 'Series',failed
37581,tests.integ.modin.frame.test_setitem,test_df_setitem_2d_array_timedelta_negative,[XPASS(strict)] SNOW-1738952,failed
37586,tests.integ.modin.frame.test_setitem,test_df_setitem_2d_array_row_length_no_match,"ValueError: could not broadcast input array from shape (5, 4) into shape (4, 4)",failed
37588,tests.integ.modin.frame.test_setitem,test_df_setitem_2d_array_col_length_no_match,"AssertionError: Regex pattern did not match.
 Regex: 'shape mismatch: the number of columns 3 from the item does not match with the number of columns 4 to set'
 Input: 'could not broadcast input array from shape (4, 3) into shape (4, 4)'",failed
37589,tests.integ.modin.window.test_rolling,test_rolling_dataframe[False-None-6-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
37591,tests.integ.modin.series.test_setitem,test_series_setitem_series_list_like_key_and_range_like_item_negative[item0-key0],"ValueError: could not broadcast input array from shape (7,) into shape (5, 1)",failed
37592,tests.integ.modin.window.test_rolling,test_rolling_dataframe[True-1-2-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
37598,tests.integ.modin.frame.test_setitem,test_df_setitem_2d_array_with_ffill_na_values_negative,"ValueError: could not broadcast input array from shape (2, 4) into shape (4, 4)",failed
37634,tests.integ.modin.window.test_expanding,test_expanding_aggregation_unsupported[sem-dataframe],"AssertionError: Regex pattern did not match.
 Regex: '(?:No\\ numeric\\ types\\ to\\ aggregate)|(?:No\\ numeric\\ types\\ to\\ aggregate)'
 Input: 'Cannot aggregate non-numeric type: timedelta64[ns]'",failed
37637,tests.integ.modin.window.test_rolling,test_rolling_dataframe[False-1-1-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
37638,tests.integ.modin.window.test_expanding,test_expanding_aggregation_unsupported[sem-series],"AssertionError: Regex pattern did not match.
 Regex: '(?:No\\ numeric\\ types\\ to\\ aggregate)|(?:No\\ numeric\\ types\\ to\\ aggregate)'
 Input: 'Cannot aggregate non-numeric type: timedelta64[ns]'",failed
37641,tests.integ.modin.frame.test_setitem,test_df_setitem_2D_key_series_value[array],"AssertionError: Regex pattern did not match.
 Regex: 'setitem with a 2D key does not support Series values.'
 Input: 'Must specify axis=0 or 1'",failed
37654,tests.integ.modin.window.test_rolling,test_rolling_dataframe[False-2-1-count],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'ValueError'>,failed
37663,tests.integ.modin.window.test_rolling,test_rolling_dataframe[True-1-3-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
37666,tests.integ.modin.window.test_rolling,test_rolling_dataframe[True-2-2-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
37669,tests.integ.modin.frame.test_setitem,test_df_setitem_2D_key_series_value[dataframe],"AssertionError: Regex pattern did not match.
 Regex: 'setitem with a 2D key does not support Series values.'
 Input: 'Must specify axis=0 or 1'",failed
37676,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[False-False-read_with_select_*-transient],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed550-0e11-6ce4-000c-a90c0e8c35eb, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_YFUP87J1KKTESTTABLENAME) LIMIT 1), QueryRecord(query_id=01bed550-0e11-6e2a-000c-a90c0e8bc9b3, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL1"", ""S"" FROM (SNOWPARK_TEMP_TABLE_YFUP87J1KKTESTTABLENAME)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
37677,tests.integ.modin.window.test_rolling,test_rolling_dataframe[False-1-2-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
37679,tests.integ.modin.window.test_rolling,test_rolling_dataframe[False-2-2-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
37701,tests.integ.modin.series.test_to_view,test_to_view_multiindex[method],"NotImplementedError: Modin supports the method Series.to_view on the Snowflake backend, but not on the backend Pandas.",failed
37704,tests.integ.modin.window.test_rolling,test_rolling_dataframe[False-2-3-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
37710,tests.integ.modin.window.test_rolling,test_rolling_dataframe[True-2-3-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
37722,tests.integ.modin.window.test_rolling,test_rolling_dataframe[False-1-3-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
37731,tests.integ.modin.window.test_rolling,test_rolling_dataframe[False-2-4-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
37781,tests.integ.modin.window.test_rolling,test_rolling_dataframe[True-None-1-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
37804,tests.integ.modin.window.test_rolling,test_rolling_dataframe[False-2-6-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
37840,tests.integ.modin.window.test_rolling,test_rolling_dataframe[True-2-4-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
37870,tests.integ.modin.window.test_rolling,test_rolling_dataframe[False-1-4-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
37894,tests.integ.modin.window.test_rolling,test_rolling_null_dataframe[True-None-1-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
37983,tests.integ.modin.window.test_rolling,test_rolling_dataframe[True-None-2-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
38010,tests.integ.modin.series.test_to_view,test_to_view_multiindex[function],"NotImplementedError: Modin supports the method Series.to_view on the Snowflake backend, but not on the backend Pandas.",failed
38019,tests.integ.modin.frame.test_shift,test_shift_unsupported_args[params0-periods],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38020,tests.integ.modin.frame.test_shift,test_shift_unsupported_args[params1-suffix],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38026,tests.integ.modin.window.test_rolling,test_rolling_dataframe[False-1-6-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
38028,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[False-False-read_with_select_*-view],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed550-0e11-6d08-000c-a90c0e8c189f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_VIEW_5EZZODZCV6) LIMIT 1), QueryRecord(query_id=01bed550-0e11-6e5e-000c-a90c0e8beaa7, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL1"", ""S"" FROM (SNOWPARK_TEMP_VIEW_5EZZODZCV6)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
38030,tests.integ.modin.window.test_rolling,test_rolling_dataframe[True-2-6-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
38040,tests.integ.modin.window.test_rolling,test_rolling_null_dataframe[True-None-6-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
38044,tests.integ.modin.window.test_rolling,test_rolling_dataframe[True-None-3-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
38053,tests.integ.modin.window.test_rolling,test_rolling_null_dataframe[True-None-2-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
38062,tests.integ.modin.window.test_rolling,test_rolling_null_dataframe[True-2-1-count],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'ValueError'>,failed
38064,tests.integ.modin.frame.test_size,test_dataframe_agg_size_axis_1[size],AssertionError: Got type: <class 'int'>,failed
38074,tests.integ.modin.window.test_rolling,test_rolling_null_dataframe[True-1-3-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
38084,tests.integ.modin.window.test_rolling,test_rolling_null_dataframe[True-2-2-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
38094,tests.integ.modin.window.test_rolling,test_rolling_null_dataframe[True-1-1-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
38107,tests.integ.modin.window.test_rolling,test_rolling_null_dataframe[True-None-3-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
38114,tests.integ.modin.frame.test_skew,test_skew_unsupported[unsupported0],AssertionError,failed
38116,tests.integ.modin.frame.test_skew,test_skew_unsupported[unsupported2],AssertionError,failed
38118,tests.integ.modin.window.test_rolling,test_rolling_null_dataframe[True-2-3-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
38121,tests.integ.modin.series.test_to_view,test_to_view_multiindex_length_mismatch_raises[method],"NotImplementedError: Modin supports the method Series.to_view on the Snowflake backend, but not on the backend Pandas.",failed
38134,tests.integ.modin.window.test_rolling,test_rolling_null_dataframe[True-1-4-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
38152,tests.integ.modin.window.test_rolling,test_rolling_null_dataframe[False-None-2-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
38156,tests.integ.modin.window.test_rolling,test_rolling_null_dataframe[True-1-2-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
38158,tests.integ.modin.window.test_rolling,test_rolling_null_dataframe[True-None-4-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
38163,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[False-False-read_with_select_*-SECURE VIEW],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed550-0e11-6dc3-000c-a90c0e8c57cb, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_VIEW_CRU465KS9G) LIMIT 1), QueryRecord(query_id=01bed550-0e11-71c8-000c-a90c0e8c74e7, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL1"", ""S"" FROM (SNOWPARK_TEMP_VIEW_CRU465KS9G)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
38208,tests.integ.modin.window.test_rolling,test_rolling_null_dataframe[True-1-6-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
38210,tests.integ.modin.frame.test_sort_index,test_sort_index_dataframe_axis_1_unsupported,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38211,tests.integ.modin.window.test_rolling,test_rolling_null_dataframe[False-None-3-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
38212,tests.integ.modin.frame.test_sort_index,test_sort_index_dataframe_multiindex_unsupported,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38239,tests.integ.modin.window.test_rolling,test_rolling_null_dataframe[False-None-4-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
38249,tests.integ.modin.window.test_rolling,test_rolling_null_dataframe[False-1-6-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
38251,tests.integ.modin.frame.test_sort_values,test_sort_values[True-ind],KeyError: 'ind',failed
38266,tests.integ.modin.frame.test_sort_values,test_sort_values[False-ind],KeyError: 'ind',failed
38271,tests.integ.modin.window.test_rolling,test_rolling_null_dataframe[True-2-4-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
38273,tests.integ.modin.frame.test_sort_values,test_sort_values_on_duplicate_labels_negative,Failed: DID NOT RAISE <class 'Exception'>,failed
38280,tests.integ.modin.window.test_rolling,test_rolling_null_dataframe[False-2-1-count],AssertionError: exception type <class 'TypeError'> does not match with expected type <class 'ValueError'>,failed
38288,tests.integ.modin.window.test_rolling,test_rolling_null_dataframe[False-1-2-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
38291,tests.integ.modin.series.test_to_view,test_to_view_multiindex_length_mismatch_raises[function],"NotImplementedError: Modin supports the method Series.to_view on the Snowflake backend, but not on the backend Pandas.",failed
38297,tests.integ.modin.window.test_rolling,test_rolling_null_dataframe[False-None-6-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
38306,tests.integ.modin.window.test_rolling,test_rolling_null_dataframe[False-2-2-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
38308,tests.integ.modin.frame.test_sort_values,test_sort_values_duplicate_by[by1],KeyError: 'ind',failed
38329,tests.integ.modin.frame.test_sort_values,test_sort_values_multiple_by[by1],KeyError: 'ind',failed
38333,tests.integ.modin.window.test_rolling,test_rolling_null_dataframe[True-2-6-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
38334,tests.integ.modin.frame.test_sort_values,test_sort_values_axis_1[<lambda>0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38335,tests.integ.modin.frame.test_sort_values,test_sort_values_axis_1[<lambda>1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38336,tests.integ.modin.frame.test_sort_values,test_sort_values_axis_1[<lambda>2],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38337,tests.integ.modin.frame.test_sort_values,test_sort_values_axis_1[<lambda>3],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38339,tests.integ.modin.frame.test_sort_values,test_sort_values_axis_1[<lambda>4],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38341,tests.integ.modin.frame.test_sort_values,test_sort_values_axis_1_inplace[<lambda>0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38344,tests.integ.modin.frame.test_sort_values,test_sort_values_axis_1_inplace[<lambda>1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38345,tests.integ.modin.frame.test_sort_values,test_sort_values_axis_1_inplace[<lambda>2],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38347,tests.integ.modin.frame.test_sort_values,test_sort_values_axis_1_inplace[<lambda>3],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38348,tests.integ.modin.frame.test_sort_values,test_sort_values_axis_1_inplace[<lambda>4],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38353,tests.integ.modin.window.test_rolling,test_rolling_null_dataframe[False-2-3-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
38363,tests.integ.modin.window.test_rolling,test_rolling_null_dataframe[False-1-3-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
38382,tests.integ.modin.window.test_rolling,test_rolling_null_dataframe[False-1-1-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
38390,tests.integ.modin.frame.test_sort_values,test_sort_values_invalid_kind_negative,Failed: DID NOT RAISE <class 'AssertionError'>,failed
38400,tests.integ.modin.frame.test_sort_values,test_sort_values_key[<lambda>0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38402,tests.integ.modin.frame.test_sort_values,test_sort_values_key[<lambda>1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38414,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[False-False-read_with_select_*-TEMP VIEW],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed550-0e11-6d76-000c-a90c0e8cd393, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_VIEW_O6Z9IIXULI) LIMIT 1), QueryRecord(query_id=01bed550-0e11-6bde-000c-a90c0e8cb4bf, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL1"", ""S"" FROM (SNOWPARK_TEMP_VIEW_O6Z9IIXULI)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
38436,tests.integ.modin.window.test_rolling,test_rolling_null_dataframe[False-2-4-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
38463,tests.integ.modin.window.test_rolling,test_rolling_null_dataframe[False-None-1-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
38472,tests.integ.modin.window.test_rolling,test_rolling_null_dataframe[False-1-4-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
38476,tests.integ.modin.window.test_rolling,test_rolling_null_dataframe[False-2-6-count],TypeError: Rolling.count() got an unexpected keyword argument 'numeric_only',failed
38529,tests.integ.modin.frame.test_squeeze,test_timedelta_1_by_n_horizontal[0],"[XPASS(strict)] Transpose produces a column with both an int value and a timedelta value, so it can't preserve the timedelta type for the timedelta row.",failed
38530,tests.integ.modin.frame.test_squeeze,test_timedelta_1_by_n_horizontal[index],"[XPASS(strict)] Transpose produces a column with both an int value and a timedelta value, so it can't preserve the timedelta type for the timedelta row.",failed
38532,tests.integ.modin.frame.test_squeeze,test_timedelta_1_by_n_horizontal[None],"[XPASS(strict)] Transpose produces a column with both an int value and a timedelta value, so it can't preserve the timedelta type for the timedelta row.",failed
38554,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[False-False-read_with_table_name-],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed550-0e11-6bfa-000c-a90c0e8d121f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_C69Z8WLRG4TESTTABLENAME) LIMIT 1), QueryRecord(query_id=01bed550-0e11-6dc3-000c-a90c0e8c5c1b, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL1"", ""S"" FROM (SNOWPARK_TEMP_TABLE_C69Z8WLRG4TESTTABLENAME)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
38600,tests.integ.modin.frame.test_stack,test_stack_level_unsupported,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38602,tests.integ.modin.frame.test_stack,test_stack_multiindex_unsupported,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38603,tests.integ.modin.frame.test_stack,test_stack_timedelta_unsupported,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38698,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[False-False-read_with_table_name-temporary],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed550-0e11-6d76-000c-a90c0e8cd747, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_AFCRUVO2TBTESTTABLENAME) LIMIT 1), QueryRecord(query_id=01bed550-0e11-71f1-000c-a90c0e8cf667, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL1"", ""S"" FROM (SNOWPARK_TEMP_TABLE_AFCRUVO2TBTESTTABLENAME)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
38710,tests.integ.modin.frame.test_take,test_df_take[float-False],IndexError: positional indexers are out-of-bounds,failed
38721,tests.integ.modin.frame.test_take,test_df_take[float-True],IndexError: positional indexers are out-of-bounds,failed
38729,tests.integ.modin.frame.test_take,test_df_take[timedelta64[ns]-False],IndexError: positional indexers are out-of-bounds,failed
38766,tests.integ.modin.frame.test_take,test_df_take[timedelta64[ns]-True],IndexError: positional indexers are out-of-bounds,failed
38801,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[False-False-read_with_table_name-transient],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed550-0e11-6bde-000c-a90c0e8cb98b, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_LB2FML1QCFTESTTABLENAME) LIMIT 1), QueryRecord(query_id=01bed550-0e11-71dd-000c-a90c0e8d738f, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL1"", ""S"" FROM (SNOWPARK_TEMP_TABLE_LB2FML1QCFTESTTABLENAME)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
38846,tests.integ.modin.window.test_rolling,test_rolling_aggregation_unsupported[mean-dataframe],"AssertionError: Regex pattern did not match.
 Regex: '(?:No\\ numeric\\ types\\ to\\ aggregate)|(?:No\\ numeric\\ types\\ to\\ aggregate)'
 Input: 'Cannot aggregate non-numeric type: timedelta64[ns]'",failed
38853,tests.integ.modin.window.test_rolling,test_rolling_aggregation_unsupported[median-None],TypeError: Rolling.median() takes 1 positional argument but 2 were given,failed
38855,tests.integ.modin.window.test_rolling,test_rolling_aggregation_unsupported[mean-series],"AssertionError: Regex pattern did not match.
 Regex: '(?:No\\ numeric\\ types\\ to\\ aggregate)|(?:No\\ numeric\\ types\\ to\\ aggregate)'
 Input: 'Cannot aggregate non-numeric type: timedelta64[ns]'",failed
38858,tests.integ.modin.window.test_rolling,test_rolling_aggregation_unsupported[cov-None],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38862,tests.integ.modin.window.test_rolling,test_rolling_aggregation_unsupported[skew-None],TypeError: Rolling.skew() takes 1 positional argument but 2 were given,failed
38865,tests.integ.modin.window.test_rolling,test_rolling_aggregation_unsupported[var-dataframe],"AssertionError: Regex pattern did not match.
 Regex: '(?:No\\ numeric\\ types\\ to\\ aggregate)|(?:No\\ numeric\\ types\\ to\\ aggregate)'
 Input: 'Cannot aggregate non-numeric type: timedelta64[ns]'",failed
38868,tests.integ.modin.window.test_rolling,test_rolling_aggregation_unsupported[kurt-None],TypeError: Rolling.kurt() takes 1 positional argument but 2 were given,failed
38875,tests.integ.modin.window.test_rolling,test_rolling_aggregation_unsupported[var-series],"AssertionError: Regex pattern did not match.
 Regex: '(?:No\\ numeric\\ types\\ to\\ aggregate)|(?:No\\ numeric\\ types\\ to\\ aggregate)'
 Input: 'Cannot aggregate non-numeric type: timedelta64[ns]'",failed
38876,tests.integ.modin.window.test_rolling,test_rolling_time_window_negative,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38877,tests.integ.modin.window.test_rolling,test_rolling_aggregation_unsupported[apply-min],TypeError: 'str' object is not callable,failed
38880,tests.integ.modin.window.test_rolling,test_rolling_aggregation_unsupported[aggregate-min],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38883,tests.integ.modin.window.test_rolling,test_rolling_aggregation_unsupported[std-dataframe],"AssertionError: Regex pattern did not match.
 Regex: '(?:No\\ numeric\\ types\\ to\\ aggregate)|(?:No\\ numeric\\ types\\ to\\ aggregate)'
 Input: 'Cannot aggregate non-numeric type: timedelta64[ns]'",failed
38884,tests.integ.modin.window.test_rolling,test_rolling_aggregation_unsupported[quantile-0.5],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38889,tests.integ.modin.window.test_rolling,test_rolling_aggregation_unsupported[std-series],"AssertionError: Regex pattern did not match.
 Regex: '(?:No\\ numeric\\ types\\ to\\ aggregate)|(?:No\\ numeric\\ types\\ to\\ aggregate)'
 Input: 'Cannot aggregate non-numeric type: timedelta64[ns]'",failed
38892,tests.integ.modin.window.test_rolling,test_rolling_window_multiindex,"AssertionError: Regex pattern did not match.
 Regex: 'Rolling behavior is undefined when used with a MultiIndex'
 Input: 'window must be an integer 0 or greater'",failed
38894,tests.integ.modin.window.test_rolling,test_rolling_aggregation_unsupported[rank-None],ValueError: Method 'None' is not supported,failed
38897,tests.integ.modin.window.test_rolling,test_rolling_aggregation_unsupported[min-dataframe],"AssertionError: Regex pattern did not match.
 Regex: '(?:No\\ numeric\\ types\\ to\\ aggregate)|(?:No\\ numeric\\ types\\ to\\ aggregate)'
 Input: 'Cannot aggregate non-numeric type: timedelta64[ns]'",failed
38899,tests.integ.modin.window.test_rolling,test_rolling_params_unsupported[<lambda>0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38901,tests.integ.modin.window.test_rolling,test_rolling_aggregation_unsupported[sum-dataframe],"AssertionError: Regex pattern did not match.
 Regex: '(?:No\\ numeric\\ types\\ to\\ aggregate)|(?:No\\ numeric\\ types\\ to\\ aggregate)'
 Input: 'Cannot aggregate non-numeric type: timedelta64[ns]'",failed
38921,tests.integ.modin.window.test_rolling,test_rolling_params_unsupported[<lambda>1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38925,tests.integ.modin.window.test_rolling,test_rolling_aggregation_unsupported[min-series],"AssertionError: Regex pattern did not match.
 Regex: '(?:No\\ numeric\\ types\\ to\\ aggregate)|(?:No\\ numeric\\ types\\ to\\ aggregate)'
 Input: 'Cannot aggregate non-numeric type: timedelta64[ns]'",failed
38927,tests.integ.modin.window.test_rolling,test_rolling_aggregation_unsupported[sum-series],"AssertionError: Regex pattern did not match.
 Regex: '(?:No\\ numeric\\ types\\ to\\ aggregate)|(?:No\\ numeric\\ types\\ to\\ aggregate)'
 Input: 'Cannot aggregate non-numeric type: timedelta64[ns]'",failed
38941,tests.integ.modin.window.test_rolling,test_rolling_params_unsupported[<lambda>2],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38945,tests.integ.modin.window.test_rolling,test_rolling_aggregation_unsupported[max-dataframe],"AssertionError: Regex pattern did not match.
 Regex: '(?:No\\ numeric\\ types\\ to\\ aggregate)|(?:No\\ numeric\\ types\\ to\\ aggregate)'
 Input: 'Cannot aggregate non-numeric type: timedelta64[ns]'",failed
38949,tests.integ.modin.window.test_rolling,test_rolling_params_unsupported[<lambda>3],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38953,tests.integ.modin.window.test_rolling,test_rolling_aggregation_unsupported[max-series],"AssertionError: Regex pattern did not match.
 Regex: '(?:No\\ numeric\\ types\\ to\\ aggregate)|(?:No\\ numeric\\ types\\ to\\ aggregate)'
 Input: 'Cannot aggregate non-numeric type: timedelta64[ns]'",failed
38955,tests.integ.modin.window.test_rolling,test_rolling_params_unsupported[<lambda>4],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38959,tests.integ.modin.window.test_rolling,test_rolling_aggregation_unsupported[sem-dataframe],"AssertionError: Regex pattern did not match.
 Regex: '(?:No\\ numeric\\ types\\ to\\ aggregate)|(?:No\\ numeric\\ types\\ to\\ aggregate)'
 Input: 'Cannot aggregate non-numeric type: timedelta64[ns]'",failed
38963,tests.integ.modin.window.test_rolling,test_rolling_params_unsupported[<lambda>6],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38966,tests.integ.modin.window.test_rolling,test_rolling_aggregation_unsupported[sem-series],"AssertionError: Regex pattern did not match.
 Regex: '(?:No\\ numeric\\ types\\ to\\ aggregate)|(?:No\\ numeric\\ types\\ to\\ aggregate)'
 Input: 'Cannot aggregate non-numeric type: timedelta64[ns]'",failed
38977,tests.integ.modin.window.test_rolling,test_rolling_corr_negative,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38979,tests.integ.modin.resample.test_resample_negative,test_resample_ffill_limit_negative,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38981,tests.integ.modin.resample.test_resample_negative,test_resample_fillna_method_not_implemented,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38983,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[False-False-read_with_table_name-view],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed550-0e11-6ce4-000c-a90c0e8d9353, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_VIEW_MRVGJQTCBQ) LIMIT 1), QueryRecord(query_id=01bed550-0e11-6e5e-000c-a90c0e8d5663, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL1"", ""S"" FROM (SNOWPARK_TEMP_VIEW_MRVGJQTCBQ)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
38985,tests.integ.modin.resample.test_resample_negative,test_resample_tz_negative,Failed: DID NOT RAISE <class 'TypeError'>,failed
38986,tests.integ.modin.resample.test_resample_negative,test_resample_sum_timedelta_with_duplicate_column_label_changes_type_to_int,[XPASS(strict)] SNOW-1704430,failed
38989,tests.integ.modin.resample.test_resample_negative,test_resample_not_yet_implemented_freq[MS],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38990,tests.integ.modin.resample.test_resample_negative,test_resample_not_yet_implemented_freq[QE],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38992,tests.integ.modin.resample.test_resample_negative,test_resample_not_yet_implemented_freq[QS],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38994,tests.integ.modin.resample.test_resample_negative,test_resample_not_yet_implemented_freq[YS],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38995,tests.integ.modin.resample.test_resample_negative,test_resample_not_yet_implemented_closed,Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
38998,tests.integ.modin.resample.test_resample_negative,test_series_agg_numeric_true_raises[<lambda>0],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
39001,tests.integ.modin.frame.test_to_dynamic_table,test_to_dynamic_table_enforce_ordering_raises[method],"NotImplementedError: Modin supports the method DataFrame.to_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
39002,tests.integ.modin.resample.test_resample_negative,test_series_agg_numeric_true_raises[<lambda>1],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
39004,tests.integ.modin.resample.test_resample_negative,test_series_agg_numeric_true_raises[<lambda>2],Failed: DID NOT RAISE <class 'NotImplementedError'>,failed
39056,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[False-False-read_with_table_name-SECURE VIEW],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed550-0e11-6e87-000c-a90c0e8d399f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_VIEW_4UJAOK6D0A) LIMIT 1), QueryRecord(query_id=01bed550-0e11-722e-000c-a90c0e8dc28b, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL1"", ""S"" FROM (SNOWPARK_TEMP_VIEW_4UJAOK6D0A)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39091,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[1-s],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39092,tests.integ.modin.resample.test_resample_on,test_resample_non_datetime_on,"AssertionError: Regex pattern did not match.
 Regex: 'Only valid with DatetimeIndex or TimedeltaIndex'
 Input: ""Only valid with DatetimeIndex, TimedeltaIndex or PeriodIndex, but got an instance of 'Index'""",failed
39094,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[2-s],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39095,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[1-min],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39096,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[2-min],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39097,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[1-h],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39098,tests.integ.modin.frame.test_to_dynamic_table,test_to_dynamic_table_enforce_ordering_raises[function],"NotImplementedError: Modin supports the method DataFrame.to_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
39099,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[5-s],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39100,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[1-D],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39101,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[2-h],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39102,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[5-YE],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39103,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[1-W],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39104,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[15-ME],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39105,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[5-min],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39106,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[2-D],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39107,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[3-s],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39108,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[1-ME],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39109,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[15-s],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39110,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[15-YE],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39111,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[2-W],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39112,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[5-h],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39113,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[3-min],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39114,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[1-s],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39115,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[False-False-read_with_table_name-TEMP VIEW],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed550-0e11-6e2a-000c-a90c0e8d2afb, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_VIEW_ZLFTU7JUA1) LIMIT 1), QueryRecord(query_id=01bed550-0e11-721e-000c-a90c0e8dd4fb, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL1"", ""S"" FROM (SNOWPARK_TEMP_VIEW_ZLFTU7JUA1)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39116,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[1-YE],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39117,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[1-W],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39118,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[1-min],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39119,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[2-D],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39120,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[2-ME],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39121,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[15-min],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39122,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[1-ME],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39123,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[2-W],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39124,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[5-D],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39125,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[1-h],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39126,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[3-h],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39127,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[2-ME],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39128,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[2-YE],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39129,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[1-D],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39130,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[1-YE],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39131,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[3-s],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39132,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[3-min],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39133,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[2-s],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39134,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[5-D],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39135,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[3-h],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39136,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[15-h],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39137,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[2-YE],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39138,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[5-W],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39139,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[3-D],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39140,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[5-W],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39141,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[2-min],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39142,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[3-ME],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39143,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[5-ME],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39144,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[3-YE],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39145,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[5-YE],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39146,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[5-s],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39147,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[2-h],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39148,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[5-min],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39149,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[5-ME],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39150,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[5-h],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39151,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[15-D],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39152,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[15-W],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39153,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[3-W],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39154,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[15-s],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39155,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[15-ME],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39156,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[15-min],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39157,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[15-W],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39158,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[15-YE],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39159,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[15-h],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39160,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[3-ME],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39162,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[15-D],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39163,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[3-D],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39164,tests.integ.modin.resample.test_resample_property,test_resample_indices_series[3-W],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39165,tests.integ.modin.resample.test_resample_property,test_resample_indices_df[3-YE],TypeError: assert_array_equal() got an unexpected keyword argument 'strict',failed
39167,tests.integ.modin.frame.test_to_dynamic_table,test_to_dynamic_table_no_enforce_ordering[method],"NotImplementedError: Modin supports the method DataFrame.to_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
39171,tests.integ.modin.series.test_add_prefix,test_series_add_prefix_time_column_df[prefix7],"AssertionError: Series.index are different

Series.index values are different (100.0 %)
[left]:  Index(['   column1  column2\n0       67      909\n1       68      9102023-01-01 00:00:00',
       '   column1  column2\n0       67      909\n1       68      9102023-01-02 00:00:00',
       '   column1  column2\n0       67      909\n1       68      9102023-01-03 00:00:00',
       '   column1  column2\n0       67      909\n1       68      9102023-01-04 00:00:00',
       '   column1  column2\n0       67      909\n1       68      9102023-01-05 00:00:00',
       '   column1  column2\n0       67      909\n1       68      9102023-01-06 00:00:00',
       '   column1  column2\n0       67      909\n1       68      9102023-01-07 00:00:00'],
      dtype='object')
[right]: Index(['   column1  column2\n0       67      909\n1       68      9102023-01-01 00:00:00.000',
       '   column1  column2\n0       67      909\n1       68      9102023-01-02 00:00:00.000',
       '   column1  column2\n0       67      909\n1       68      9102023-01-03 00:00:00.000',
       '   column1  column2\n0       67      909\n1       68      9102023-01-04 00:00:00.000',
       '   column1  column2\n0       67      909\n1       68      9102023-01-05 00:00:00.000',
       '   column1  column2\n0       67      909\n1       68      9102023-01-06 00:00:00.000',
       '   column1  column2\n0       67      909\n1       68      9102023-01-07 00:00:00.000'],
      dtype='object')
At positional index 0, first diff:    column1  column2
0       67      909
1       68      9102023-01-01 00:00:00 !=    column1  column2
0       67      909
1       68      9102023-01-01 00:00:00.000",failed
39172,tests.integ.modin.series.test_add_prefix,test_series_add_prefix_time_column_df[None],"AssertionError: Series.index are different

Series.index values are different (100.0 %)
[left]:  Index(['None2023-01-01 00:00:00', 'None2023-01-02 00:00:00',
       'None2023-01-03 00:00:00', 'None2023-01-04 00:00:00',
       'None2023-01-05 00:00:00', 'None2023-01-06 00:00:00',
       'None2023-01-07 00:00:00'],
      dtype='object')
[right]: Index(['None2023-01-01 00:00:00.000', 'None2023-01-02 00:00:00.000',
       'None2023-01-03 00:00:00.000', 'None2023-01-04 00:00:00.000',
       'None2023-01-05 00:00:00.000', 'None2023-01-06 00:00:00.000',
       'None2023-01-07 00:00:00.000'],
      dtype='object')
At positional index 0, first diff: None2023-01-01 00:00:00 != None2023-01-01 00:00:00.000",failed
39182,tests.integ.modin.series.test_add_prefix,test_series_add_prefix_time_column_df[prefix4],"AssertionError: Series.index are different

Series.index values are different (100.0 %)
[left]:  Index(['[24, 25, 26, 'list!']2023-01-01 00:00:00',
       '[24, 25, 26, 'list!']2023-01-02 00:00:00',
       '[24, 25, 26, 'list!']2023-01-03 00:00:00',
       '[24, 25, 26, 'list!']2023-01-04 00:00:00',
       '[24, 25, 26, 'list!']2023-01-05 00:00:00',
       '[24, 25, 26, 'list!']2023-01-06 00:00:00',
       '[24, 25, 26, 'list!']2023-01-07 00:00:00'],
      dtype='object')
[right]: Index(['[24, 25, 26, 'list!']2023-01-01 00:00:00.000',
       '[24, 25, 26, 'list!']2023-01-02 00:00:00.000',
       '[24, 25, 26, 'list!']2023-01-03 00:00:00.000',
       '[24, 25, 26, 'list!']2023-01-04 00:00:00.000',
       '[24, 25, 26, 'list!']2023-01-05 00:00:00.000',
       '[24, 25, 26, 'list!']2023-01-06 00:00:00.000',
       '[24, 25, 26, 'list!']2023-01-07 00:00:00.000'],
      dtype='object')
At positional index 0, first diff: [24, 25, 26, 'list!']2023-01-01 00:00:00 != [24, 25, 26, 'list!']2023-01-01 00:00:00.000",failed
39187,tests.integ.modin.series.test_add_prefix,test_series_add_prefix_time_column_df[prefix5],"AssertionError: Series.index are different

Series.index values are different (100.0 %)
[left]:  Index(['[[], [1, 2]]2023-01-01 00:00:00', '[[], [1, 2]]2023-01-02 00:00:00',
       '[[], [1, 2]]2023-01-03 00:00:00', '[[], [1, 2]]2023-01-04 00:00:00',
       '[[], [1, 2]]2023-01-05 00:00:00', '[[], [1, 2]]2023-01-06 00:00:00',
       '[[], [1, 2]]2023-01-07 00:00:00'],
      dtype='object')
[right]: Index(['[[], [1, 2]]2023-01-01 00:00:00.000',
       '[[], [1, 2]]2023-01-02 00:00:00.000',
       '[[], [1, 2]]2023-01-03 00:00:00.000',
       '[[], [1, 2]]2023-01-04 00:00:00.000',
       '[[], [1, 2]]2023-01-05 00:00:00.000',
       '[[], [1, 2]]2023-01-06 00:00:00.000',
       '[[], [1, 2]]2023-01-07 00:00:00.000'],
      dtype='object')
At positional index 0, first diff: [[], [1, 2]]2023-01-01 00:00:00 != [[], [1, 2]]2023-01-01 00:00:00.000",failed
39189,tests.integ.modin.series.test_add_prefix,test_series_add_prefix_time_column_df[ 0 9 0 1 2 3],"AssertionError: Series.index are different

Series.index values are different (100.0 %)
[left]:  Index([' 0 9 0 1 2 32023-01-01 00:00:00', ' 0 9 0 1 2 32023-01-02 00:00:00',
       ' 0 9 0 1 2 32023-01-03 00:00:00', ' 0 9 0 1 2 32023-01-04 00:00:00',
       ' 0 9 0 1 2 32023-01-05 00:00:00', ' 0 9 0 1 2 32023-01-06 00:00:00',
       ' 0 9 0 1 2 32023-01-07 00:00:00'],
      dtype='object')
[right]: Index([' 0 9 0 1 2 32023-01-01 00:00:00.000',
       ' 0 9 0 1 2 32023-01-02 00:00:00.000',
       ' 0 9 0 1 2 32023-01-03 00:00:00.000',
       ' 0 9 0 1 2 32023-01-04 00:00:00.000',
       ' 0 9 0 1 2 32023-01-05 00:00:00.000',
       ' 0 9 0 1 2 32023-01-06 00:00:00.000',
       ' 0 9 0 1 2 32023-01-07 00:00:00.000'],
      dtype='object')
At positional index 0, first diff:  0 9 0 1 2 32023-01-01 00:00:00 !=  0 9 0 1 2 32023-01-01 00:00:00.000",failed
39190,tests.integ.modin.series.test_add_prefix,test_series_add_prefix_time_column_df[prefix6],"AssertionError: Series.index are different

Series.index values are different (100.0 %)
[left]:  Index(['0      this\n1        is\n2         a\n3    series\ndtype: object2023-01-01 00:00:00',
       '0      this\n1        is\n2         a\n3    series\ndtype: object2023-01-02 00:00:00',
       '0      this\n1        is\n2         a\n3    series\ndtype: object2023-01-03 00:00:00',
       '0      this\n1        is\n2         a\n3    series\ndtype: object2023-01-04 00:00:00',
       '0      this\n1        is\n2         a\n3    series\ndtype: object2023-01-05 00:00:00',
       '0      this\n1        is\n2         a\n3    series\ndtype: object2023-01-06 00:00:00',
       '0      this\n1        is\n2         a\n3    series\ndtype: object2023-01-07 00:00:00'],
      dtype='object')
[right]: Index(['0      this\n1        is\n2         a\n3    series\ndtype: object2023-01-01 00:00:00.000',
       '0      this\n1        is\n2         a\n3    series\ndtype: object2023-01-02 00:00:00.000',
       '0      this\n1        is\n2         a\n3    series\ndtype: object2023-01-03 00:00:00.000',
       '0      this\n1        is\n2         a\n3    series\ndtype: object2023-01-04 00:00:00.000',
       '0      this\n1        is\n2         a\n3    series\ndtype: object2023-01-05 00:00:00.000',
       '0      this\n1        is\n2         a\n3    series\ndtype: object2023-01-06 00:00:00.000',
       '0      this\n1        is\n2         a\n3    series\ndtype: object2023-01-07 00:00:00.000'],
      dtype='object')
At positional index 0, first diff: 0      this
1        is
2         a
3    series
dtype: object2023-01-01 00:00:00 != 0      this
1        is
2         a
3    series
dtype: object2023-01-01 00:00:00.000",failed
39191,tests.integ.modin.series.test_add_prefix,test_series_add_prefix_time_column_df[12345],"AssertionError: Series.index are different

Series.index values are different (100.0 %)
[left]:  Index(['123452023-01-01 00:00:00', '123452023-01-02 00:00:00',
       '123452023-01-03 00:00:00', '123452023-01-04 00:00:00',
       '123452023-01-05 00:00:00', '123452023-01-06 00:00:00',
       '123452023-01-07 00:00:00'],
      dtype='object')
[right]: Index(['123452023-01-01 00:00:00.000', '123452023-01-02 00:00:00.000',
       '123452023-01-03 00:00:00.000', '123452023-01-04 00:00:00.000',
       '123452023-01-05 00:00:00.000', '123452023-01-06 00:00:00.000',
       '123452023-01-07 00:00:00.000'],
      dtype='object')
At positional index 0, first diff: 123452023-01-01 00:00:00 != 123452023-01-01 00:00:00.000",failed
39192,tests.integ.modin.series.test_add_prefix,test_series_add_prefix_time_column_df[prefix3],"AssertionError: Series.index are different

Series.index values are different (100.0 %)
[left]:  Index(['('tuple data', 12)2023-01-01 00:00:00',
       '('tuple data', 12)2023-01-02 00:00:00',
       '('tuple data', 12)2023-01-03 00:00:00',
       '('tuple data', 12)2023-01-04 00:00:00',
       '('tuple data', 12)2023-01-05 00:00:00',
       '('tuple data', 12)2023-01-06 00:00:00',
       '('tuple data', 12)2023-01-07 00:00:00'],
      dtype='object')
[right]: Index(['('tuple data', 12)2023-01-01 00:00:00.000',
       '('tuple data', 12)2023-01-02 00:00:00.000',
       '('tuple data', 12)2023-01-03 00:00:00.000',
       '('tuple data', 12)2023-01-04 00:00:00.000',
       '('tuple data', 12)2023-01-05 00:00:00.000',
       '('tuple data', 12)2023-01-06 00:00:00.000',
       '('tuple data', 12)2023-01-07 00:00:00.000'],
      dtype='object')
At positional index 0, first diff: ('tuple data', 12)2023-01-01 00:00:00 != ('tuple data', 12)2023-01-01 00:00:00.000",failed
39203,tests.integ.modin.series.test_add_suffix,test_add_suffix_time_column_df[12345],"AssertionError: Series.index are different

Series.index values are different (100.0 %)
[left]:  Index(['2023-01-01 00:00:0012345', '2023-01-02 00:00:0012345',
       '2023-01-03 00:00:0012345', '2023-01-04 00:00:0012345',
       '2023-01-05 00:00:0012345', '2023-01-06 00:00:0012345',
       '2023-01-07 00:00:0012345'],
      dtype='object')
[right]: Index(['2023-01-01 00:00:00.00012345', '2023-01-02 00:00:00.00012345',
       '2023-01-03 00:00:00.00012345', '2023-01-04 00:00:00.00012345',
       '2023-01-05 00:00:00.00012345', '2023-01-06 00:00:00.00012345',
       '2023-01-07 00:00:00.00012345'],
      dtype='object')
At positional index 0, first diff: 2023-01-01 00:00:0012345 != 2023-01-01 00:00:00.00012345",failed
39205,tests.integ.modin.series.test_add_suffix,test_add_suffix_time_column_df[_suffix],"AssertionError: Series.index are different

Series.index values are different (100.0 %)
[left]:  Index(['2023-01-01 00:00:00_suffix', '2023-01-02 00:00:00_suffix',
       '2023-01-03 00:00:00_suffix', '2023-01-04 00:00:00_suffix',
       '2023-01-05 00:00:00_suffix', '2023-01-06 00:00:00_suffix',
       '2023-01-07 00:00:00_suffix'],
      dtype='object')
[right]: Index(['2023-01-01 00:00:00.000_suffix', '2023-01-02 00:00:00.000_suffix',
       '2023-01-03 00:00:00.000_suffix', '2023-01-04 00:00:00.000_suffix',
       '2023-01-05 00:00:00.000_suffix', '2023-01-06 00:00:00.000_suffix',
       '2023-01-07 00:00:00.000_suffix'],
      dtype='object')
At positional index 0, first diff: 2023-01-01 00:00:00_suffix != 2023-01-01 00:00:00.000_suffix",failed
39206,tests.integ.modin.series.test_add_suffix,test_add_suffix_time_column_df[suffix3],"AssertionError: Series.index are different

Series.index values are different (100.0 %)
[left]:  Index(['2023-01-01 00:00:00('tuple data', 12)',
       '2023-01-02 00:00:00('tuple data', 12)',
       '2023-01-03 00:00:00('tuple data', 12)',
       '2023-01-04 00:00:00('tuple data', 12)',
       '2023-01-05 00:00:00('tuple data', 12)',
       '2023-01-06 00:00:00('tuple data', 12)',
       '2023-01-07 00:00:00('tuple data', 12)'],
      dtype='object')
[right]: Index(['2023-01-01 00:00:00.000('tuple data', 12)',
       '2023-01-02 00:00:00.000('tuple data', 12)',
       '2023-01-03 00:00:00.000('tuple data', 12)',
       '2023-01-04 00:00:00.000('tuple data', 12)',
       '2023-01-05 00:00:00.000('tuple data', 12)',
       '2023-01-06 00:00:00.000('tuple data', 12)',
       '2023-01-07 00:00:00.000('tuple data', 12)'],
      dtype='object')
At positional index 0, first diff: 2023-01-01 00:00:00('tuple data', 12) != 2023-01-01 00:00:00.000('tuple data', 12)",failed
39208,tests.integ.modin.series.test_add_suffix,test_add_suffix_time_column_df[suffix4],"AssertionError: Series.index are different

Series.index values are different (100.0 %)
[left]:  Index(['2023-01-01 00:00:00[24, 25, 26, 'list!']',
       '2023-01-02 00:00:00[24, 25, 26, 'list!']',
       '2023-01-03 00:00:00[24, 25, 26, 'list!']',
       '2023-01-04 00:00:00[24, 25, 26, 'list!']',
       '2023-01-05 00:00:00[24, 25, 26, 'list!']',
       '2023-01-06 00:00:00[24, 25, 26, 'list!']',
       '2023-01-07 00:00:00[24, 25, 26, 'list!']'],
      dtype='object')
[right]: Index(['2023-01-01 00:00:00.000[24, 25, 26, 'list!']',
       '2023-01-02 00:00:00.000[24, 25, 26, 'list!']',
       '2023-01-03 00:00:00.000[24, 25, 26, 'list!']',
       '2023-01-04 00:00:00.000[24, 25, 26, 'list!']',
       '2023-01-05 00:00:00.000[24, 25, 26, 'list!']',
       '2023-01-06 00:00:00.000[24, 25, 26, 'list!']',
       '2023-01-07 00:00:00.000[24, 25, 26, 'list!']'],
      dtype='object')
At positional index 0, first diff: 2023-01-01 00:00:00[24, 25, 26, 'list!'] != 2023-01-01 00:00:00.000[24, 25, 26, 'list!']",failed
39210,tests.integ.modin.series.test_add_suffix,test_add_suffix_time_column_df[ 0 9 0 1 2 3],"AssertionError: Series.index are different

Series.index values are different (100.0 %)
[left]:  Index(['2023-01-01 00:00:00 0 9 0 1 2 3', '2023-01-02 00:00:00 0 9 0 1 2 3',
       '2023-01-03 00:00:00 0 9 0 1 2 3', '2023-01-04 00:00:00 0 9 0 1 2 3',
       '2023-01-05 00:00:00 0 9 0 1 2 3', '2023-01-06 00:00:00 0 9 0 1 2 3',
       '2023-01-07 00:00:00 0 9 0 1 2 3'],
      dtype='object')
[right]: Index(['2023-01-01 00:00:00.000 0 9 0 1 2 3',
       '2023-01-02 00:00:00.000 0 9 0 1 2 3',
       '2023-01-03 00:00:00.000 0 9 0 1 2 3',
       '2023-01-04 00:00:00.000 0 9 0 1 2 3',
       '2023-01-05 00:00:00.000 0 9 0 1 2 3',
       '2023-01-06 00:00:00.000 0 9 0 1 2 3',
       '2023-01-07 00:00:00.000 0 9 0 1 2 3'],
      dtype='object')
At positional index 0, first diff: 2023-01-01 00:00:00 0 9 0 1 2 3 != 2023-01-01 00:00:00.000 0 9 0 1 2 3",failed
39213,tests.integ.modin.series.test_add_suffix,test_add_suffix_time_column_df[suffix6],"AssertionError: Series.index are different

Series.index values are different (100.0 %)
[left]:  Index(['2023-01-01 00:00:000      this\n1        is\n2         a\n3    series\ndtype: object',
       '2023-01-02 00:00:000      this\n1        is\n2         a\n3    series\ndtype: object',
       '2023-01-03 00:00:000      this\n1        is\n2         a\n3    series\ndtype: object',
       '2023-01-04 00:00:000      this\n1        is\n2         a\n3    series\ndtype: object',
       '2023-01-05 00:00:000      this\n1        is\n2         a\n3    series\ndtype: object',
       '2023-01-06 00:00:000      this\n1        is\n2         a\n3    series\ndtype: object',
       '2023-01-07 00:00:000      this\n1        is\n2         a\n3    series\ndtype: object'],
      dtype='object')
[right]: Index(['2023-01-01 00:00:00.0000      this\n1        is\n2         a\n3    series\ndtype: object',
       '2023-01-02 00:00:00.0000      this\n1        is\n2         a\n3    series\ndtype: object',
       '2023-01-03 00:00:00.0000      this\n1        is\n2         a\n3    series\ndtype: object',
       '2023-01-04 00:00:00.0000      this\n1        is\n2         a\n3    series\ndtype: object',
       '2023-01-05 00:00:00.0000      this\n1        is\n2         a\n3    series\ndtype: object',
       '2023-01-06 00:00:00.0000      this\n1        is\n2         a\n3    series\ndtype: object',
       '2023-01-07 00:00:00.0000      this\n1        is\n2         a\n3    series\ndtype: object'],
      dtype='object')
At positional index 0, first diff: 2023-01-01 00:00:000      this
1        is
2         a
3    series
dtype: object != 2023-01-01 00:00:00.0000      this
1        is
2         a
3    series
dtype: object",failed
39216,tests.integ.modin.series.test_add_suffix,test_add_suffix_time_column_df[None],"AssertionError: Series.index are different

Series.index values are different (100.0 %)
[left]:  Index(['2023-01-01 00:00:00None', '2023-01-02 00:00:00None',
       '2023-01-03 00:00:00None', '2023-01-04 00:00:00None',
       '2023-01-05 00:00:00None', '2023-01-06 00:00:00None',
       '2023-01-07 00:00:00None'],
      dtype='object')
[right]: Index(['2023-01-01 00:00:00.000None', '2023-01-02 00:00:00.000None',
       '2023-01-03 00:00:00.000None', '2023-01-04 00:00:00.000None',
       '2023-01-05 00:00:00.000None', '2023-01-06 00:00:00.000None',
       '2023-01-07 00:00:00.000None'],
      dtype='object')
At positional index 0, first diff: 2023-01-01 00:00:00None != 2023-01-01 00:00:00.000None",failed
39217,tests.integ.modin.series.test_add_suffix,test_add_suffix_time_column_df[suffix5],"AssertionError: Series.index are different

Series.index values are different (100.0 %)
[left]:  Index(['2023-01-01 00:00:00[[], [1, 2]]', '2023-01-02 00:00:00[[], [1, 2]]',
       '2023-01-03 00:00:00[[], [1, 2]]', '2023-01-04 00:00:00[[], [1, 2]]',
       '2023-01-05 00:00:00[[], [1, 2]]', '2023-01-06 00:00:00[[], [1, 2]]',
       '2023-01-07 00:00:00[[], [1, 2]]'],
      dtype='object')
[right]: Index(['2023-01-01 00:00:00.000[[], [1, 2]]',
       '2023-01-02 00:00:00.000[[], [1, 2]]',
       '2023-01-03 00:00:00.000[[], [1, 2]]',
       '2023-01-04 00:00:00.000[[], [1, 2]]',
       '2023-01-05 00:00:00.000[[], [1, 2]]',
       '2023-01-06 00:00:00.000[[], [1, 2]]',
       '2023-01-07 00:00:00.000[[], [1, 2]]'],
      dtype='object')
At positional index 0, first diff: 2023-01-01 00:00:00[[], [1, 2]] != 2023-01-01 00:00:00.000[[], [1, 2]]",failed
39219,tests.integ.modin.series.test_add_prefix,test_series_add_prefix_time_column_df[prefix_],"AssertionError: Series.index are different

Series.index values are different (100.0 %)
[left]:  Index(['prefix_2023-01-01 00:00:00', 'prefix_2023-01-02 00:00:00',
       'prefix_2023-01-03 00:00:00', 'prefix_2023-01-04 00:00:00',
       'prefix_2023-01-05 00:00:00', 'prefix_2023-01-06 00:00:00',
       'prefix_2023-01-07 00:00:00'],
      dtype='object')
[right]: Index(['prefix_2023-01-01 00:00:00.000', 'prefix_2023-01-02 00:00:00.000',
       'prefix_2023-01-03 00:00:00.000', 'prefix_2023-01-04 00:00:00.000',
       'prefix_2023-01-05 00:00:00.000', 'prefix_2023-01-06 00:00:00.000',
       'prefix_2023-01-07 00:00:00.000'],
      dtype='object')
At positional index 0, first diff: prefix_2023-01-01 00:00:00 != prefix_2023-01-01 00:00:00.000",failed
39221,tests.integ.modin.series.test_add_suffix,test_add_suffix_time_column_df[suffix7],"AssertionError: Series.index are different

Series.index values are different (100.0 %)
[left]:  Index(['2023-01-01 00:00:00   column1  column2\n0       67      909\n1       68      910',
       '2023-01-02 00:00:00   column1  column2\n0       67      909\n1       68      910',
       '2023-01-03 00:00:00   column1  column2\n0       67      909\n1       68      910',
       '2023-01-04 00:00:00   column1  column2\n0       67      909\n1       68      910',
       '2023-01-05 00:00:00   column1  column2\n0       67      909\n1       68      910',
       '2023-01-06 00:00:00   column1  column2\n0       67      909\n1       68      910',
       '2023-01-07 00:00:00   column1  column2\n0       67      909\n1       68      910'],
      dtype='object')
[right]: Index(['2023-01-01 00:00:00.000   column1  column2\n0       67      909\n1       68      910',
       '2023-01-02 00:00:00.000   column1  column2\n0       67      909\n1       68      910',
       '2023-01-03 00:00:00.000   column1  column2\n0       67      909\n1       68      910',
       '2023-01-04 00:00:00.000   column1  column2\n0       67      909\n1       68      910',
       '2023-01-05 00:00:00.000   column1  column2\n0       67      909\n1       68      910',
       '2023-01-06 00:00:00.000   column1  column2\n0       67      909\n1       68      910',
       '2023-01-07 00:00:00.000   column1  column2\n0       67      909\n1       68      910'],
      dtype='object')
At positional index 0, first diff: 2023-01-01 00:00:00   column1  column2
0       67      909
1       68      910 != 2023-01-01 00:00:00.000   column1  column2
0       67      909
1       68      910",failed
39222,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[True-True-read_with_select_*-],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed550-0e11-71c8-000c-a90c0e8df40b, sql_text=CREATE OR REPLACE SCOPED TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_FSH0Q9BI9ZREADONLY CLONE SNOWPARK_TEMP_TABLE_471OHSBULJTESTTABLENAME), QueryRecord(query_id=01bed550-0e11-719e-000c-a90c0e8e3327, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_FSH0Q9BI9ZREADONLY) LIMIT 1), QueryRecord(query_id=01bed550-0e11-6bde-000c-a90c0e8e4347, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL1"", ""S"" FROM SNOWPARK_TEMP_TABLE_FSH0Q9BI9ZREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39226,tests.integ.modin.frame.test_to_dynamic_table,test_to_dynamic_table_no_enforce_ordering[function],"NotImplementedError: Modin supports the method DataFrame.to_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
39230,tests.integ.modin.series.test_aggregate,test_agg_series[data0-float32-<lambda>-False-False-12],"AssertionError: One of the passed functions has an invalid type: <class 'NoneType'>: None, only callable or string is acceptable.",failed
39232,tests.integ.modin.series.test_aggregate,test_agg_series[data0-float32-<lambda>-False-False-11],"AssertionError: One of the passed functions has an invalid type: <class 'NoneType'>: None, only callable or string is acceptable.",failed
39239,tests.integ.modin.series.test_aggregate,test_agg_series[data0-float32-<lambda>-False-False-01],"AssertionError: One of the passed functions has an invalid type: <class 'NoneType'>: None, only callable or string is acceptable.",failed
39242,tests.integ.modin.series.test_aggregate,test_agg_series[data1-Float32-<lambda>-False-False-01],"AssertionError: One of the passed functions has an invalid type: <class 'NoneType'>: None, only callable or string is acceptable.",failed
39243,tests.integ.modin.series.test_aggregate,test_agg_series[data1-Float32-<lambda>-False-False-11],"AssertionError: One of the passed functions has an invalid type: <class 'NoneType'>: None, only callable or string is acceptable.",failed
39246,tests.integ.modin.series.test_aggregate,test_agg_series[data0-float32-<lambda>-False-True-21],"AssertionError: One of the passed functions has an invalid type: <class 'NoneType'>: None, only callable or string is acceptable.",failed
39247,tests.integ.modin.series.test_aggregate,test_agg_series[data1-Float32-<lambda>-False-True-21],"AssertionError: One of the passed functions has an invalid type: <class 'NoneType'>: None, only callable or string is acceptable.",failed
39255,tests.integ.modin.series.test_aggregate,test_agg_series[data2-Int64-<lambda>-False-False-11],"AssertionError: One of the passed functions has an invalid type: <class 'NoneType'>: None, only callable or string is acceptable.",failed
39256,tests.integ.modin.series.test_aggregate,test_agg_series[data2-Int64-<lambda>-False-False-01],"AssertionError: One of the passed functions has an invalid type: <class 'NoneType'>: None, only callable or string is acceptable.",failed
39258,tests.integ.modin.series.test_aggregate,test_agg_series[data2-Int64-<lambda>-False-False-12],"AssertionError: One of the passed functions has an invalid type: <class 'NoneType'>: None, only callable or string is acceptable.",failed
39260,tests.integ.modin.series.test_aggregate,test_agg_series[data1-Float32-<lambda>-True-False-00],TypeError: boolean value of NA is ambiguous,failed
39267,tests.integ.modin.series.test_aggregate,test_agg_series[data2-Int64-<lambda>-True-False-00],TypeError: boolean value of NA is ambiguous,failed
39268,tests.integ.modin.series.test_aggregate,test_agg_series[data1-Float32-<lambda>-False-False-12],"AssertionError: One of the passed functions has an invalid type: <class 'NoneType'>: None, only callable or string is acceptable.",failed
39269,tests.integ.modin.series.test_aggregate,test_agg_series[data3-string-<lambda>-False-False-11],"AssertionError: One of the passed functions has an invalid type: <class 'NoneType'>: None, only callable or string is acceptable.",failed
39274,tests.integ.modin.series.test_aggregate,test_agg_series[data3-string-<lambda>-False-False-12],"AssertionError: One of the passed functions has an invalid type: <class 'NoneType'>: None, only callable or string is acceptable.",failed
39276,tests.integ.modin.series.test_aggregate,test_agg_series[data3-string-<lambda>-False-False-01],"AssertionError: One of the passed functions has an invalid type: <class 'NoneType'>: None, only callable or string is acceptable.",failed
39278,tests.integ.modin.series.test_aggregate,test_agg_series[data2-Int64-<lambda>-False-True-21],"AssertionError: One of the passed functions has an invalid type: <class 'NoneType'>: None, only callable or string is acceptable.",failed
39280,tests.integ.modin.frame.test_to_dynamic_table,test_to_dynamic_table_multiple_sessions_no_enforce_ordering[method],"NotImplementedError: Modin supports the method DataFrame.to_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
39281,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[True-True-read_with_select_*-temporary],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed550-0e11-71d7-000c-a90c0e8e06e3, sql_text=CREATE OR REPLACE SCOPED TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_FD1H7G5JIVREADONLY CLONE SNOWPARK_TEMP_TABLE_9PGZY8YWCMTESTTABLENAME), QueryRecord(query_id=01bed550-0e11-6ed3-000c-a90c0e8dae0b, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_FD1H7G5JIVREADONLY) LIMIT 1), QueryRecord(query_id=01bed550-0e11-6e4d-000c-a90c0e8eb15b, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL1"", ""S"" FROM SNOWPARK_TEMP_TABLE_FD1H7G5JIVREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39282,tests.integ.modin.frame.test_to_dynamic_table,test_to_dynamic_table_multiple_sessions_no_enforce_ordering[function],"NotImplementedError: Modin supports the method DataFrame.to_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
39285,tests.integ.modin.frame.test_to_dynamic_table,test_to_dynamic_table_index[method-True-None-expected_index_columns0],"NotImplementedError: Modin supports the method DataFrame.to_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
39287,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[True-True-read_with_select_*-transient],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed550-0e11-6d76-000c-a90c0e8e2877, sql_text=CREATE OR REPLACE SCOPED TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_PI32SGUJQ9READONLY CLONE SNOWPARK_TEMP_TABLE_VHPK1U92ZTTESTTABLENAME), QueryRecord(query_id=01bed550-0e11-71f1-000c-a90c0e8e77b7, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_PI32SGUJQ9READONLY) LIMIT 1), QueryRecord(query_id=01bed550-0e11-6e4e-000c-a90c0e8ee3a3, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL1"", ""S"" FROM SNOWPARK_TEMP_TABLE_PI32SGUJQ9READONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39300,tests.integ.modin.frame.test_to_dynamic_table,test_to_dynamic_table_index[method-True-index_labels1-expected_index_columns1],"NotImplementedError: Modin supports the method DataFrame.to_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
39321,tests.integ.modin.frame.test_to_dynamic_table,test_to_dynamic_table_index[method-False-None-expected_index_columns2],"NotImplementedError: Modin supports the method DataFrame.to_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
39322,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[True-True-read_with_select_*-view],"assert 4 == 2
 +  where 4 = len([QueryRecord(query_id=01bed550-0e11-7168-000c-a90c0e8e6a77, sql_text=CREATE OR REPLACE SCOPED TEMPORARY TABLE SNOWPARK_TEMP_TABLE_VVASJCDW7G AS SELECT * FROM SNOWPARK_TEMP_VIEW_BUSNEMZO39), QueryRecord(query_id=01bed550-0e11-71d7-000c-a90c0e8e0eb3, sql_text=CREATE OR REPLACE SCOPED TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_21FLJSE57ZREADONLY CLONE SNOWPARK_TEMP_TABLE_VVASJCDW7G), QueryRecord(query_id=01bed550-0e11-6ed3-000c-a90c0e8f1557, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_21FLJSE57ZREADONLY) LIMIT 1), QueryRecord(query_id=01bed550-0e11-6e4d-000c-a90c0e8eb8af, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL1"", ""S"" FROM SNOWPARK_TEMP_TABLE_21FLJSE57ZREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39323,tests.integ.modin.frame.test_to_dynamic_table,test_to_dynamic_table_index[method-False-index_labels3-expected_index_columns3],"NotImplementedError: Modin supports the method DataFrame.to_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
39324,tests.integ.modin.frame.test_to_dynamic_table,test_to_dynamic_table_index[function-True-None-expected_index_columns0],"NotImplementedError: Modin supports the method DataFrame.to_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
39325,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[True-True-read_with_select_*-SECURE VIEW],"assert 4 == 2
 +  where 4 = len([QueryRecord(query_id=01bed550-0e11-71c8-000c-a90c0e8f72c7, sql_text=CREATE OR REPLACE SCOPED TEMPORARY TABLE SNOWPARK_TEMP_TABLE_P2RIMJEQC5 AS SELECT * FROM SNOWPARK_TEMP_VIEW_U13OORF8FI), QueryRecord(query_id=01bed550-0e11-6e4e-000c-a90c0e8eeb3f, sql_text=CREATE OR REPLACE SCOPED TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_1X7GWZU6W3READONLY CLONE SNOWPARK_TEMP_TABLE_P2RIMJEQC5), QueryRecord(query_id=01bed550-0e11-6e87-000c-a90c0e8e9f87, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_1X7GWZU6W3READONLY) LIMIT 1), QueryRecord(query_id=01bed550-0e11-722e-000c-a90c0e8f471f, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL1"", ""S"" FROM SNOWPARK_TEMP_TABLE_1X7GWZU6W3READONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39326,tests.integ.modin.frame.test_to_dynamic_table,test_to_dynamic_table_index[function-True-index_labels1-expected_index_columns1],"NotImplementedError: Modin supports the method DataFrame.to_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
39327,tests.integ.modin.frame.test_to_dynamic_table,test_to_dynamic_table_index[function-False-None-expected_index_columns2],"NotImplementedError: Modin supports the method DataFrame.to_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
39328,tests.integ.modin.frame.test_to_dynamic_table,test_to_dynamic_table_index[function-False-index_labels3-expected_index_columns3],"NotImplementedError: Modin supports the method DataFrame.to_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
39329,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[True-True-read_with_select_*-TEMP VIEW],"assert 4 == 2
 +  where 4 = len([QueryRecord(query_id=01bed550-0e11-6e4d-000c-a90c0e8ebfc3, sql_text=CREATE OR REPLACE SCOPED TEMPORARY TABLE SNOWPARK_TEMP_TABLE_C2LUSH9TPF AS SELECT * FROM SNOWPARK_TEMP_VIEW_S4KDWVSLX3), QueryRecord(query_id=01bed550-0e11-6ce4-000c-a90c0e8f2cd3, sql_text=CREATE OR REPLACE SCOPED TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_71QDQHGL62READONLY CLONE SNOWPARK_TEMP_TABLE_C2LUSH9TPF), QueryRecord(query_id=01bed550-0e11-6e5e-000c-a90c0e9041f7, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_71QDQHGL62READONLY) LIMIT 1), QueryRecord(query_id=01bed550-0e11-6dc3-000c-a90c0e90700b, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL1"", ""S"" FROM SNOWPARK_TEMP_TABLE_71QDQHGL62READONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39330,tests.integ.modin.frame.test_to_dynamic_table,test_to_dynamic_table_multiindex[method],"NotImplementedError: Modin supports the method DataFrame.to_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
39331,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[True-True-read_with_table_name-],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed550-0e11-6e87-000c-a90c0e8fe62b, sql_text=CREATE OR REPLACE SCOPED TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_LCW81JBJ3FREADONLY CLONE SNOWPARK_TEMP_TABLE_GEN5569UGSTESTTABLENAME), QueryRecord(query_id=01bed550-0e11-722e-000c-a90c0e8f4e5f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_LCW81JBJ3FREADONLY) LIMIT 1), QueryRecord(query_id=01bed550-0e11-71d7-000c-a90c0e8f8ccf, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL1"", ""S"" FROM SNOWPARK_TEMP_TABLE_LCW81JBJ3FREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39332,tests.integ.modin.frame.test_to_dynamic_table,test_to_dynamic_table_multiindex[function],"NotImplementedError: Modin supports the method DataFrame.to_dynamic_table on the Snowflake backend, but not on the backend Pandas.",failed
39335,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[True-True-read_with_table_name-temporary],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed550-0e11-6e2a-000c-a90c0e9006ef, sql_text=CREATE OR REPLACE SCOPED TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_M3T9DX9UVSREADONLY CLONE SNOWPARK_TEMP_TABLE_61RG75AKF2TESTTABLENAME), QueryRecord(query_id=01bed550-0e11-6ce4-000c-a90c0e9093e3, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_M3T9DX9UVSREADONLY) LIMIT 1), QueryRecord(query_id=01bed550-0e11-6e5e-000c-a90c0e90496b, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL1"", ""S"" FROM SNOWPARK_TEMP_TABLE_M3T9DX9UVSREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39337,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[True-True-read_with_table_name-transient],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed550-0e11-71c8-000c-a90c0e90d21b, sql_text=CREATE OR REPLACE SCOPED TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_EH4Q2HPQKOREADONLY CLONE SNOWPARK_TEMP_TABLE_1CZTIFKQSVTESTTABLENAME), QueryRecord(query_id=01bed550-0e11-719e-000c-a90c0e90f17b, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_EH4Q2HPQKOREADONLY) LIMIT 1), QueryRecord(query_id=01bed550-0e11-722e-000c-a90c0e90c537, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL1"", ""S"" FROM SNOWPARK_TEMP_TABLE_EH4Q2HPQKOREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39339,tests.integ.modin.frame.test_to_iceberg,test_to_iceberg_config_required[method],"AssertionError: Regex pattern did not match.
 Regex: ""missing 1 required keyword-only argument: 'iceberg_config'""
 Input: ""missing a required argument: 'iceberg_config'""",failed
39340,tests.integ.modin.frame.test_to_iceberg,test_to_iceberg_config_required[function],"AssertionError: Regex pattern did not match.
 Regex: ""missing 1 required keyword-only argument: 'iceberg_config'""
 Input: ""missing a required argument: 'iceberg_config'""",failed
39342,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[True-True-read_with_table_name-view],"assert 4 == 2
 +  where 4 = len([QueryRecord(query_id=01bed550-0e11-6d08-000c-a90c0e906ba3, sql_text=CREATE OR REPLACE SCOPED TEMPORARY TABLE SNOWPARK_TEMP_TABLE_ZBJI25QCPJ AS SELECT * FROM SNOWPARK_TEMP_VIEW_MVLLER6MCF), QueryRecord(query_id=01bed550-0e11-6e2a-000c-a90c0e900ea7, sql_text=CREATE OR REPLACE SCOPED TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_6QD80QY9DUREADONLY CLONE SNOWPARK_TEMP_TABLE_ZBJI25QCPJ), QueryRecord(query_id=01bed550-0e11-6ce4-000c-a90c0e909b9b, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_6QD80QY9DUREADONLY) LIMIT 1), QueryRecord(query_id=01bed550-0e11-6e5e-000c-a90c0e917127, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL1"", ""S"" FROM SNOWPARK_TEMP_TABLE_6QD80QY9DUREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39345,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[True-True-read_with_table_name-SECURE VIEW],"assert 4 == 2
 +  where 4 = len([QueryRecord(query_id=01bed550-0e11-6bde-000c-a90c0e911787, sql_text=CREATE OR REPLACE SCOPED TEMPORARY TABLE SNOWPARK_TEMP_TABLE_SG1TOUNOND AS SELECT * FROM SNOWPARK_TEMP_VIEW_FE7Y3PM96O), QueryRecord(query_id=01bed550-0e11-722e-000c-a90c0e90cbb3, sql_text=CREATE OR REPLACE SCOPED TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_A5NVKY1ABOREADONLY CLONE SNOWPARK_TEMP_TABLE_SG1TOUNOND), QueryRecord(query_id=01bed551-0e11-7168-000c-a90c0e91387b, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_A5NVKY1ABOREADONLY) LIMIT 1), QueryRecord(query_id=01bed551-0e11-6bfa-000c-a90c0e916667, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL1"", ""S"" FROM SNOWPARK_TEMP_TABLE_A5NVKY1ABOREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39350,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[True-True-read_with_table_name-TEMP VIEW],"assert 4 == 2
 +  where 4 = len([QueryRecord(query_id=01bed551-0e11-6e5e-000c-a90c0e917847, sql_text=CREATE OR REPLACE SCOPED TEMPORARY TABLE SNOWPARK_TEMP_TABLE_UZYB5VZ8XB AS SELECT * FROM SNOWPARK_TEMP_VIEW_28JOAAZDON), QueryRecord(query_id=01bed551-0e11-6d76-000c-a90c0e910c9f, sql_text=CREATE OR REPLACE SCOPED TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_XHIAXYF2QHREADONLY CLONE SNOWPARK_TEMP_TABLE_UZYB5VZ8XB), QueryRecord(query_id=01bed551-0e11-71f1-000c-a90c0e912c43, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_XHIAXYF2QHREADONLY) LIMIT 1), QueryRecord(query_id=01bed551-0e11-719e-000c-a90c0e90fe77, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL1"", ""S"" FROM SNOWPARK_TEMP_TABLE_XHIAXYF2QHREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39351,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[True-False-read_with_select_*-],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed551-0e11-71d7-000c-a90c0e92517f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_3WQANSKV3TTESTTABLENAME) LIMIT 1), QueryRecord(query_id=01bed551-0e11-6ed3-000c-a90c0e91e70f, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL1"", ""S"" FROM (SNOWPARK_TEMP_TABLE_3WQANSKV3TTESTTABLENAME)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39352,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[True-False-read_with_select_*-temporary],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed551-0e11-721e-000c-a90c0e922597, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_4LG822A3DITESTTABLENAME) LIMIT 1), QueryRecord(query_id=01bed551-0e11-6d76-000c-a90c0e929183, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL1"", ""S"" FROM (SNOWPARK_TEMP_TABLE_4LG822A3DITESTTABLENAME)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39353,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[True-False-read_with_select_*-transient],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed551-0e11-719e-000c-a90c0e92729f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_RUBNI3B0S7TESTTABLENAME) LIMIT 1), QueryRecord(query_id=01bed551-0e11-6bde-000c-a90c0e92645f, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL1"", ""S"" FROM (SNOWPARK_TEMP_TABLE_RUBNI3B0S7TESTTABLENAME)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39355,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[True-False-read_with_select_*-view],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed551-0e11-6d08-000c-a90c0e91cefb, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_VIEW_N1GTLI05XA) LIMIT 1), QueryRecord(query_id=01bed551-0e11-6e4d-000c-a90c0e919f9f, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL1"", ""S"" FROM (SNOWPARK_TEMP_VIEW_N1GTLI05XA)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39358,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[True-False-read_with_select_*-SECURE VIEW],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed551-0e11-71c8-000c-a90c0e921b73, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_VIEW_MRNTH5WP91) LIMIT 1), QueryRecord(query_id=01bed551-0e11-719e-000c-a90c0e927727, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL1"", ""S"" FROM (SNOWPARK_TEMP_VIEW_MRNTH5WP91)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39360,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[True-False-read_with_select_*-TEMP VIEW],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed551-0e11-6ed3-000c-a90c0e935023, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_VIEW_AWG4ROY2JI) LIMIT 1), QueryRecord(query_id=01bed551-0e11-6e2a-000c-a90c0e92d5f7, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL1"", ""S"" FROM (SNOWPARK_TEMP_VIEW_AWG4ROY2JI)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39362,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[True-False-read_with_table_name-],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed551-0e11-6dc3-000c-a90c0e934277, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_8FQZNCBFNETESTTABLENAME) LIMIT 1), QueryRecord(query_id=01bed551-0e11-71c8-000c-a90c0e921fb3, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL1"", ""S"" FROM (SNOWPARK_TEMP_TABLE_8FQZNCBFNETESTTABLENAME)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39364,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[True-False-read_with_table_name-temporary],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed551-0e11-71dd-000c-a90c0e93264b, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_R1XNYXVVUATESTTABLENAME) LIMIT 1), QueryRecord(query_id=01bed551-0e11-71d7-000c-a90c0e925e87, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL1"", ""S"" FROM (SNOWPARK_TEMP_TABLE_R1XNYXVVUATESTTABLENAME)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39366,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[True-False-read_with_table_name-transient],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed551-0e11-6e4d-000c-a90c0e9307db, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_O0YMMERUL3TESTTABLENAME) LIMIT 1), QueryRecord(query_id=01bed551-0e11-721e-000c-a90c0e9372af, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL1"", ""S"" FROM (SNOWPARK_TEMP_TABLE_O0YMMERUL3TESTTABLENAME)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39369,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[True-False-read_with_table_name-view],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed551-0e11-6e4e-000c-a90c0e92fc83, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_VIEW_8MXHHX2FO7) LIMIT 1), QueryRecord(query_id=01bed551-0e11-6bde-000c-a90c0e93c2b7, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL1"", ""S"" FROM (SNOWPARK_TEMP_VIEW_8MXHHX2FO7)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39371,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[True-False-read_with_table_name-SECURE VIEW],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed551-0e11-6d08-000c-a90c0e931d3f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_VIEW_S98U0QJSDC) LIMIT 1), QueryRecord(query_id=01bed551-0e11-6e4d-000c-a90c0e930dd7, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL1"", ""S"" FROM (SNOWPARK_TEMP_VIEW_S98U0QJSDC)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39373,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_views[True-False-read_with_table_name-TEMP VIEW],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed551-0e11-71c8-000c-a90c0e938a27, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_VIEW_LVX4DXDK8J) LIMIT 1), QueryRecord(query_id=01bed551-0e11-6e87-000c-a90c0e94233f, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL1"", ""S"" FROM (SNOWPARK_TEMP_VIEW_LVX4DXDK8J)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39376,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_row_access_policy_table[False-True-read_with_select_*],"assert 4 == 2
 +  where 4 = len([QueryRecord(query_id=01bed551-0e11-6d08-000c-a90c0e94916b, sql_text=CREATE OR REPLACE TEMPORARY TABLE SNOWPARK_TEMP_TABLE_9RPC8HXZ2N AS SELECT * FROM SNOWPARK_TEMP_TABLE_WCTN2N24C5TESTTABLENAME), QueryRecord(query_id=01bed551-0e11-6e2a-000c-a90c0e944407, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_9R8DJUT0MOREADONLY CLONE SNOWPARK_TEMP_TABLE_9RPC8HXZ2N), QueryRecord(query_id=01bed551-0e11-6e87-000c-a90c0e94266b, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_9R8DJUT0MOREADONLY) LIMIT 1), QueryRecord(query_id=01bed551-0e11-6e5e-000c-a90c0e946407, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL1"", ""S"" FROM SNOWPARK_TEMP_TABLE_9R8DJUT0MOREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39379,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_row_access_policy_table[False-True-read_with_table_name],"assert 4 == 2
 +  where 4 = len([QueryRecord(query_id=01bed551-0e11-6e87-000c-a90c0e942853, sql_text=CREATE OR REPLACE TEMPORARY TABLE SNOWPARK_TEMP_TABLE_4N2CMDMF39 AS SELECT * FROM SNOWPARK_TEMP_TABLE_R23TFOOD9RTESTTABLENAME), QueryRecord(query_id=01bed551-0e11-719e-000c-a90c0e93ec03, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_WYD3B63QPIREADONLY CLONE SNOWPARK_TEMP_TABLE_4N2CMDMF39), QueryRecord(query_id=01bed551-0e11-6d76-000c-a90c0e93fc4f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_WYD3B63QPIREADONLY) LIMIT 1), QueryRecord(query_id=01bed551-0e11-6bde-000c-a90c0e93cdc3, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL1"", ""S"" FROM SNOWPARK_TEMP_TABLE_WYD3B63QPIREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39381,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_row_access_policy_table[False-False-read_with_select_*],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed551-0e11-71f1-000c-a90c0e940d8f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_ILOV2CHS54TESTTABLENAME) LIMIT 1), QueryRecord(query_id=01bed551-0e11-7168-000c-a90c0e93de07, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL1"", ""S"" FROM (SNOWPARK_TEMP_TABLE_ILOV2CHS54TESTTABLENAME)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39383,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_row_access_policy_table[False-False-read_with_table_name],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed551-0e11-6ce4-000c-a90c0e94c453, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_JFDWBNE61PTESTTABLENAME) LIMIT 1), QueryRecord(query_id=01bed551-0e11-71f1-000c-a90c0e956053, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL1"", ""S"" FROM (SNOWPARK_TEMP_TABLE_JFDWBNE61PTESTTABLENAME)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39386,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_row_access_policy_table[True-True-read_with_select_*],"assert 4 == 2
 +  where 4 = len([QueryRecord(query_id=01bed551-0e11-6d76-000c-a90c0e955287, sql_text=CREATE OR REPLACE SCOPED TEMPORARY TABLE SNOWPARK_TEMP_TABLE_5J2QSUUF0Y AS SELECT * FROM SNOWPARK_TEMP_TABLE_GPIIQQHIJRTESTTABLENAME), QueryRecord(query_id=01bed551-0e11-722e-000c-a90c0e950667, sql_text=CREATE OR REPLACE SCOPED TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_976NC1YOWJREADONLY CLONE SNOWPARK_TEMP_TABLE_5J2QSUUF0Y), QueryRecord(query_id=01bed551-0e11-6e4d-000c-a90c0e948cf3, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_976NC1YOWJREADONLY) LIMIT 1), QueryRecord(query_id=01bed551-0e11-6e5e-000c-a90c0e946edb, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL1"", ""S"" FROM SNOWPARK_TEMP_TABLE_976NC1YOWJREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39389,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_row_access_policy_table[True-True-read_with_table_name],"assert 4 == 2
 +  where 4 = len([QueryRecord(query_id=01bed551-0e11-7168-000c-a90c0e957573, sql_text=CREATE OR REPLACE SCOPED TEMPORARY TABLE SNOWPARK_TEMP_TABLE_M5FGLO6ENI AS SELECT * FROM SNOWPARK_TEMP_TABLE_3MC6YOAVHSTESTTABLENAME), QueryRecord(query_id=01bed551-0e11-6d08-000c-a90c0e949f7f, sql_text=CREATE OR REPLACE SCOPED TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_F48C0PB6U5READONLY CLONE SNOWPARK_TEMP_TABLE_M5FGLO6ENI), QueryRecord(query_id=01bed551-0e11-71c8-000c-a90c0e94ec17, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_F48C0PB6U5READONLY) LIMIT 1), QueryRecord(query_id=01bed551-0e11-6ce4-000c-a90c0e94c823, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""COL1"", ""S"" FROM SNOWPARK_TEMP_TABLE_F48C0PB6U5READONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39391,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_row_access_policy_table[True-False-read_with_select_*],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed551-0e11-6e5e-000c-a90c0e95d3a3, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_X640TEYWARTESTTABLENAME) LIMIT 1), QueryRecord(query_id=01bed551-0e11-6e4e-000c-a90c0e95a597, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL1"", ""S"" FROM (SNOWPARK_TEMP_TABLE_X640TEYWARTESTTABLENAME)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39393,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_row_access_policy_table[True-False-read_with_table_name],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed551-0e11-71dd-000c-a90c0e95c627, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_F6ERIGE6L0TESTTABLENAME) LIMIT 1), QueryRecord(query_id=01bed551-0e11-71f1-000c-a90c0e956bcb, sql_text=SELECT ""__row_position__"", ""COL1"", ""S"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""COL1"", ""S"" FROM (SNOWPARK_TEMP_TABLE_F6ERIGE6L0TESTTABLENAME)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39395,tests.integ.modin.io.test_read_snowflake,"test_decimal[True-read_with_select_*-input_data0-decimal(3, 1)-logical_dtype0-actual_dtype0]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed551-0e11-6bfa-000c-a90c0e958a0f, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_6NHI6Z48YQREADONLY CLONE SNOWPARK_TEMP_TABLE_5K4P4IA45ATESTTABLENAME), QueryRecord(query_id=01bed551-0e11-6e2a-000c-a90c0e95b9bf, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_6NHI6Z48YQREADONLY) LIMIT 1), QueryRecord(query_id=01bed551-0e11-6dc3-000c-a90c0e9616fb, sql_text=SELECT ""__row_position__"", ""D"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""D"" FROM SNOWPARK_TEMP_TABLE_6NHI6Z48YQREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39399,tests.integ.modin.io.test_read_snowflake,"test_decimal[True-read_with_select_*-input_data1-decimal(38, 1)-logical_dtype1-actual_dtype1]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed551-0e11-7168-000c-a90c0e957f3f, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_YKEPGB8EVWREADONLY CLONE SNOWPARK_TEMP_TABLE_R0TLHA0XGBTESTTABLENAME), QueryRecord(query_id=01bed551-0e11-71d7-000c-a90c0e967433, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_YKEPGB8EVWREADONLY) LIMIT 1), QueryRecord(query_id=01bed551-0e11-71dd-000c-a90c0e95cedf, sql_text=SELECT ""__row_position__"", ""D"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""D"" FROM SNOWPARK_TEMP_TABLE_YKEPGB8EVWREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39401,tests.integ.modin.io.test_read_snowflake,"test_decimal[True-read_with_select_*-input_data2-decimal(3, 0)-logical_dtype2-actual_dtype2]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed551-0e11-722e-000c-a90c0e96586f, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_AHCX6CAO35READONLY CLONE SNOWPARK_TEMP_TABLE_HGCOBWWXKQTESTTABLENAME), QueryRecord(query_id=01bed551-0e11-6e4d-000c-a90c0e960c5b, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_AHCX6CAO35READONLY) LIMIT 1), QueryRecord(query_id=01bed552-0e11-6e5e-000c-a90c0e95df5b, sql_text=SELECT ""__row_position__"", ""D"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""D"" FROM SNOWPARK_TEMP_TABLE_AHCX6CAO35READONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39404,tests.integ.modin.io.test_read_snowflake,"test_decimal[True-read_with_select_*-input_data3-decimal(38, 0)-logical_dtype3-actual_dtype3]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed552-0e11-719e-000c-a90c0e968783, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_Z1NF6J5LKFREADONLY CLONE SNOWPARK_TEMP_TABLE_V9Y0HCNGA3TESTTABLENAME), QueryRecord(query_id=01bed552-0e11-721e-000c-a90c0e964d5f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_Z1NF6J5LKFREADONLY) LIMIT 1), QueryRecord(query_id=01bed552-0e11-6d08-000c-a90c0e97405f, sql_text=SELECT ""__row_position__"", ""D"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""D"" FROM SNOWPARK_TEMP_TABLE_Z1NF6J5LKFREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39406,tests.integ.modin.io.test_read_snowflake,"test_decimal[True-read_with_select_*-input_data4-decimal(15, 0)-logical_dtype4-actual_dtype4]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed552-0e11-6e87-000c-a90c0e96e5fb, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_XCPZQLFJ97READONLY CLONE SNOWPARK_TEMP_TABLE_14R0NFJAOFTESTTABLENAME), QueryRecord(query_id=01bed552-0e11-722e-000c-a90c0e965ed7, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_XCPZQLFJ97READONLY) LIMIT 1), QueryRecord(query_id=01bed552-0e11-6e4e-000c-a90c0e97255f, sql_text=SELECT ""__row_position__"", ""D"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""D"" FROM SNOWPARK_TEMP_TABLE_XCPZQLFJ97READONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39409,tests.integ.modin.io.test_read_snowflake,"test_decimal[True-read_with_select_*-input_data5-decimal(38, 0)-logical_dtype5-actual_dtype5]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed552-0e11-6d76-000c-a90c0e96abcb, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_IDVBQQX1WKREADONLY CLONE SNOWPARK_TEMP_TABLE_12ZBFPVDUQTESTTABLENAME), QueryRecord(query_id=01bed552-0e11-719e-000c-a90c0e968daf, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_IDVBQQX1WKREADONLY) LIMIT 1), QueryRecord(query_id=01bed552-0e11-721e-000c-a90c0e9792b3, sql_text=SELECT ""__row_position__"", ""D"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""D"" FROM SNOWPARK_TEMP_TABLE_IDVBQQX1WKREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39411,tests.integ.modin.io.test_read_snowflake,"test_decimal[True-read_with_table_name-input_data0-decimal(3, 1)-logical_dtype0-actual_dtype0]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed552-0e11-6bfa-000c-a90c0e96fb6b, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_S6V1BJU6UWREADONLY CLONE SNOWPARK_TEMP_TABLE_RO74SWJ5DETESTTABLENAME), QueryRecord(query_id=01bed552-0e11-6e2a-000c-a90c0e971abb, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_S6V1BJU6UWREADONLY) LIMIT 1), QueryRecord(query_id=01bed552-0e11-6dc3-000c-a90c0e97587f, sql_text=SELECT ""__row_position__"", ""D"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""D"" FROM SNOWPARK_TEMP_TABLE_S6V1BJU6UWREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39413,tests.integ.modin.io.test_read_snowflake,"test_decimal[True-read_with_table_name-input_data1-decimal(38, 1)-logical_dtype1-actual_dtype1]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed552-0e11-721e-000c-a90c0e97968b, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_Q4U64CZ4ERREADONLY CLONE SNOWPARK_TEMP_TABLE_UPTCTK3GRYTESTTABLENAME), QueryRecord(query_id=01bed552-0e11-6e4e-000c-a90c0e972e7f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_Q4U64CZ4ERREADONLY) LIMIT 1), QueryRecord(query_id=01bed552-0e11-6bde-000c-a90c0e980453, sql_text=SELECT ""__row_position__"", ""D"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""D"" FROM SNOWPARK_TEMP_TABLE_Q4U64CZ4ERREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39415,tests.integ.modin.io.test_read_snowflake,"test_decimal[True-read_with_table_name-input_data2-decimal(3, 0)-logical_dtype2-actual_dtype2]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed552-0e11-6e5e-000c-a90c0e973e3f, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_SKTL1Z8YL1READONLY CLONE SNOWPARK_TEMP_TABLE_DZ3HEHWTX2TESTTABLENAME), QueryRecord(query_id=01bed552-0e11-6d76-000c-a90c0e98158b, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_SKTL1Z8YL1READONLY) LIMIT 1), QueryRecord(query_id=01bed552-0e11-6e4e-000c-a90c0e9871b7, sql_text=SELECT ""__row_position__"", ""D"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""D"" FROM SNOWPARK_TEMP_TABLE_SKTL1Z8YL1READONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39417,tests.integ.modin.io.test_read_snowflake,"test_decimal[True-read_with_table_name-input_data3-decimal(38, 0)-logical_dtype3-actual_dtype3]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed552-0e11-7168-000c-a90c0e9835af, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_DZ98IRI6AJREADONLY CLONE SNOWPARK_TEMP_TABLE_LHMP1SS6O2TESTTABLENAME), QueryRecord(query_id=01bed552-0e11-6e2a-000c-a90c0e988327, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_DZ98IRI6AJREADONLY) LIMIT 1), QueryRecord(query_id=01bed552-0e11-6dc3-000c-a90c0e98b133, sql_text=SELECT ""__row_position__"", ""D"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""D"" FROM SNOWPARK_TEMP_TABLE_DZ98IRI6AJREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39419,tests.integ.modin.io.test_read_snowflake,"test_decimal[True-read_with_table_name-input_data4-decimal(15, 0)-logical_dtype4-actual_dtype4]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed552-0e11-721e-000c-a90c0e979feb, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_30FI7UQGMBREADONLY CLONE SNOWPARK_TEMP_TABLE_I60T5QP4EZTESTTABLENAME), QueryRecord(query_id=01bed552-0e11-6d08-000c-a90c0e98a40f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_30FI7UQGMBREADONLY) LIMIT 1), QueryRecord(query_id=01bed552-0e11-71c8-000c-a90c0e98f10b, sql_text=SELECT ""__row_position__"", ""D"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""D"" FROM SNOWPARK_TEMP_TABLE_30FI7UQGMBREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39421,tests.integ.modin.io.test_read_snowflake,"test_decimal[True-read_with_table_name-input_data5-decimal(38, 0)-logical_dtype5-actual_dtype5]","assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed552-0e11-7168-000c-a90c0e983b57, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_4VVCNGQOQRREADONLY CLONE SNOWPARK_TEMP_TABLE_ZVLJB9BQ3RTESTTABLENAME), QueryRecord(query_id=01bed552-0e11-71f1-000c-a90c0e982f07, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_4VVCNGQOQRREADONLY) LIMIT 1), QueryRecord(query_id=01bed552-0e11-71d7-000c-a90c0e9910c3, sql_text=SELECT ""__row_position__"", ""D"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""D"" FROM SNOWPARK_TEMP_TABLE_4VVCNGQOQRREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39422,tests.integ.modin.io.test_read_snowflake,"test_decimal[False-read_with_select_*-input_data0-decimal(3, 1)-logical_dtype0-actual_dtype0]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed552-0e11-6e87-000c-a90c0e984d23, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_4853ZO25MXTESTTABLENAME) LIMIT 1), QueryRecord(query_id=01bed552-0e11-6bfa-000c-a90c0e985ce7, sql_text=SELECT ""__row_position__"", ""D"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""D"" FROM (SNOWPARK_TEMP_TABLE_4853ZO25MXTESTTABLENAME)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39424,tests.integ.modin.io.test_read_snowflake,"test_decimal[False-read_with_select_*-input_data1-decimal(38, 1)-logical_dtype1-actual_dtype1]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed552-0e11-6e5e-000c-a90c0e989ac3, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_DLN55WIBGITESTTABLENAME) LIMIT 1), QueryRecord(query_id=01bed552-0e11-71c8-000c-a90c0e98f68f, sql_text=SELECT ""__row_position__"", ""D"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""D"" FROM (SNOWPARK_TEMP_TABLE_DLN55WIBGITESTTABLENAME)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39425,tests.integ.modin.io.test_read_snowflake,"test_decimal[False-read_with_select_*-input_data2-decimal(3, 0)-logical_dtype2-actual_dtype2]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed552-0e11-71d7-000c-a90c0e9914fb, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_KJAED631FGTESTTABLENAME) LIMIT 1), QueryRecord(query_id=01bed552-0e11-6e4e-000c-a90c0e987ddb, sql_text=SELECT ""__row_position__"", ""D"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""D"" FROM (SNOWPARK_TEMP_TABLE_KJAED631FGTESTTABLENAME)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39427,tests.integ.modin.io.test_read_snowflake,"test_decimal[False-read_with_select_*-input_data3-decimal(38, 0)-logical_dtype3-actual_dtype3]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed552-0e11-6bfa-000c-a90c0e99a0fb, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_94HWZZXB13TESTTABLENAME) LIMIT 1), QueryRecord(query_id=01bed552-0e11-6e2a-000c-a90c0e988f2b, sql_text=SELECT ""__row_position__"", ""D"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""D"" FROM (SNOWPARK_TEMP_TABLE_94HWZZXB13TESTTABLENAME)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39428,tests.integ.modin.io.test_read_snowflake,"test_decimal[False-read_with_select_*-input_data4-decimal(15, 0)-logical_dtype4-actual_dtype4]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed552-0e11-71f1-000c-a90c0e993727, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_4K042K1IJSTESTTABLENAME) LIMIT 1), QueryRecord(query_id=01bed552-0e11-721e-000c-a90c0e98eb67, sql_text=SELECT ""__row_position__"", ""D"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""D"" FROM (SNOWPARK_TEMP_TABLE_4K042K1IJSTESTTABLENAME)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39430,tests.integ.modin.io.test_read_snowflake,"test_decimal[False-read_with_select_*-input_data5-decimal(38, 0)-logical_dtype5-actual_dtype5]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed552-0e11-6e87-000c-a90c0e99955f, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_0L2TAHK60PTESTTABLENAME) LIMIT 1), QueryRecord(query_id=01bed552-0e11-6bfa-000c-a90c0e99a553, sql_text=SELECT ""__row_position__"", ""D"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""D"" FROM (SNOWPARK_TEMP_TABLE_0L2TAHK60PTESTTABLENAME)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39432,tests.integ.modin.io.test_read_snowflake,"test_decimal[False-read_with_table_name-input_data0-decimal(3, 1)-logical_dtype0-actual_dtype0]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed552-0e11-6e5e-000c-a90c0e99f2bf, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_OTIER1SC1WTESTTABLENAME) LIMIT 1), QueryRecord(query_id=01bed552-0e11-71c8-000c-a90c0e98fec7, sql_text=SELECT ""__row_position__"", ""D"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""D"" FROM (SNOWPARK_TEMP_TABLE_OTIER1SC1WTESTTABLENAME)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39433,tests.integ.modin.io.test_read_snowflake,"test_decimal[False-read_with_table_name-input_data1-decimal(38, 1)-logical_dtype1-actual_dtype1]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed552-0e11-721e-000c-a90c0e98efdf, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_7N71XB6PBMTESTTABLENAME) LIMIT 1), QueryRecord(query_id=01bed552-0e11-722e-000c-a90c0e9a5027, sql_text=SELECT ""__row_position__"", ""D"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""D"" FROM (SNOWPARK_TEMP_TABLE_7N71XB6PBMTESTTABLENAME)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39435,tests.integ.modin.io.test_read_snowflake,"test_decimal[False-read_with_table_name-input_data2-decimal(3, 0)-logical_dtype2-actual_dtype2]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed552-0e11-721e-000c-a90c0e9a61af, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_EUPLWFNMCYTESTTABLENAME) LIMIT 1), QueryRecord(query_id=01bed552-0e11-6e4e-000c-a90c0e99da0b, sql_text=SELECT ""__row_position__"", ""D"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""D"" FROM (SNOWPARK_TEMP_TABLE_EUPLWFNMCYTESTTABLENAME)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39437,tests.integ.modin.io.test_read_snowflake,"test_decimal[False-read_with_table_name-input_data3-decimal(38, 0)-logical_dtype3-actual_dtype3]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed552-0e11-6dc3-000c-a90c0e9a15fb, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_IPBYZ1QXUMTESTTABLENAME) LIMIT 1), QueryRecord(query_id=01bed552-0e11-719e-000c-a90c0e9a907f, sql_text=SELECT ""__row_position__"", ""D"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""D"" FROM (SNOWPARK_TEMP_TABLE_IPBYZ1QXUMTESTTABLENAME)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39438,tests.integ.modin.io.test_read_snowflake,"test_decimal[False-read_with_table_name-input_data4-decimal(15, 0)-logical_dtype4-actual_dtype4]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed552-0e11-71dd-000c-a90c0e99cbdb, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_YY6OAGXHMPTESTTABLENAME) LIMIT 1), QueryRecord(query_id=01bed552-0e11-7168-000c-a90c0e998f5b, sql_text=SELECT ""__row_position__"", ""D"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""D"" FROM (SNOWPARK_TEMP_TABLE_YY6OAGXHMPTESTTABLENAME)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39440,tests.integ.modin.io.test_read_snowflake,"test_decimal[False-read_with_table_name-input_data5-decimal(38, 0)-logical_dtype5-actual_dtype5]","assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed552-0e11-719e-000c-a90c0e9a934b, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_K6GJPOD0VSTESTTABLENAME) LIMIT 1), QueryRecord(query_id=01bed552-0e11-6d08-000c-a90c0e9a0b77, sql_text=SELECT ""__row_position__"", ""D"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""D"" FROM (SNOWPARK_TEMP_TABLE_K6GJPOD0VSTESTTABLENAME)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39442,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_table_in_different_db[False-True-read_with_select_*],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed552-0e11-71c8-000c-a90c0e9a492f, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_9E0D8A8GH1READONLY CLONE SNOWPARK_TEMP_TABLE_QK418TQYWL), QueryRecord(query_id=01bed552-0e11-6d08-000c-a90c0e9a0d9b, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_9E0D8A8GH1READONLY) LIMIT 1), QueryRecord(query_id=01bed552-0e11-71c8-000c-a90c0e9a4a1f, sql_text=SELECT ""__row_position__"", ""X"", ""Y"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""X"", ""Y"" FROM SNOWPARK_TEMP_TABLE_9E0D8A8GH1READONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39444,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_table_in_different_db[False-True-read_with_table_name],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed552-0e11-6ce4-000c-a90c0e9a3c4f, sql_text=CREATE OR REPLACE TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_HFSKDPHDUVREADONLY CLONE SNOWPARK_TEMP_TABLE_18Y47NB70Z), QueryRecord(query_id=01bed552-0e11-719e-000c-a90c0e9a97a7, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_HFSKDPHDUVREADONLY) LIMIT 1), QueryRecord(query_id=01bed552-0e11-6d08-000c-a90c0e9a0ff7, sql_text=SELECT ""__row_position__"", ""X"", ""Y"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""X"", ""Y"" FROM SNOWPARK_TEMP_TABLE_HFSKDPHDUVREADONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39445,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_table_in_different_db[False-False-read_with_select_*],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed552-0e11-721e-000c-a90c0e9a6c9b, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_EVZ0DOLPW2) LIMIT 1), QueryRecord(query_id=01bed552-0e11-71dd-000c-a90c0e9b2433, sql_text=SELECT ""__row_position__"", ""X"", ""Y"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""X"", ""Y"" FROM (SNOWPARK_TEMP_TABLE_EVZ0DOLPW2)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39448,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_table_in_different_db[False-False-read_with_table_name],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed552-0e11-7168-000c-a90c0e9ae8ab, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_IML5UPI0F3) LIMIT 1), QueryRecord(query_id=01bed552-0e11-6bfa-000c-a90c0e9af7f3, sql_text=SELECT ""__row_position__"", ""X"", ""Y"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""X"", ""Y"" FROM (SNOWPARK_TEMP_TABLE_IML5UPI0F3)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39449,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_table_in_different_db[True-True-read_with_select_*],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed552-0e11-6ed3-000c-a90c0e9b729b, sql_text=CREATE OR REPLACE SCOPED TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_4DUKML3IZ9READONLY CLONE SNOWPARK_TEMP_TABLE_NUC9O61TG9), QueryRecord(query_id=01bed552-0e11-71f1-000c-a90c0e9a8f93, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_4DUKML3IZ9READONLY) LIMIT 1), QueryRecord(query_id=01bed552-0e11-71dd-000c-a90c0e9b28e7, sql_text=SELECT ""__row_position__"", ""X"", ""Y"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""X"", ""Y"" FROM SNOWPARK_TEMP_TABLE_4DUKML3IZ9READONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39451,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_table_in_different_db[True-True-read_with_table_name],"assert 3 == 1
 +  where 3 = len([QueryRecord(query_id=01bed552-0e11-6bde-000c-a90c0e9ace17, sql_text=CREATE OR REPLACE SCOPED TEMPORARY READ ONLY TABLE SNOWPARK_TEMP_TABLE_EX57GAI2P9READONLY CLONE SNOWPARK_TEMP_TABLE_I39691I5TG), QueryRecord(query_id=01bed552-0e11-71c8-000c-a90c0e9b9517, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_EX57GAI2P9READONLY) LIMIT 1), QueryRecord(query_id=01bed552-0e11-6ce4-000c-a90c0e9b85e3, sql_text=SELECT ""__row_position__"", ""X"", ""Y"" FROM (SELECT METADATA$ROW_POSITION as ""__row_position__"", ""X"", ""Y"" FROM SNOWPARK_TEMP_TABLE_EX57GAI2P9READONLY) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39452,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_table_in_different_db[True-False-read_with_select_*],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed553-0e11-6e4e-000c-a90c0e9b1da3, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_IULO6EE592) LIMIT 1), QueryRecord(query_id=01bed553-0e11-6e87-000c-a90c0e9b0e0f, sql_text=SELECT ""__row_position__"", ""X"", ""Y"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""X"", ""Y"" FROM (SNOWPARK_TEMP_TABLE_IULO6EE592)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39455,tests.integ.modin.io.test_read_snowflake,test_read_snowflake_with_table_in_different_db[True-False-read_with_table_name],"assert 2 == 0
 +  where 2 = len([QueryRecord(query_id=01bed553-0e11-6bde-000c-a90c0e9c232b, sql_text=SELECT count(1) AS ""COUNT(LITERAL())"" FROM ( SELECT  *  FROM SNOWPARK_TEMP_TABLE_NT3WL57V2X) LIMIT 1), QueryRecord(query_id=01bed553-0e11-71c8-000c-a90c0e9b99f7, sql_text=SELECT ""__row_position__"", ""X"", ""Y"" FROM (SELECT ROW_NUMBER() OVER (ORDER BY 1) - 1 as ""__row_position__"", ""X"", ""Y"" FROM (SNOWPARK_TEMP_TABLE_NT3WL57V2X)) ORDER BY ""__row_position__"" ASC NULLS LAST)])",failed
39458,tests.integ.modin.io.test_read_snowflake_iceberg,test_read_snowflake_iceberg[True],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39473,tests.integ.modin.frame.test_to_view,test_to_view_basic[method],"NotImplementedError: Modin supports the method DataFrame.to_view on the Snowflake backend, but not on the backend Pandas.",failed
39474,tests.integ.modin.frame.test_to_view,test_to_view_basic[function],"NotImplementedError: Modin supports the method DataFrame.to_view on the Snowflake backend, but not on the backend Pandas.",failed
39475,tests.integ.modin.io.test_read_snowflake_query_call,test_read_snowflake_call_sproc[True],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39477,tests.integ.modin.frame.test_to_view,test_to_view_multiple_sessions_enforce_ordering_raises[method],"NotImplementedError: Modin supports the method DataFrame.to_view on the Snowflake backend, but not on the backend Pandas.",failed
39478,tests.integ.modin.frame.test_to_view,test_to_view_multiple_sessions_enforce_ordering_raises[function],"NotImplementedError: Modin supports the method DataFrame.to_view on the Snowflake backend, but not on the backend Pandas.",failed
39479,tests.integ.modin.frame.test_to_view,test_to_view_multiple_sessions_no_enforce_ordering[method],"NotImplementedError: Modin supports the method DataFrame.to_view on the Snowflake backend, but not on the backend Pandas.",failed
39480,tests.integ.modin.frame.test_to_view,test_to_view_multiple_sessions_no_enforce_ordering[function],"NotImplementedError: Modin supports the method DataFrame.to_view on the Snowflake backend, but not on the backend Pandas.",failed
39482,tests.integ.modin.frame.test_to_view,test_to_view_index[method-True-None-expected_index_columns0],"NotImplementedError: Modin supports the method DataFrame.to_view on the Snowflake backend, but not on the backend Pandas.",failed
39483,tests.integ.modin.frame.test_to_view,test_to_view_index[method-True-index_labels1-expected_index_columns1],"NotImplementedError: Modin supports the method DataFrame.to_view on the Snowflake backend, but not on the backend Pandas.",failed
39484,tests.integ.modin.io.test_read_snowflake_query_call,test_read_snowflake_system_function[True],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39486,tests.integ.modin.io.test_read_snowflake_query_cte,test_read_snowflake_query_basic_cte[True],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39488,tests.integ.modin.io.test_read_snowflake_query_cte,test_read_snowflake_query_recursive_cte[True],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39490,tests.integ.modin.io.test_read_snowflake_query_cte,test_read_snowflake_query_complex_recursive_cte[True],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39492,tests.integ.modin.io.test_read_snowflake_query_cte,test_read_snowflake_query_cte_with_cross_language_sproc[True],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39494,tests.integ.modin.io.test_read_snowflake_query_cte,test_read_snowflake_query_cte_with_python_anonymous_sproc[True],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39496,tests.integ.modin.io.test_read_snowflake_query_order_by,test_select_star_with_order_by[True],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39498,tests.integ.modin.io.test_read_snowflake_query_order_by,test_no_order_by_but_column_name_shadows[True],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39500,tests.integ.modin.io.test_read_snowflake_query_order_by,test_order_by_and_column_name_shadows[True-1],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39501,tests.integ.modin.io.test_read_snowflake_query_order_by,"test_order_by_and_column_name_shadows[True-""ORDER BY""]",AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39502,tests.integ.modin.io.test_read_snowflake_query_order_by,"test_order_by_and_column_name_shadows[True-""ORDER BY 1""]",AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39503,tests.integ.modin.io.test_read_snowflake_query_order_by,test_order_by_and_column_name_shadows[True-A],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39508,tests.integ.modin.io.test_read_snowflake_query_order_by,test_order_by_as_column_name_should_not_warn_negative[True],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39510,tests.integ.modin.io.test_read_snowflake_query_order_by,test_inner_order_by_should_be_ignored_and_no_outer_order_by_negative[True],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39512,tests.integ.modin.io.test_read_snowflake_query_order_by,test_order_by_with_no_limit_but_colname_shadows[True],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39514,tests.integ.modin.io.test_read_snowflake_query_order_by,test_order_by_with_limit_and_name_shadows[True],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39516,tests.integ.modin.io.test_read_snowflake_query_order_by,test_read_snowflake_query_complex_query_with_join_and_order_by[True],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39518,tests.integ.modin.io.test_read_snowflake_query_order_by,test_order_by_with_position_key[True-1],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39519,tests.integ.modin.io.test_read_snowflake_query_order_by,test_order_by_with_position_key[True-2],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39520,tests.integ.modin.io.test_read_snowflake_query_order_by,test_order_by_with_position_key[True-28],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39524,tests.integ.modin.io.test_read_snowflake_select_query,test_read_snowflake_basic_query_with_weird_formatting[True],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39525,tests.integ.modin.io.test_read_snowflake_select_query,test_read_snowflake_basic_query_with_weird_formatting[False],AttributeError: 'DataFrame' object has no attribute 'row_position_snowflake_quoted_identifier',failed
39526,tests.integ.modin.io.test_read_snowflake_select_query,test_read_snowflake_basic_query_with_comment_preceding_sql_inline_string[True],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39527,tests.integ.modin.io.test_read_snowflake_select_query,test_read_snowflake_basic_query_with_comment_preceding_sql_inline_string[False],AttributeError: 'DataFrame' object has no attribute 'row_position_snowflake_quoted_identifier',failed
39528,tests.integ.modin.io.test_read_snowflake_select_query,test_read_snowflake_basic_query_with_comment_preceding_sql_multiline_string[True],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39530,tests.integ.modin.io.test_read_snowflake_select_query,test_read_snowflake_query_none_nan_condition[True-True],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39531,tests.integ.modin.io.test_read_snowflake_select_query,test_read_snowflake_query_none_nan_condition[True-False],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39534,tests.integ.modin.io.test_read_snowflake_select_query,test_read_snowflake_query_aliased_columns[True-col_name_and_alias_tuple0],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39535,tests.integ.modin.io.test_read_snowflake_select_query,test_read_snowflake_query_aliased_columns[True-col_name_and_alias_tuple1],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39536,tests.integ.modin.io.test_read_snowflake_select_query,test_read_snowflake_query_aliased_columns[True-col_name_and_alias_tuple2],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39537,tests.integ.modin.io.test_read_snowflake_select_query,test_read_snowflake_query_aliased_columns[True-col_name_and_alias_tuple3],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39538,tests.integ.modin.io.test_read_snowflake_select_query,test_read_snowflake_query_aliased_columns[True-col_name_and_alias_tuple4],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39539,tests.integ.modin.io.test_read_snowflake_select_query,test_read_snowflake_query_aliased_columns[True-col_name_and_alias_tuple5],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39540,tests.integ.modin.io.test_read_snowflake_select_query,test_read_snowflake_query_aliased_columns[True-col_name_and_alias_tuple6],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
39541,tests.integ.modin.io.test_read_snowflake_select_query,test_read_snowflake_query_aliased_columns[True-col_name_and_alias_tuple7],AttributeError: 'DataFrame' object has no attribute 'ordered_dataframe',failed
